<?php

namespace AppBundle\Entity;

/**
 * BasePriceDefinitionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BasePriceRepository extends BaseEntityRepository
{
    static protected $metadata = null;

    /**
     * Get field metadata
     * @param $field
     * @param $attribute
     * @param $metadata (uses this metadata instead of local metadata)
     * @param $context ('view'|'form'|'none')
     * @return null
     */
    static public function getFieldMetadata($field, $attribute, $metadata = null, $context = 'none')
    {
        if (!$metadata) {
            $metadata = self::getMetadata();
        }
        return self::getLocalFieldMetadata($field, $attribute, $metadata, $context);
    }

    /**
     * Get local metadata (it needs to be implemented by children to get static variable with local metadata from parent)
     * @return mixed
     */
    protected function getLocalMetadata()
    {
        return $this->getMetadata();
    }

    /**
     * Get entity metadata
     * @return mixed
     */
    static function getMetadata()
    {
        // Process metadata only once
        if (self::$metadata) {
            return self::$metadata;
        }
        return self::$metadata = self::processMetadata(array(
            'id' => array('label' => 'Id', 'type' => 'none', 'acl' => 'read'),
            'costValue' => array('label' => 'Cost', 'type' => 'number', 'acl' => 'edit',
                'attr' => array(
                    '(input)' => 'onCostValueEnterKey($event.target.value)',
                    '(focusout)' => 'onCostValueEnterKey($event.target.value)'
                )),
            'marginMethod' => array('label' => 'Margin Type', 'type' => 'enum', 'acl' => 'edit', 'isRequired' => false,
                'attr' => array('(change)' => 'onMarginMethodChange($event.target.value)'),
                'typeDetail' => array(
                    'type' => 'text', 'choices' => array(
                        'value' => array(
                            'Margin' => 'MARGIN', 'Markup' => 'MARKUP', 'Fixed' => 'FIXED'
                        )
                    )),
                'form' => array('type' => 'select')
            ),
            'marginValue' => array('label' => 'Margin', 'type' => 'number', 'acl' => 'edit',
                'attr' => array(
                    '(input)' => 'onMarginValueEnterKey($event.target.value)',
                    '(focusout)' => 'onMarginValueEnterKey($event.target.value)'
                )),
            'sellValue' => array('label' => 'Sell', 'type' => 'number', 'acl' => 'edit',
                'attr' => array(
                    '(input)' => 'onSellValueEnterKey($event.target.value)',
                    '(focusout)' => 'onSellValueEnterKey($event.target.value)'
                )),
            'userFieldTyped' => array('label' => '', 'type' => 'hidden', 'acl' => 'edit'),
            'insertTime' => array('label' => 'Insert Time', 'type' => 'datetime', 'acl' => 'read', 'form' => array('type' => 'none')),
            'insertUser' => array('label' => 'Insert User', 'type' => 'text', 'acl' => 'read', 'form' => array('type' => 'none')),
            'isEnabled' => array('label' => 'Enabled', 'type' => 'boolean', 'acl' => 'edit', 'default' => true)
        ));
    }
}