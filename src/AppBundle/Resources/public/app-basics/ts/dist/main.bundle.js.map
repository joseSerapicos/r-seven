{"version":3,"sources":["/usr/share/nginx/html/weboffice/angular_cli_conf/environments/environment.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/app/ts/$_lazy_route_resource lazy","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/app/ts/src/app.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/app/ts/src/app.module.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/app/ts/src/main.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/flash-message.service.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/angular_cli_conf/environments/environment.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/AppBundle/Resources/public/app/ts/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/app/ts/$$_lazy_route_resource lazy\n// module id = ../../../../../src/AppBundle/Resources/public/app/ts/$$_lazy_route_resource lazy recursive\n// module chunks = main","import {Component, Inject} from '@angular/core';\nimport {FlashMessageService} from '../../../ts/flash-message.service';\n\n// AppI (template for modules)\nexport interface AppProvider {}\n\n\n@Component({\n    selector: '.js_app',\n    template: ''\n})\nexport class AppComponent\n{\n    constructor(\n        private _flashMessageService: FlashMessageService\n    ) {}\n\n    /**\n     * Throw flash messages\n     * @returns {AppComponent}\n     */\n    private throwFlashMessages(): AppComponent {\n        if (_app.flashMessages != null) {\n            for (let flashMessage of _app.flashMessages) {\n                this._flashMessageService.message(\n                    flashMessage.body,\n                    flashMessage.head,\n                    flashMessage.type\n                );\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Life cycle callback\n     */\n    ngOnInit() {\n        this.throwFlashMessages();\n        delete _app.flashMessages; // It's no longer necessary\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/app/ts/src/app.component.ts","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser'; // Common directives (NgIf, NgFor, etc.)\nimport {FlashMessageService} from '../../../ts/flash-message.service';\nimport {AppComponent} from './app.component';\n\n\n@NgModule({\n    imports: [BrowserModule],\n    declarations: [AppComponent],\n    providers: [\n        FlashMessageService\n    ],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/app/ts/src/app.module.ts","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic'; // The browser platform with a compiler\nimport {environment} from '../../../../../../../angular_cli_conf/environments/environment'; // Get environment\nimport {AppModule} from './app.module';\n\n// Enable production environment\nif (environment.production) {\n    enableProdMode();\n}\n\n// Compile and launch the module\nplatformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.log(err));\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/app/ts/src/main.ts","var toastr = require('toastr');\nimport {Injectable} from '@angular/core';\n\n// FlashMessageTypes\nexport var FlashMessageTypes = {\n    success: 'success',\n    info: 'info',\n    warning: 'warning',\n    error: 'error'\n};\n\n// Service\n@Injectable()\nexport class FlashMessageService {\n    constructor() {\n        toastr.options = {\n            \"closeButton\": true,\n            \"debug\": false,\n            \"progressBar\": true,\n            \"preventDuplicates\": false,\n            \"positionClass\": \"toast-top-left\", // Right side is not the best place because this is the work area\n            \"onclick\": null,\n            \"showDuration\": \"300\",\n            \"hideDuration\": \"1000\",\n            \"timeOut\": \"5000\",\n            \"extendedTimeOut\": \"1000\",\n            \"showEasing\": \"swing\",\n            \"hideEasing\": \"linear\",\n            \"showMethod\": \"slideDown\",\n            \"hideMethod\": \"fadeOut\"\n        }\n    }\n\n    /**\n     * Message\n     * @param body\n     * @param head\n     * @param type\n     */\n    public message(body: string, head = '', type = FlashMessageTypes.info): void {\n        // Set info as default type if is not a valid entry\n        type = (FlashMessageTypes[type] || FlashMessageTypes.info);\n        toastr[type](body, head);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/flash-message.service.ts"],"sourceRoot":"webpack:///"}