<?php

namespace Bck\AccountingBundle\Entity;

use AppBundle\Entity\BaseEntityRepository;
use AppBundle\Service\HelperService;

/**
 * BaseDocumentInvoiceRectificationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
abstract class BaseDocumentInvoiceRectificationRepository extends BaseEntityRepository
{
    /**
     * Get Local Entity Context.
     * @return mixed (lowerCamelCase)
     */
    abstract protected function getLocalEntityContext();

    /**
     * Get entity context (it needs to be implemented by children to get the correct context <client, supplier, entity>)
     * @param $isUpperCase
     * @return mixed (lowerCamelCase)
     */
    public function getEntityContext($isUpperCase = false) {
        return ($isUpperCase ? ucfirst($this->getLocalEntityContext()) : $this->getLocalEntityContext());
    }

    /**
     * Get local metadata (it needs to be implemented by children to get static variable with local metadata from parent)
     * @return mixed
     */
    protected function getLocalMetadata()
    {
        return $this->getMetadata();
    }

    /**
     * Get entity metadata
     * @return mixed
     */
    static function getMetadata()
    {
        return self::processMetadata(array(
            // Override fields when merge with DocumentInvoiceDetail
            // (service can't be edit, is inherited from original document)
            'service_icon' => array('table' => 'app_icon', 'field' => 'icon', 'label' => '', 'type' => 'icon',
                'acl' => 'read', 'dependency' => 'appIconObj'),
            'service_name' => array('table' => 'service', 'field' => 'name', 'label' => 'Service', 'type' => 'text',
                'acl' => 'read', 'dependency' => 'serviceObj')
        ));
    }
}