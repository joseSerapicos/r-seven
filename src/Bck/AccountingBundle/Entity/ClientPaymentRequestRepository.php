<?php

namespace Bck\AccountingBundle\Entity;

use AppBundle\Entity\BaseEntityRepository;

/**
 * ClientPaymentRequestRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ClientPaymentRequestRepository extends BaseEntityRepository
{
    static protected $metadata = null;

    /**
     * Get field metadata
     * @param $field
     * @param $attribute
     * @param $metadata (uses this metadata instead of local metadata)
     * @param $context ('view'|'form'|'none')
     * @return null
     */
    static public function getFieldMetadata($field, $attribute, $metadata = null, $context = 'none')
    {
        if (!$metadata) {
            $metadata = self::getMetadata();
        }
        return self::getLocalFieldMetadata($field, $attribute, $metadata, $context);
    }

    /**
     * Get local metadata (it needs to be implemented by children to get static variable with local metadata from parent)
     * @return mixed
     */
    protected function getLocalMetadata()
    {
        return $this->getMetadata();
    }

    /**
     * Get entity metadata
     * @return mixed
     */
    static function getMetadata()
    {
        // Process metadata only once
        if (self::$metadata) {
            return self::$metadata;
        }

        $localTable = lcfirst(substr(strrchr(get_called_class(), '\\'), 1, -10));

        return self::$metadata = self::processMetadata(array(
            'id' => array('label' => 'Id', 'type' => 'none', 'acl' => 'read'),
            'clientObj' => array('label' => 'Client', 'type' => 'object', 'acl' => 'edit',
                'typeDetail' => array(
                    'table' => 'client', 'fieldInView' => 'entity_name', 'bundlePrefix' => 'bck', 'bundle' => 'entities', 'type' => 'none'),
                'attr' => array('(onChange)' => 'onEntityChange($event)'),
                'form' => array('type' => 'auto-complete')
            ),
            'client_code' => array('table' => '', 'field' => 'CONCAT(client.codePrefix, client.codeNumber)',
                'label' => 'Client Code', 'type' => 'code', 'acl' => 'read', 'dependency' => 'clientObj'),
            'entityObj' => array('table' => 'client', 'label' => 'nd',
                'type' => 'object', 'acl' => 'read', 'dependency' => 'clientObj', 'typeDetail' => array(
                    'table' => 'entity', 'tableAlias' => 'entity_client', 'bundlePrefix' => 'bck', 'bundle' => 'entities', 'type' => 'none')
            ),
            'entity_avatar' => array('table' => 'entity_client', 'field' => 'avatar', 'label' => 'Client',
                'type' => 'avatar', 'acl' => 'read', 'isDefault' => true, 'dependency' => 'entityObj',
                'typeDetail' => array('fieldInView' => 'entity_name'),
                'form' => array('type' => 'none')
            ),
            'entity_name' => array('table' => 'entity_client', 'field' => 'name', 'label' => 'Client Name',
                'type' => 'text', 'acl' => 'read', 'dependency' => 'entityObj', 'form' => array('type' => 'none')),
            'clientDocumentObj' => array('label' => 'Client Document', 'type' => 'object', 'acl' => 'edit',
                'typeDetail' => array(
                    'table' => 'clientDocument', 'bundlePrefix' => 'bck', 'bundle' => 'accounting', 'type' => 'none', 'fieldInView' => 'clientDocument_label'
                ),
                'attr' => array('(onChange)' => 'onClientDocumentChange($event)'),
                'form' => array('type' => 'auto-complete'), 'isRequired' => false
            ),
            'clientDocument_label' => array('label' => 'Document', 'table' => '', 'isDefault' => true,
                'field' => "CONCAT(clientDocumentType.name, ' (', clientDocument.codePrefix, clientDocument.codeNumber, ')')",
                'dependency' => 'clientDocumentTypeObj', 'type' => 'code', 'acl' => 'read',
                'normalizer' => array('method' => '__toString', 'dependency' => 'clientDocumentObj')
            ),
            'clientDocument_date' => array('table' => 'clientDocument', 'field' => 'date', 'label' => 'Doc. Date',
                'type' => 'date', 'acl' => 'read', 'dependency' => 'clientDocumentObj', 'isDefault' => true,
                'form' => array('type' => 'none')
            ),
            'clientDocument_dueDate' => array('table' => 'clientDocument', 'field' => 'dueDate', 'label' => 'Doc. Due Date',
                'type' => 'date', 'acl' => 'read', 'dependency' => 'clientDocumentObj', 'isDefault' => true,
                'form' => array('type' => 'none')
            ),
            'clientDocument_subTotal' => array('table' => 'clientDocument', 'field' => 'subTotal', 'label' => 'Doc. Sub Total',
                'type' => 'number', 'acl' => 'read', 'dependency' => 'clientDocumentObj',
                'form' => array('type' => 'none')
            ),
            'clientDocument_totalVat' => array('table' => 'clientDocument', 'field' => 'totalVat', 'label' => 'Doc. Total VAT',
                'type' => 'number', 'acl' => 'read', 'dependency' => 'clientDocumentObj',
                'form' => array('type' => 'none')
            ),
            'clientDocument_total' => array('table' => '', 'label' => 'Doc. Total', 'isDefault' => true,
                'field' => '(clientDocument.subTotal + clientDocument.totalVat)',
                'type' => 'number', 'acl' => 'read', 'dependency' => 'clientDocumentObj',
                'form' => array('type' => 'none'),
                'normalizer' => array('method' => 'getTotal')
            ),
            'clientDocumentTypeObj' => array('table' => 'clientDocument', 'field' => 'clientDocumentTypeObj',
                'label' => 'Document Type', 'type' => 'object', 'acl' => 'read',
                'typeDetail' => array('table' => 'clientDocumentType',
                    'bundlePrefix' => 'bck', 'bundle' => 'accounting', 'type' => 'none'),
                'dependency' => 'clientDocumentObj'
            ),
            'paymentMethodObj' => array('label' => 'Payment Method', 'type' => 'object', 'acl' => 'edit',
                'typeDetail' => array(
                    'table' => 'paymentMethod', 'bundlePrefix' => 'bck', 'bundle' => 'accounting', 'type' => 'none'
                ),
                'form' => array('type' => 'radio'), 'isRequired' => false
            ),
            'paymentMethod_name' => array('table' => 'paymentMethod', 'field' => 'name', 'label' => 'Payment Method',
                'type' => 'text', 'acl' => 'read', 'dependency' => 'paymentMethodObj',
                'form' => array('type' => 'none')
            ),
            'appPaymentMethodObj' => array('table' => 'paymentMethod', 'label' => '', 'type' => 'object',
                'acl' => 'edit', 'dependency' => 'paymentMethodObj',
                'typeDetail' => array(
                    'table' => 'app_paymentMethod', 'bundlePrefix' => 'bck', 'bundle' => 'sysadmin', 'type' => 'none'
                )
            ),
            'appIconObj' => array('table' => 'app_paymentMethod', 'label' => 'Icon', 'type' => 'object', 'acl' => 'read',
                'dependency' => 'appPaymentMethodObj', 'typeDetail' => array(
                    'table' => 'app_icon', 'bundlePrefix' => 'bck', 'bundle' => 'sysadmin', 'type' => 'none')),
            'icon' => array('table' => 'app_icon', 'field' => 'icon', 'label' => 'Payment Method', 'type' => 'icon',
                'acl' => 'read', 'dependency' => 'appIconObj', 'isDefault' => true,
                'typeDetail' => array('fieldInView' => 'paymentMethod_name'),
                'form' => array('type' => 'none')
            ),
            'appPaymentMethod_name' => array('table' => 'app_paymentMethod', 'field' => 'name', 'label' => 'Payment Method',
                'type' => 'hidden', 'acl' => 'read', 'dependency' => 'appPaymentMethodObj', 'form' => array('type' => 'none')),
            'reference' => array('label' => 'Reference', 'type' => 'text', 'acl' => 'edit'),
            'description' => array('label' => 'Description', 'type' => 'text', 'acl' => 'edit', 'isDefault' => true),
            'value' => array('label' => 'Value', 'type' => 'number', 'acl' => 'edit', 'isDefault' => true),
            'paymentStatus' => array('label' => 'Payment Status', 'type' => 'enum', 'acl' => 'edit', 'isDefault' => true,
                'typeDetail' => array(
                    'type' => 'status', 'choices' => array(
                        'value' => array(
                            'No' => 'NO', 'Yes' => 'YES'
                        )
                    )
                ),
                'form' => array('type' => 'select')
            ),
            'remainReceiptEmission' => array('label' => 'Receipt Emission Pendent Value', 'type' => 'monetary', 'acl' => 'read',
                'isDefault' => true, 'form' => array('type' => 'none')
            ),
            'receiptEmissionStatus' => array('label' => 'Receipt Emission Status', 'type' => 'enum', 'acl' => 'read',
                'field' => "(CASE WHEN (" . $localTable . ".remainReceiptEmission = 0) THEN 'YES'"
                    . " ELSE (CASE WHEN (" . $localTable . ".remainReceiptEmission = " . $localTable . ".value) THEN 'NO'"
                    . " ELSE ('PARTIAL') END) END)", 'table' => '',
                'typeDetail' => array(
                    'type' => 'status', 'choices' => array(
                        'value' => array(
                            'No' => 'NO', 'Partial' => 'PARTIAL', 'Yes' => 'YES'
                        )
                    )
                ),
                'form' => array('type' => 'none'),
                'normalizer' => array('method' => 'getReceiptEmissionStatus'), 'isDefault' => true
            ),
            'isSent' => array('label' => 'Sent', 'type' => 'boolean', 'acl' => 'read', 'isDefault' => true,
                'form' => array('type' => 'none'), 'view' => array('keepOriginalNormalizer' => true)
            ),
            'insertTime' => array('label' => 'Insert Time', 'type' => 'datetime', 'acl' => 'read', 'form' => array('type' => 'none')),
            'insertUser' => array('label' => 'Insert User', 'type' => 'text', 'acl' => 'read', 'form' => array('type' => 'none')),
            'isEnabled' => array('label' => 'Enabled', 'type' => 'boolean', 'acl' => 'edit', 'default' => true,
                'view' => array('keepOriginalNormalizer' => true)
            )
        ));
    }
}