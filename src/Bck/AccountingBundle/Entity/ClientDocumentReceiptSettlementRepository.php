<?php

namespace Bck\AccountingBundle\Entity;

use AppBundle\Service\HelperService;

/**
 * ClientDocumentReceiptSettlementRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ClientDocumentReceiptSettlementRepository extends BaseDocumentReceiptSettlementRepository
{
    static protected $metadata = null;

    /**
     * Defines parent method
     * @return string
     */
    protected function getLocalEntityContext()
    {
        return 'client';
    }

    /**
     * Get field metadata
     * @param $field
     * @param $attribute
     * @param $metadata (uses this metadata instead of local metadata)
     * @param $context ('view'|'form'|'none')
     * @return null
     */
    static public function getFieldMetadata($field, $attribute, $metadata = null, $context = 'none')
    {
        if (!$metadata) {
            $metadata = self::getMetadata();
        }
        return self::getLocalFieldMetadata($field, $attribute, $metadata, $context);
    }

    /**
     * Get entity metadata
     * @return mixed
     */
    static function getMetadata()
    {
        // Process metadata only once
        if (self::$metadata) {
            return self::$metadata;
        }

        $parentMetadata = parent::getMetadata();

        $localMetadata = self::processMetadata(array(
            'clientDocumentObj' => array('label' => 'Client Current Account', 'type' => 'object', 'acl' => 'read',
                'typeDetail' => array('table' => 'clientDocument', 'bundlePrefix' => 'bck', 'bundle' => 'accounting', 'type' => 'none')),
            'settlementClientDocumentObj' => array('label' => '', 'type' => 'object', 'acl' => 'read',
                'typeDetail' => array(
                    'table' => 'clientDocument', 'tableAlias' => 'settlementClientDocument', 'bundlePrefix' => 'bck', 'bundle' => 'accounting',
                    'type' => 'none'
                )
            ),

            // Foreign fields (is not used the entity type prefix (client),
            // to make fields compatibles with all entity types (supplier, entity, etc.), except in "Obj" fields)

            // "storeObj" and "code" fields are used to set the store color to code of settlement document
            'storeObj' => array('table' => 'settlementClientDocument', 'label' => '',
                'dependency' => 'settlementClientDocumentObj', 'type' => 'object', 'acl' => 'read',
                'typeDetail' => array(
                    'table' => 'store', 'bundlePrefix' => 'bck', 'bundle' => 'admin', 'field' => 'id', 'type' => 'none'
                )
            ),
            'code' => array('label' => 'Code',
                'field' => 'CONCAT(settlementClientDocument.codePrefix, settlementClientDocument.codeNumber)',
                'dependency' => 'settlementClientDocumentObj', 'table' => '', 'type' => 'code', 'acl' => 'read',
                'normalizer' => array('method' => 'getCode')
            ),

            'settlementDocument_date' => array('table' => 'settlementClientDocument', 'field' => 'date', 'label' => 'Date',
                'type' => 'date', 'acl' => 'read', 'dependency' => 'settlementClientDocumentObj',
                'form' => array('type' => 'none')
            ),
            'settlementDocument_dueDate' => array('table' => 'settlementClientDocument', 'field' => 'dueDate', 'label' => 'Due Date',
                'type' => 'date', 'acl' => 'read', 'dependency' => 'settlementClientDocumentObj',
                'form' => array('type' => 'none')
            ),
            'settlementClientDocument_clientDocumentTypeObj' => array('table' => 'settlementClientDocument', 'field' => 'clientDocumentTypeObj',
                'label' => 'Document Type', 'type' => 'object', 'acl' => 'read',
                'typeDetail' => array('table' => 'clientDocumentType', 'bundlePrefix' => 'bck', 'bundle' => 'accounting', 'type' => 'none'),
                'dependency' => 'settlementClientDocumentObj'
            ),
            'documentType_name' => array('table' => 'clientDocumentType', 'field' => 'name', 'label' => 'Doc. Name',
                'type' => 'text', 'acl' => 'read', 'dependency' => 'settlementClientDocument_clientDocumentTypeObj',
                'form' => array('type' => 'none')
            ),
            'documentType_operation' => array('table' => 'clientDocumentType', 'field' => 'operation', 'label' => '',
                'type' => 'hidden', 'acl' => 'read', 'dependency' => 'settlementClientDocument_clientDocumentTypeObj',
                'form' => array('type' => 'none')
            ),
            'settlementClientDocument_clientObj' => array('table' => 'settlementClientDocument', 'field' => 'clientObj',
                'label' => 'Client', 'type' => 'object', 'acl' => 'read',
                'typeDetail' => array(
                    'table' => 'client', 'fieldInView' => 'entity_name', 'bundlePrefix' => 'bck', 'bundle' => 'entities', 'type' => 'none'),
                'dependency' => 'settlementClientDocumentObj'
            ),
            'entityObj' => array('table' => 'client', 'field' => 'entityObj', 'label' => 'nd',
                'type' => 'object', 'acl' => 'read', 'dependency' => 'settlementClientDocument_clientObj', 'typeDetail' => array(
                    'table' => 'entity', 'tableAlias' => 'entity', 'bundlePrefix' => 'bck', 'bundle' => 'entities', 'type' => 'none')
            ),
            'entity_avatar' => array('table' => 'entity', 'field' => 'avatar', 'label' => 'Client',
                'type' => 'avatar', 'acl' => 'read', 'dependency' => 'entityObj', 'form' => array('type' => 'none')),
            'entity_name' => array('table' => 'entity', 'field' => 'name', 'label' => 'Client Name',
                'type' => 'text', 'acl' => 'read', 'dependency' => 'entityObj', 'form' => array('type' => 'none')),
        ));

        return self::$metadata = HelperService::pushIntoArray($parentMetadata, $localMetadata, 'id');
    }
}