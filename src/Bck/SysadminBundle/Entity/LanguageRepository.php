<?php

namespace Bck\SysadminBundle\Entity;

use AppBundle\Entity\BaseEntityRepository;
use AppBundle\Service\HelperService;

/**
 * LanguageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LanguageRepository extends BaseEntityRepository
{
    static protected $metadata = null;

    /**
     * Get field metadata
     * @param $field
     * @param $attribute
     * @param $metadata (uses this metadata instead of local metadata)
     * @param $context ('view'|'form'|'none')
     * @return null
     */
    static public function getFieldMetadata($field, $attribute, $metadata = null, $context = 'none')
    {
        if (!$metadata) {
            $metadata = self::getMetadata();
        }
        return self::getLocalFieldMetadata($field, $attribute, $metadata, $context);
    }

    /**
     * Get local metadata (it needs to be implemented by children to get static variable with local metadata from parent)
     * @return mixed
     */
    protected function getLocalMetadata()
    {
        return $this->getMetadata();
    }

    /**
     * Get entity metadata
     * @return mixed
     */
    static function getMetadata()
    {
        // Process metadata only once
        if (self::$metadata) {
            return self::$metadata;
        }

        $langPrefix = HelperService::getGlobalVar('langPrefix');
        $name_lang = 'name_'.$langPrefix;

        return self::$metadata = self::processMetadata(array(
            'id' => array('label' => 'Id', 'type' => 'number', 'acl' => 'read'),
            'systemPrefix' => array('label' => 'System Prefix', 'type' => 'text', 'acl' => 'edit'),
            'languageCode' => array('label' => 'Language Code (ISO 639-1)', 'type' => 'text', 'acl' => 'edit'),
            'appCountryObj' => array('label' => 'Country', 'type' => 'object', 'acl' => 'edit', 'typeDetail' => array(
                'table' => 'app_country', 'fieldInView' => 'country_name', 'bundlePrefix' => 'bck', 'bundle' => 'sysadmin',
                'type' => 'none'),
                'form' => array('type' => 'html-select')
            ),
            'country_name' => array('table' => 'app_country', 'field' => $name_lang, 'label' => 'Country', 'type' => 'text',
                'acl' => 'read', 'dependency' => 'appCountryObj', 'form' => array('type' => 'none'),
                'normalizer' => array('method' => 'getName')
            ),
            // Language Country Code (lcCode) [ISO 639-1]_[ISO 3166-1 alfa-2]
            'lcCode' => array('label' => 'Code', 'field' => "CONCAT(app_language.languageCode, '_', app_country.alpha2Code)",
                'table' => '', 'type' => 'text', 'acl' => 'read', 'dependency' => 'appCountryObj',
                // Set normalizer dependency to empty, to use the local object
                'normalizer' => array('dependency' => '', 'method' => 'getLcCode')
            ),
            'name_pt' => array('label' => 'Name PT', 'type' => 'text', 'acl' => 'edit'),
            'name_es' => array('label' => 'Name ES', 'type' => 'text', 'acl' => 'edit'),
            'name_en' => array('label' => 'Name EN', 'type' => 'text', 'acl' => 'edit'),
            'name' => array('label' => 'Name', 'field' => $name_lang, 'type' => 'text', 'acl' => 'read',
                'form' => array('type' => 'none'),
                'normalizer' => array('method' => 'getName')
            ),
            'insertTime' => array('label' => 'Insert Time', 'type' => 'datetime', 'acl' => 'read', 'form' => array('type' => 'none')),
            'insertUser' => array('label' => 'Insert User', 'type' => 'text', 'acl' => 'read', 'form' => array('type' => 'none')),
            'isEnabled' => array('label' => 'Enabled', 'type' => 'boolean', 'acl' => 'edit', 'default' => true,
                'view' => array('keepOriginalNormalizer' => true)
            )
        ));
    }
}