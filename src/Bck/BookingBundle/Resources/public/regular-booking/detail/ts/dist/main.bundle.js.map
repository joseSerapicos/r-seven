{"version":3,"sources":["/usr/share/nginx/html/weboffice/angular_cli_conf/environments/environment.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/accordion/ts/src/accordion.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/app-basics/default/ts/src/main.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/app-basics/default/ts/src/main.ext-module.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/data-box/ts/src/data-box.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/data-box/ts/src/data-box.extension-component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/data-box/ts/src/data-box.extension-module.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/data-box/ts/templates/data-box.component.html","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/entity-detail/ts/src/entity-detail.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/entity-detail/ts/src/entity-detail.ext-module.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/entity-detail/ts/templates/entity-detail.component.html","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/file/ts/src/file-form-popup.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/file/ts/src/file.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/file/ts/src/file.ext-module.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/file/ts/templates/file.component.html","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/form/ts/field-types/field-type-auto-complete.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/form/ts/field-types/field-type-date-picker.directive.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/form/ts/field-types/field-type-html-select.directive.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/form/ts/field-types/field-type-multi-checkbox.directive.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/form/ts/field-types/field-types.extension-module.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/form/ts/field-types/password.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/form/ts/form-popup.extension-component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/form/ts/form.extension-component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/form/ts/form.service.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/legend/ts/src/legend.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/legend/ts/src/legend.ext-module.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/modal/ts/base-modal-popup.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/modal/ts/modal-dialog.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/modal/ts/modal-dialog.extension-module.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/modal/ts/modal-wrapper.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/modal/ts/modal-wrapper.extension-module.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/modal/ts/modal.service.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/observation/ts/src/observation.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/observation/ts/src/observation.ext-module.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/observation/ts/templates/observation.component.html","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/popover/ts/popover.directive.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/popover/ts/popover.ext-module.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/price/ts/src/price-form-popup.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/tabs/ts/src/tabs.ext-component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/tasks-loader-manager/ts/tasks-loader-manager.service.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/tree-view/default/ts/src/controls/tree-view-control-actions.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/tree-view/default/ts/src/nodes/tree-view-node-actions.ext-module.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/tree-view/default/ts/src/nodes/tree-view-node.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/tree-view/default/ts/src/tree-view.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/tree-view/default/ts/src/tree-view.ext-component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/tree-view/default/ts/src/tree-view.ext-module.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/tree-view/default/ts/templates/tree-view.component.html","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/actions/actions.service.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/base/base.extension-component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/box/box.extension-component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/data-service/data.service.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/data-service/tree-view-data.service.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/dynamic-component-loader.service.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/expander/expander.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/expander/expander.module.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/flash-message.service.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/helper.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/nav-manager/nav-manager.service.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/post.service.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/search/search-criteria.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/search/search-fields.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/search/search-order-by.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/search/search-pagination.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/search/search-pagination.module.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/search/search.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/search/search.module.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/wizard/ts/src/wizard-form-popup.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/wizard/ts/src/wizard-form-popup.ext-component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/wizard/ts/src/wizard-manager.service.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/wizard/ts/src/wizard-popup.ext-component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/base-document-invoice/add/ts/form-popup.ext-component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/base-document-invoice/edit/ts/form-popup.ext-component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/base-document-rectification/add/ts/form-popup.ext-component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/base-document-rectification/edit/ts/form-popup.ext-component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/base-document-settlement/add/ts/form-popup.ext-component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/base-document/add/ts/form-popup.ext-component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/base-document/index/ts/main.ext-component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/base-document/ts/base-form-popup.ext-component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-invoice/add/ts/src/form-popup.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-invoice/add/ts/src/form-popup.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-invoice/add/ts/src/step2.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-invoice/add/ts/src/step2.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-invoice/add/ts/templates/form-popup.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-invoice/add/ts/templates/step2.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-invoice/edit/ts/src/form-popup.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-invoice/edit/ts/src/form-popup.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-invoice/edit/ts/templates/form-popup.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-invoice/index/ts/src/main.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-invoice/index/ts/src/main.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-invoice/index/ts/templates/main.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-payment/add/ts/src/form-popup.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-payment/add/ts/src/form-popup.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-payment/add/ts/src/step2.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-payment/add/ts/src/step2.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-payment/add/ts/templates/form-popup.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-payment/add/ts/templates/step2.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-payment/edit/ts/src/form-popup.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-payment/edit/ts/src/form-popup.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-payment/edit/ts/templates/form-popup.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-payment/index/ts/src/main.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-payment/index/ts/src/main.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-payment/index/ts/templates/main.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-rectification/add/ts/src/form-popup.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-rectification/add/ts/src/form-popup.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-rectification/add/ts/src/step2-form-popup.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-rectification/add/ts/src/step2-form-popup.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-rectification/add/ts/templates/form-popup.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-rectification/add/ts/templates/step2-form-popup.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-rectification/edit/ts/src/form-popup.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-rectification/edit/ts/src/form-popup.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-rectification/edit/ts/templates/form-popup.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-rectification/index/ts/src/main.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-rectification/index/ts/src/main.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-rectification/index/ts/templates/main.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-settlement/add/ts/src/form-popup.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-settlement/add/ts/src/form-popup.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-settlement/add/ts/src/step2-form-popup.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-settlement/add/ts/src/step2-form-popup.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-settlement/add/ts/templates/form-popup.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-settlement/add/ts/templates/step2-form-popup.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-settlement/edit/ts/src/form-popup.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-settlement/edit/ts/src/form-popup.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-settlement/edit/ts/templates/form-popup.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-settlement/index/ts/src/main.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-settlement/index/ts/src/main.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-settlement/index/ts/templates/main.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/add/ts/src/form-popup.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/add/ts/src/form-popup.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/add/ts/src/step3-invoice.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/add/ts/src/step3-invoice.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/add/ts/src/step3-payment.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/add/ts/src/step3-payment.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/add/ts/src/step3-receipt.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/add/ts/src/step3-receipt.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/add/ts/src/step3-rectification.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/add/ts/src/step3-rectification.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/add/ts/src/step3-settlement.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/add/ts/src/step3-settlement.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/add/ts/templates/form-popup.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/add/ts/templates/step3-invoice.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/add/ts/templates/step3-payment.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/add/ts/templates/step3-receipt.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/add/ts/templates/step3-rectification.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/add/ts/templates/step3-settlement.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/src/form-popup.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/src/form-popup.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/src/invoice-form-popup.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/src/invoice-form-popup.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/src/invoice-rectification-form-popup.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/src/invoice-rectification-form-popup.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/src/receipt-form-popup.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/src/receipt-form-popup.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/src/receipt-payment-form-popup.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/src/receipt-payment-form-popup.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/src/receipt-settlement-form-popup.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/src/receipt-settlement-form-popup.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/templates/invoice-form-popup.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/templates/invoice-rectification-form-popup.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/templates/receipt-form-popup.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/templates/receipt-payment-form-popup.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/templates/receipt-settlement-form-popup.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/index/ts/src/main.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/index/ts/src/main.extension-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/index/ts/templates/main.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/ts/base-invoice-document-form-popup.ext-component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/ts/base-invoice-rectification-document-form-popup.ext-component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/ts/base-receipt-document-form-popup.ext-component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/ts/base-receipt-payment-document-form-popup.ext-component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/ts/base-receipt-settlement-document-form-popup.ext-component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-invoice/add/ts/src/form-popup.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-invoice/add/ts/src/form-popup.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-invoice/add/ts/src/step2.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-invoice/add/ts/src/step2.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-invoice/add/ts/templates/form-popup.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-invoice/add/ts/templates/step2.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-invoice/edit/ts/src/form-popup.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-invoice/edit/ts/src/form-popup.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-invoice/edit/ts/templates/form-popup.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-invoice/index/ts/src/main.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-invoice/index/ts/src/main.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-invoice/index/ts/templates/main.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-payment/edit/ts/src/form-popup.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-payment/edit/ts/src/form-popup.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-payment/edit/ts/src/form.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-payment/edit/ts/src/form.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-payment/edit/ts/templates/form-popup.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-payment/edit/ts/templates/form.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-payment/index/ts/src/main.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-payment/index/ts/src/main.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-payment/index/ts/templates/main.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-rectification/add/ts/src/form-popup.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-rectification/add/ts/src/form-popup.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-rectification/add/ts/src/step2-form-popup.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-rectification/add/ts/src/step2-form-popup.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-rectification/add/ts/templates/form-popup.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-rectification/add/ts/templates/step2-form-popup.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-rectification/edit/ts/src/form-popup.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-rectification/edit/ts/src/form-popup.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-rectification/edit/ts/templates/form-popup.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-rectification/index/ts/src/main.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-rectification/index/ts/src/main.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-rectification/index/ts/templates/main.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-settlement/add/ts/src/form-popup.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-settlement/add/ts/src/form-popup.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-settlement/add/ts/src/step2-form-popup.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-settlement/add/ts/src/step2-form-popup.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-settlement/add/ts/templates/form-popup.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-settlement/add/ts/templates/step2-form-popup.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-settlement/edit/ts/src/form-popup.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-settlement/edit/ts/src/form-popup.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-settlement/edit/ts/templates/form-popup.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-settlement/index/ts/src/main.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-settlement/index/ts/src/main.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-settlement/index/ts/templates/main.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/src/form-popup.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/src/form-popup.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/src/step3-invoice.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/src/step3-invoice.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/src/step3-payment.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/src/step3-payment.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/src/step3-receipt.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/src/step3-receipt.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/src/step3-rectification.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/src/step3-rectification.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/src/step3-settlement.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/src/step3-settlement.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/templates/form-popup.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/templates/step3-invoice.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/templates/step3-payment.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/templates/step3-receipt.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/templates/step3-rectification.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/templates/step3-settlement.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/src/form-popup.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/src/form-popup.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/src/invoice-form-popup.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/src/invoice-form-popup.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/src/invoice-rectification-form-popup.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/src/invoice-rectification-form-popup.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/src/receipt-form-popup.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/src/receipt-form-popup.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/src/receipt-payment-form-popup.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/src/receipt-payment-form-popup.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/src/receipt-settlement-form-popup.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/src/receipt-settlement-form-popup.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/templates/invoice-form-popup.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/templates/invoice-rectification-form-popup.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/templates/receipt-form-popup.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/templates/receipt-payment-form-popup.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/templates/receipt-settlement-form-popup.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/index/ts/src/main.component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/index/ts/src/main.extension-module.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/index/ts/templates/main.component.html","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/ts/base-invoice-document-form-popup.ext-component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/ts/base-invoice-rectification-document-form-popup.ext-component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/ts/base-receipt-document-form-popup.ext-component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/ts/base-receipt-payment-document-form-popup.ext-component.ts","/usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/ts/base-receipt-settlement-document-form-popup.ext-component.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking-pax/index/ts/src/booking-pax.component.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking-pax/index/ts/src/booking-pax.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking-pax/index/ts/templates/booking-pax.component.html","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking-service/add/ts/src/step1-service.component.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking-service/add/ts/src/step1-service.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking-service/add/ts/src/step1.component.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking-service/add/ts/src/step2-field-debug.component.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking-service/add/ts/src/step2-field-debug.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking-service/add/ts/src/step2.component.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking-service/add/ts/src/step3.component.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking-service/add/ts/src/step4.component.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking-service/add/ts/src/step4.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking-service/add/ts/templates/step1-service.component.html","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking-service/add/ts/templates/step2-field-debug.component.html","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking-service/add/ts/templates/step4.component.html","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking-service/edit/ts/src/booking-service-edit.component.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking-service/index/ts/src/booking-service.component.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking-service/index/ts/src/booking-service.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking-service/index/ts/templates/booking-service.component.html","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking/detail/ts/src/current-accounts.component.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking/detail/ts/src/main.component.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/booking-file/index/ts/src/edit.component.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/booking-file/index/ts/src/edit.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/booking-file/index/ts/templates/edit.component.html","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/booking-observation/index/ts/src/edit.component.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/booking-observation/index/ts/src/edit.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/booking-observation/index/ts/templates/edit.component.html","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/booking-service-price/index/ts/src/edit.component.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/booking-service-price/index/ts/src/edit.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/booking-service-price/index/ts/templates/edit.component.html","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking-service/add/ts/src/step1.component.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking-service/add/ts/src/step1.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking-service/add/ts/src/step2-pax.component.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking-service/add/ts/src/step2-pax.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking-service/add/ts/src/step2.component.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking-service/add/ts/src/step2.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking-service/add/ts/src/step3.component.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking-service/add/ts/src/step3.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking-service/add/ts/templates/step1.component.html","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking-service/add/ts/templates/step2-pax.component.html","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking-service/add/ts/templates/step2.component.html","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking-service/add/ts/templates/step3.component.html","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking-service/edit/ts/src/booking-service-edit.component.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking-service/edit/ts/src/booking-service-edit.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking-service/edit/ts/templates/booking-service-edit.component.html","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking/detail/ts/$_lazy_route_resource lazy","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking/detail/ts/src/booking-pax-edit.component.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking/detail/ts/src/booking-pax-edit.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking/detail/ts/src/current-accounts.component.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking/detail/ts/src/current-accounts.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking/detail/ts/src/main.component.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking/detail/ts/src/main.module.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking/detail/ts/src/main.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking/detail/ts/templates/booking-pax-edit.component.html","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking/detail/ts/templates/current-accounts.component.html","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking/detail/ts/templates/main.component.html","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking/index/ts/src/edit.component.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking/index/ts/src/edit.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking/index/ts/templates/edit.component.html","/usr/share/nginx/html/weboffice/src/Bck/CommonBundle/Resources/public/place/index/ts/src/edit.component.ts","/usr/share/nginx/html/weboffice/src/Bck/CommonBundle/Resources/public/place/index/ts/src/edit.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/CommonBundle/Resources/public/place/index/ts/templates/edit.component.html","/usr/share/nginx/html/weboffice/src/Bck/EntitiesBundle/Resources/public/client/index/ts/src/edit.component.ts","/usr/share/nginx/html/weboffice/src/Bck/EntitiesBundle/Resources/public/client/index/ts/src/edit.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/EntitiesBundle/Resources/public/client/index/ts/templates/edit.component.html","/usr/share/nginx/html/weboffice/src/Bck/EntitiesBundle/Resources/public/entity/detail/ts/src/entity-address-edit.component.ts","/usr/share/nginx/html/weboffice/src/Bck/EntitiesBundle/Resources/public/entity/detail/ts/src/entity-address-edit.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/EntitiesBundle/Resources/public/entity/detail/ts/templates/entity-address-edit.component.html","/usr/share/nginx/html/weboffice/src/Bck/EntitiesBundle/Resources/public/supplier/index/ts/src/edit.component.ts","/usr/share/nginx/html/weboffice/src/Bck/EntitiesBundle/Resources/public/supplier/index/ts/src/edit.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/EntitiesBundle/Resources/public/supplier/index/ts/templates/edit.component.html","/usr/share/nginx/html/weboffice/src/Bck/SysadminBundle/Resources/public/country/index/ts/src/edit.component.ts","/usr/share/nginx/html/weboffice/src/Bck/SysadminBundle/Resources/public/country/index/ts/src/edit.ext-module.ts","/usr/share/nginx/html/weboffice/src/Bck/SysadminBundle/Resources/public/country/index/ts/templates/edit.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/angular_cli_conf/environments/environment.ts","import {Component, ElementRef, Inject, Renderer, QueryList, ViewContainerRef, ViewChildren, Optional} from '@angular/core';\nimport {BaseExtensionComponent, BaseProvider} from '../../../ts/base/base.extension-component';\nimport {NavManagerService, INavManager as IAccordion, LazyLoadData} from '../../../ts/nav-manager/nav-manager.service';\n\n// Reexports\nexport {IAccordion, LazyLoadData, BaseProvider};\n\n\n@Component({\n    selector: 'js_accordion',\n    template: '' // Define template in child component\n})\nexport abstract class AccordionComponent extends BaseExtensionComponent {\n    // For NavManagerService\n    @ViewChildren('js_lazyLoadContainer', {read: ViewContainerRef}) lazyLoadViewContainerRefQL: QueryList<ViewContainerRef>;\n\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Optional() @Inject('Provider') provider: BaseProvider,\n        @Inject('HelperService') protected _helperService: any,\n        protected _navManagerService: NavManagerService\n    ) {\n        super();\n        super.initBaseExtensionComponent(\n            elementRef,\n            renderer,\n            provider || {}\n        );\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngAfterViewInit()\n    {\n        // Initializes the children navigation manager service\n        this._navManagerService.init(this, this.lazyLoadViewContainerRefQL);\n        this._navManagerService.setHasToggleContainer(true);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/accordion/ts/src/accordion.component.ts","import {Component, Inject} from '@angular/core';\nimport {FlashMessageService} from '../../../../ts/flash-message.service';\n\n// AppI (template for modules)\nexport interface AppBasicsProvider {}\n\n\n@Component({\n    selector: '.js_appBasics',\n    template: ''\n})\nexport class MainComponent\n{\n    constructor(\n        private _flashMessageService: FlashMessageService\n    ) {}\n\n    /**\n     * Throw flash messages\n     * @returns any\n     */\n    private throwFlashMessages(): MainComponent {\n        if (_app.flashMessages != null) {\n            for (let flashMessage of _app.flashMessages) {\n                this._flashMessageService.message(\n                    flashMessage.body,\n                    flashMessage.head,\n                    flashMessage.type\n                );\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Life cycle callback\n     */\n    ngOnInit() {\n        this.throwFlashMessages();\n        delete _app.flashMessages; // It's no longer necessary\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/app-basics/default/ts/src/main.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MainComponent} from './main.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [MainComponent],\n    exports: [MainComponent]\n})\nexport class MainExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/app-basics/default/ts/src/main.ext-module.ts","import {Component, Inject, Injector, ReflectiveInjector, ViewContainerRef, Renderer} from '@angular/core';\nimport {DataBoxExtensionComponent, DataBoxProvider, Popup, Popups, PopupTypes} from './data-box.extension-component';\nimport {ModalService} from '../../../modal/ts/modal.service';\nimport {DataService, OrderTypes} from '../../../ts/data-service/data.service';\nimport {ActionsService} from \"../../../ts/actions/actions.service\";\nimport {TasksLoaderManagerService} from '../../../tasks-loader-manager/ts/tasks-loader-manager.service';\n\n// Reexports\nexport {DataBoxProvider, Popup, Popups, PopupTypes};\n\n\n// Component\n@Component({\n    selector: '.js_dataBox',\n    templateUrl: '../templates/data-box.component.html'\n})\nexport class DataBoxComponent extends DataBoxExtensionComponent\n{\n    constructor(\n        viewContainerRef: ViewContainerRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: DataBoxProvider,\n        @Inject('DataService') dataService: any,\n        tasksLoaderManagerService: TasksLoaderManagerService,\n        @Inject('HelperService') helperService: any,\n        actionsService: ActionsService,\n        modalService: ModalService,\n        @Inject('Popups') popups: Popups | Popup,\n        injector: Injector\n    ) {\n        // Call parent\n        super();\n        super.initDataBoxExtensionComponent(\n            viewContainerRef,\n            renderer,\n            provider,\n            dataService,\n            tasksLoaderManagerService,\n            helperService,\n            actionsService,\n            modalService,\n            popups,\n            injector\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/data-box/ts/src/data-box.component.ts","import {Component, Inject, Injector, ReflectiveInjector, ViewContainerRef, Renderer} from '@angular/core';\nimport {DataBoxProvider as DataBoxProvider} from './data-box-provider';\nimport {ModalService, Popup} from '../../../modal/ts/modal.service';\nimport {OrderTypes} from '../../../ts/data-service/data.service';\nimport {BoxExtensionComponent} from '../../../ts/box/box.extension-component';\nimport {ActionsService} from \"../../../ts/actions/actions.service\";\n\n// Reexports\nexport {Popup, DataBoxProvider};\n\n\n// Popup Types\nexport var PopupTypes = {\n    edit: 'edit',\n    add: 'add',\n    email: 'email'\n};\n// Popups interface (array of popups)\nexport interface Popups {\n    [type: string]: Popup\n}\n\n\n// Component\n@Component({\n    selector: '.js_dataBox',\n    template: ''\n})\nexport abstract class DataBoxExtensionComponent extends BoxExtensionComponent {\n    // Constructor vars\n    protected _viewContainerRef: ViewContainerRef;\n    protected _dataService: any;\n    protected _tasksLoaderManagerService: any;\n    protected _helperService: any;\n    protected _actionsService: ActionsService;\n    protected _modalService: ModalService;\n    protected _popups: Popups | Popup;\n    protected _injector: Injector;\n\n    protected checkAll: boolean = false; // Control check all action\n\n    constructor() { super(); }\n\n    /**\n     * Initialization of component (replace the original constructor to avoid angular injection inheritance bug)\n     * @param viewContainerRef\n     * @param renderer\n     * @param provider\n     * @param dataService\n     * @param tasksLoaderManagerService\n     * @param actionsService\n     * @param modalService\n     * @param popups\n     * @param injector\n     */\n    public initDataBoxExtensionComponent(\n        viewContainerRef: ViewContainerRef,\n        renderer: Renderer,\n        provider: DataBoxProvider,\n        dataService: any, // Any is used, otherwise you get an error \"[Class] is not defined\"\n        tasksLoaderManagerService: any,\n        helperService: any,\n        actionsService: ActionsService,\n        modalService: ModalService,\n        // You can provide a popup by action:\n        // provide('Popups', {useValue: {\n        //     add: Popup,\n        //     edit: Popup\n        // }})\n        // Or a general popup for all actions:\n        // provide('Popups', {useValue: Popup})\n        popups: Popups | Popup, // Can be a list of popups by action, or only a popup\n        // used to provide the correct injector to the popups\n        injector: Injector\n    ) {\n        // Parent init (construct)\n        super.initBoxExtensionComponent(\n            viewContainerRef.element,\n            renderer,\n            provider\n        );\n\n        // Constructor vars\n        this._viewContainerRef = viewContainerRef;\n        this._dataService = dataService;\n        this._tasksLoaderManagerService = tasksLoaderManagerService;\n        this._helperService = helperService;\n        this._actionsService = actionsService;\n        this._modalService = modalService;\n        this._popups = popups;\n        this._injector = injector;\n\n        this._modalService.init(this._viewContainerRef);\n    }\n\n    /**\n     * Get column alignment.\n     * @param field\n     * @returns {any}\n     */\n    protected getColAlign(field: string): string\n    {\n        // @TODO call helperservice\n        // return this.helperService.getColAlign(this._dataService.getFields('metadata')[field]['type']);\n\n        switch (this._dataService.getFields('metadata')[field].type) {\n            case 'number':\n            case 'percentage':\n            case 'monetary':\n            case 'date':\n            case 'datetime':\n                return 'text-right';\n            case 'boolean':\n            case 'icon':\n            case 'img':\n            case 'status':\n                return 'text-center';\n            default:\n                return 'text-left';\n        }\n    }\n\n    /**\n     * Get legend classes\n     * @param object\n     * @param target (element target to check the legend)\n     * @param exprField (field on which the expression is checked,\n     *     it's used when the field is not provided in legend, like in actions legend)\n     * @returns {string}\n     */\n    public getLegendClasses(object: any, target: string, exprField: string = null)\n    {\n        let legend = this._provider['controls']['legend'];\n\n        if (!object || !legend) {\n            return '';\n        }\n\n        for (let legendControl of legend) {\n            let legendExprField = (legendControl['field'] || exprField),\n                legendTarget = (legendControl['target'] || 'tr');\n\n            // Check target, if is not the same jump the loop\n            if ((legendTarget != target) || (!legendExprField) || (legendExprField == '')) {\n                continue;\n            }\n\n            let expr = (legendControl['expr'] || 'notNull'),\n                isExprNotNull = (expr == 'notNull'),\n                // Check in original field first if defined\n                fieldValue = ((object['__'+legendExprField] !== undefined) ? object['__'+legendExprField] : object[legendExprField]);\n\n            // Normalize value\n            if (this._dataService.getFields('metadata')[legendExprField]) { // In case of foreign objects, metadata can be not defined\n                switch (this._dataService.getFields('metadata')[legendExprField].type) {\n                    case 'boolean':\n                        fieldValue = this._helperService.castToBoolean(fieldValue);\n                        break;\n                }\n            }\n\n            if ((fieldValue && isExprNotNull) || (!fieldValue && !isExprNotNull)) {\n                // Apply only the class of the first legend to avoid override of classes,\n                // \"Cancel\" legend class should be priority and never override\n                return legendControl['class'];\n            }\n        }\n\n        return '';\n    }\n\n    /**\n     * Get actions legend classes\n     * @param object\n     * @param action (action to check the legend)\n     * @returns {string}\n     */\n    public getActionsLegendClasses(object: any, action: string)\n    {\n        let field = null,\n            classes = '';\n\n        switch (action) {\n            case 'pdf':\n                field = 'isAccessed';\n                break;\n            case 'email':\n                field = 'isSent';\n                break;\n        }\n\n        if (field) {\n            classes = this.getLegendClasses(object, 'actions', field);\n        }\n\n        return (classes == '') ? classes : (' ' + classes); // Add space to put legend classes after icon class\n    }\n\n    /**\n     * Trigger action\n     * @param $event\n     * @param action (can be provided by $event or directly in the call)\n     * @param data (can be provided by $event or directly in the call)\n     */\n    public triggerAction($event: any, action: string = null, data: any = null): void\n    {\n        if ($event) { $event.preventDefault(); }\n\n        // Action to call\n        action = (action || $event.target.getAttribute(\"data-action\"));\n\n        if (action) {\n            // Data to send as parameter to action\n            if (data == null) {\n                data = ($event.target.getAttribute(\"data-value\"));\n            }\n\n            // Call function\n            let callback = (action + 'Action');\n            if ($.isFunction(this[callback])) {\n                if ((data != null) && (typeof data != 'undefined')) { // Can be 0 or ''\n                    this[callback]($event, data);\n                } else {\n                    this[callback]($event);\n                }\n            }\n        }\n    }\n\n    /**\n     * Edit action\n     * @param $event\n     * @param data\n     */\n    public editAction($event: any, data: any): void\n    {\n        if ($event) { $event.preventDefault(); }\n\n        // Check ACL\n        if (!this._actionsService.getActionAttr('edit', 'isEnabled')) {\n            return;\n        }\n\n        let that = this;\n        this._dataService.selectObject(data).then(\n            data => { that.openPopup(PopupTypes.edit); },\n            errors => { console.log(errors); }\n        );\n    }\n\n    /**\n     * Add action\n     * @param $event\n     */\n    public addAction($event:any = null): void\n    {\n        if ($event) { $event.preventDefault(); }\n\n        let that = this;\n        this._dataService.newObject().then(\n            data => { that.openPopup(PopupTypes.add); },\n            errors => { console.log(errors); }\n        );\n    }\n\n    /**\n     * Copy action. Create a new object from another object\n     * @param $event\n     * @param data\n     */\n    public copyAction($event:any = null, data: any): void\n    {\n        if ($event) { $event.preventDefault(); }\n\n        let that = this;\n        this._dataService.newObject(data).then(\n            data => { that.openPopup(PopupTypes.edit); },\n            errors => { console.log(errors); }\n        );\n    }\n\n    /**\n     * Cancel action.\n     * @param $event\n     * @param data\n     */\n    public cancelAction($event: any, data: any): void\n    {\n        if ($event) { $event.preventDefault(); }\n\n        let that = this,\n            object = this._dataService.getObject(data);\n\n        // Dialog message\n        this._modalService.dialog('Are you sure to cancel/enable?').then(\n            hasConfirm => {\n                if (hasConfirm) {\n                    that._dataService.cancel(data).then(\n                        data => {\n                            that.postCancelObject(object);\n                            return;\n                        },\n                        errors => { return; }\n                    );\n                } else {\n                    return;\n                }\n            },\n            errors => {\n                console.log(errors);\n            }\n        );\n    }\n\n    /**\n     * Delete action.\n     * @param $event\n     * @param data\n     */\n    public deleteAction($event: any, data: any): void\n    {\n        if ($event) { $event.preventDefault(); }\n\n        let that = this,\n            object = this._dataService.getObject(data);\n\n        // Dialog message\n        this._modalService.dialog('Are you sure to remove?').then(\n            hasConfirm => {\n                if (hasConfirm) {\n                    that._dataService.delete(data).then(\n                        data => {\n                            that.postDeleteObject(object);\n                            return;\n                        },\n                        errors => { return; }\n                    );\n                } else {\n                    return;\n                }\n            },\n            errors => {\n                console.log(errors);\n            }\n        );\n    }\n\n    /**\n     * Order up action.\n     * @param $event\n     * @param data\n     */\n    public orderUpAction($event: any, data: any): void\n    {\n        if ($event) { $event.preventDefault(); }\n        this._dataService.order(data, OrderTypes.up);\n    }\n\n    /**\n     * Order down action.\n     * @param $event\n     * @param data\n     */\n    public orderDownAction($event: any, data: any): void\n    {\n        if ($event) { $event.preventDefault(); }\n        this._dataService.order(data, OrderTypes.down);\n    }\n\n    /**\n     * Delete all checked elements action.\n     * @param $event\n     */\n    public deleteAllAction($event: any): void\n    {\n        if (!$event) { return; }\n        $event.preventDefault();\n\n        let $form = $($event.currentTarget).parents('.ibox').find('.ibox-content form');\n        let data = $form.serializeArray();\n\n        if(data.length) {\n            // Dialog message\n            this._modalService.dialog().then(\n                hasConfirm => {\n                    if (hasConfirm) {\n                        this._dataService.deleteArray(data);\n                    } else {\n                        return;\n                    }\n                },\n                errors => {\n                    console.log(errors);\n                }\n            );\n        }\n    }\n\n    /**\n     * Pdf action.\n     * @param $event\n     * @param data\n     */\n    public pdfAction($event: any, data: any): void\n    {\n        if ($event) { $event.preventDefault(); }\n        this._dataService.pdf(data);\n    }\n\n    /**\n     * Email action.\n     * @param $event\n     * @param data\n     */\n    public emailAction($event: any, data: any): void\n    {\n        if ($event) { $event.preventDefault(); }\n\n        // Select object index in DataService to update object after sent email\n        if (!this._dataService.setObjectIndex(data)) {\n            return;\n        }\n\n        let that = this,\n            popup: Popup = this._popups['email'],\n            object = this._dataService.getObject(data);\n\n        if (!popup['injector']) {\n            // It's the firs time that popup is open, so we need to supply the providers\n            let context = popup['localData']['context'],\n                route = (this._helperService.getAppVar('route') + 'bck/common/email/conf');\n\n            this._dataService.runAction(route).then(\n                data => {\n                    // Update route of \"new\" action\n                    data['route']['new']['url']= (data['route']['new']['url'] + '/' + context + '/' + object['id']);\n\n                    popup['providers'] = popup['providers'].concat([\n                        {provide: 'DataServiceProvider', useValue: that._helperService.getDataServiceProvider(data)},\n                        {provide: 'Provider', useValue: that._helperService.getFormProvider(data)},\n                        {provide: 'ParentDataService', useValue: this._dataService}\n                    ]);\n\n                    let resolvedProviders = ReflectiveInjector.resolve(popup['providers']);\n                    popup['injector'] = ReflectiveInjector.fromResolvedProviders(resolvedProviders, that._injector);\n\n                    let emailDataService = popup['injector'].get('DataService');\n\n                    emailDataService.newObject().then(\n                        data => { that.openPopup('email'); },\n                        errors => { console.log(errors); }\n                    );\n                },\n                errors => { console.log(errors); }\n            );\n        } else {\n            // Update route of \"new\" action\n            let emailDataService = popup['injector'].get('DataService'),\n                newEmailRoute = emailDataService.getRoute('new');\n\n            newEmailRoute = (newEmailRoute.substring(0, newEmailRoute.lastIndexOf(\"/\"))  + '/' + object['id']);\n            emailDataService.setRoute('new', newEmailRoute);\n\n            emailDataService.newObject().then(\n                data => { that.openPopup('email'); },\n                errors => { console.log(errors); }\n            );\n        }\n    }\n\n    /**\n     * Submit choices\n     * @param route (route to submit choices)\n     * @param allowEmptySubmit (allow submit when data is empty,\n     * some cases it is necessary to inform that the user does not select any choice)\n     * @returns {Promise}\n     */\n    public submitChoices(route: string, allowEmptySubmit: boolean = false): Promise<any>\n    {\n        let $form = $(this._elementRef.nativeElement).find('.ibox-content form'),\n            data = $form.serializeArray(),\n            that = this;\n\n        return new Promise(function(resolve, reject) {\n            return that._dataService.submitIndexesId(route, data, allowEmptySubmit).then(\n                data => { return resolve(data); },\n                errors => { return reject(errors); }\n            );\n        });\n    }\n\n    /**\n     * Detail action.\n     * @param $event\n     * @param data\n     */\n    public detailAction($event: any, data: any): void\n    {\n        if ($event) { $event.preventDefault(); }\n        this._dataService.detail(data);\n    }\n\n    /**\n     * Check all action.\n     * @param $event\n     */\n    protected checkAllAction($event: any = null): void\n    {\n        if ($event) { $event.preventDefault(); }\n        this.checkAll = !this.checkAll;\n    }\n\n    /**\n     * Refresh all objects list.\n     * @param $event\n     */\n    public refreshAction($event: any = null): void\n    {\n        if ($event) { $event.preventDefault(); }\n        this._dataService.refresh();\n    }\n\n    /**\n     * Open popup\n     * @param popupType\n     * @returns {DataBoxExtensionComponent}\n     */\n    protected openPopup(popupType = PopupTypes.edit): DataBoxExtensionComponent\n    {\n        // Set edit as default popup type if is not a valid entry\n        popupType = (PopupTypes[popupType] || PopupTypes.edit);\n        let popup: Popup = this._popups[popupType] || this._popups;\n\n        // Open popup\n        this._modalService.popup(popup, this._injector).then(\n            data => { return; },\n            errors => { console.log(errors); return; }\n        );\n\n        return this;\n    }\n\n\n    ////////\n    // Events/Callbacks\n    ////////////////////////////////\n\n    /**\n     * Post (after) cancel object event. Use this function to handle event.\n     * @param object\n     * @returns {DataBoxExtensionComponent}\n     */\n    protected postCancelObject(object)\n    {\n        return this;\n    }\n\n    /**\n     * Post (after) delete object event. Use this function to handle event.\n     * @param object\n     * @return any\n     */\n    protected postDeleteObject(object)\n    {\n        return this;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/data-box/ts/src/data-box.extension-component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n// This module doesn't use \"ReactiveFormsModule\", but it needs to import this class\n// to provide \"formBuilder\" when inject dependencies in child modules (like form)\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {SearchModule} from '../../../ts/search/search.module';\nimport {ExpanderModule} from '../../../ts/expander/expander.module';\nimport {SearchPaginationModule} from '../../../ts/search/search-pagination.module';\nimport {LegendExtModule} from '../../../legend/ts/src/legend.ext-module';\nimport {DataBoxComponent} from './data-box.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        SearchModule,\n        SearchPaginationModule,\n        ExpanderModule,\n        LegendExtModule\n    ],\n    declarations: [\n        DataBoxComponent\n    ],\n    exports: [DataBoxComponent]\n})\nexport class DataBoxExtensionModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/data-box/ts/src/data-box.extension-module.ts","module.exports = \"\\n\\n<div class=\\\"ibox\\\" >\\n                        <div class=\\\"ibox-title\\\" *ngIf=\\\"!getProviderExtraDataAttr('hasMergeHeader')\\\">\\n                <h5>\\n                    <ng-template [ngIf]=\\\"getProviderAttr('controls')['expander']['isEnabled']\\\"><js_expander\\n                        [isExpanded]=\\\"_isExpanded || null\\\"\\n                        [label]=\\\"getLang(getProviderAttr('label'))\\\"\\n                        [labelCount]=\\\"getProviderAttr('labelCount')\\\"\\n                        [labelIcon]=\\\"getProviderAttr('labelIcon')\\\"\\n                        (onChange)=\\\"expanderAction($event)\\\"></js_expander></ng-template>\\n                    <ng-template [ngIf]=\\\"!getProviderAttr('controls')['expander']['isEnabled']\\\">\\n                        <span [innerHTML]=\\\"getProviderAttr('label')\\\"></span>\\n                    </ng-template>\\n                </h5>\\n                <div *ngIf=\\\"_isExpanded\\\"\\n                     class=\\\"txt-align-r hide-on-empty\\\">    <div class=\\\"row align-items-center\\\">\\n        <div class=\\\"col ml-auto text-right actions no-user-select\\\">\\n            <ng-template [ngIf]=\\\"_actionsService.getActionAttr('search', 'isEnabled')\\\"><js_search class=\\\"search\\\"></js_search></ng-template>\\n            <div (click)=\\\"triggerAction($event)\\\">\\n                <ng-template ngFor let-action [ngForOf]=\\\"_actionsService.getHeadActions()\\\">\\n                    <a *ngIf=\\\"_actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                       [ngClass]=\\\"[_actionsService.getActionAttr(action, 'icon')]\\\"\\n                       class=\\\"-round fa\\\"\\n                       [attr.data-action]=\\\"action\\\"></a>\\n                </ng-template>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n            </div>\\n            \\n    <div [hidden]=\\\"!(_isExpanded)\\\" class=\\\"ibox-content hide-on-empty\\\">    <ng-template [ngIf]=\\\"(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">\\n                \\n    <div class=\\\"table-responsive\\\">\\n    <form>    <table class=\\\"data-table table table-hover dataTables-example table-bordered\\\">\\n        <thead>\\n        <tr>\\n            <th *ngFor=\\\"let searchField of _dataService.getSearch('fields')\\\">{{ getLang(_dataService.getFields('metadata')[searchField].label) }}</th>\\n            <th>&nbsp;</th>\\n        </tr>\\n        </thead>        <tbody>\\n        <ng-template ngFor let-obj [ngForOf]=\\\"_dataService.getProviderAttr('objects')\\\" let-objIndex=\\\"index\\\">\\n        <tr (dblclick)=\\\"editAction($event, objIndex)\\\"            [ngClass]=\\\"getLegendClasses(obj, 'tr')\\\">                    <td *ngFor=\\\"let searchField of _dataService.getSearch('fields')\\\"\\n    [ngClass]=\\\"getColAlign(searchField)\\\"\\n    [innerHTML]=\\\"obj[searchField]\\\"></td>                        <td>\\n                <span *ngIf=\\\"obj['_isNew']\\\" class=\\\"badge badge-info\\\">New</span>\\n                <span *ngIf=\\\"obj['_isEdited']\\\" class=\\\"badge badge-info\\\">Edited</span>\\n                <input *ngIf=\\\"_actionsService.getActionAttr('radioChoice', 'isEnabled')\\\"\\n                       class=\\\"pull-right action\\\"\\n                       type=\\\"radio\\\"\\n                       name=\\\"index[]\\\"\\n                       value=\\\"{{objIndex}}\\\"/>\\n                <input *ngIf=\\\"_actionsService.getActionAttr('checkAll', 'isEnabled')\\\"\\n                       class=\\\"pull-right action js_checkAll\\\"\\n                       type=\\\"checkbox\\\"\\n                       name=\\\"index[]\\\"\\n                       value=\\\"{{objIndex}}\\\"\\n                       [ngModel]=\\\"checkAll\\\"/>\\n                <div class=\\\"pull-right actions no-user-select text-secondary\\\" (click)=\\\"triggerAction($event)\\\">\\n                    <ng-template ngFor let-action [ngForOf]=\\\"_actionsService.getDetailActions()\\\">\\n                        <a *ngIf=\\\"_actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                           [ngClass]=\\\"[_actionsService.getActionAttr(action, 'icon') + getActionsLegendClasses(obj, action)]\\\"\\n                           class=\\\"fa\\\"\\n                           [attr.data-action]=\\\"action\\\"\\n                           [attr.data-value]=\\\"objIndex\\\"></a>\\n                    </ng-template>\\n                </div>\\n            </td>        </tr>\\n        </ng-template>\\n        </tbody>\\n    </table>\\n    </form></div>    </ng-template><p\\n        class=\\\"text-center\\\"\\n        *ngIf=\\\"!(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">No results.</p>\\n</div>\\n        <div [hidden]=\\\"!(_isExpanded)\\\"\\n         class=\\\"ibox-footer\\\"\\n         *ngIf=\\\"_dataService.countObjects() > 0\\\"><js_searchPagination></js_searchPagination></div>\\n\\n</div>\\n\\n<js_legend></js_legend>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/data-box/ts/templates/data-box.component.html\n// module id = ../../../../../src/AppBundle/Resources/public/data-box/ts/templates/data-box.component.html\n// module chunks = main","import {Component, Inject, ElementRef, Renderer, ReflectiveInjector, Injector, ViewContainerRef} from '@angular/core';\nimport {DataService} from '../../../ts/data-service/data.service';\nimport {ModalService, Popup} from '../../../modal/ts/modal.service';\nimport {BaseExtensionComponent} from '../../../ts/base/base.extension-component';\nimport {EntityDetailProvider} from './entity-detail-provider';\nimport {ActionsService} from '../../../ts/actions/actions.service';\nimport {TasksLoaderManagerService} from '../../../tasks-loader-manager/ts/tasks-loader-manager.service';\n\n// Reexports\nexport {EntityDetailProvider};\n\n\n@Component({\n    selector: '.js_entityDetail',\n    templateUrl: '../templates/entity-detail.component.html'\n})\nexport class EntityDetailComponent extends BaseExtensionComponent\n{\n    protected hasInsertInfo: boolean = true;\n    protected _object: any;\n    protected _fields: any;\n    protected _onObjectChangeSubscription: any; // To get notify about changes on object over the service\n\n    constructor(\n        protected _viewContainerRef: ViewContainerRef,\n        renderer: Renderer,\n        @Inject('EntityDetailProvider') provider: EntityDetailProvider,\n        @Inject('Popup') protected _popup: Popup,\n        @Inject('DataService') protected _dataService: any,\n        protected _tasksLoaderManagerService: TasksLoaderManagerService,\n        protected _actionsService: ActionsService,\n        protected _modalService: ModalService,\n        @Inject('HelperService') private _helperService: any, // Used in template\n        protected _injector: Injector\n    ) {\n        super();\n        this.initBaseExtensionComponent(\n            _viewContainerRef.element,\n            renderer,\n            provider\n        );\n\n        this._modalService.init(this._viewContainerRef);\n\n        // Get fields from DataService\n        this._fields = (this._dataService.getProviderAttr('fields') || {});\n\n        this._onObjectChangeSubscription = this._dataService.getOnObjectChangeEmitter()\n            .subscribe(object => this.refresh());\n\n        if (this._provider['hasInsertInfo'] !== undefined) {\n            this.hasInsertInfo = this._provider['hasInsertInfo'];\n        }\n\n        this.refresh();\n    }\n\n    /**\n     * Trigger action\n     * @param $event\n     * @param action (can be provided by $event or directly in the call)\n     */\n    public triggerAction($event: any, action: string = null): void\n    {\n        if ($event) { $event.preventDefault(); }\n\n        // Action to call\n        action = (action || $event.target.getAttribute(\"data-action\"));\n\n        if (action) {\n            // Call function\n            let callback = (action + 'Action');\n            if ($.isFunction(this[callback])) {\n                this[callback]($event);\n            }\n        }\n    }\n\n    /**\n     * Edit action\n     * @param $event\n     */\n    protected editAction($event:any = null): void\n    {\n        if ($event) { $event.preventDefault(); }\n\n        if (!this._popup) {\n            return;\n        }\n\n        // Open popup\n        this._modalService.popup(this._popup, this._injector).then(\n            data => { return; },\n            errors => { console.log(errors); return; }\n        );\n    }\n\n    /**\n     * Refresh\n     */\n    protected refresh(): void\n    {\n        this._object = this._dataService.getNormalizedObject();\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnDestroy()\n    {\n        this._onObjectChangeSubscription.unsubscribe();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/entity-detail/ts/src/entity-detail.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {ExpanderModule} from '../../../ts/expander/expander.module';\nimport {EntityDetailComponent} from './entity-detail.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ExpanderModule],\n    declarations: [\n        EntityDetailComponent\n    ],\n    exports: [EntityDetailComponent]\n})\nexport class EntityDetailExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/entity-detail/ts/src/entity-detail.ext-module.ts","module.exports = \"<ng-template [ngIf]=\\\"_object && _object['id']\\\">\\n    <div class=\\\"container-fluid py-3\\\"><div class=\\\"row\\\">\\n            <div class=\\\"col\\\"\\n                                      [class.col-md-9]=\\\"hasInsertInfo\\\"\\n                     [class.col-md-12]=\\\"!hasInsertInfo\\\"\\n                 >\\n            <div class=\\\"row\\\" *ngIf=\\\"!_object['_isSessionStorage'] && (_object['code'] || _object['name'])\\\">\\n                <h2 class=\\\"col-12 valign-div-container\\\"><span *ngIf=\\\"_object['code']\\\" [innerHTML]=\\\"_object['code']\\\"></span><span *ngIf=\\\"_object['code'] && _object['name']\\\">&nbsp;&nbsp;@&nbsp;&nbsp;</span><span *ngIf=\\\"_object['name']\\\" [innerHTML]=\\\"_object['name']\\\"></span><a\\n                        *ngIf=\\\"_actionsService.getActionAttr('edit', 'isEnabled')\\\"\\n                        [ngClass]=\\\"[_actionsService.getActionAttr('edit', 'icon')]\\\"\\n                        class=\\\"action valign-div-component valign-div-component-middle -round fa\\\"\\n                        (click)=\\\"editAction($event, 'edit')\\\"></a></h2>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <ng-template ngFor let-field [ngForOf]=\\\"_fields['view']\\\">\\n                    <div class=\\\"col col-md-6\\\"\\n                         *ngIf=\\\"!_helperService.inArray(field, ['id', 'code', 'name', 'isEnabled', 'insertTime', 'insertUser']) && _object[field]\\\">\\n                        <p *ngIf=\\\"_helperService.inArray(_fields['metadata'][field]['type'], ['number', 'percentage', 'monetary', 'icon'])\\\"><strong>{{ getLang(_fields['metadata'][field]['label']) }}</strong>:&nbsp;<span [innerHTML]=\\\"_object[field]\\\"></span></p>\\n                        <p *ngIf=\\\"_helperService.inArray(_fields['metadata'][field]['type'], ['boolean', 'status'])\\\"><span [innerHTML]=\\\"_object[field]\\\"></span>&nbsp;<strong>{{ getLang(_fields['metadata'][field]['label']) }}</strong></p>\\n                        <p *ngIf=\\\"_helperService.inArray(_fields['metadata'][field]['type'], ['avatar', 'img'])\\\"><span [innerHTML]=\\\"_object[field]\\\"></span></p>\\n                        <p *ngIf=\\\"!_helperService.inArray(_fields['metadata'][field]['type'], ['number', 'percentage', 'monetary', 'status', 'icon', 'boolean', 'avatar', 'img'])\\\"><strong>{{ getLang(_fields['metadata'][field]['label']) }}</strong><br/><span [innerHTML]=\\\"_object[field]\\\"></span></p>\\n                    </div>\\n                </ng-template>\\n            </div>\\n        </div>\\n                    <div *ngIf=\\\"hasInsertInfo\\\" class=\\\"col col-md-3\\\">\\n                <div class=\\\"card bg-light\\\">\\n                    <div class=\\\"card-body\\\">\\n                        <p><span [innerHTML]=\\\"_object['isEnabled']\\\"></span>&nbsp;<strong>{{ getLang(_fields['metadata']['isEnabled']['label']) }}</strong></p>\\n                        <p><strong>{{ getLang(_fields['metadata']['insertTime']['label']) }}</strong><br/><span [innerHTML]=\\\"_object['insertTime']\\\"></span></p>\\n                        <p><strong>{{ getLang(_fields['metadata']['insertUser']['label']) }}</strong><br/><span [innerHTML]=\\\"_object['insertUser']\\\"></span></p>\\n                    </div>\\n                </div>\\n            </div>\\n            </div></div>\\n</ng-template>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/entity-detail/ts/templates/entity-detail.component.html\n// module id = ../../../../../src/AppBundle/Resources/public/entity-detail/ts/templates/entity-detail.component.html\n// module chunks = main","var Dropzone = require(\"dropzone\");\nimport {Component, Inject, Optional, Injector, ElementRef, Renderer} from '@angular/core';\nimport {BaseModalPopup} from '../../../modal/ts/modal.service';\nimport {FileFormProvider} from './file-form-provider';\n\n// Re-exports\nexport {FileFormProvider}\n\n\n// Component\n@Component({\n    selector: '.js_fileUploadPopup',\n    template: '' // Define template in child component\n})\nexport class FileFormPopupComponent extends BaseModalPopup\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('FileFormProvider') provider: FileFormProvider,\n        @Inject('DataService') protected _dataService: any,\n        @Inject('HelperService') protected _helperService: any\n    ) {\n        super(\n            elementRef,\n            renderer,\n            provider\n        );\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnInit()\n    {\n        let that = this,\n            $form = $(this._elementRef.nativeElement).find('form.dropzone');\n\n        // Set the valid token\n        this._helperService.setFormToken($form);\n\n        $form.dropzone({\n            url: this.getProviderAttr('url'),\n            paramName: \"form[file]\",\n            success: function(file, response) {\n                // Add object to objects array provider\n                that._dataService.setObject(response['data']['object']);\n            },\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/file/ts/src/file-form-popup.component.ts","import {Component, Inject, Injector, ViewContainerRef, Renderer} from '@angular/core';\nimport {DataService} from '../../../ts/data-service/data.service';\nimport {ActionsService} from '../../../ts/actions/actions.service';\nimport {DataBoxComponent, DataBoxProvider, Popups, Popup} from '../../../data-box/ts/src/data-box.component';\nimport {ModalService} from '../../../modal/ts/modal.service';\nimport {TasksLoaderManagerService} from '../../../tasks-loader-manager/ts/tasks-loader-manager.service';\n\n\n@Component({\n    selector: '.js_file',\n    templateUrl: '../templates/file.component.html'\n})\nexport class FileComponent extends DataBoxComponent\n{\n    constructor(\n        viewContainerRef: ViewContainerRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: DataBoxProvider,\n        @Inject('DataService') dataService: any,\n        tasksLoaderManagerService: TasksLoaderManagerService,\n        @Inject('HelperService') helperService: any,\n        actionsService: ActionsService,\n        modalService: ModalService,\n        @Inject('Popups') popups: Popups | Popup,\n        injector: Injector\n    ) {\n        // Call parent\n        super(\n            viewContainerRef,\n            renderer,\n            provider,\n            dataService,\n            tasksLoaderManagerService,\n            helperService,\n            actionsService,\n            modalService,\n            popups,\n            injector\n        );\n    }\n\n    /**\n     * Get web path\n     * @param path\n     * @returns {string}\n     */\n    protected getWebPath(path): string\n    {\n        return this._helperService.getUploadWebPath(path);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/file/ts/src/file.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SearchModule} from '../../../ts/search/search.module';\nimport {SearchPaginationModule} from '../../../ts/search/search-pagination.module';\nimport {ExpanderModule} from '../../../ts/expander/expander.module';\nimport {LegendExtModule} from '../../../legend/ts/src/legend.ext-module';\nimport {FileComponent} from './file.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        SearchModule,\n        SearchPaginationModule,\n        ExpanderModule,\n        LegendExtModule\n    ],\n    declarations: [FileComponent],\n    exports: [FileComponent]\n})\nexport class FileExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/file/ts/src/file.ext-module.ts","module.exports = \"\\n\\n<div class=\\\"ibox\\\" >\\n                        <div class=\\\"ibox-title\\\" *ngIf=\\\"!getProviderExtraDataAttr('hasMergeHeader')\\\">\\n                <h5>\\n                    <ng-template [ngIf]=\\\"getProviderAttr('controls')['expander']['isEnabled']\\\"><js_expander\\n                        [isExpanded]=\\\"_isExpanded || null\\\"\\n                        [label]=\\\"getLang(getProviderAttr('label'))\\\"\\n                        [labelCount]=\\\"getProviderAttr('labelCount')\\\"\\n                        [labelIcon]=\\\"getProviderAttr('labelIcon')\\\"\\n                        (onChange)=\\\"expanderAction($event)\\\"></js_expander></ng-template>\\n                    <ng-template [ngIf]=\\\"!getProviderAttr('controls')['expander']['isEnabled']\\\">\\n                        <span [innerHTML]=\\\"getProviderAttr('label')\\\"></span>\\n                    </ng-template>\\n                </h5>\\n                <div *ngIf=\\\"_isExpanded\\\"\\n                     class=\\\"txt-align-r hide-on-empty\\\">    <div class=\\\"row align-items-center\\\">\\n        <div class=\\\"col ml-auto text-right actions no-user-select\\\">\\n            <ng-template [ngIf]=\\\"_actionsService.getActionAttr('search', 'isEnabled')\\\"><js_search class=\\\"search\\\"></js_search></ng-template>\\n            <div (click)=\\\"triggerAction($event)\\\">\\n                <ng-template ngFor let-action [ngForOf]=\\\"_actionsService.getHeadActions()\\\">\\n                    <a *ngIf=\\\"_actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                       [ngClass]=\\\"[_actionsService.getActionAttr(action, 'icon')]\\\"\\n                       class=\\\"-round fa\\\"\\n                       [attr.data-action]=\\\"action\\\"></a>\\n                </ng-template>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n            </div>\\n            \\n    <div [hidden]=\\\"!(_isExpanded)\\\" class=\\\"ibox-content hide-on-empty\\\">    <ng-template [ngIf]=\\\"(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">\\n        <div class=\\\"row align-items-center files\\\"\\n         *ngFor=\\\"let obj of _dataService.getProviderAttr('objects'); let index = index\\\">\\n        <div class=\\\"col\\\">\\n            <a class=\\\"files-item text-secondary\\\"\\n               href=\\\"{{getWebPath(obj['path'])}}\\\"\\n               target=\\\"_blank\\\"\\n               title=\\\"{{obj['name']}}\\\"><span>{{obj['name']}}</span></a>\\n        </div>\\n        <div class=\\\"col-auto txt-align-r actions no-user-select text-secondary\\\"\\n             (click)=\\\"triggerAction($event)\\\">\\n            <ng-template ngFor let-action [ngForOf]=\\\"_actionsService.getDetailActions()\\\">\\n                <a *ngIf=\\\"_actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                   [ngClass]=\\\"[_actionsService.getActionAttr(action, 'icon')]\\\"\\n                   class=\\\"fa\\\"\\n                   [attr.data-action]=\\\"action\\\"\\n                   [attr.data-value]=\\\"index\\\"></a>\\n            </ng-template>\\n        </div>\\n    </div>\\n    </ng-template><p\\n        class=\\\"text-center\\\"\\n        *ngIf=\\\"!(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">No results.</p>\\n</div>\\n        <div [hidden]=\\\"!(_isExpanded)\\\"\\n         class=\\\"ibox-footer\\\"\\n         *ngIf=\\\"_dataService.countObjects() > 0\\\"><js_searchPagination></js_searchPagination></div>\\n\\n</div>\\n\\n<js_legend></js_legend>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/file/ts/templates/file.component.html\n// module id = ../../../../../src/AppBundle/Resources/public/file/ts/templates/file.component.html\n// module chunks = main","import {Component, Inject, Injector, ElementRef, ReflectiveInjector, Input, Output, Host, EventEmitter} from '@angular/core';\nimport {DataService} from '../../../ts/data-service/data.service';\nimport {ModalService} from '../../../modal/ts/modal.service';\nimport {PostService} from '../../../ts/post.service';\nimport {FormService} from '../form.service';\nimport {PopupTypes, Popups, Popup} from '../../../data-box/ts/src/data-box.component';\nimport {TasksLoaderManagerService} from '../../../tasks-loader-manager/ts/tasks-loader-manager.service';\n\n\n/**\n * Multiple AutoComplete instances can be released together,\n * so we need to be able to define multiple AutoComplete Providers in the same context.\n * Each entry of AutoCompleteProviders is one specific provider for one specific AutoComplete instance.\n */\nexport interface AutoCompleteProviders {\n     [field: string]: {\n         urlConf: string, // To get dependency conf\n         urlChoicesParams?: string, // Parameters to add to choices url\n         field?: string, // Field to use to filter in search (default is \"name\")\n         control?: string, // Control to use ('save', 'edit', 'none')\n         popups?: Popups | Popup, // Popups to add or edit objects from dependency (necessary when control = edit)\n         // Used only by FieldTypeAutoCompleteComponent to avoid create new instances of classes (services, etc.),\n         // get again the conf from the server, and create new injectors for the same component.\n         // Once created it is saved to use in the next few\n         childInjector?: any,\n     }\n }\n\n\n@Component({\n    selector: 'js_autoComplete',\n    template: `\n    <div class=\"auto-complete\">\n        <div class=\"input-group\">\n            <input type=\"text\"\n                   class=\"form-control\"\n                   [placeholder]=\"placeholder\"\n                   (click)=\"onInputClick($event)\"\n                   (input)=\"onEnterKey($event)\"\n                   [ngModel]=\"_label\"\n                   [class.error]=\"_formService.getErrors()[field] && (_formService.getErrors()[field].length > 0)\">\n            <div class=\"input-group-append\"\n                 *ngIf=\"_controlMode\">\n                <button class=\"btn btn-primary\"\n                        type=\"button\"\n                        (click)=\"triggerAction($event)\"><i class=\"fa\"\n                                 [class.fa-check]=\"_controlMode == 'save'\"\n                                 [class.fa-plus]=\"_controlMode == 'add'\"\n                                 [class.fa-pencil]=\"_controlMode == 'edit'\"></i></button>\n            </div>\n            <a (click)=\"onControlClick($event)\"><i class=\"fa fa-angle-down\"></i></a>\n        </div>\n        <div class=\"choices\">\n            <ul [hidden]=\"_isHidden\"\n                (click)=\"onChoiceClick($event)\">\n                <ng-template [ngIf]=\"hasSelfReference\"><ng-template ngFor let-choice [ngForOf]=\"_choices\" let-choiceIndex=\"index\">\n                    <li *ngIf=\"choice['id'] != _object['id']\"\n                        [attr.data-index]=\"choiceIndex\"\n                        [innerHtml]=\"choice['label']\"></li>\n                </ng-template></ng-template>\n                <ng-template [ngIf]=\"!hasSelfReference\">\n                    <li *ngFor=\"let choice of _choices; let choiceIndex = index\"\n                        [attr.data-index]=\"choiceIndex\"\n                        [innerHtml]=\"choice['label']\"></li>\n                </ng-template>\n                <li *ngIf=\"_childCandidateSearch && _childCandidateSearch.hasMore\"\n                    (click)=\"getMoreObjects($event)\"\n                    class=\"-pagination\"\n                    title=\"Load more results...\"><span>...</span></li>\n            </ul>\n        </div>\n    </div>\n    `,\n    host: {\n        '(document:click)': 'onDocumentClick($event)',\n    }\n})\nexport class FieldTypeAutoCompleteComponent {\n    @Input() field: string; // Field to handle object and to get the respective data from AutoCompleteProviders\n    @Input() hasSelfReference: boolean;\n    @Input() placeholder: string = ''; // Set empty as default, because value can be undefined\n\n    @Output() onChange = new EventEmitter(); // When choice change or the data of current choice is edited\n\n    private _isInitialized: boolean = false; // Controls if the component was already initialized.\n\n    private _onObjectChangeSubscription: any; // When the object change in main formService\n    private _onChildObjectsChangeSubscription: any; // When the objects list change in choices dataService (pagination)\n    private _onChildObjectChangeSubscription: any; // When the object change in popup dataService (edit)\n\n    protected _provider: any;\n    protected _object: any; // From object\n    protected _controlMode: string;\n    protected _isHidden: boolean = true;\n    protected _lastSelectedChoice: {id: number, label: string} = {id: null, label: ''};\n    protected _label: string;\n    protected _fieldInView: string; // Field that represents the object in template/view, to use as label of selected choice\n    protected _choices: any[] = [];\n    protected _search: {term: string, lastTerm: string} = {term: '', lastTerm: null};\n    protected _searchField: string = 'name';\n\n    // Dependency data\n    protected _childInjector: Injector;\n    protected _childDataServicePopup: DataService; // Handle with add and edit object in popup\n    protected _childDataServiceChoices: DataService; // Handle with choices\n    protected _childCandidateSearch: any = null;\n\n    constructor(\n        protected _postService: PostService,\n        protected _modalService: ModalService,\n        @Inject('DataService') protected _dataService: any,\n        protected _tasksLoaderManagerService: TasksLoaderManagerService,\n        protected _formService: FormService,\n        protected _injector: Injector,\n        @Inject('AutoCompleteProviders') protected _autoCompleteProviders: any,\n        @Inject('HelperService') protected _helperService: any,\n        protected _elementRef: ElementRef\n    ) {\n        // Object change event subscription\n        this._onObjectChangeSubscription = this._formService.getOnObjectChangeEmitter()\n            .subscribe(object => this.reset());\n    }\n\n    /**\n     * Reset object\n     * @returns {FieldTypeAutoCompleteComponent}\n     */\n    reset(): FieldTypeAutoCompleteComponent\n    {\n        // Clear choices (can be from old object)\n        if (this._childDataServiceChoices) {\n            this._childDataServiceChoices.setObjects([]);\n            this.resetChoices();\n        }\n\n        this._object = this._formService.getObject();\n\n        let value = this._object[this.field],\n            normalizedValue = '';\n\n        if (value) {\n            normalizedValue = ((this._fieldInView\n                && this._dataService.getNormalizedObject()\n                && this._dataService.getNormalizedObject()[this._fieldInView])\n                    ? this._dataService.getNormalizedObject()[this._fieldInView]\n                    : value\n            );\n        }\n\n        this._lastSelectedChoice = {id: value, label: normalizedValue};\n        this.setLabel();\n\n        this.setControlMode();\n\n        return this;\n    }\n\n    /**\n     * Reset choices\n     * @returns {FieldTypeAutoCompleteComponent}\n     */\n    resetChoices(): FieldTypeAutoCompleteComponent\n    {\n        if (this._childDataServiceChoices) {\n            this._choices = (this._childDataServiceChoices.getProviderAttr('objects') || []);\n        } else {\n            this._choices = [];\n        }\n\n        this._isHidden = !this.hasChoices();\n\n        return this;\n    }\n\n    /**\n     * Host event\n     * @param $event\n     */\n    protected onDocumentClick($event): void\n    {\n        if (!this._elementRef.nativeElement.contains($event.target)) {\n            this._isHidden = true;\n        }\n    }\n\n    /**\n     * onInputClick event (when enter in input).\n     * @param $event\n     */\n    protected onInputClick($event): void\n    {\n        $event.preventDefault();\n\n        this._object[this.field] = null;\n        this._isHidden = !this.hasChoices();\n        this.setLabel();\n        this.setControlMode();\n    }\n\n    /**\n     * On enter key (pagination)\n     * @param $event\n     */\n    public onEnterKey($event) {\n        let that = this;\n\n        // Init component\n        this.init().then(\n            data => {\n                that._search.term = $event.target.value;\n\n                if ((that._search.term != that._search.lastTerm)\n                    && (that._search.term.length % 3 === 0) // Only submit with multiples of three\n                ) {\n                    that._childCandidateSearch['criteria'] = [{\n                        'field': that._searchField,\n                        'expr': 'lrlike',\n                        'value': that._search.term\n                    }];\n\n                    let route = that.getChoicesRoute();\n                    that._childDataServiceChoices.choices(route);\n\n                    that._search.lastTerm = that._search.term;\n                }\n            },\n            errors => { return; }\n        );\n    }\n\n    /**\n     * onControlClick (arrow of select control)\n     * @param $event\n     */\n    public onControlClick($event): void\n    {\n        $event.preventDefault();\n\n        let that = this;\n\n        if (this.hasChoices()) {\n            this._isHidden = !this._isHidden;\n        } else {\n            // Init component\n            this.init().then(\n                data => {\n                    let route = that.getChoicesRoute();\n                    that._childDataServiceChoices.choices(route);\n                },\n                errors => { return; }\n            );\n        }\n    }\n\n    /**\n     * onChoiceClick event\n     * @param $event\n     */\n    protected onChoiceClick($event): void\n    {\n        $event.preventDefault();\n\n        let $target = $($event.target),\n            choiceIndex = $target.data('index');\n\n        if (typeof choiceIndex != 'undefined') { // Can be 0\n            let choice = this._choices[choiceIndex];\n\n            if (choice && (this._object[this.field] != choice['id'])) {\n                this._object[this.field] = choice['id'];\n                this._lastSelectedChoice = {id: choice.id, label: $target.text()}; // $target.text() to work with html choices\n                this.setLabel();\n                this.setControlMode();\n                this.onChange.emit(choice['id']);\n            }\n        }\n\n        // After select, hide choices box\n        this._isHidden = true;\n    }\n\n    /**\n     * Get more objects (pagination)\n     * @param $event\n     */\n    protected getMoreObjects($event) {\n        $event.preventDefault();\n        $event.stopPropagation(); // Here the stop propagation can be used, because we click inside of choices box\n\n        let route = this.getChoicesRoute();\n        this._childDataServiceChoices.choices(route);\n    }\n\n    /**\n     * Trigger action\n     * @param $event\n     */\n    public triggerAction($event: any = null): void\n    {\n        if ($event) { $event.preventDefault(); }\n\n        switch (this._controlMode) {\n            case 'save':\n                this._formService.saveAndNewAction(); // Save and add a new object\n                break;\n            case 'edit':\n            case 'add':\n                let that = this;\n\n                // Init component\n                this.init().then(\n                    data => {\n                        that.openPopup(that._controlMode);\n                    },\n                    errors => { return; }\n                );\n                break;\n        }\n    }\n\n    /**\n     * Open popup\n     * @param popupType\n     * @returns {FieldTypeAutoCompleteComponent}\n     */\n    protected openPopup(popupType = PopupTypes.edit): FieldTypeAutoCompleteComponent\n    {\n        let that = this,\n            fieldValue = this._object[this.field];\n\n        // Inject object to edit in child DataService\n        if (fieldValue) {\n            // Simulate object\n            let object = {id: fieldValue};\n\n            // Set object to null to avoid emit the event \"_onChildObjectChangeSubscription\"\n            this._childDataServicePopup.setObject({}, null);\n            this._childDataServicePopup.setObjects([object]);\n            this._childDataServicePopup.selectObject(0).then(\n                data => {\n                    that.loadPopup(popupType);\n                    return this;\n                },\n                errors => { console.log(errors); return this; }\n            );\n        } else {\n            // Create a new object in child DataService\n            this._childDataServicePopup.newObject().then(\n                data => { that.loadPopup(popupType); return this; },\n                errors => { console.log(errors); return this; }\n            );\n        }\n\n        return this;\n    }\n\n    /**\n     * Load popup\n     * @param popupType\n     * @returns {FieldTypeAutoCompleteComponent}\n     */\n    protected loadPopup(popupType = PopupTypes.edit): FieldTypeAutoCompleteComponent\n    {\n        popupType = (PopupTypes[popupType] || PopupTypes.edit);\n        let popup: Popup = (this._provider.popups[popupType] || this._provider.popups);\n\n        this._modalService.popup(popup, this._childInjector).then(\n            data => { return; },\n            errors => { console.log(errors); return; }\n        );\n\n        return this;\n    }\n\n    /**\n     * Set control mode\n     * @returns {FieldTypeAutoCompleteComponent}\n     */\n    protected setControlMode(): FieldTypeAutoCompleteComponent\n    {\n        switch (this._provider.control) {\n            case 'edit':\n                if (this._object[this.field]) {\n                    this._controlMode = 'edit';\n                } else {\n                    this._controlMode = 'add';\n                }\n                break;\n            case 'save':\n                this._controlMode = this._provider.control;\n                break;\n            default:\n                this._controlMode = null;\n        }\n\n        return this;\n    }\n\n    /**\n     * Set input label\n     * @returns {FieldTypeAutoCompleteComponent}\n     */\n    public setLabel(): FieldTypeAutoCompleteComponent\n    {\n        if (this._object[this.field] == this._lastSelectedChoice['id']) {\n            this._label = this._lastSelectedChoice['label'];\n        } else {\n            this._label = this._search.term;\n        }\n\n        return this;\n    }\n\n    /**\n     * check if has choices\n     * @returns {any|boolean}\n     */\n    protected hasChoices(): boolean {\n        return (this._choices && (this._choices.length > 0));\n    }\n\n    /**\n     * Get choices route\n     * Choices routes need to be set each time that route is called, because params can change dinamically\n     * (like occurs on \"ClientPaymentRequest > Edit\" )\n     * @returns string\n     */\n    protected getChoicesRoute()\n    {\n        let route = this._childDataServiceChoices.getRoute('choices');\n\n        // Add parameter to action route\n        if (this._provider.urlChoicesParams) {\n            route += ('/' + this._provider.urlChoicesParams);\n        }\n\n        return route;\n    }\n\n    /**\n     * Initialize variables and dependencies.\n     * @returns {Promise<boolean>}\n     */\n    protected init(): Promise<boolean>\n    {\n        let that = this;\n\n        return new Promise(function(resolve, reject) {\n            // Set configuration only once. Avoid to set configuration unnecessarily.\n            if (that._isInitialized) { return resolve(true); }\n\n            // Only init, if init is not yet running (avoid task duplication)\n            if (!that._tasksLoaderManagerService.addTask('INIT_AUTO_COMPLETE')) {\n                return reject(false);\n            }\n\n            // Dependency conf previously saved in provider\n            if (that._provider.childInjector) {\n                that._childInjector = that._provider.childInjector;\n                that.initVariables();\n                that._isInitialized = true;\n                that._tasksLoaderManagerService.delTask('INIT_AUTO_COMPLETE');\n                return resolve(true);\n            }\n\n            // Dependency conf for first time\n            return that._postService.post(\n                that._provider.urlConf,\n                null\n            ).then(\n                data => {\n                    // Notice that both DataService share the same DataServiceProvider! It needs to be fixed.\n                    let dataServiceProvider = that._helperService.getDataServiceProvider(data);\n                    dataServiceProvider['pin'] = true;\n\n                    // Set child injector\n                    let resolvedProviders = ReflectiveInjector.resolve([\n                        {provide: 'DataServiceChoices', useClass: DataService},\n                        {provide: 'DataService', useClass: DataService},\n                        {provide: 'DataServiceProvider', useValue: dataServiceProvider},\n                        {provide: 'Provider', useValue: that._helperService.getDataBoxProvider(data)}\n                    ]);\n                    that._childInjector = ReflectiveInjector.fromResolvedProviders(resolvedProviders, that._injector);\n                    // Save childInjector (check out the context in the provider definition)\n                    that._provider.childInjector = that._childInjector;\n\n                    that.initVariables();\n                    that._isInitialized = true;\n                    that._tasksLoaderManagerService.delTask('INIT_AUTO_COMPLETE');\n                    return resolve(true);\n                },\n                errors => {\n                    console.log(errors);\n                    that._tasksLoaderManagerService.delTask('INIT_AUTO_COMPLETE');\n                    return reject(false);\n                }\n            );\n        });\n    }\n\n    /**\n     * Initialize variables.\n     * @returns {FieldTypeAutoCompleteComponent}\n     */\n    protected initVariables(): FieldTypeAutoCompleteComponent\n    {\n        let that = this;\n\n        this._childDataServicePopup = this._childInjector.get('DataService');\n        this._onChildObjectChangeSubscription = this._childDataServicePopup.getOnObjectsChangeEmitter()\n            .subscribe(data => {\n                // Only emit event if there are a valid object\n                if (that._childDataServicePopup.getObject() && that._childDataServicePopup.getObject()['id']) {\n                    that.onChange.emit(that._object[that.field]);\n                }\n            });\n\n        this._childDataServiceChoices = this._childInjector.get('DataServiceChoices');\n        this._onChildObjectsChangeSubscription = this._childDataServiceChoices.getOnObjectsRefreshEmitter()\n            .subscribe(object => this.resetChoices());\n\n        this._childCandidateSearch = this._childDataServiceChoices.getCandidateSearch(); // To filter objects\n        // Reset criteria to avoid filter by default criteria (defined in php controller)\n        this._childCandidateSearch['criteria'] = [];\n\n        return this;\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnInit()\n    {\n        // Initialize values\n        this._provider = (this._autoCompleteProviders[this.field] || null);\n        if (this._provider.field) {\n            this._searchField = this._provider.field;\n        }\n        this._fieldInView = (this._dataService.getProviderAttr('fields')['metadata'][this.field]['fieldInView'] || null);\n        this.reset();\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnDestroy()\n    {\n        // Sometimes the component can be already destroyed, so test if exists first\n        if (this._onObjectChangeSubscription) {\n            this._onObjectChangeSubscription.unsubscribe();\n        }\n        if (this._onChildObjectChangeSubscription) {\n            this._onChildObjectChangeSubscription.unsubscribe();\n        }\n        if (this._onChildObjectsChangeSubscription) {\n            this._onChildObjectsChangeSubscription.unsubscribe();\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/form/ts/field-types/field-type-auto-complete.component.ts","import {Directive, Input, Inject, ElementRef, Host} from '@angular/core';\nimport {FormService} from '../form.service';\n\n\n// Interface for rule\ninterface Rule {\n    expr: string, // <min, max, range>\n    value: string, // Field to link the rule or index to get data ranges\n    allowSkip?: boolean // Can be controlled by \"_skipRulesControl\"\n}\n\n\n@Directive({\n    selector: '[datePicker]',\n    host: {\n        '(document:click)': 'onDocumentClick($event)',\n    }\n})\nexport class FieldTypeDatePickerDirective {\n    @Input('datePicker') field: string; // Field in object\n    @Input('control') control: any; // DataPicker control\n\n    private _onObjectChangeSubscription: any; // When the object change in formService\n    protected _fieldMetadata: any;\n    // Control/Field in form that determines if rules should be ignored (it can be a form checkbox)\n    protected _skipRulesControl: any;\n    // Determines if the skip rules control value is inverted (using negation \"!\")\n    protected _skipRulesControlInverseValue: boolean = false;\n\n    constructor(\n        protected _elementRef: ElementRef,\n        protected _formService: FormService,\n        @Inject('DataService') protected _dataService: any\n    ) {\n        // Object change event subscription\n        this._onObjectChangeSubscription = this._formService.getOnObjectChangeEmitter()\n            .subscribe(object => this.reset());\n    }\n\n    /**\n     * Reset\n     */\n    protected reset()\n    {\n        this.setControlConf();\n    }\n\n    /**\n     * Host event\n     * @param $event\n     */\n    protected onDocumentClick($event): void\n    {\n        // It can't be used, because prevent all events (checkbox, etc.)\n        //$event.preventDefault();\n\n        // The click is inside of this data picker\n        if (this._elementRef.nativeElement.contains($event.target)) {\n            let isDropDown = ($($event.target).parents('.dropdown-menu').length > 0);\n\n            // Let run the default behavior\n            if (isDropDown) { return; }\n\n            this.setControlConf(); // Set/Refresh conf (data picker will be opened or closed)\n            this.control.toggle(); // Toggle data picker drop-down\n        } else {\n            // The click is outside of this data picker (close it)\n            this.control.close();\n        }\n    }\n\n    /**\n     * Set/Refresh control configuration\n     */\n    protected setControlConf() {\n        // Apply rules\n        if (this._fieldMetadata['typeDetail'] && this._fieldMetadata['typeDetail']['rules']) {\n            let skipRules = ((this._skipRulesControl\n                && (this._skipRulesControl in (this._formService.getObject() || {})))\n                    ? (this._skipRulesControlInverseValue\n                        ? !this._formService.getObject()[this._skipRulesControl]\n                        : this._formService.getObject()[this._skipRulesControl]\n                    )\n                    : false\n            );\n\n            for (let rule of this._fieldMetadata['typeDetail']['rules']) {\n                switch (rule['expr']) {\n                    case 'range':\n                        if (skipRules && rule['allowSkip']) {\n                            // Skip rule\n                            this.control['markDisabled'] = null;\n                            break;\n                        }\n\n                        // Limit available dates to ranges\n                        let dateRanges = (this._dataService.getLocalDataAttr(rule['value']) || []);\n                        // Function to check if date is valid (is in range)\n                        this.control['markDisabled'] = (date: any) => {\n                            let dateToCheck = new Date(date.year, date.month - 1, date.day);\n                            for (let dateRange of dateRanges) {\n                                // ' 00:00:00' is necessary to get the expected behavior\n                                let dateFrom = new Date(dateRange['startDate'] + ' 00:00:00'),\n                                    dateTo = new Date(dateRange['endDate'] + ' 00:00:00');\n                                if ((dateToCheck.getTime() >= dateFrom.getTime())\n                                    && (dateToCheck.getTime() <= dateTo.getTime())\n                                ) {\n                                    return false;\n                                }\n                            }\n                            return true;\n                        };\n                        break;\n                    case 'min':\n                    case 'max':\n                        if (skipRules && rule['allowSkip']) {\n                            // Skip rule\n                            this.control[rule['expr'] + 'Date'] = null;\n                            break;\n                        }\n\n                        this.control[rule['expr'] + 'Date'] = this._formService.getObject()[rule['value']];\n                        break;\n                }\n            }\n        }\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnInit()\n    {\n        this._fieldMetadata = this._dataService.getProviderAttr('fields')['metadata'][this.field];\n\n        this._skipRulesControl = ((this._fieldMetadata['typeDetail']\n            && this._fieldMetadata['typeDetail']['skipRulesControl'])\n                ? this._fieldMetadata['typeDetail']['skipRulesControl']\n                : null\n        );\n\n        // Check how skip rules value should be used\n        if (this._skipRulesControl && (this._skipRulesControl.substring(0, 1) == '!')) {\n            // Value should be inverse, using negation (!)\n            this._skipRulesControlInverseValue = true;\n            this._skipRulesControl = this._skipRulesControl.substring(1); // Remove operator from control name\n        }\n\n        this.reset();\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnDestroy()\n    {\n        this._onObjectChangeSubscription.unsubscribe();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/form/ts/field-types/field-type-date-picker.directive.ts","import {Directive, ElementRef, HostListener, Input, Output, Host, Inject, EventEmitter} from '@angular/core';\nimport {FormService} from '../form.service';\n\n/**\n * Handles with html select box\n */\n@Directive({\n    selector: '[htmlSelect]',\n    host: {\n        '(document:click)': 'onDocumentClick($event)',\n    }\n})\nexport class FieldTypeHtmlSelectDirective {\n    private _onObjectChangeSubscription: any; // When the object change in formService\n\n    protected _$choices: any;\n    protected _$label: any;\n    protected _fieldInView: string; // Field that represents the object in template/view, to use as label of selected choice\n\n    constructor(\n        protected _elementRef: ElementRef,\n        protected _formService: FormService,\n        @Inject('DataService') protected _dataService: any\n    ) {\n        // Object change event subscription\n        this._onObjectChangeSubscription = this._formService.getOnObjectChangeEmitter()\n            .subscribe(object => this.reset());\n    }\n\n    @Input('htmlSelect') field: string;\n\n    @Output() onChange = new EventEmitter();\n\n    @HostListener('click', ['$event']) onMouseClick($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n\n        this._$choices.toggle();\n\n        let $target = $($event.target),\n            value = $target.data('value');\n\n        if (value) {\n            this._formService.getObject()[this.field] = value;\n            this._$label.html($target.html());\n            this.onChange.emit(value);\n        }\n    }\n\n    /**\n     * Reset\n     * @returns {FieldTypeHtmlSelectDirective}\n     */\n    reset(): FieldTypeHtmlSelectDirective\n    {\n        let value = (this._formService.getObject()[this.field]),\n            normalizedValue = '';\n\n        if (value) {\n            normalizedValue = ((this._fieldInView\n                && this._dataService.getNormalizedObject()\n                && this._dataService.getNormalizedObject()[this._fieldInView])\n                    ? this._dataService.getNormalizedObject()[this._fieldInView]\n                    : value\n            );\n        }\n\n        this._$label.html(normalizedValue);\n\n        return this;\n    }\n\n    /**\n     * Host event\n     * @param $event\n     */\n    protected onDocumentClick($event): void\n    {\n        this._$choices.hide();\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnInit()\n    {\n        this._$choices = $(this._elementRef.nativeElement).find('.js_choices');\n        this._$label = $(this._elementRef.nativeElement).find('.js_label');\n\n        this._$choices.hide();\n\n        this._fieldInView = (this._dataService.getProviderAttr('fields')['metadata'][this.field]['fieldInView'] || null);\n\n        this.reset();\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnDestroy()\n    {\n        this._onObjectChangeSubscription.unsubscribe();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/form/ts/field-types/field-type-html-select.directive.ts","import {Directive, ElementRef, HostListener, Input} from '@angular/core';\nimport {FormService} from '../form.service';\n\n/**\n * Handles with multiple checkbox select control\n */\n@Directive({\n    selector: '[multiCheckbox]'\n})\nexport class FieldTypeMultiCheckboxDirective {\n\n    protected _onObjectChangeSubscription: any; // To get notify about changes on object over the FormService\n    protected _controlObj: any;// Control (object field value) object where the select values are kept\n\n    constructor(\n        protected _elementRef: ElementRef,\n        protected _formService: FormService\n    ) {\n        // Object change event subscription\n        this._onObjectChangeSubscription = this._formService.getOnObjectChangeEmitter()\n            .subscribe(object => this.reset(object));\n    }\n\n    @Input('multiCheckbox') field: string;\n\n    @HostListener('click', ['$event']) onMouseClick($event) {\n        let value = $event.target.value;\n\n        if (value) {\n            if (value) {\n                if (value in this._controlObj) {\n                    delete this._controlObj[value]; // Remove\n                } else {\n                    this._controlObj[value] = value; // Add\n                }\n            }\n        }\n    }\n\n    /**\n     * Reset object\n     * @param object\n     * @returns {FieldTypeMultiCheckboxDirective}\n     */\n    reset(object: any = null): FieldTypeMultiCheckboxDirective\n    {\n        this._controlObj = this._formService.getObject()[this.field];\n\n        // Init the controlObj (when creates a new object)\n        if (!this._controlObj) {\n            this._controlObj = {};\n        }\n\n        // Set \"selected\" property\n        let $elements: any = $(this._elementRef.nativeElement).find('input');\n        if ($elements.length > 0) {\n            for (let el of $elements) {\n                let $el = $(el);\n                $el.prop('checked', ($el.val() in this._controlObj));\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnInit()\n    {\n        this.reset();\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnDestroy()\n    {\n        this._onObjectChangeSubscription.unsubscribe();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/form/ts/field-types/field-type-multi-checkbox.directive.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {FieldTypeAutoCompleteComponent} from './field-type-auto-complete.component';\nimport {FieldTypePasswordComponent} from './password.component';\nimport {FieldTypeMultiCheckboxDirective} from './field-type-multi-checkbox.directive';\nimport {FieldTypeHtmlSelectDirective} from './field-type-html-select.directive';\nimport {FieldTypeDatePickerDirective} from './field-type-date-picker.directive';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule],\n    declarations: [\n        FieldTypeAutoCompleteComponent,\n        FieldTypePasswordComponent,\n        FieldTypeMultiCheckboxDirective,\n        FieldTypeHtmlSelectDirective,\n        FieldTypeDatePickerDirective\n    ],\n    exports: [\n        FieldTypeAutoCompleteComponent,\n        FieldTypePasswordComponent,\n        FieldTypeMultiCheckboxDirective,\n        FieldTypeHtmlSelectDirective,\n        FieldTypeDatePickerDirective\n    ]\n})\nexport class FieldTypesExtensionModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/form/ts/field-types/field-types.extension-module.ts","import {Component, Input} from '@angular/core';\nimport {FormService} from '../form.service';\n\n// Component\n@Component({\n    selector: 'js_password',\n    template: `\n    <input (blur)=\"resetAction($event)\"\n           class=\"form-control\"\n           [class.error]=\"_formService.getErrors()[field] && (_formService.getErrors()[field].length > 0)\"\n           type=\"password\"\n           placeholder=\"Password\"\n           [(ngModel)]=\"_fields.password\">\n    <input (keyup)=\"validateAction($event)\"\n           class=\"form-control m-t\"\n           [class.error]=\"_formService.getErrors()[field] && (_formService.getErrors()[field].length > 0)\"\n           type=\"password\"\n           placeholder=\"Confirm password\"\n           [(ngModel)]=\"_fields.confirm\">\n    `\n})\nexport class FieldTypePasswordComponent {\n    @Input() field: string;\n\n    protected _fields = {password: null, confirm: null}\n\n    constructor(\n        protected _formService: FormService\n    ) {}\n\n    /**\n     * Validate fields\n     * @param $event\n     */\n    protected validateAction($event: any = null): void\n    {\n        let isValid = (this._fields.password == this._fields.confirm);\n        this._formService.getObject()[this.field] = (isValid ? this._fields.password : null);\n        this._formService.getErrors()[this.field] = (isValid ? null : [\"Password confirmation does not match\"]);\n    }\n\n    /**\n     * Reset\n     * @param $event\n     */\n    protected resetAction($event: any = null): void\n    {\n        if (this._fields.password != this._fields.confirm) {\n            this._fields.confirm = null;\n            this.validateAction(null);\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/form/ts/field-types/password.component.ts","import {Component, ElementRef, Inject, Optional, Injector, ViewChild, EventEmitter, Renderer} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {IModalPopup} from '../../modal/ts/modal.service';\nimport {FormService} from './form.service';\nimport {DataService} from \"../../ts/data-service/data.service\";\nimport {FormExtensionComponent, FormProvider} from './form.extension-component';\n\n// Re-exports\nexport {FormProvider};\n\n\n@Component({\n    selector: '.js_formPopup',\n    template: ''\n})\nexport abstract class FormPopupExtensionComponent extends FormExtensionComponent implements IModalPopup\n{\n    // Modal parameters\n    onDismissEmitter: EventEmitter<any> = new EventEmitter();\n\n    constructor() { super(); }\n\n    /**\n     * Initialization of component (replace the original constructor to avoid angular injection inheritance bug)\n     * @param elementRef\n     * @param renderer\n     * @param provider\n     * @param formService\n     * @param dataService\n     */\n    public initFormPopupExtensionComponent(\n        elementRef: any,\n        renderer: any,\n        provider: FormProvider,\n        formService: any,\n        dataService: any\n    ) {\n        super.initFormExtensionComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService\n        );\n    }\n\n    /**\n     * Save and enter to detail action.\n     * This method should be called from view/template.\n     * @param $event\n     */\n    public saveAndEnterAction($event: any = null): void\n    {\n        this._formService.saveAndEnterAction($event);\n    }\n\n    /**\n     * Save and add a new entry.\n     * This method should be called from view/template.\n     * @param $event\n     */\n    public saveAndNewAction($event: any = null): void\n    {\n        this._formService.saveAndNewAction($event);\n    }\n\n    /**\n     * Save and close popup action.\n     * This method should be called from view/template.\n     * @param $event\n     */\n    public saveAndCloseAction($event: any = null): void\n    {\n        if ($event) { $event.preventDefault(); }\n        this.save().then(\n            data => { this.closeAction(); return; },\n            errors => { return; }\n        );\n    }\n\n    /**\n     * Cancel action.\n     * This method should be called from view/template.\n     * @param $event\n     */\n    public cancelAction($event: any = null): void\n    {\n        this.closeAction($event);\n    }\n\n    /**\n     * Close action.\n     * @param $event\n     */\n    public closeAction($event: any = null): void\n    {\n        if ($event) { $event.preventDefault(); }\n\n        // Current form object has changes from user?\n        this._formService.reset().then(\n            data => {\n                this.onDismissEmitter.emit(data);\n                return;\n            },\n            errors => { return; }\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/form/ts/form-popup.extension-component.ts","import {Component, ElementRef, Inject, Optional, Injector, Renderer} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {FormService, IForm} from './form.service';\nimport {FormProvider} from './form-provider';\nimport {BaseExtensionComponent} from '../../ts/base/base.extension-component';\nimport {DataService} from \"../../ts/data-service/data.service\";\n\n// Re-exports\nexport {FormProvider};\n\n\n// Component\n@Component({\n    selector: '.js_form',\n    template: ''\n})\nexport abstract class FormExtensionComponent extends BaseExtensionComponent implements IForm\n{\n    // Constructor vars\n    protected _formService: any;\n    protected _dataService: any;\n\n    constructor() { super(); }\n\n    /**\n     * Initialization of component (replace the original constructor to avoid angular injection inheritance bug)\n     * @param elementRef\n     * @param renderer\n     * @param provider\n     * @param formService\n     * @param dataService\n     */\n    public initFormExtensionComponent(\n        elementRef: any,\n        renderer: any,\n        provider: FormProvider,\n        formService: any,\n        dataService: any\n    ) {\n        // Parent init (construct)\n        super.initBaseExtensionComponent(\n            elementRef,\n            renderer,\n            provider\n        );\n\n        // Constructor vars\n        this._formService = formService;\n        this._dataService = dataService;\n    }\n\n    /**\n     * Save object. Handle submit form.\n     * This override add a closePopup behavior.\n     * This method should be called from child component.\n     * @returns {Promise}\n     */\n    public save(): Promise<any>\n    {\n        let that = this;\n\n        return new Promise(function(resolve, reject) {\n            that._formService.save().then(\n                data => { return resolve(data); },\n                errors => { return reject(errors); }\n            );\n        });\n    }\n\n    /**\n     * Save action.\n     * This method should be called from view/template.\n     * @param $event\n     */\n    public saveAction($event: any = null): void\n    {\n        if ($event) { $event.preventDefault(); }\n        this.save().then(\n            data => { return; },\n            errors => { return; }\n        );\n    }\n\n    /**\n     * Reset action.\n     * This method should be called from view/template.\n     * @param $event\n     */\n    public resetAction($event: any = null): void\n    {\n        this._formService.resetAction($event);\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngAfterViewInit()\n    {\n        this._formService.init(this);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/form/ts/form.extension-component.ts","import {Injectable, ElementRef, Inject, Injector, Renderer, EventEmitter, Optional} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {DataService} from '../../ts/data-service/data.service';\nimport {ModalService} from '../../modal/ts/modal.service';\nimport {TasksLoaderManagerService} from '../../tasks-loader-manager/ts/tasks-loader-manager.service';\nimport {Helper} from '../../ts/helper';\nimport {FormServiceProvider} from './form-service-provider';\n\n// Re-exports\n// This classes are in different file because import loops\n// (HelperServices uses FormServiceProvider and FormService uses HelperService)\nexport {FormServiceProvider};\n\n/**\n * Interface to be implemented by parent component\n */\nexport interface IForm {\n    /**\n     * ElementRef to handle with DOM\n     */\n    _elementRef: ElementRef; // For component that not extends the popup\n}\n\n\n@Injectable()\nexport class FormService\n{\n    // Local variables\n\n    // Unique identifier of this feature instance. Used to identify your own tasks,\n    // otherwise tasks can be confused with task of others instances and cause problems.\n    // IE: The 'SAVE' task, when multiple forms are using the same DataService, all forms stay waiting for save\n    // and does not update the object when DataService emits the change (like the wizard in \"BookingService\" \"Add\").\n    protected _uniqueId: any;\n    protected _component: any = null; // Parent component that uses and implement this service\n    protected _originalObject: any = {}; // Original object to compare changes and reset object in DataService\n    protected _originalNormalizedObject: any = {}; // Original normalized (for form) object to compare changes and reset object in form\n    protected _object: any = {}; // Object used by form\n    protected _onObjectChangeSubscription: any; // To get notify about changes on object over the service\n    protected _$form: any = null; // DOM form\n    protected _form: FormGroup; // Angular Form\n    protected _errors: any = {}; // Form errors validation\n    // Used to force form to submit,\n    // generally when you need that user confirm the date, but the data has no changes.\n    protected _forceSubmit: boolean;\n    // Confirm object override by user to prevent data loss (when the object is changed from DataService).\n    // It is useful when you have multiples forms to handle the same object, and the object is changed from any form\n    // (like wizard using the same object and the same DataServiceInstance),\n    // in this described case maybe you do not want this property enabled\n    protected _preventObjectOverride: boolean;\n\n    // Subscribed for FieldTypes\n    private _onObjectChangeEmitter: EventEmitter<any>; // When the object change\n\n    constructor(\n        protected _modalService: ModalService,\n        formBuilder: FormBuilder,\n        @Inject('DataService') protected _dataService: any,\n        @Inject('HelperService') protected _helperService: any,\n        protected _tasksLoaderManagerService: TasksLoaderManagerService,\n        @Optional() @Inject('FormServiceProvider') protected _provider: FormServiceProvider\n    ) {\n        // Set default values for provider\n        if (!this._provider) {\n            this._provider = {};\n        }\n\n        this._uniqueId = this._helperService.getUniqueId();\n\n        this._onObjectChangeEmitter = new EventEmitter();\n\n        // Object change event subscription\n        this._onObjectChangeSubscription = this._dataService.getOnObjectChangeEmitter()\n            .subscribe(object => this.onObjectChangeSubscription(object));\n\n        this._forceSubmit = false;\n        this._preventObjectOverride = true;\n\n        // Set object, if it has not been setted before open the form\n        if (!this._dataService.getObject()) {\n            // If object is not setted, create a new\n            let that = this;\n            this.newObject().then(\n                data => {\n                    that.setObject(this._dataService.getObject());\n                    that.buildForm(formBuilder);\n                },\n                errors => { return; }\n            );\n        } else {\n            this.setObject(this._dataService.getObject());\n            this.buildForm(formBuilder);\n        }\n    }\n\n    /**\n     * Build form\n     * @param formBuilder\n     * @returns {FormService}\n     */\n    protected buildForm(formBuilder: FormBuilder) {\n        let formControls = {},\n            fields = (this._provider.fields || this._dataService.getFields('form') || []).concat(\n                this._helperService.objectKeys(this._dataService.getProviderExtraDataAttr('fields'))\n            );\n\n        // Set form controls\n        for (let field of fields) {\n            formControls[field] = [this._object[field] || null];\n        }\n        this._form = formBuilder.group(formControls);\n\n        return this;\n    }\n\n    /**\n     * Initialization of service.\n     * This method should be called in \"ngOnInit\" method of parent component,\n     * so the template has been rendered.\n     * @param component (parent component)\n     * @returns {FormService}\n     */\n    public init(component: any): FormService\n    {\n        // Local variables\n        this._component = component;\n        // @TODO: discontinue this provider, and keep only the second verification\n        this._preventObjectOverride = this._component.getProviderAttr('preventObjectOverride');\n        if (this._preventObjectOverride) { // Optional provider attribute\n            this._preventObjectOverride = (!this._provider.hasOwnProperty('hasPreventObjectOverride')\n                || this._provider['hasPreventObjectOverride']\n            );\n        }\n\n        // Note: _$form needs to be setted each time that the component changes, otherwise if you set the form\n        // only once, form loss your binding consistence from the second time that it is opened and setted a\n        // different object. Ie: \"BookingServicePriceEdit\", field \"isVatIncluded\" and \"markupValue\" loss binding\n        // consistence and the data is not correctly sent to server!!!!\n        this._$form = $(this._component._elementRef.nativeElement).find('form');\n\n        return this;\n    }\n\n\n    ///////////////////////////////////////////////\n    // It's no more necessary, because we only create the form (open popup) after get the\n    // promise successful response (get, new or clone object), so this code is kept here for future consideration.\n    ///////////////////////////////////////////////\n    /**\n     * Is Initialized\n     * Controls if FormService has been initialized the \"formBuilder group\",\n     * to avoid the component render the template form before and break\n     * @returns {boolean}\n     */\n    /*public isInitialized(): boolean\n    {\n        return (this.getForm() ? true : false);\n    }*/\n\n\n    /**\n     * Get form object emitter to tell all subscribers about changes\n     * @returns {EventEmitter<any>}\n     */\n    public getOnObjectChangeEmitter() {\n        return this._onObjectChangeEmitter;\n    }\n\n    /**\n     * On object change subscription. Handle with object changes in DataService.\n     * @param object\n     */\n    public onObjectChangeSubscription(object: any): void\n    {\n        if ((object != this._originalObject) // Set object only if is different\n            // If form is in saving process, object will be setted by the save method where there are some correct procedures\n            && !this._tasksLoaderManagerService.hasTask('SAVE_'+this._uniqueId)\n        ) {\n            // Form does not need to confirm object override\n            if (!this._preventObjectOverride) {\n                this.setObject(object);\n                return;\n            }\n\n            // Confirm object override by user to prevent data loss\n            this.confirmAndSetObject(object).then(\n                data => { return; },\n                errors => { return; }\n            );\n        }\n    }\n\n    /**\n     * Set _preventObjectOverride\n     * @param value\n     * @returns {FormService}\n     */\n    public setPreventObjectOverride(value) {\n        this._preventObjectOverride = value;\n        return this;\n    }\n\n    /**\n     * Confirm and set object. Check for object changes and confirm with the user to discard them, then set\n     * the object according with the ser response.\n     * @param object\n     * @returns {Promise}\n     */\n    public confirmAndSetObject(object: any): Promise<any>\n    {\n        let that = this;\n\n        return new Promise(function(resolve, reject) {\n            // Current form object has changes from user?\n            if(that.hasChanges()) {\n                // Dialog message\n                return that._modalService.dialog().then(\n                    hasConfirm => {\n                        if (hasConfirm) {\n                            that.setObject(object);\n                            return resolve(true);\n                        } else {\n                            // Keep the object in DataService\n                            that._dataService.setObject(that._originalObject);\n                            return reject(false);\n                        }\n                    },\n                    errors => { console.log(errors); return reject(false); }\n                );\n            } else {\n                that.setObject(object);\n                return resolve(true);\n            }\n        });\n    }\n\n    /**\n     * Set object\n     * @param object\n     * @returns {FormService}\n     */\n    public setObject(object: any): FormService\n    {\n        // Set only if is a different object\n        if (object && (object != this._originalObject)) {\n            // Keep the original object from dataService\n            this._originalObject = object;\n\n            // Normalize object to form\n            this._originalNormalizedObject = Helper.cloneObject(this._originalObject, true);\n            this.normalizeObject(this._originalNormalizedObject);\n\n            // Update form object\n            this._object = Helper.cloneObject(this._originalNormalizedObject, true);\n\n            // Reset errors\n            this._errors = {};\n\n            // This object is saved in session and needs to be confirmed by user before save them in database\n            this._forceSubmit = (object['_isSessionStorage'] ? true : false);\n\n            this._onObjectChangeEmitter.emit(this._object); // Object as changed to the original, notify subscribers\n        }\n\n        // Waiting mode for save process ends here, after update the original object.\n        // Prevents the object being updated two times, by the \"Form\" \"save\" and the \"DataService\" object change emitter.\n        this._tasksLoaderManagerService.delTask('SAVE_'+this._uniqueId);\n\n        return this;\n    }\n\n    /**\n     * Normalize objects to form\n     * Detect fields that needs to be normalized\n     * @param object\n     * @param fields\n     * @returns {FormService}\n     */\n    protected normalizeObject(object, fields: any = null): FormService\n    {\n        fields = (fields || this._dataService.getProviderAttr('fields')['form']);\n\n        if(object && fields) {\n            let fieldsMetadata = this._dataService.getProviderAttr('fields')['metadata'];\n\n            for (let field of fields) {\n                let fieldMetadata = fieldsMetadata[field];\n\n                switch (fieldMetadata['type']) {\n                    case 'date':\n                        object[field] = this.normalizeValue(object[field], fieldMetadata['type']);\n                        break;\n                }\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Normalize value to form\n     * @param value\n     * @param type\n     * @returns any\n     */\n    protected normalizeValue(value, type): any\n    {\n        switch (type) {\n            case 'date':\n                if (value && (typeof value == 'string')) {\n                    let dateArr = value.split(\"-\");\n                    return {\n                        year: parseInt(dateArr[0]),\n                        month: parseInt(dateArr[1]),\n                        day: parseInt(dateArr[2])\n                    };\n                }\n                return value;\n        }\n    }\n\n    /**\n     * Get object\n     * @returns any\n     */\n    public getObject(): any\n    {\n        return this._object;\n    }\n\n    /**\n     * Get originalObject\n     * @returns any\n     */\n    public getOriginalObject(): any\n    {\n        return this._originalNormalizedObject;\n    }\n\n    /**\n     * Check if the object has changes from user\n     * @returns {boolean|Boolean}\n     */\n    public hasChanges(): boolean|Boolean\n    {\n        // Compare the working object \"this._object\" that it's a clone of \"this._originalNormalizedObject\" with your\n        // original object of cloning \"this._originalNormalizedObject\"\n        return (!this._helperService.isEqualObject(this._object, this._originalNormalizedObject));\n    }\n\n    /**\n     * Get form\n     * @returns any\n     */\n    public getForm(): any\n    {\n        return this._form;\n    }\n\n    /**\n     * Set errors\n     * @param errors\n     * @returns {FormService}\n     */\n    public setErrors(errors: any): FormService\n    {\n        this._errors = (errors || {});\n        return this;\n    }\n\n    /**\n     * Get errors\n     * @returns any\n     */\n    public getErrors(): any\n    {\n        return this._errors;\n    }\n\n    /**\n     * Set form field value\n     * @param field\n     * @param value\n     */\n    public setFormFieldValue(field: string, value: any): void\n    {\n        if (value === undefined) {\n            return; // Possible wrong element of the click event\n        }\n\n        // Accept null values to set null some fields, like not mandatory fields\n        value = (value || null);\n        if (field in this._object) {\n            this._object[field] = value;\n        }\n    }\n\n    /**\n     * Get view object (normalized object in DataService)\n     * @returns {any|{}}\n     */\n    public getViewObject(): any\n    {\n        return (this._dataService.getNormalizedObject() || {});\n    }\n\n    /**\n     * Validate form\n     * @returns {boolean}\n     */\n    public validate()\n    {\n        this._errors = {};\n\n        for (let control in this._form.controls) {\n            if (!this._form.controls[control].valid) {\n                this._errors[control] = ['Required'];\n            }\n        }\n\n        return !(this._helperService.objectLength(this._errors) > 0);\n    }\n\n    /**\n     * Save form. Handle submit form.\n     * This method should be called from child component.\n     * @param route (optional route to overrides default route)\n     * @param hasValidation\n     * @returns {Promise}\n     */\n    public save(route: string = null, hasValidation: boolean = true): Promise<any>\n    {\n        let that = this;\n\n        return new Promise(function(resolve, reject) {\n            if (!that._tasksLoaderManagerService.addTask('SAVE_'+that._uniqueId)) {\n                // Form is already in save process\n                return reject(false);\n            }\n\n            // Current form object has changes from user?\n            // Note: Objects in session storage enables the \"_forceSubmit\" by default\n            if(that._forceSubmit || !that._object['id'] || that.hasChanges()) {\n                // Validate form\n                if (hasValidation && !that.validate()) {\n                    that._tasksLoaderManagerService.delTask('SAVE_'+that._uniqueId); // Cancel save, form has errors\n                    return reject(false);\n                }\n\n                // Set the valid token\n                that._helperService.setFormToken(that._$form);\n\n                // Get form data\n                let data = that._$form.serialize();\n                let id = that._object['id'] ? that._object['id'] : null;\n\n                // Save form\n                return that._dataService.save(data, id, route).then(\n                    object => {\n                        // Force submit is reset, each activation is valid  only once\n                        that._forceSubmit = false;\n                        // Update form with updated object\n                        that.setObject(object);\n                        // Task removed in \"setObject\" method to prevent multiple updates of it\n                        //that._tasksLoaderManagerService.delTask('SAVE_'+that._uniqueId);\n                        return resolve(true);\n                    },\n                    errors => {\n                        if (errors) { that._errors = errors; }\n                        that._tasksLoaderManagerService.delTask('SAVE_'+that._uniqueId);\n                        return reject(errors);\n                    }\n                );\n            } else {\n                that._tasksLoaderManagerService.delTask('SAVE_'+that._uniqueId);\n                return resolve(true);\n            }\n        });\n    }\n\n    /**\n     * Save action.\n     * This method should be called from view/template.\n     * @param $event\n     */\n    public saveAction($event: any = null): void\n    {\n        if ($event) { $event.preventDefault(); }\n        this.save().then(\n            data => { return; },\n            errors => { return; }\n        );\n    }\n\n    /**\n     * Save and enter to detail action.\n     * This method should be called from view/template.\n     * @param $event\n     */\n    public saveAndEnterAction($event: any = null): void\n    {\n        if ($event) { $event.preventDefault(); }\n\n        let that = this;\n\n        this.save().then(\n            data => {\n                that.newAction();\n                return;\n            },\n            errors => { return; }\n        );\n    }\n\n    /**\n     * Add a new entry (newObject is used in name because new is a reserved word).\n     * @returns {Promise}\n     */\n    public newObject(): Promise<any>\n    {\n        let that = this;\n\n        return new Promise(function(resolve, reject) {\n            that._dataService.newObject().then(\n                data => { return resolve(data); },\n                errors => { return reject(errors); }\n            );\n        });\n    }\n\n    /**\n     * Add a new entry action.\n     * This method should be called when the form is initialized.\n     * @param $event\n     */\n    public newAction($event: any = null): void\n    {\n        if ($event) { $event.preventDefault(); }\n        this.newObject().then(\n            data => { return; },\n            errors => { return; }\n        );\n    }\n\n    /**\n     * Save and add a new entry.\n     * This method should be called from view/template.\n     * @param $event\n     */\n    public saveAndNewAction($event: any = null): void\n    {\n        if ($event) { $event.preventDefault(); }\n\n        let that = this;\n\n        this.save().then(\n            data => { that.newAction(); return; },\n            errors => { return; }\n        );\n    }\n\n    /**\n     * Reset object.\n     * This method should be called from child component.\n     * @param hasConfirm (launch confirm to user if object has unsaved changes)\n     * @returns {Promise}\n     */\n    public reset(hasConfirm: boolean = true): Promise<any>\n    {\n        let that = this;\n\n        return new Promise(function(resolve, reject) {\n            if (that.hasChanges()) {\n                if (hasConfirm) {\n                    return that.confirmAndSetObject(that._originalNormalizedObject).then(\n                        data => { return resolve(true); },\n                        errors => { return reject(false); }\n                    );\n                } else {\n                    that.setObject(that._originalNormalizedObject);\n                    return resolve(true);\n                }\n            } else {\n                return resolve(true);\n            }\n        });\n    }\n\n    /**\n     * Reset action.\n     * This method should be called from view/template.\n     * @param $event\n     */\n    public resetAction($event: any = null): void\n    {\n        if ($event) { $event.preventDefault(); }\n        this.reset().then(\n            data => { return; },\n            errors => { return; }\n        );\n    }\n\n    /**\n     * Set forceSubmit\n     * @param forceSubmit\n     * @returns {FormService}\n     */\n    public setForceSubmit(forceSubmit = true) {\n        this._forceSubmit = forceSubmit;\n        return this;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/form/ts/form.service.ts","import {Component, Inject} from '@angular/core';\nimport {LegendProvider} from './legent-provider';\n\n// Re-exports\nexport {LegendProvider}\n\n\n// Component\n@Component({\n    selector: 'js_legend',\n    template: `\n    <dl *ngIf=\"_provider.length > 0\" class=\"row legend\">\n        <ng-template ngFor let-legend [ngForOf]=\"_provider\" let-i=\"index\">\n          <div class=\"col-auto mr-auto\"><dt [ngClass]=\"legend['class']\"></dt><dd>{{legend['label']}}</dd></div>\n        </ng-template>\n    </dl>\n    `\n})\nexport class LegendComponent {\n    constructor(\n        @Inject('LegendProvider') protected _provider: LegendProvider\n    ) {}\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/legend/ts/src/legend.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LegendComponent} from './legend.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [\n        LegendComponent\n    ],\n    exports: [LegendComponent]\n})\nexport class LegendExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/legend/ts/src/legend.ext-module.ts","import {ViewChild, ElementRef, EventEmitter, Renderer} from '@angular/core';\nimport {BaseExtensionComponent, BaseProvider} from '../../ts/base/base.extension-component';\n\n// Re-exports\nexport {BaseProvider}\n\n/**\n * This interface should be extended by all components that use popup but not extends \"BaseModalPopup\" class\n */\nexport interface IModalPopup {\n    onDismissEmitter: EventEmitter<any>;\n\n    /**\n     * Close popup.\n     * @param $event\n     * @param data (data to return on resolve component)\n     */\n    closeAction($event: any, data?: any): void;\n}\n\n/**\n * BaseModalPopupExt\n * Base class for custom popups.\n * All popups should extend this class.\n */\nexport abstract class BaseModalPopupExt extends BaseExtensionComponent implements IModalPopup\n{\n    onDismissEmitter: EventEmitter<any> = new EventEmitter();\n\n    constructor() { super(); }\n\n    /**\n     * Initialization of component (replace the original constructor to avoid angular injection inheritance bug)\n     * @param elementRef\n     * @param renderer\n     * @param provider\n     */\n    initBaseModalPopupExt(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        // This provider can becomes any provider defined by your child\n        // (don't need the \"inject\" because it's a static class, so will be provider by children components)\n        provider: BaseProvider\n    ) {\n        // Call parent construct\n        super.initBaseExtensionComponent(\n            elementRef,\n            renderer,\n            provider\n        );\n    }\n\n    /**\n     * Close action.\n     * @param $event\n     * @param data (data to return on resolve component)\n     */\n    public closeAction($event: any = null, data: any = null): void\n    {\n        if ($event) { $event.preventDefault(); }\n        this.onDismissEmitter.emit(data);\n    }\n}\n\n/**\n * BaseModalPopup\n * Base class for custom popups.\n * All popups should extend this class.\n */\nexport abstract class BaseModalPopup extends BaseModalPopupExt\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        // This provider can becomes any provider defined by your child\n        // (don't need the \"inject\" because it's a static class, so will be provider by children components)\n        provider: BaseProvider\n    ) {\n        // Call parent construct\n        super();\n        super.initBaseModalPopupExt(\n            elementRef,\n            renderer,\n            provider\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/modal/ts/base-modal-popup.ts","import {Component, ElementRef, Renderer} from '@angular/core';\nimport {BaseModalPopup} from './base-modal-popup';\n\n@Component({\n    selector: '.js_modalDialog',\n    template:\n    `<div class=\"modal-header\">\n        <h3 class=\"modal-title\">{{title}}</h3>\n    </div>\n    <div class=\"modal-body\">{{body}}</div>\n    <div class=\"modal-footer\">\n        <div class=\"row\">\n            <div class=\"col-auto ml-auto\">\n                <button *ngIf=\"isDialog\" class=\"btn btn-light\" (click)=\"closeAction($event, false)\">Cancel</button>\n                <button class=\"btn btn-primary\" (click)=\"closeAction($event, true)\">Ok</button>\n            </div>\n        </div>\n    </div>\n    `\n})\nexport class ModalDialogComponent extends BaseModalPopup\n{\n    protected title: string = 'Warning';\n    protected body: string = 'Are you sure';\n    protected isDialog: boolean = true;\n\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer\n    ) {\n        super(\n            elementRef,\n            renderer,\n            null\n        );\n    }\n\n    /**\n     * Set title\n     * @param title\n     * @returns {ModalDialogComponent}\n     */\n    public setTitle(title: string): ModalDialogComponent\n    {\n        this.title = title;\n        return this;\n    }\n\n    /**\n     * Set body\n     * @param body\n     * @returns {ModalDialogComponent}\n     */\n    public setBody(body: string): ModalDialogComponent\n    {\n        this.body = body;\n        return this;\n    }\n\n    /**\n     * Set isDialog\n     * @param isDialog\n     * @returns {ModalDialogComponent}\n     */\n    public setIsDialog(isDialog: boolean): ModalDialogComponent\n    {\n        this.isDialog = isDialog;\n        return this;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/modal/ts/modal-dialog.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {ModalDialogComponent} from './modal-dialog.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [ModalDialogComponent],\n    exports: [ModalDialogComponent]\n})\nexport class ModalDialogExtensionModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/modal/ts/modal-dialog.extension-module.ts","import {Component, ViewChild, ViewContainerRef, ElementRef, Host} from '@angular/core';\n\n\n// Modal sizes\nexport var ModalSizes = {\n    sm: 'sm',\n    lg: 'lg'\n};\n\n\n/**\n * Modal wrapper\n * Modal uses the bootstrap classes\n */\n@Component({\n    selector: 'js_modal',\n    template: `\n    <div class=\"modal-backdrop\"></div>\n    <div class=\"modal animated\">\n        <div class=\"modal-dialog modal-{{_size}}\">\n            <div class=\"modal-content\">\n                <ng-template #js_modalContainer></ng-template>\n            </div>\n        </div>\n    </div>\n    `,\n    host: {\n        '(document:click)': 'onDocumentClick($event)',\n    }\n})\nexport class ModalWrapperComponent {\n    // ViewContainerRef to load child\n    @ViewChild('js_modalContainer', {read: ViewContainerRef}) viewContainerRef: ViewContainerRef;\n\n    protected _size: string; // Modal size (sm, lg)\n\n    constructor(\n        protected _elementRef: ElementRef\n    ) {}\n\n    /**\n     * Get modal container ref\n     * @returns {ViewContainerRef}\n     */\n    public setSize(size: string): ModalWrapperComponent\n    {\n        this._size = this.normalizeModalSize(size);\n        return this;\n    }\n\n    /**\n     * Get modal container ref\n     * @returns {ViewContainerRef}\n     */\n    public getModalContainerRef(): ViewContainerRef\n    {\n        return this.viewContainerRef;\n    }\n\n    /**\n     * Show modal\n     */\n    public show(): void\n    {\n        // Fade in animation\n        $(this._elementRef.nativeElement).find('.modal').addClass('fadeInDown');\n    }\n\n    /**\n     * Normalize modal size to a valid option\n     * @param size\n     * @returns {string}\n     */\n    protected normalizeModalSize(size: string) {\n        return (ModalSizes[size] || ModalSizes.lg);\n    }\n\n    /**\n     * On document click event\n     */\n    protected onDocumentClick(): void\n    {\n        // @TODO implement \"Esc\" key and click over backdrop, get from viewcontainerref, index 0\n        //console.log(\"click\");\n        return;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/modal/ts/modal-wrapper.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ModalWrapperComponent} from './modal-wrapper.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [ModalWrapperComponent],\n    exports: [ModalWrapperComponent]\n})\nexport class ModalWrapperExtensionModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/modal/ts/modal-wrapper.extension-module.ts","import {Injectable, ViewContainerRef, ReflectiveInjector} from '@angular/core';\nimport {DynamicComponentLoaderService} from '../../ts/dynamic-component-loader.service';\nimport {ModalDialogExtensionModule} from './modal-dialog.extension-module';\nimport {IModalPopup, BaseModalPopupExt, BaseModalPopup, BaseProvider} from './base-modal-popup';\nimport {ModalWrapperComponent, ModalSizes} from './modal-wrapper.component';\n\n// Re-exports\nexport {IModalPopup, BaseModalPopupExt, BaseModalPopup, ModalSizes, BaseProvider};\n\n\n// Popup interface\nexport interface Popup {\n    module: any,\n    component: string,\n    providers?: any[],\n    // Used only by ModalService to avoid create new instances of classes (services, etc.)\n    // and new injectors for the same component. Once created it is saved to use in the next few\n    injector?: any,\n    size?: string,\n    localData?: any // any local data necessary to some processes\n}\n\n\n// Alert types\nexport var AlertTypes = {\n    success: 'success',\n    info: 'info',\n    warning: 'warning',\n    error: 'error'\n};\n\n\n// Modal wrapper module\nimport {ModalWrapperExtensionModule} from './modal-wrapper.extension-module';\n\n\n/**\n * Service\n * Modal uses the Bootstrap classes\n * NOTE: In modal service it's no use implementing the TaskLoaderManagerService because not works! Modal\n * are duplicated in the same way, because all clicks are processes one after finish the other and not at same time!\n */\n@Injectable()\nexport class ModalService {\n    protected _modalComponentFactory: any; // Modal wrapper for component\n    protected _mainViewContainerRef: ViewContainerRef; // Main ViewContainerRef for modal\n    protected _modalCounter: number = 0; // Count existent modals to controls the body scrollbar\n    protected _$body: any; // Body element to controls scrollbar\n    protected _hasInit: boolean = false; // Controls initialization\n\n    constructor(\n        protected _dynamicComponentLoaderService: DynamicComponentLoaderService\n    ) {}\n\n    /**\n     * Initialization\n     * Init modal always in the main component (so we can ensure that the mainViewContainerRef is always active,\n     * others component can be hidden or destroyed)\n     * @param viewContainerRef\n     * @returns {ModalService}\n     */\n    public init(viewContainerRef: ViewContainerRef): ModalService\n    {\n        // Initializes only once\n        if (this._hasInit) { return this; }\n\n        let that = this;\n\n        // Get factory for modal wrapper\n        this._dynamicComponentLoaderService.getComponentFactory(ModalWrapperExtensionModule, 'ModalWrapperComponent').then(\n            componentFactory => {\n                that._modalComponentFactory = componentFactory;\n            });\n\n        // Set main viewContainerRef\n        this._mainViewContainerRef = viewContainerRef;\n\n        // Set body element\n        this._$body = $('body');\n\n        this._hasInit = true;\n        return this;\n    }\n\n    /**\n     * Popup. Render component inside the popup.\n     * @param popup\n     * @param injector\n     * @returns {Promise<T>}\n     *\n     * Handling with return:\n     * ModalService.popup([parameters]).then(\n     *     data => {\n     *         data.componentRef.instance....\n     *         data.dismissPromise.then(\n     *             dismissData => {\n     *                 ...\n     *             },\n     *             errors => { console.log(errors); }\n     *         );\n     *     },\n     *     errors => { console.log(errors); }\n     * );\n     */\n    public popup(popup: Popup, injector = null): Promise<any>\n    {\n        let that = this,\n            modalComponentRef = this._mainViewContainerRef.createComponent(\n                this._modalComponentFactory,\n                this._mainViewContainerRef.length,\n                null,\n                []\n            ),\n            modalComponentInstance = <ModalWrapperComponent>modalComponentRef.instance;\n\n        /* IMPORTANT: Use this code if you need to put the component in body (to avoided positioned parent troubling)\n        let $modal = $(modalComponentInstance._elementRef.nativeElement);\n        $modal.appendTo('body');*/\n\n        // Set modal size\n        modalComponentInstance.setSize(popup.size);\n\n        // Update counter\n        if (this._modalCounter === 0) {\n            // Remove body scrollbar\n            $(this._$body).addClass('no-overflow');\n        }\n        this._modalCounter++;\n\n        // Define injector\n        if (injector && !popup.injector) {\n            let unresolvedProviders = (popup.providers || []),\n                resolvedProviders = ReflectiveInjector.resolve(unresolvedProviders);\n            popup.injector = ReflectiveInjector.fromResolvedProviders(resolvedProviders, injector);\n        }\n\n        // Create popup\n        return new Promise(function(resolve, reject) {\n            return that._dynamicComponentLoaderService.load(\n                popup.module,\n                popup.component,\n                modalComponentInstance.getModalContainerRef(),\n                (popup.injector || null)\n            ).then(\n                componentRef => {\n                    let dismissPromise = new Promise(function(resolve, reject) {\n                        // Dismiss emitter\n                        let onDismissSubscription = componentRef.instance.onDismissEmitter.subscribe(\n                            data => {\n                                onDismissSubscription.unsubscribe();\n\n                                // Remove component\n                                that._mainViewContainerRef.remove(that._mainViewContainerRef.length - 1);\n                                // It's used the \"remove\" method of \"ViewContainerRef\" instead\n                                // modalComponentRef.destroy();\n\n                                // Update counter\n                                that._modalCounter--;\n                                if (that._modalCounter === 0) {\n                                    // Restore body scrollbar\n                                    $(that._$body).removeClass('no-overflow');\n                                }\n\n                                return resolve(data);\n                            }\n                        );\n                    });\n\n                    // Show modal\n                    modalComponentInstance.show();\n\n                    return resolve({\n                        componentRef: componentRef,\n                        dismissPromise: dismissPromise\n                    });\n                },\n                errors => {\n                    console.log(errors);\n                    return reject(null);\n                }\n            );\n        });\n    }\n\n    /**\n     * Dialog\n     * @param body\n     * @param title\n     * @param size\n     * @returns {Promise<T>}\n     */\n    public dialog(\n        body: string = 'Are you sure?',\n        title: string = 'Warning',\n        size = ModalSizes.sm\n    ): Promise<any> {\n        return this.modalDialog(body, title, true, size);\n    }\n\n    /**\n     * Alert\n     * @param body\n     * @param title\n     * @param size\n     * @returns {Promise<T>}\n     */\n    public alert(\n        body: string = 'Are you sure?',\n        title: string = 'Warning',\n        size = ModalSizes.sm\n    ): Promise<any> {\n        return this.modalDialog(body, title, false, size);\n    }\n\n    /**\n     * Modal Dialog (default component)\n     * @param body\n     * @param title\n     * @param isDialog\n     * @param size\n     * @returns {Promise<T>}\n     *\n     * Handling with return:\n     * ModalService.modalDialog([parameters]).then(\n     *     hasConfirm => {\n     *         // Popup response\n     *     },\n     *     errors => {\n     *         console.log(errors);\n     *     }\n     * );\n     */\n    protected modalDialog(\n        body: string = 'Are you sure?',\n        title: string = 'Warning',\n        isDialog: boolean = true,\n        size = ModalSizes.sm\n    ): Promise<any> {\n        let that = this;\n\n        return new Promise(function(resolve, reject) {\n            let popup: Popup = {\n                module: ModalDialogExtensionModule,\n                component: 'ModalDialogComponent',\n                size: size\n            };\n\n            that.popup(popup).then(\n                data => {\n                    // Set modal properties\n                    data.componentRef.instance.setTitle(title).setBody(body).setIsDialog(isDialog);\n                    data.dismissPromise.then(\n                        dismissData => { return resolve(dismissData); },\n                        errors => { console.log(errors); return reject(false); }\n                    );\n                },\n                errors => { console.log(errors); return reject(false); }\n            );\n        });\n    }\n\n    /**\n     * Normalize alert type to a valid option\n     * @param type\n     * @returns {string}\n     */\n    protected normalizeAlertType(type: string) {\n        return (AlertTypes[type] || AlertTypes.info);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/modal/ts/modal.service.ts","import {Component, Inject, Injector, ViewContainerRef, Renderer} from '@angular/core';\nimport {DataService} from '../../../ts/data-service/data.service';\nimport {ActionsService} from '../../../ts/actions/actions.service';\nimport {DataBoxComponent, DataBoxProvider, Popups, Popup} from '../../../data-box/ts/src/data-box.component';\nimport {ModalService} from '../../../modal/ts/modal.service';\nimport {TasksLoaderManagerService} from '../../../tasks-loader-manager/ts/tasks-loader-manager.service';\n\n\n// Component\n@Component({\n    selector: '.js_observation',\n    templateUrl: '../templates/observation.component.html'\n})\nexport class ObservationComponent extends DataBoxComponent\n{\n    constructor(\n        viewContainerRef: ViewContainerRef,\n        renderer: Renderer,\n        @Inject('Provider') dataBoxProvider: DataBoxProvider,\n        @Inject('DataService') dataService: any,\n        tasksLoaderManagerService: TasksLoaderManagerService,\n        @Inject('HelperService') helperService: any,\n        actionsService: ActionsService,\n        modalService: ModalService,\n        @Inject('Popups') popups: Popups | Popup,\n        injector: Injector\n    ) {\n        // Call parent\n        super(\n            viewContainerRef,\n            renderer,\n            dataBoxProvider,\n            dataService,\n            tasksLoaderManagerService,\n            helperService,\n            actionsService,\n            modalService,\n            popups,\n            injector\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/observation/ts/src/observation.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n// This module doesn't use \"ReactiveFormsModule\", but it needs to import this class\n// to provide \"formBuilder\" when inject dependencies in child modules (like form)\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {SearchModule} from '../../../ts/search/search.module';\nimport {ExpanderModule} from '../../../ts/expander/expander.module';\nimport {SearchPaginationModule} from '../../../ts/search/search-pagination.module';\nimport {ObservationComponent} from './observation.component';\nimport {LegendExtModule} from \"../../../legend/ts/src/legend.ext-module\";\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        SearchModule,\n        SearchPaginationModule,\n        ExpanderModule,\n        LegendExtModule\n    ],\n    declarations: [\n        ObservationComponent\n    ],\n    exports: [ObservationComponent]\n})\nexport class ObservationExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/observation/ts/src/observation.ext-module.ts","module.exports = \"\\n\\n<div class=\\\"ibox\\\" >\\n                        <div class=\\\"ibox-title\\\" *ngIf=\\\"!getProviderExtraDataAttr('hasMergeHeader')\\\">\\n                <h5>\\n                    <ng-template [ngIf]=\\\"getProviderAttr('controls')['expander']['isEnabled']\\\"><js_expander\\n                        [isExpanded]=\\\"_isExpanded || null\\\"\\n                        [label]=\\\"getLang(getProviderAttr('label'))\\\"\\n                        [labelCount]=\\\"getProviderAttr('labelCount')\\\"\\n                        [labelIcon]=\\\"getProviderAttr('labelIcon')\\\"\\n                        (onChange)=\\\"expanderAction($event)\\\"></js_expander></ng-template>\\n                    <ng-template [ngIf]=\\\"!getProviderAttr('controls')['expander']['isEnabled']\\\">\\n                        <span [innerHTML]=\\\"getProviderAttr('label')\\\"></span>\\n                    </ng-template>\\n                </h5>\\n                <div *ngIf=\\\"_isExpanded\\\"\\n                     class=\\\"txt-align-r hide-on-empty\\\">    <div class=\\\"row align-items-center\\\">\\n        <div class=\\\"col ml-auto text-right actions no-user-select\\\">\\n            <ng-template [ngIf]=\\\"_actionsService.getActionAttr('search', 'isEnabled')\\\"><js_search class=\\\"search\\\"></js_search></ng-template>\\n            <div (click)=\\\"triggerAction($event)\\\">\\n                <ng-template ngFor let-action [ngForOf]=\\\"_actionsService.getHeadActions()\\\">\\n                    <a *ngIf=\\\"_actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                       [ngClass]=\\\"[_actionsService.getActionAttr(action, 'icon')]\\\"\\n                       class=\\\"-round fa\\\"\\n                       [attr.data-action]=\\\"action\\\"></a>\\n                </ng-template>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n            </div>\\n            \\n    <div [hidden]=\\\"!(_isExpanded)\\\" class=\\\"ibox-content hide-on-empty\\\">    <ng-template [ngIf]=\\\"(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">\\n        <div class=\\\"row\\\">\\n        <div class=\\\"col col-md-6 pb-3\\\"\\n             *ngFor=\\\"let obj of _dataService.getProviderAttr('objects'); let index = index\\\">\\n            <div class=\\\"card\\\"\\n                 [class.border-info]=\\\"obj['type'] == 'INFO'\\\"\\n                 [class.border-warning]=\\\"obj['type'] == 'WARNING'\\\"\\n                 [class.border-danger]=\\\"obj['type'] == 'DANGER'\\\">\\n                <div class=\\\"card-header\\\"\\n                     [class.bg-light]=\\\"obj['type'] == 'DEFAULT'\\\"\\n                     [class.bg-info]=\\\"obj['type'] == 'INFO'\\\"\\n                     [class.bg-warning]=\\\"obj['type'] == 'WARNING'\\\"\\n                     [class.bg-danger]=\\\"obj['type'] == 'DANGER'\\\"\\n                     [class.text-white]=\\\"obj['type'] != 'DEFAULT'\\\">\\n                    <i class=\\\"fa\\\"\\n                       [class.fa-check-circle]=\\\"obj['type'] == 'DEFAULT'\\\"\\n                       [class.fa-info-circle]=\\\"obj['type'] == 'INFO'\\\"\\n                       [class.fa-warning]=\\\"obj['type'] == 'WARNING'\\\"\\n                       [class.fa-minus-circle]=\\\"obj['type'] == 'DANGER'\\\"></i>&nbsp;{{obj['name']}}\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <p>{{obj['description']}}</p>\\n                </div>\\n                <div class=\\\"card-footer text-right\\\">\\n                    <span class=\\\"txt-align-r actions no-user-select text-secondary\\\"\\n                          (click)=\\\"triggerAction($event)\\\">\\n                        <ng-template ngFor let-action [ngForOf]=\\\"_actionsService.getDetailActions()\\\">\\n                            <a *ngIf=\\\"_actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                               [ngClass]=\\\"[_actionsService.getActionAttr(action, 'icon')]\\\"\\n                               class=\\\"fa\\\"\\n                               [attr.data-action]=\\\"action\\\"\\n                               [attr.data-value]=\\\"index\\\"></a>\\n                        </ng-template>\\n                    </span>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    </ng-template><p\\n        class=\\\"text-center\\\"\\n        *ngIf=\\\"!(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">No results.</p>\\n</div>\\n        <div [hidden]=\\\"!(_isExpanded)\\\"\\n         class=\\\"ibox-footer\\\"\\n         *ngIf=\\\"_dataService.countObjects() > 0\\\"><js_searchPagination></js_searchPagination></div>\\n\\n</div>\\n\\n<js_legend></js_legend>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/observation/ts/templates/observation.component.html\n// module id = ../../../../../src/AppBundle/Resources/public/observation/ts/templates/observation.component.html\n// module chunks = main","import {Directive, Input, Inject, ElementRef, HostListener, Host} from '@angular/core';\n\n\n@Directive({\n    selector: '[popover]',\n    host: {\n        '(document:click)': 'onMouseClick($event)',\n    }\n})\nexport class PopoverDirective {\n    // \"popoverPosition\" options: 'top', 'bottom', 'left', 'right'\n    @Input('popover') popoverPosition: string;\n    // \"align\" options: 'left', 'right', 'middle'\n    @Input('align') align: string;\n    // \"elementTarget\" options: 'prev', 'next', 'parent'\n    // Element target to use as reference to position the popover\n    @Input('elementTarget') elementTarget: string;\n\n    protected _$body: any; // Body element to append/remove the popover\n    protected _$popover: any; // Popover content defined by user\n    protected _$reference: any; // Element for position reference\n    protected _$isFixedPopover: boolean = false; // Fix popover to avoid hide on leave event\n\n\n    constructor(\n        protected _elementRef: ElementRef\n    ) {}\n\n    /**\n     * Show popover\n     */\n    @HostListener('mouseenter') onMouseEnter() {\n        let offsetReference = this._$reference.offset();\n        let top = 0, left = 0, right = 0, bottom = 0;\n\n        // Needs to be inserted here, otherwise element size is not available to make calculus bellow\n        this._$popover.insertAfter(this._$body);\n\n        switch (this.popoverPosition) {\n            case 'bottom':\n                let heightReference = this._$reference.outerHeight(true);\n                left = offsetReference.left;\n                top = (offsetReference.top + heightReference + 2);\n                break;\n            case 'top':\n                left = offsetReference.left;\n                bottom = (offsetReference.top + 2);\n                break;\n        }\n\n        switch (this.align) {\n            case 'left':\n                left = offsetReference.left;\n                break;\n            case 'right':\n                right = offsetReference.right;\n                break;\n            case 'middle':\n                let widthReference = this._$reference.outerWidth(true),\n                    width = this._$popover.outerWidth(true);\n                left = (offsetReference.left + (widthReference/2) - (width/2));\n                break;\n        }\n\n        this._$popover.css({\n            left: (left || 'auto'),\n            top: (top || 'auto'),\n            right: (right || 'auto'),\n            bottom: (bottom || 'auto')\n        });\n        this._$popover.show();\n    }\n\n    /**\n     * Hide popover\n     */\n    @HostListener('mouseleave') onMouseLeave() {\n        if (!this._$isFixedPopover) {\n            this._$popover.hide(); // Use hide to avoid show immediately the popover before css attributes ate defined\n            this._$popover.remove();\n        }\n    }\n\n    /**\n     * Toggle popover\n     * @param $event\n     */\n    public onMouseClick($event) {\n        // It can't be used, because prevent all events (checkbox, etc.)\n        //if (event) { event.preventDefault(); }\n\n        if (this._elementRef.nativeElement.contains($event.target) &&\n            !this._$isFixedPopover\n        ) {\n            this.onMouseEnter(); // Show\n            this._$isFixedPopover = true;\n        } else if (this._$isFixedPopover) {\n            this._$isFixedPopover = false;\n            this.onMouseLeave(); // Hide\n        }\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnInit()\n    {\n        this._$popover = $(this._elementRef.nativeElement).find('.js_popover');\n        this._$body = $('body');\n\n        // Element reference to position the popup\n        this._$reference = null;\n        if (this.elementTarget && (this.elementTarget != '')) {\n            this._$reference = $(this._elementRef.nativeElement)[this.elementTarget]();\n        }\n\n        if (!this._$reference) {\n            this._$reference = $(this._elementRef.nativeElement).find('.js_icon');\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/popover/ts/popover.directive.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {PopoverDirective} from './popover.directive';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule],\n    declarations: [\n        PopoverDirective\n    ],\n    exports: [\n        PopoverDirective\n    ]\n})\nexport class PopoverExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/popover/ts/popover.ext-module.ts","import {Component, ElementRef, Inject, Optional, Injector, Renderer} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormPopupExtensionComponent, FormProvider} from '../../../form/ts/form-popup.extension-component';\nimport {DataService} from '../../../ts/data-service/data.service';\nimport {FormService} from '../../../form/ts/form.service';\n\n// Re-exports\nexport {FormProvider};\n\n\n@Component({\n    selector: '#js_priceFormPopup',\n    template: '' // Define template in child component\n})\nexport class PriceFormPopupComponent extends FormPopupExtensionComponent\n{\n    // Configure number of decimals to use and to round\n    protected decimalConf: any;\n\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any,\n        @Inject('HelperService') protected _helperService: any\n    ) {\n        super();\n        super.initFormPopupExtensionComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService\n        );\n\n        this.decimalConf = this._helperService.getDecimalConf();\n    }\n\n    /**\n     * onIsVatIncludedChange\n     * @param value\n     */\n    protected onIsVatIncludedChange(value: any): void\n    {\n        this._formService.getObject()['isVatIncluded'] = value;\n        this.setPriceValue();\n    }\n\n    /**\n     * onMarginMethodChange\n     * @param value\n     */\n    protected onMarginMethodChange(value: string): void\n    {\n        this._formService.getObject()['marginMethod'] = value;\n        this.setPriceValue();\n    }\n\n    /**\n     * onMarginValueEnterKey\n     * @param value\n     */\n    protected onMarginValueEnterKey(value: any): void\n    {\n        this._formService.getObject()['marginValue'] = value;\n        this.setPriceValue();\n    }\n\n    /**\n     * onCostValueEnterKey\n     * @param value\n     */\n    protected onCostValueEnterKey(value: any): void\n    {\n        this._formService.getObject()['user_costValue'] = value;\n        this.setPriceValue('COST');\n    }\n\n    /**\n     * onSellValueEnterKey\n     * @param value\n     */\n    protected onSellValueEnterKey(value: any): void\n    {\n        this._formService.getObject()['user_sellValue'] = value;\n        this.setPriceValue('SELL');\n    }\n\n    /**\n     * Set price value\n     * @param baseField ([COST, SELL])\n     * @returns any\n     */\n    protected setPriceValue(baseField = null): any\n    {\n        let obj = this._formService.getObject();\n\n        // Determine base field if is not provided\n        if (!baseField) {\n            // Try to set 'COST' by default\n            if (parseFloat(obj['user_costValue'] || '0') > 0) {\n                baseField = 'COST';\n            } else {\n                baseField = 'SELL';\n            }\n        }\n\n        let fields = {\n                COST: {user_value: 'user_costValue', value: 'costValue'},\n                SELL: {user_value: 'user_sellValue', value: 'sellValue'}\n            },\n            fieldToSet = ((baseField == 'COST') ? 'SELL' : 'COST'),\n            marginMethod = obj['marginMethod'],\n            isVatIncluded = obj['isVatIncluded'],\n            vatPercentage = parseFloat(obj['vatCode_percentage'] || '0'),\n            user_baseValue = parseFloat(obj[fields[baseField]['user_value']] || '0'),\n            user_valueToSet = 0, // Will be calculated\n            marginValue = parseFloat(obj['marginValue'] || '0'),\n            vatValueToSet = 0;\n\n        // Normalize decimals and update inputs with rounded values (with or without VAT, according with user preferences)\n        // @TODO update only when the user leaves the input,\n        // otherwise user can not fill the input with more that one digit at a time (commented bellow).\n        user_baseValue = parseFloat(/*obj[fields[baseField]['user_value']] = */  (Math.round(\n                    user_baseValue * this.decimalConf.unit.iterator) / this.decimalConf.unit.iterator\n            ).toFixed(this.decimalConf.unit.value)\n        );\n        marginValue = parseFloat(/*obj['marginValue'] = */  (Math.round(\n                    marginValue * this.decimalConf.unit.iterator) / this.decimalConf.unit.iterator\n            ).toFixed(this.decimalConf.unit.value)\n        );\n\n        obj['userFieldTyped'] = baseField;\n\n        // Calc base value without VAT\n        if ((vatPercentage > 0) && isVatIncluded) {\n            user_baseValue = parseFloat((Math.round(\n                        (user_baseValue / (1 + (vatPercentage / 100)))\n                        * this.decimalConf.unit.iterator) / this.decimalConf.unit.iterator\n                ).toFixed(this.decimalConf.unit.value)\n            );\n        }\n\n        // Set real value (unit value without VAT)\n        obj[fields[baseField]['value']] = (Math.round(\n                user_baseValue * this.decimalConf.unit.iterator) / this.decimalConf.unit.iterator\n        ).toFixed(this.decimalConf.unit.value);\n\n        // Note: Value to set is determined from base value without VAT\n        switch (marginMethod) {\n            case 'MARGIN':\n                // Avoid that margin exceed the limit (100)\n                marginValue = ((marginValue < 100) ? marginValue : 99.9999); // Avoid division by zero\n                if (baseField == 'COST') {\n                    user_valueToSet = parseFloat((Math.round(\n                                (user_baseValue / (1 - (marginValue / 100))) * this.decimalConf.unit.iterator) / this.decimalConf.unit.iterator\n                        ).toFixed(this.decimalConf.unit.value)\n                    );\n                } else {\n                    user_valueToSet = parseFloat((Math.round(\n                                (user_baseValue * (1 - (marginValue / 100))) * this.decimalConf.unit.iterator) / this.decimalConf.unit.iterator\n                        ).toFixed(this.decimalConf.unit.value)\n                    );\n                }\n                break;\n            case 'MARKUP':\n                if (baseField == 'COST') {\n                    user_valueToSet = parseFloat((Math.round(\n                                (user_baseValue * (1 + (marginValue / 100))) * this.decimalConf.unit.iterator) / this.decimalConf.unit.iterator\n                        ).toFixed(this.decimalConf.unit.value)\n                    );\n                } else {\n                    user_valueToSet = parseFloat((Math.round(\n                                (user_baseValue / (1 + (marginValue / 100))) * this.decimalConf.unit.iterator) / this.decimalConf.unit.iterator\n                        ).toFixed(this.decimalConf.unit.value)\n                    );\n                }\n                break;\n            case 'FIXED':\n                if (baseField == 'COST') {\n                    user_valueToSet = parseFloat((Math.round(\n                                (user_baseValue + marginValue) * this.decimalConf.unit.iterator) / this.decimalConf.unit.iterator\n                        ).toFixed(this.decimalConf.unit.value)\n                    );\n                } else {\n                    user_valueToSet = parseFloat((Math.round(\n                                (user_baseValue - marginValue) * this.decimalConf.unit.iterator) / this.decimalConf.unit.iterator\n                        ).toFixed(this.decimalConf.unit.value)\n                    );\n                }\n                break;\n            default: // No margin was defined, so calculate the value to set only based on VAT\n                user_valueToSet = parseFloat(obj[fields[fieldToSet]['user_value']] || '0');\n\n                // Normalize decimals and update inputs with rounded values (with or without VAT, according with user preferences)\n                // @TODO update only when the user leaves the input,\n                // otherwise user can not fill the input with more that one digit at a time (commented bellow).\n                user_valueToSet = parseFloat(/*obj[fields[fieldToSet]['user_value']] = */  (Math.round(\n                            user_valueToSet * this.decimalConf.unit.iterator) / this.decimalConf.unit.iterator\n                    ).toFixed(this.decimalConf.unit.value)\n                );\n\n                // Calc base value without VAT\n                if ((vatPercentage > 0) && isVatIncluded) {\n                    user_valueToSet = parseFloat((Math.round(\n                                (user_valueToSet / (1 + (vatPercentage / 100)))\n                                * this.decimalConf.unit.iterator) / this.decimalConf.unit.iterator\n                        ).toFixed(this.decimalConf.unit.value)\n                    );\n                }\n        }\n\n        // Set real value (unit value without VAT)\n        obj[fields[fieldToSet]['value']] = (Math.round(\n                user_valueToSet * this.decimalConf.unit.iterator) / this.decimalConf.unit.iterator\n        ).toFixed(this.decimalConf.unit.value);\n\n        // Calc value to set VAT\n        if((vatPercentage > 0) && isVatIncluded) {\n            vatValueToSet = parseFloat((Math.round(\n                        (user_valueToSet * (vatPercentage / 100))\n                        * this.decimalConf.unit.iterator) / this.decimalConf.unit.iterator\n                ).toFixed(this.decimalConf.unit.value)\n            );\n        }\n\n        // Update inputs with rounded values (with or without VAT, according with user preferences)\n        obj[fields[fieldToSet]['user_value']] = (Math.round(\n                (user_valueToSet + vatValueToSet)\n                * this.decimalConf.unit.iterator) / this.decimalConf.unit.iterator\n        ).toFixed(this.decimalConf.unit.value);\n\n        // Callback\n        this.postPriceUpdate();\n\n        return this;\n    }\n\n\n    ////////\n    // Events/Callbacks\n    ////////////////////////////////\n\n\n    /**\n     * Post (after) price update event. Use this function to handle event.\n     * @return any\n     */\n    protected postPriceUpdate()\n    {\n        return this;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/price/ts/src/price-form-popup.component.ts","import {Component, Optional, ElementRef, Inject, Renderer, QueryList, ViewContainerRef, ViewChildren} from '@angular/core';\nimport {BaseExtensionComponent, BaseProvider} from '../../../ts/base/base.extension-component';\nimport {INavManager as ITabs, LazyLoadData} from '../../../ts/nav-manager/nav-manager.service';\n\n// Reexports\nexport {ITabs, LazyLoadData, BaseProvider};\n\n\n@Component({\n    selector: '.js_tabs',\n    template: ''\n})\nexport abstract class TabsExtComponent extends BaseExtensionComponent {\n    // Constructor vars\n    protected _helperService: any;\n    protected _navManagerService: any;\n\n    // For NavManagerService\n    @ViewChildren('js_lazyLoadContainer', {read: ViewContainerRef}) lazyLoadViewContainerRefQL: QueryList<ViewContainerRef>;\n\n\n    constructor() { super(); }\n\n    initTabsExtComponent(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        provider: BaseProvider,\n        helperService: any,\n        navManagerService: any\n    ) {\n        super.initBaseExtensionComponent(\n            elementRef,\n            renderer,\n            provider || null\n        );\n\n        // Constructor vars\n        this._helperService = helperService;\n        this._navManagerService = navManagerService;\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngAfterViewInit()\n    {\n        // Initializes the children navigation manager service\n        this._navManagerService.init(this, this.lazyLoadViewContainerRefQL);\n\n        // Open the first tab\n        this._navManagerService.navTo(0);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/tabs/ts/src/tabs.ext-component.ts","import {Injectable, Inject, ViewContainerRef} from '@angular/core';\n\n\n/**\n * Tasks Loader Manager manager.\n * This service manages the load/run of tasks. It controls tasks duplication (like form save, module loading, ect.),\n * and the loading panel (show and hide) according with pendent tasks.\n */\n@Injectable()\nexport class TasksLoaderManagerService\n{\n    // Local variables\n    protected _runningTasks: string[] = []; // Keep the running tasks to avoid task duplication (like save, etc.)\n    protected _loadingTasks: string[] = []; // Keep the loading tasks to controls the loading panel\n\n    protected _$loader: any; // Loading element to controls loading\n    protected _hasLoader: boolean = false;\n\n    constructor(\n        @Inject('HelperService') protected _helperService: any\n    ) {\n        this._$loader = $('.js_loader');\n    }\n\n\n    /**\n     * Add Task\n     * @param task (use uppercase keys separated by \"_\" as convection)\n     * @param hasLoading\n     * @returns {boolean}\n     */\n    public addTask(task: string, hasLoading: boolean = true): boolean\n    {\n        if (this._helperService.inArray(task, this._runningTasks)) {\n            // Task already is running, so we reject the duplication\n            return false;\n        }\n\n        // Register running task\n        this._runningTasks.push(task);\n        if (hasLoading) {\n            // Add task to loading tasks to show the loading panel\n            this._loadingTasks.push(task);\n            this.toggleLoading();\n        }\n\n        return true;\n    }\n\n    /**\n     * Delete Task\n     * @param task (use uppercase keys separated by \"_\" as convection)\n     * @returns {boolean}\n     */\n    public delTask(task: string): boolean\n    {\n        let index = null;\n\n        if ((index = this._helperService.arraySearch(task, this._runningTasks)) != null) {\n            // Remove from tasks\n            this._runningTasks.splice(index, 1);\n\n            // Remove from loading tasks to hide the loading panel\n            if ((index = this._helperService.arraySearch(task, this._loadingTasks)) != null) {\n                this._loadingTasks.splice(index, 1);\n                this.toggleLoading();\n            }\n\n            return true;\n        }\n\n        // Task does not exists\n        return false;\n    }\n\n    /**\n     * Has Task\n     * @param task (use uppercase keys separated by \"_\" as convection)\n     * @returns {boolean}\n     */\n    public hasTask(task: string): boolean\n    {\n        return ((this._helperService.arraySearch(task, this._runningTasks)) != null);\n    }\n\n    /**\n     * Toggle Loading\n     * @returns any\n     */\n    protected toggleLoading(): any\n    {\n        if ((this._loadingTasks.length > 0) && !this._hasLoader) {\n            this._$loader.show();\n            this._hasLoader = true;\n        } else if ((this._loadingTasks.length < 1) && this._hasLoader) {\n            this._$loader.hide();\n            this._hasLoader = false;\n        }\n\n        return this;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/tasks-loader-manager/ts/tasks-loader-manager.service.ts","import {Component, Input, Inject} from '@angular/core';\nimport {TreeViewComponent} from '../tree-view.component';\n\n// Component\n@Component({\n    selector: 'js_treeViewControl',\n    template: `\n    <span *ngIf=\"_object['_isNew']\" class=\"badge badge-info\">New</span>\n    <span *ngIf=\"_object['_isEdited']\" class=\"badge badge-info\">Edited</span>\n    <input *ngIf=\"treeViewComponent._actionsService.getActionAttr('radioChoice', 'isEnabled') && treeViewComponent.getNodes(nodesIndex)[objectIndex]['id']\"\n           class=\"pull-right action\"\n           type=\"radio\"\n           name=\"index[]\"\n           value=\"{{nodesIndex}}::{{objectIndex}}\"/>\n    <input *ngIf=\"treeViewComponent._actionsService.getActionAttr('checkAll', 'isEnabled') && treeViewComponent.getNodes(nodesIndex)[objectIndex]['id']\"\n           class=\"pull-right action js_checkAll\"\n           type=\"checkbox\"\n           name=\"index[]\"\n           value=\"{{nodesIndex}}::{{objectIndex}}\"\n           [ngModel]=\"treeViewComponent.checkAll\"/>\n    <div class=\"txt-align-r actions no-user-select text-secondary\">\n        <ng-template ngFor let-action [ngForOf]=\"treeViewComponent._actionsService.getDetailActions()\">\n            <a *ngIf=\"treeViewComponent._actionsService.getActionAttr(action, 'isEnabled')\"\n               (click)=\"treeViewComponent.triggerAction($event, action, {objIndex: objectIndex, parentNodeIndex: nodesIndex})\"\n               [ngClass]=\"[treeViewComponent._actionsService.getActionAttr(action, 'icon')]\"\n               class=\"fa\"></a>\n        </ng-template>\n    </div>\n    `\n})\nexport class TreeViewControlActionsComponent\n{\n    @Input() objectIndex: any;\n    @Input() nodesIndex: number;\n    @Input() treeViewComponent: TreeViewComponent;\n\n    protected _object: any;\n\n    constructor(\n        @Inject('DataService') protected _dataService: any\n    ) {}\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnInit()\n    {\n        this._object = this._dataService.getProviderAttr('objects')[this.nodesIndex][this.objectIndex];\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/tree-view/default/ts/src/controls/tree-view-control-actions.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n// This module doesn't use \"ReactiveFormsModule\", but it needs to import this class\n// to provide \"formBuilder\" when inject dependencies in child modules (like form)\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {SearchModule} from '../../../../../ts/search/search.module';\nimport {ExpanderModule} from '../../../../../ts/expander/expander.module';\nimport {SearchPaginationModule} from '../../../../../ts/search/search-pagination.module';\nimport {TreeViewNodeComponent} from './tree-view-node.component';\nimport {TreeViewControlActionsComponent} from '../controls/tree-view-control-actions.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        SearchModule,\n        SearchPaginationModule,\n        ExpanderModule\n    ],\n    declarations: [\n        TreeViewNodeComponent,\n        TreeViewControlActionsComponent\n    ],\n    exports: [TreeViewNodeComponent]\n})\nexport class TreeViewNodeActionsExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/tree-view/default/ts/src/nodes/tree-view-node-actions.ext-module.ts","import {Component, Input} from '@angular/core';\nimport {TreeViewComponent} from '../tree-view.component';\nimport {TreeViewControlComponent} from '../tree-view-control.component';\n\n// Component\n/**\n * Component\n * Recursive node of tree view.\n * The node works with a specific control of ./controls/\n */\n@Component({\n    selector: 'js_treeViewNode',\n    template: `\n    <li *ngFor=\"let obj of nodes; let objIndex = index\">\n        <a class=\"no-user-select\"\n           *ngIf=\"treeViewComponent.getNodes(obj[parentTargetField])\"\n           (click)=\"treeViewComponent.toggleExpanded(obj[parentTargetField])\"><i\n                [ngClass]=\"['fa', (treeViewComponent._expanded[obj[parentTargetField]] ? 'fa-angle-down' : 'fa-angle-right')]\"></i><i\n                    *ngIf=\"treeViewComponent.getIcon(obj)\"\n                    [ngClass]=\"['fa', treeViewComponent.getIcon(obj)]\"></i><span [innerHTML]=\"obj['name']\"></span></a>\n        <span *ngIf=\"!treeViewComponent.getNodes(obj[parentTargetField])\"><i\n                    *ngIf=\"treeViewComponent.getIcon(obj)\"\n                    [ngClass]=\"['fa', treeViewComponent.getIcon(obj)]\"></i><span [innerHTML]=\"obj['name']\"></span></span>\n        <js_treeViewControl [treeViewComponent]=\"treeViewComponent\" [objectIndex]=\"objIndex\" [nodesIndex]=\"nodesIndex\"></js_treeViewControl>\n        <ul *ngIf=\"treeViewComponent.getNodes(obj[parentTargetField]) && treeViewComponent._expanded[obj[parentTargetField]]\">\n            <js_treeViewNode [nodes]=\"treeViewComponent.getNodes(obj[parentTargetField])\"\n                             [nodesIndex]=\"obj[parentTargetField]\"\n                             [parentTargetField]=\"parentTargetField\"\n                             [treeViewComponent]=\"treeViewComponent\"></js_treeViewNode>\n        </ul>\n    </li>\n    `\n})\nexport class TreeViewNodeComponent\n{\n    @Input() nodes: any;\n    @Input() nodesIndex: number;\n    @Input() parentTargetField: string;\n    @Input() treeViewComponent: TreeViewComponent | TreeViewControlComponent;\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/tree-view/default/ts/src/nodes/tree-view-node.component.ts","import {Component, Inject, Injector, ViewContainerRef, Renderer} from '@angular/core';\nimport {TreeViewDataService as DataService} from '../../../../ts/data-service/tree-view-data.service';\nimport {ActionsService} from '../../../../ts/actions/actions.service';\nimport {Popups, Popup} from '../../../../data-box/ts/src/data-box.component';\nimport {ModalService} from '../../../../modal/ts/modal.service';\nimport {TreeViewExtComponent, TreeViewProvider} from './tree-view.ext-component';\nimport {TasksLoaderManagerService} from '../../../../tasks-loader-manager/ts/tasks-loader-manager.service';\n\n// Re-exports\nexport {TreeViewProvider};\n\n\n@Component({\n    selector: '.js_treeView',\n    templateUrl: '../templates/tree-view.component.html'\n})\nexport class TreeViewComponent extends TreeViewExtComponent\n{\n    constructor(\n        viewContainerRef: ViewContainerRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: TreeViewProvider,\n        @Inject('DataService') dataService: any,\n        tasksLoaderManagerService: TasksLoaderManagerService,\n        @Inject('HelperService') helperService: any,\n        actionsService: ActionsService,\n        modalService: ModalService,\n        @Inject('Popups') popups: Popups | Popup,\n        injector: Injector\n    ) {\n        // Call parent\n        super();\n        super.initTreeViewExtComponent(\n            viewContainerRef,\n            renderer,\n            provider,\n            dataService,\n            tasksLoaderManagerService,\n            helperService,\n            actionsService,\n            modalService,\n            popups,\n            injector\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/tree-view/default/ts/src/tree-view.component.ts","import {Component, Inject, Injector, ViewContainerRef, Renderer} from '@angular/core';\nimport {TreeViewDataService as DataService} from '../../../../ts/data-service/tree-view-data.service';\nimport {ActionsService} from '../../../../ts/actions/actions.service';\nimport {DataBoxExtensionComponent, Popups, Popup} from '../../../../data-box/ts/src/data-box.extension-component';\nimport {ModalService} from '../../../../modal/ts/modal.service';\nimport {TreeViewProvider} from './tree-view-provider';\n\n// Re-exports\nexport {TreeViewProvider};\n\n\n@Component({\n    selector: '.js_treeView',\n    template: ''\n})\nexport class TreeViewExtComponent extends DataBoxExtensionComponent\n{\n    protected _treeViewComponent: any;\n    protected _expanded: any;\n\n    constructor() { super(); }\n\n    /**\n     * Initialization of component (replace the original constructor to avoid angular injection inheritance bug)\n     * @param viewContainerRef\n     * @param renderer\n     * @param provider\n     * @param dataService\n     * @param actionsService\n     * @param modalService\n     * @param popups\n     * @param injector\n     */\n    public initTreeViewExtComponent(\n        viewContainerRef: any, // Any is used, otherwise you get an error \"[Class] is not defined\"\n        renderer: any,\n        @Inject('Provider') provider: TreeViewProvider,\n        @Inject('DataService') dataService: any, // Any is used, otherwise you get an error \"[Class] is not defined\"\n        tasksLoaderManagerService: any,\n        @Inject('HelperService') helperService: any,\n        actionsService: any, // Any is used, otherwise you get an error \"[Class] is not defined\"\n        modalService: any, // Any is used, otherwise you get an error \"[Class] is not defined\"\n        @Inject('Popups') popups: Popups | Popup,\n        injector: any\n    ) {\n        super.initDataBoxExtensionComponent(\n            viewContainerRef,\n            renderer,\n            provider,\n            dataService,\n            tasksLoaderManagerService,\n            helperService,\n            actionsService,\n            modalService,\n            popups,\n            injector\n        );\n\n        this._treeViewComponent = this;\n        this._expanded = {};\n    }\n\n    /**\n     * Get nodes\n     * @param index\n     * @returns {*|null}\n     */\n    protected getNodes(index): any\n    {\n        return (\n            ((index !== null)\n            && this._dataService.getProviderAttr('objects')[index]\n            && (this._dataService.getProviderAttr('objects')[index].length > 0))\n                ? this._dataService.getProviderAttr('objects')[index]\n                : null\n        );\n    }\n\n    /**\n     * Toggle expanded\n     * @param index\n     */\n    protected toggleExpanded(index: number): void\n    {\n        this._expanded[index] = (this._expanded[index] ? false : true);\n    }\n\n    /**\n     * Get icon\n     * @param object\n     * @returns {any}\n     */\n    protected getIcon(object: any): string\n    {\n        let iconField = this.getProviderAttr('iconField');\n\n        if (iconField && object[iconField]) {\n            let iconFieldMap = (this.getProviderAttr('iconFieldMap') || {});\n            return (iconFieldMap[object[iconField]] || object[iconField]);\n        }\n        return (this.getProviderAttr('iconDefault') || null);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/tree-view/default/ts/src/tree-view.ext-component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n// This module doesn't use \"ReactiveFormsModule\", but it needs to import this class\n// to provide \"formBuilder\" when inject dependencies in child modules (like form)\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {SearchModule} from '../../../../ts/search/search.module';\nimport {ExpanderModule} from '../../../../ts/expander/expander.module';\nimport {LegendExtModule} from '../../../../legend/ts/src/legend.ext-module';\nimport {SearchPaginationModule} from '../../../../ts/search/search-pagination.module';\nimport {TreeViewNodeActionsExtModule} from './nodes/tree-view-node-actions.ext-module';\nimport {TreeViewComponent} from './tree-view.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        SearchModule,\n        SearchPaginationModule,\n        ExpanderModule,\n        LegendExtModule,\n        TreeViewNodeActionsExtModule\n    ],\n    declarations: [\n        TreeViewComponent\n    ],\n    exports: [TreeViewComponent]\n})\nexport class TreeViewExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/tree-view/default/ts/src/tree-view.ext-module.ts","module.exports = \"\\n\\n<div class=\\\"ibox\\\" >\\n                        <div class=\\\"ibox-title\\\" *ngIf=\\\"!getProviderExtraDataAttr('hasMergeHeader')\\\">\\n                <h5>\\n                    <ng-template [ngIf]=\\\"getProviderAttr('controls')['expander']['isEnabled']\\\"><js_expander\\n                        [isExpanded]=\\\"_isExpanded || null\\\"\\n                        [label]=\\\"getLang(getProviderAttr('label'))\\\"\\n                        [labelCount]=\\\"getProviderAttr('labelCount')\\\"\\n                        [labelIcon]=\\\"getProviderAttr('labelIcon')\\\"\\n                        (onChange)=\\\"expanderAction($event)\\\"></js_expander></ng-template>\\n                    <ng-template [ngIf]=\\\"!getProviderAttr('controls')['expander']['isEnabled']\\\">\\n                        <span [innerHTML]=\\\"getProviderAttr('label')\\\"></span>\\n                    </ng-template>\\n                </h5>\\n                <div *ngIf=\\\"_isExpanded\\\"\\n                     class=\\\"txt-align-r hide-on-empty\\\">    <div class=\\\"row align-items-center\\\">\\n        <div class=\\\"col ml-auto text-right actions no-user-select\\\">\\n            <ng-template [ngIf]=\\\"_actionsService.getActionAttr('search', 'isEnabled')\\\"><js_search class=\\\"search\\\"></js_search></ng-template>\\n            <div (click)=\\\"triggerAction($event)\\\">\\n                <ng-template ngFor let-action [ngForOf]=\\\"_actionsService.getHeadActions()\\\">\\n                    <a *ngIf=\\\"_actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                       [ngClass]=\\\"[_actionsService.getActionAttr(action, 'icon')]\\\"\\n                       class=\\\"-round fa\\\"\\n                       [attr.data-action]=\\\"action\\\"></a>\\n                </ng-template>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n            </div>\\n            \\n    <div [hidden]=\\\"!(_isExpanded)\\\" class=\\\"ibox-content hide-on-empty\\\">    <ng-template [ngIf]=\\\"(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">\\n        <form>\\n    <ul class=\\\"tree-view\\\">\\n        <js_treeViewNode [nodes]=\\\"getNodes(0)\\\"\\n                         [nodesIndex]=\\\"0\\\"\\n                         [parentTargetField]=\\\"_provider['parentTargetField']\\\"\\n                         [treeViewComponent]=\\\"_treeViewComponent\\\"></js_treeViewNode>\\n    </ul>\\n</form>    </ng-template><p\\n        class=\\\"text-center\\\"\\n        *ngIf=\\\"!(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">No results.</p>\\n</div>\\n    \\n</div>\\n\\n<js_legend></js_legend>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/tree-view/default/ts/templates/tree-view.component.html\n// module id = ../../../../../src/AppBundle/Resources/public/tree-view/default/ts/templates/tree-view.component.html\n// module chunks = main","import {Injectable, Inject} from '@angular/core';\nimport {ActionsServiceProvider} from './actions-service-provider';\n\n// Re-exports\nexport {ActionsServiceProvider};\n\n\n@Injectable()\nexport class ActionsService {\n    // Default actions values (you can use set and get methods to change defaults)\n    // (this protected properties doesn't are prefixed by '_' for rapid and simple access by this[action])\n    protected edit = {\n        icon: 'fa-pencil',\n        isEnabled: false\n    };\n    protected add = {\n        icon: 'fa-plus',\n        isEnabled: false\n    };\n    protected copy = {\n        icon: 'fa-copy',\n        isEnabled: false\n    };\n    protected email = {\n        icon: 'fa-envelope-o',\n        isEnabled: false\n    };\n    protected pdf = {\n        icon: 'fa-file-pdf-o',\n        isEnabled: false\n    };\n    protected thumbnail = {\n        icon: 'fa-picture-o',\n        isEnabled: false\n    };\n    protected avatar = {\n        icon: 'fa-user',\n        isEnabled: false\n    };\n    protected detail = {\n        icon: 'fa-eye',\n        isEnabled: false\n    };\n    protected cancel = {\n        icon: 'fa-ban',\n        isEnabled: false\n    };\n    protected delete = {\n        icon: 'fa-trash-o',\n        isEnabled: false\n    };\n    protected search = {\n        icon: 'fa-search',\n        isEnabled: false\n    };\n    protected refresh = {\n        icon: 'fa-refresh',\n        isEnabled: true\n    };\n    protected collapse = {\n        isEnabled: false\n    };\n    protected deleteAll = {\n        icon: 'fa-trash-o',\n        isEnabled: false\n    };\n    protected radioChoice = {\n        icon: null,\n        isEnabled: false\n    };\n    protected checkAll = {\n        icon: 'fa-check-square-o',\n        isEnabled: false\n    };\n    protected orderUp = {\n        icon: 'fa-angle-double-up',\n        isEnabled: false\n    };\n    protected orderDown = {\n        icon: 'fa-angle-double-down',\n        isEnabled: false\n    };\n\n    // Default actions for massive objects\n    protected _headActions: string[] = ['refresh', 'deleteAll', 'add', 'checkAll'];\n    // Default actions for single object\n    protected _detailActions: string[] = ['orderUp', 'orderDown', 'detail', 'email', 'pdf', 'thumbnail', 'avatar',\n        'cancel', 'delete', 'copy', 'edit'];\n\n    constructor(\n        @Inject('ActionsServiceProvider') private _provider: ActionsServiceProvider\n    ) {\n        if(this._provider) {\n            for (let action in this._provider) {\n                switch (action) {\n                    case 'order':\n                        this['orderUp']['isEnabled'] = this._provider[action];\n                        this['orderDown']['isEnabled'] = this._provider[action];\n                        break;\n                    default:\n                        if (this[action]) {\n                            this[action]['isEnabled'] = this._provider[action];\n                        }\n                }\n            }\n        }\n    }\n\n    /**\n     * Get action attribute\n     * @param action\n     * @param attribute\n     * @returns {any}\n     */\n    public getActionAttr(action: string, attribute: string)\n    {\n        if(this[action] && (attribute in this[action])) {\n            return this[action][attribute];\n        }\n        return null;\n    }\n\n    /**\n     * Get head actions (actions for objects head)\n     * @returns {any}\n     */\n    public getHeadActions()\n    {\n        return this._headActions;\n    }\n\n    /**\n     * Get detail actions (actions for objects detail)\n     * @returns {any}\n     */\n    public getDetailActions()\n    {\n        return this._detailActions;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/actions/actions.service.ts","import {Component, ElementRef, Inject, Renderer, Optional} from '@angular/core';\nimport {BaseProvider} from './base-provider';\n\n// Re-exports\nexport {BaseProvider}\n\n\n/**\n * Used only as base component to be extended for others components\n */\n@Component({\n    selector: '.js_base',\n    template: ''\n})\nexport abstract class BaseExtensionComponent {\n    // Constructor vars\n    public _elementRef: any; // Public because the children that implement \"IForm\"\n    protected _renderer: any;\n    protected _provider: BaseProvider | any;\n    //protected _dataService: any;\n\n\n    /**\n     * Initialization of component (replace the original constructor to avoid angular injection inheritance bug)\n     * @param elementRef\n     * @param renderer\n     * @param provider\n     * //@param dataService\n     */\n    public initBaseExtensionComponent(\n        elementRef: any,\n        renderer: any,\n        // This provider can becomes any provider defined by your child\n        // (don't need the \"inject\" because it's a static class, so will be provider by children components)\n        provider: BaseProvider\n        // @TODO: Disabled for now, but is here to analise later how dataservice can handle with lazy loader\n        //@Optional() @Inject('DataService') dataService: any = null\n    ) {\n        // Constructor vars\n        this._elementRef = elementRef;\n        this._renderer = renderer;\n        this._provider = provider;\n        //this._dataService = dataService;\n\n        // Set defaults\n        if (!this._provider) {\n            this._provider = {};\n        }\n\n        // Set main class\n        let mainClass = this.getProviderExtraDataAttr('class');\n        if (mainClass) {\n            this._renderer.setElementClass(\n                this._elementRef.nativeElement,\n                mainClass,\n                true\n            );\n        }\n    }\n\n    /**\n     * Set provider attribute\n     * @param attribute\n     * @param value\n     * @returns {any|null}\n     */\n    protected setProviderAttr(attribute: string, value: any): any\n    {\n        this._provider[attribute] = value;\n        return this;\n    }\n\n    /**\n     * Get provider attribute\n     * @param attribute\n     * @returns {any|null}\n     */\n    protected getProviderAttr(attribute: string): any\n    {\n        return ((this._provider[attribute] === undefined) ? null : this._provider[attribute]); // Can be zero\n    }\n\n    /**\n     * Get lang\n     * @param key\n     * @returns {any}\n     */\n    public getLang(key): any\n    {\n        return ((!this._provider['language'] || (this._provider['language'][key] === undefined))\n                ? key\n                : this._provider['language'][key] // Can be zero\n        );\n    }\n\n    /**\n     * Get \"localData\" attribute\n     * @param attribute\n     * @returns any\n     */\n    public getLocalDataAttr(attribute: string): any\n    {\n        return (this._provider['localData'][attribute] || null);\n    }\n\n    /**\n     * Get provider extra data attribute\n     * @param attribute\n     * @returns {any|null}\n     */\n    public getProviderExtraDataAttr(attribute: string): any\n    {\n        return (\n            (this._provider['extraData'] && this._provider['extraData'][attribute])\n                ? this._provider['extraData'][attribute]\n                : null\n        );\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngAfterViewInit()\n    {\n        // Start loading lazy images\n        // @TODO: This method should be called from DataService each time that objects are updated\n        //$(this._elementRef.nativeElement).find('.js_lazy').Lazy();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/base/base.extension-component.ts","import {Component, ElementRef, Renderer} from '@angular/core';\nimport {BaseExtensionComponent} from '../base/base.extension-component';\nimport {BoxProvider} from './box-provider';\n\n// Re-exports\nexport {BoxProvider};\n\n\n/**\n * Box (simple base box)\n */\n@Component({\n    selector: '.js_box',\n    template: ''\n})\nexport abstract class BoxExtensionComponent extends BaseExtensionComponent {\n    // Controls the toggle of the show/hide content.\n    // It starts \"true\" otherwise the content may not be rendered correctly.\n    protected _isExpanded: boolean = true;\n\n    /**\n     * Initialization of component (replace the original constructor to avoid angular injection inheritance bug)\n     * @param elementRef\n     * @param renderer\n     * @param provider\n     */\n    public initBoxExtensionComponent(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        provider: BoxProvider\n    ) {\n        super.initBaseExtensionComponent(\n            elementRef,\n            renderer,\n            provider\n        );\n\n        let expanderControl = this.getProviderAttr('controls')['expander'];\n        this._isExpanded = (!expanderControl['isEnabled'] || expanderControl['isExpanded']);\n    }\n\n    /**\n     * Expander action. Used by expanded directive output.\n     * @param isExpanded (value returned by the expander directive on change)\n     */\n    protected expanderAction(isExpanded: boolean): void\n    {\n        this._isExpanded = isExpanded;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/box/box.extension-component.ts","import {Injectable, Inject, EventEmitter, Optional} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {PostService} from '../post.service';\n//import {AssetsLazyLoaderManagerService} from '../assets-lazy-loader-manager.service';\nimport {DataServiceProvider, Search} from './data-service-provider';\n\n// Re-exports\n// This classes are in different file because import loops\n// (HelperServices uses DataServiceProvider and DataService uses HelperService)\nexport {DataServiceProvider, Search};\n\n// OrderTypes\nexport var OrderTypes = {\n    up: 'up',\n    down: 'down'\n};\n\n\n@Injectable()\nexport class DataService {\n    // Current object (used by form)\n    protected _objectIndex: number = null; // Index of object in provider.objects (or in _objectsProvider if defined)\n    protected _object: any = null; // Raw object\n    protected _normalizedObject: any = null; // Object normalized to template\n\n    // Objects provider is the context to work/handle with object instead of provider.objects\n    // (used in TreeViewDataService, in this case the context is always provider.objects)\n    protected _objectsProvider: any = null;\n\n    protected _objectsIds: number[] = []; // Array of \"ids\" of objects in provider.objects.value to avoid duplications\n    protected _newObjectsIds: number[] = []; // Array of \"ids\" with new objects added by the user\n\n    protected _onObjectChangeEmitter: EventEmitter<any>; // When the selected object change\n    protected _onObjectsRefreshEmitter: EventEmitter<any>; // When list of objects change\n    protected _onObjectsChangeEmitter: EventEmitter<any>; // When objects change, from add, refresh, delete, etc (useful when you need to update parent)\n\n    protected _candidateSearch: Search; // Candidate to new search with modified parameters\n\n    // Handles with assets lazy loader.\n    // DataService it's that normalize data, so nobody better than him to knows when AssetsLazyLoaderManager should be called.\n    // Assets lazy loader is called only for objects provided in construct, because in the other cases we cannot\n    // control the template rendering to call the lazy loader at the right time.\n    protected _hasAssetsLazyLoader: boolean = true; // Controls if this feature should be used\n\n\n    constructor(\n        protected _postService: PostService,\n        @Inject('HelperService') protected _helperService: any,\n        @Inject('DataServiceProvider') protected _provider: DataServiceProvider,\n        private _sanitizer: DomSanitizer\n        //@Optional() protected _assetsLazyLoaderManagerService: AssetsLazyLoaderManagerService, // @TODO\n    ) {\n        if (this._provider['pin']) {\n            this.pinProvider();\n        }\n\n        this._onObjectChangeEmitter = new EventEmitter();\n        this._onObjectsRefreshEmitter = new EventEmitter();\n        this._onObjectsChangeEmitter = new EventEmitter();\n\n        this.setObjects(this._provider.objects || []);\n\n        // If object is defined, then set the object (used by dynamic entity detail and login flat form)\n        if (this._provider.object) {\n            this.setLocalObject(this._provider.object);\n        }\n\n        // Initialize the search\n        this.initSearch();\n    }\n\n    /**\n     * Pin provider, turning provider on an exclusive copy for this service.\n     * It's useful when you have multiple DataServices in the same injector, so you can have multiple\n     * problems if you share the same DataServiceProvider between them.\n     * @returns {DataService}\n     */\n    protected pinProvider(): DataService\n    {\n        this._provider = this._helperService.cloneObject(this._provider, true);\n        return this;\n    }\n\n    /**\n     * Count objects (used in pagination)\n     * @returns {number}\n     */\n    public countObjects(): number\n    {\n        return this._helperService.varCount(this._provider.objects || []);\n    }\n\n    /**\n     * Get object\n     * @param index\n     * @returns any\n     */\n    public getObject(index: any = null): any\n    {\n        if (index !== null) {\n            let objectsProvider = (this._objectsProvider || this._provider.objects || []);\n            return (objectsProvider[index] || null);\n        }\n\n        return this._object;\n    }\n\n    /**\n     * Get object index\n     * @returns any\n     */\n    public getObjectIndex(): any\n    {\n        return this._objectIndex;\n    }\n\n    /**\n     * Get selected object (object normalized to view)\n     * @returns {any}\n     */\n    public getNormalizedObject(): any\n    {\n        return this._normalizedObject;\n    }\n\n    /**\n     * Get new objects\n     * @returns {any}\n     */\n    public getNewObjects(): any\n    {\n        return this._newObjectsIds;\n    }\n\n    /**\n     * Get selected object emitter to tell all subscribers about changes\n     * @returns {EventEmitter<any>}\n     */\n    public getOnObjectChangeEmitter() {\n        return this._onObjectChangeEmitter;\n    }\n\n    /**\n     * Get on objects refresh emitter to tell all subscribers about changes\n     * @returns {EventEmitter<any>}\n     */\n    public getOnObjectsRefreshEmitter() {\n        return this._onObjectsRefreshEmitter;\n    }\n\n    /**\n     * Get on objects change emitter to tell all subscribers about changes (add, refresh, delete, etc)\n     * @returns {EventEmitter<any>}\n     */\n    public getOnObjectsChangeEmitter() {\n        return this._onObjectsChangeEmitter;\n    }\n\n    /**\n     * Get route\n     * @param route\n     * @returns {null}\n     */\n    public getRoute(route: string)\n    {\n        if (route in this._provider.route) {\n            return this._provider.route[route]['url'];\n        }\n        return null;\n    }\n\n    /**\n     * Set route\n     * @param index\n     * @param url\n     * @param name\n     * @returns {DataService}\n     */\n    public setRoute(index: string, url: string, name: string = null): DataService\n    {\n        // Set new route if not exists\n        if (!(index in this._provider.route)) {\n            this._provider.route[index] = {name: null, route: null};\n        }\n\n        // Set values\n        if (name) { this._provider.route[index]['name'] = name; }\n        if (url) { this._provider.route[index]['url'] = url; }\n\n        return this;\n    }\n\n    /**\n     * Refresh selected object\n     * @returns {DataService}\n     */\n    public refreshObject(): DataService\n    {\n        let id = (this._object ? this._object['id'] : null);\n\n        if (id) {\n            let that = this,\n                route = (this._provider.route['get']['url'] + '/' + id);\n\n            this._postService.post(route, this.getRequestData(null, false, false)).then(\n                data => { that.handleResponse(data); },\n                errors => { console.log(errors); }\n            );\n        }\n\n        return this;\n    }\n\n    /**\n     * Select object\n     * @param index\n     * @returns {Promise}\n     */\n    public selectObject(index: any): Promise<any>\n    {\n        let that = this;\n\n        return new Promise(function(resolve, reject) {\n            // Set only if object is different\n            if(index != that._objectIndex) {\n                let objectsProvider = (that._objectsProvider || that._provider.objects);\n\n                that._postService.post(\n                    that._provider.route['get']['url'] + '/' + objectsProvider[index]['id'],\n                    that.getRequestData(null, false, false)\n                ).then(\n                    data => {\n                        // Local data (do not override, merge data)\n                        if (data['localData']) {\n                            that.setLocalData(data['localData']);\n                        }\n\n                        // Object\n                        that._objectIndex = index; // The index of original object that was selected\n                        that.setLocalObject(data.object, false);\n\n                        // Now object has all of fields with the values, is not limited to the search selected field,\n                        // so we need normalize the object, because now it can has new values.\n                        that.setNormalizedObject();\n\n                        return resolve(true);\n                    },\n                    errors => { reject(false); });\n            } else {\n                return resolve(true);\n            }\n        });\n    }\n\n    /**\n     * Set object (when the object is changed out of the objects array from _provider,\n     * can be an external order)\n     * @param object\n     * @param index\n     * @returns any\n     */\n    public setObject(object: any, index: any = null): any\n    {\n        if (object) {\n            this.setLocalObject(object);\n\n            // Objects stored in session does not be considered really objects.\n            if (object['id'] && !object['_isSessionStorage']) {\n                let objectsProvider = (this._objectsProvider || this._provider.objects);\n\n                // Refresh objects array\n                if ((index != null) && objectsProvider[index]) {\n                    // Update existent object\n                    this._objectIndex = index;\n                    this._normalizedObject['_isEdited'] = true; // Flag to use in template\n                    objectsProvider[index] = this._normalizedObject;\n                    // Emmit changes (object has been edited in objects list)\n                    this._onObjectsChangeEmitter.emit(null);\n                } else {\n                    // Add new object at first of array (to best user experience)\n                    this._objectIndex = 0; // Update index to the new index\n                    this._normalizedObject['_isNew'] = true; // Flag to use in template\n                    this.pushToObjects([this._normalizedObject], true);\n                    this._newObjectsIds.push(object['id']); // New object added\n                }\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Set normalized object (can be called out of the service).\n     * Used by \"auto-complete\".\n     * @param object\n     * @returns any\n     */\n    public setNormalizedObject(object: any = null): any\n    {\n        let objectsProvider = (this._objectsProvider || this._provider.objects);\n        object = (object || this._object);\n\n        if (object) {\n            // Normalize object to template\n            this._normalizedObject = this._helperService.cloneObject(object, true);\n            this.normalizeObjectsToTemplate([this._normalizedObject]);\n\n            // Update normalized object in objects provider\n            if ((this._objectIndex != null) && objectsProvider[this._objectIndex]) {\n                objectsProvider[this._objectIndex] = this._normalizedObject;\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Set local object (when the object is changed based in the objects array from _provider,\n     * always is an internal order)\n     * @param object\n     * @param hasTemplateNormalization\n     * @returns {DataService}\n     */\n    protected setLocalObject(object: any, hasTemplateNormalization = true): DataService\n    {\n        if (hasTemplateNormalization) {\n            // Normalize object to template\n            this._normalizedObject = this._helperService.cloneObject(object, true);\n            this.normalizeObjectsToTemplate([this._normalizedObject]);\n        }\n\n        this._object = object;\n        this._onObjectChangeEmitter.emit(this._object);\n\n        return this;\n    }\n\n    /**\n     * Search initialization\n     * @returns {DataService}\n     */\n    protected initSearch(): DataService\n    {\n        this._candidateSearch = this._helperService.cloneObject(this._provider['search'], true);\n        return this;\n    }\n\n    /**\n     * Set search\n     * @param value\n     * @param attribute\n     * @returns {DataService}\n     */\n    public setSearch(value: any, attribute: string = null): DataService\n    {\n        if (attribute && (attribute in this._provider.search)) {\n            this._provider.search[attribute] = value;\n        } else if (attribute) {\n            return this; // Unknown attribute\n        } else {\n            this._provider.search = value;\n        }\n\n        // Reinitialize the search\n        this.initSearch();\n        \n        return this;\n    }\n\n    /**\n     * Get search\n     * @param attribute\n     * @returns any\n     */\n    public getSearch(attribute: string = null): any\n    {\n        if (attribute && (attribute in this._provider.search)) {\n            return this._provider.search[attribute];\n        } else if (attribute) {\n            return null; // Unknown attribute\n        }\n        return this._provider.search;\n    }\n\n    /**\n     * Get fields\n     * @param attribute\n     * @returns any\n     */\n    public getFields(attribute: string = null): any\n    {\n        if (attribute && (attribute in this._provider.fields)) {\n            return this._provider.fields[attribute];\n        } else if (attribute) {\n            return null; // Unknown attribute\n        }\n        return this._provider.fields;\n    }\n\n    /**\n     * Set objects\n     * @param objects\n     * @param isMerge (if true merge objects, otherwise replace them)\n     * @returns any\n     */\n    public setObjects(objects: any, isMerge: boolean = false): any\n    {\n        objects = (objects || []);\n\n        this.normalizeObjectsToTemplate(objects);\n\n        // Merge objects\n        if (isMerge) {\n            this.pushToObjects(objects);\n        } else { // Replace objects\n            this.resetObjects();\n            this.pushToObjects(objects);\n        }\n\n        // Emmit changes\n        this._onObjectsRefreshEmitter.emit(objects);\n\n        return this;\n    }\n\n    /**\n     * Reset objects\n     * @returns {DataService}\n     */\n    protected resetObjects() {\n        this._provider.objects = [];\n        this._objectsIds = [];\n        this._newObjectsIds = [];\n        this._objectIndex = null; // Reset object index\n        return this;\n    }\n\n    /**\n     * Set object index\n     * @param index\n     */\n    public setObjectIndex(index: any)\n    {\n        let objectsProvider = (this._objectsProvider || this._provider.objects);\n\n        if(index && objectsProvider[index]) {\n            this._objectIndex = index;\n            // Set the object to emit the object change for any process pendent\n            this.setLocalObject(objectsProvider[index], false);\n\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Push to objects\n     * @param objects\n     * @param isFirst (determines if objects should be at first)\n     * @returns any\n     */\n    protected pushToObjects(objects: any, isFirst: boolean = false): any\n    {\n        let //hasChanges = false, // To control the changes emitter\n            objectsProvider = (this._objectsProvider || this._provider.objects);\n\n        for (let obj of objects) {\n            if (!this._helperService.inArray(parseInt(obj['id']), this._objectsIds)) {\n                if (isFirst) {\n                    objectsProvider.unshift(obj);\n                } else {\n                    objectsProvider.push(obj);\n                }\n                this._objectsIds.push(parseInt(obj['id']));\n                //hasChanges = true;\n            }\n        }\n\n        // Emmit changes (object has been added)\n        this._onObjectsChangeEmitter.emit(null);\n\n        return this;\n    }\n\n    /**\n     * Pull from objects\n     * @param index\n     * @returns any\n     */\n    protected pullFromObjects(index: any): any\n    {\n        let objectsProvider = (this._objectsProvider || this._provider.objects),\n            objId = parseInt(objectsProvider[index]['id']);\n\n        objectsProvider.splice(index, 1);\n\n        if ((index = this._helperService.arraySearch(objId, this._objectsIds)) != null) {\n            this._objectsIds.splice(index, 1);\n        }\n        if ((index = this._helperService.arraySearch(objId, this._newObjectsIds)) != null) {\n            this._newObjectsIds.splice(index, 1);\n        }\n\n        // Emmit changes (object has been deleted)\n        this._onObjectsChangeEmitter.emit(null);\n\n        return this;\n    }\n\n    /**\n     * Get field choice\n     * @param field\n     * @param key (key of field choice)\n     * @returns {*|null}\n     */\n    public getFieldChoice(field: string, key = null)\n    {\n        // Return a specific field choice by key\n        if (key in this._provider.fields.choices[field]['value']) {\n            return this._provider.fields.choices[field]['value'][key];\n        }\n        return null\n    }\n\n    /**\n     * Get field choices attribute\n     * @param field\n     * @param attribute\n     * @returns {any}\n     */\n    public getFieldChoicesAttr(field: string, attribute: string)\n    {\n        // Return a specific attribute of field choices\n        if (this._provider.fields.choices[field] && (attribute in this._provider.fields.choices[field])) {\n            return this._provider.fields.choices[field][attribute];\n        }\n        return null\n    }\n\n    /**\n     * Get field choices\n     * @param field\n     * @returns {*|null}\n     */\n    public getFieldChoices(field: string)\n    {\n        return this._provider.fields.choices[field]['value'] || null;\n    }\n\n    /**\n     * Set fields choices.\n     * @param fieldsChoices\n     * @returns {DataService}\n     */\n    protected setFieldsChoices(fieldsChoices): DataService\n    {\n        // Merge only defined fields (generally foreign key object with sef reference)\n        this._provider['fields']['choices'] = this._helperService.mergeObjects(\n            this._provider['fields']['choices'],\n            fieldsChoices || {}\n        );\n\n        return this;\n    }\n\n    /**\n     * Merge provider attribute\n     * @param attribute\n     * @param value\n     * @returns {DataService}\n     */\n    public mergeProviderAttr(attribute: string, value: any): DataService\n    {\n        if (attribute in this._provider) {\n            this._provider[attribute] =\n                this._helperService.mergeObjects(this._provider[attribute], value);\n        }\n        return this;\n    }\n\n    /**\n     * Set provider attribute\n     * @param attribute\n     * @param value\n     * @returns {DataService}\n     */\n    public setProviderAttr(attribute: string, value: any): DataService\n    {\n        if (attribute in this._provider) {\n            this._provider[attribute] = value;\n        }\n        return this;\n    }\n\n    /**\n     * Get provider attribute\n     * @param attribute\n     * @returns {any|null}\n     */\n    public getProviderAttr(attribute: string): any\n    {\n        return (this._provider[attribute] || null);\n    }\n\n    /**\n     * Get \"localData\" attribute\n     * @param attribute\n     * @returns any\n     */\n    public getLocalDataAttr(attribute: string = null): any\n    {\n        return (this._provider['localData']['data'][attribute] || null);\n    }\n\n    /**\n     * Get provider extra data attribute\n     * @param attribute\n     * @returns {any|null}\n     */\n    public getProviderExtraDataAttr(attribute: string): any\n    {\n        return (\n            (this._provider['extraData'] && this._provider['extraData'][attribute])\n                ? this._provider['extraData'][attribute]\n                : null\n        );\n    }\n\n    /**\n     * Get candidate search\n     * @returns any\n     */\n    public getCandidateSearch(): any\n    {\n        return (this._candidateSearch || null);\n    }\n\n    /**\n     * Get candidate search attribute\n     * @param attribute\n     * @returns any\n     */\n    public getCandidateSearchAttr(attribute: string): any\n    {\n        return this._candidateSearch[attribute] || null;\n    }\n\n    /**\n     * Reset extra fields\n     * @returns {DataService}\n     */\n    protected resetExtraFields(): DataService\n    {\n        if (this.getProviderExtraDataAttr('fields')) {\n            for (let field in this.getProviderExtraDataAttr('fields')) {\n                this._provider.extraData.fields[field] = null;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Normalize objects to show in template\n     * Detect fields that needs to be rendered to view/template\n     * @param objects\n     * @param fields\n     * @param fieldsMetadata\n     * @param fieldsChoices\n     * @returns any\n     */\n    protected normalizeObjectsToTemplate(objects: any = null, fields: any[] = null, fieldsMetadata = null, fieldsChoices = null): any\n    {\n        objects = (objects || this._provider.objects);\n        fields = (fields || this._provider.fields['view']);\n        fieldsMetadata = (fieldsMetadata || this._provider.fields['metadata'] || {});\n        fieldsChoices = (fieldsChoices || this._provider.fields.choices || null);\n\n        if(objects && fields) {\n            for (let field of fields) {\n                let fieldMetadata = fieldsMetadata[field];\n                if (fieldMetadata['skipNormalizer']) { continue; }\n\n                switch (fieldMetadata['type']) {\n                    case 'img':\n                    case 'avatar':\n                    case 'boolean':\n                    case 'code':\n                    case 'percentage':\n                    case 'monetary':\n                    case 'icon':\n                    case 'link':\n                    case 'status':\n                        for (let obj of objects) {\n                            if (typeof obj[field] != 'undefined') { // Can be undefined, if the search doest have the field selected\n                                // Keep a copy of original value (usually boolean and monetary field to use in controls)\n                                if (fieldMetadata['keepOriginalNormalizer']) {\n                                    obj['__'+field] = obj[field];\n                                }\n\n                                obj[field] = this.renderField(field, obj, fieldsMetadata);\n                            }\n                        }\n                        break;\n                }\n\n                // For \"enum\" type (key is the label, pattern of Symfony ChoiceType)\n                if (fieldsChoices && fieldsChoices[field] && fieldsChoices[field]['value']\n                ) {\n                    let enumChoices = fieldsChoices[field]['value'];\n                    for (let obj of objects) {\n                        for (let enumChoice of enumChoices) {\n                            if (enumChoice['id'] == obj[field]) {\n                                obj[field] = enumChoice['label'];\n                            }\n                        }\n                    }\n                }\n            }\n\n            // @TODO: Analise better how lazy loader should be handled\n            if (this._hasAssetsLazyLoader) {\n                this._hasAssetsLazyLoader = false;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Set Has Assets Lazy Loader\n     * @TODO: Not used for now, it's here to analise better in future how lazy loader should be handled\n     * @param hasAssetsLazyLoader\n     */\n    /*public setHasAssetsLazyLoader (hasAssetsLazyLoader: boolean)\n    {\n        this._hasAssetsLazyLoader = hasAssetsLazyLoader;\n    }*/\n    /**\n     * Run Assets Lazy Loader\n     * @TODO: Not used for now, it's here to analise better in future how lazy loader should be handled\n     */\n    /*public runAssetsLazyLoader()\n    {\n        // Only can be used in the first load (check out the comment above)\n        if (this._hasAssetsLazyLoader) {\n            this._hasAssetsLazyLoader = false;\n            this._assetsLazyLoaderManagerService.load();\n            console.log(\"Lazy load called in dataservice\");\n        }\n    }*/\n\n    /**\n     * Render field\n     * @param field\n     * @param object\n     * @param fieldsMetadata\n     * @returns {string}\n     */\n    protected renderField(field: string, object: any, fieldsMetadata = null): any\n    {\n        // Get field metadata\n        fieldsMetadata = (fieldsMetadata || this._provider.fields['metadata'] || {});\n        let fieldMetadata = (fieldsMetadata[field] || null),\n            value = object[field];\n\n        // Render field to the view/template\n        if(fieldMetadata) {\n            switch (fieldMetadata['type']) {\n                case 'boolean':\n                    if (this._helperService.castToBoolean(value)) {\n                        return ('<i class=\"fa fa-check\"></i>');\n                    } else {\n                        return ('<i class=\"fa fa-ban\"></i>');\n                    }\n                case 'code':\n                    if (object['storeObj']\n                        && this._helperService.getAppVar('stores')\n                        && this._helperService.getAppVar('stores')[object['storeObj']]\n                    ) {\n                        return this._sanitizer.bypassSecurityTrustHtml( // Used to allow the style attr\n                            '<span class=\"store\" style=\"background-color: '\n                            + this._helperService.getAppVar('stores')[object['storeObj']]['color']\n                            + '\">' + value + '</span>'\n                        );\n                    }\n                    return (value);\n                case 'percentage':\n                    return (value + '%');\n                case 'monetary':\n                    return (value + '€');\n                case 'icon':\n                    let iconText = (fieldMetadata['fieldInView'] && object[fieldMetadata['fieldInView']]\n                            ? ' <span>'+object[fieldMetadata['fieldInView']]+'</span>'\n                            : ''\n                    );\n\n                    return ('<i class=\"fa ' + value + '\"></i>' + iconText);\n                case 'link':\n                    return ('<a href=\"' + value + '\" target=\"_blank\" class=\"text-base\">' + value + '</a>');\n                case 'img':\n                case 'avatar':\n                    let extraClass = ((fieldMetadata['type'] == 'avatar') ? 'img-circle' : 'thumbnail'),\n                        imageLabel = (fieldMetadata['fieldInView'] && object[fieldMetadata['fieldInView']]\n                                ? '<div><small>'+object[fieldMetadata['fieldInView']]+'</small></div>'\n                                : ''\n                        );\n\n                    // No image is provided\n                    if (!value) {\n                        return (\n                            '<img alt=\"' + fieldMetadata['label'] + '\" class=\"' + extraClass\n                            + '\" src=\"/assets/img/dummy-48x48.png\" width=\"48\" height=\"48\">' + imageLabel\n                        );\n                    }\n\n                    // @TODO NOTE: Image lazy load is disabled, needs to be checked later\n                    // Regular load\n                    //if (!this._hasAssetsLazyLoader) {\n                        return (\n                            '<img alt=\"' + fieldMetadata['label'] + '\" class=\"' + extraClass\n                            + '\" src=\"' + (this._helperService.getUploadWebPath(value) || value)\n                            + '\" width=\"48\" height=\"48\">' + imageLabel\n                        );\n                    //}\n\n                    // Use lazy loader\n                    /*return this._sanitizer.bypassSecurityTrustHtml(\n                        '<img alt=\"' + fieldMetadata['label'] + '\" class=\"js_lazy ' + extraClass\n                        + '\" src=\"/assets/img/dummy-48x48.png\" data-src=\"'\n                        + (this._helperService.getUploadWebPath(value) || value)\n                        + '\" width=\"48\" height=\"48\">' + imageLabel\n                    );*/\n\n                case 'status':\n                    let statusMap = {'NO': 'danger', 'PARTIAL': 'warning', 'YES': 'primary'};\n                    return ('<span class=\"status -' + (statusMap[value] || 'danger') + '\"></span>');\n            }\n        }\n\n        return value;\n    }\n\n    /**\n     * New object (call this function to create a new object)\n     * @param index (to create object based on another)\n     * @param object (to create object based on a pre existent object)\n     * @returns {Promise}\n     */\n    public newObject(index: any = null, object: any = null): Promise<any> {\n        let that = this;\n\n        return new Promise(function(resolve, reject) {\n            if (object) {\n                // Object has pre existent data (for example can be from backend session storage)\n                that.setNewObject(object);\n                return resolve(true);\n            }\n\n            let newObj = {};\n            // Create by copy\n            if (index != null) {\n                let objectsProvider = (that._objectsProvider || that._provider.objects);\n\n                return that._postService.post(\n                    that._provider.route['get']['url'] + '/' + objectsProvider[index]['id'],\n                    that.getRequestData()\n                ).then(\n                    data => {\n                        for (let field of that._provider.fields['form']) {\n                            newObj[field] = ((that._provider.fields['metadata'][field]['acl'] === 'read')\n                                    ? (that._provider.fields['metadata'][field]['default'] || null)\n                                    : (data.object[field] || null)\n                            );\n                            // \"fieldInView\" (for auto-complete, html-select, etc.)\n                            if (that._provider.fields['metadata'][field]['fieldInView'] && newObj[field]) {\n                                let fieldInView = that._provider.fields['metadata'][field]['fieldInView'];\n                                newObj[fieldInView] = data.object[fieldInView];\n                            }\n                        }\n                        that.setNewObject(newObj);\n                        return resolve(true);\n                    },\n                    errors => { console.log(errors); return reject(false); }\n                );\n            } else {\n                // Create by server action\n                if (that._provider.route['new']) {\n                    return that._postService.post(\n                        that._provider.route['new']['url'],\n                        that.getRequestData()\n                    ).then(\n                        data => {\n                            // Local data (do not override, merge data)\n                            if (data['localData']) {\n                                that.setLocalData(data['localData']);\n                            }\n\n                            // Object\n                            that.setNewObject(data.object);\n\n                            return resolve(true);\n                        },\n                        errors => { console.log(errors); return reject(false); }\n                    );\n                }\n                // Create empty object\n                else {\n                    for (let field of that._provider.fields['form']) {\n                        newObj[field] = (that._provider.fields['metadata'][field]['default'] || null);\n                    }\n                    that.setNewObject(newObj);\n                    return resolve(true);\n                }\n            }\n        });\n    }\n\n    /**\n     * Set new object\n     * @param object\n     * @returns {DataService}\n     */\n    protected setNewObject(object: any) {\n        // Set object\n        this._objectIndex = null;\n        this.setLocalObject(object);\n\n        this.resetExtraFields();\n\n        return this;\n    }\n\n    /**\n     * Save object.\n     * @param data\n     * @param id\n     * @param route (specific route to save)\n     * @returns {Promise}\n     */\n    public save(data: any, id = null, route = null): Promise<any>\n    {\n        let that = this;\n\n        return new Promise(function(resolve, reject) {\n            // Set route (if id is provided, use 'edit', else try 'add')\n            if (!route) {\n                let routeName = (id ? 'edit' : (that._provider.route['add'] ? 'add' : 'edit'));\n                route = (that._provider.route[routeName] ? that._provider.route[routeName]['url'] : null);\n                if (!route) {\n                    console.log('Error: No route was defined!');\n                    return reject({});\n                }\n            }\n            if (id) { route += ('/' + id); }\n\n            that._postService.post(route, that.getRequestData(data)).then(\n                data => {\n                    that.handleResponse(data);\n                    return resolve(data['object'] || null);\n                },\n                errors => {\n                    if (errors['data']) {\n                        that.handleResponse(errors['data']);\n                    }\n\n                    return reject(errors['errors'] || {});\n                }\n            );\n        });\n    }\n\n    /**\n     * Search objects\n     * @returns {DataService}\n     */\n    public search(): DataService\n    {\n        // Only search if parameters have changed\n        if (this._helperService.isEqualObject(this._provider['search'], this._candidateSearch)) {\n            return this;\n        }\n\n        // Update search\n        this._provider['search'] = this._helperService.cloneObject(this._candidateSearch, true);\n        // Refresh objects\n        return this.refresh();\n    }\n\n    /**\n     * Refresh list of objects\n     * @returns {DataService}\n     */\n    public refresh(): DataService\n    {\n        let that = this;\n\n        // Reset pagination for new search\n        this.resetPagination();\n\n        this._postService.post(\n            this._provider.route['get']['url'],\n            this.getRequestData(null, false)\n        ).then(\n            data => { that.handleResponse(data); },\n            errors => { console.log(errors); }\n        );\n\n        return this;\n    }\n\n    /**\n     * Get more objects (pagination)\n     * @returns {DataService}\n     */\n    public getMoreObjects(): DataService\n    {\n        let that = this;\n\n        this._postService.post(\n            this._provider.route['get']['url'],\n            this.getRequestData()\n        ).then(\n            data => {\n                // Update objects\n                data.objects = (data.objects || []);\n                that.handleResponse(data, null, true);\n            },\n            errors => { console.log(errors); }\n        );\n\n        return this;\n    }\n\n    /**\n     * Get choices of entity based on search configuration (for select, auto-complete, etc.)\n     * @param route\n     * @returns {DataService}\n     */\n    public choices(route: string = null): DataService\n    {\n        let that = this,\n            noReset = true;\n\n        // Only search if parameters have changed (only criteria is changed)\n        if (!this._helperService.isEqualObject(this._provider['search']['criteria'], this._candidateSearch['criteria'])) {\n            // Update search\n            this._provider['search']['criteria'] = this._candidateSearch['criteria'].slice(0);\n\n            // Reset pagination for new search\n            this.resetPagination();\n            // To reset objects\n            noReset = false;\n        }\n\n        // No field is necessary, is returned the choices pattern (minimizes data sent)\n        this._provider['search']['fields'] = [];\n\n        route = (route || this._provider.route['choices']['url']);\n        this._postService.post(\n            route,\n            this.getRequestData(null, noReset)\n        ).then(\n            data => {\n                data.objects = (data.objects || []);\n                that.handleResponse(data, null, noReset);\n            },\n            errors => { console.log(errors); }\n        );\n\n        return this;\n    }\n\n    /**\n     * Order object (change priority value).\n     * @param index\n     * @param type\n     * @returns any\n     */\n    public order(index: any, type: string): any\n    {\n        let that = this,\n            objectsProvider = (this._objectsProvider || this._provider.objects);\n\n        if (OrderTypes[type] // Validate order type\n            // If priority is already in the max value (0), then 'up' doesn't make sense.\n            && ((objectsProvider[index]['priority'] > 0) || (OrderTypes[type] == 'down'))\n        ) {\n            this._postService.post(\n                (this._provider.route['order']['url'] + '/' + objectsProvider[index]['id'] + '/' + OrderTypes[type]),\n                that.getRequestData()\n            ).then(\n                data => {\n                    that.handleResponse(data, index);\n\n                    // If objects are not returned, then order objects by \"search\" \"orderBy\" provider\n                    if (data.object) {\n                        if (!data.objects) {\n                            // Get fields from search\n                            let orderFields = that._provider.search.orderBy.map(function($item) {\n                                return $item['field'];\n                            });\n                            that._helperService.orderObjects(that._provider.objects, orderFields);\n                        }\n                    }\n                },\n                errors => {\n                    console.log(errors);\n                }\n            );\n        }\n\n        return this;\n    }\n\n    /**\n     * Cancel object.\n     * @param index\n     * @returns {Promise}\n     */\n    public cancel(index: any): Promise<any>\n    {\n        let that = this,\n            objectsProvider = (this._objectsProvider || this._provider.objects);\n\n        return new Promise(function(resolve, reject) {\n            that._postService.post(\n                that._provider.route['cancel']['url'] + '/' + objectsProvider[index]['id'],\n                that.getRequestData()\n            ).then(\n                data => {\n                    that.handleResponse(data, index);\n                    return resolve(true);\n                },\n                errors => { return reject(false); }\n            );\n        });\n    }\n\n    /**\n     * Delete object.\n     * @param index\n     * @returns {Promise}\n     */\n    public delete(index: any): Promise<any>\n    {\n        let that = this,\n            objectsProvider = (this._objectsProvider || this._provider.objects);\n\n        return new Promise(function(resolve, reject) {\n            that._postService.post(\n                that._provider.route['delete']['url'] + '/' + objectsProvider[index]['id'],\n                that.getRequestData()\n            ).then(\n                data => {\n                    // Refresh objects array removing the removed object\n                    if (!data.objects) {\n                        that.pullFromObjects(index);\n                    }\n\n                    // Reset object index\n                    that._objectIndex = null;\n\n                    that.handleResponse(data);\n\n                    return resolve(true);\n                },\n                errors => { return reject(false); }\n            );\n        });\n    }\n\n    /**\n     * Delete objects from array by index.\n     * @param indexes\n     * @returns {DataService}\n     */\n    public deleteArray(indexes: any): DataService\n    {\n        let that = this;\n        let objects = this._provider.objects;\n        let idArr = [];\n\n        if (objects && indexes && (indexes.length > 0)) {\n            for (let index of indexes) {\n                index = index.value;\n                if (objects[index]) {\n                    idArr.push(objects[index]['id']);\n                }\n            }\n        }\n\n        this._postService.post(\n            this._provider.route['delete']['url'],\n            this.getRequestData({id: idArr})\n        ).then(\n            data => {\n                that.handleResponse(data);\n\n                // Refresh objects array\n                // Correction for index (each time you remove an index, all indices needs to be corrected)\n                let indexCorrection = 0;\n                for (let index of indexes) {\n                    index = index.value;\n                    if (objects[index]) {\n                        that.pullFromObjects(index - indexCorrection);\n                        indexCorrection++;\n                    }\n                }\n            },\n            errors => { console.log(errors); }\n        );\n\n        return this;\n    }\n\n    /**\n     * Get pdf\n     * @param index\n     * @returns any\n     */\n    public pdf(index: any)\n    {\n        let objectsProvider = (this._objectsProvider || this._provider.objects),\n            object = (objectsProvider[index] || null);\n\n        if (object) {\n            // Update \"isAccessed\" value of object,\n            // in this case does not matter if object is really updated with success in database\n            if (object['__isAccessed'] !== undefined) {\n                object['__isAccessed'] = true;\n            }\n\n            return this.redirect('pdf', index);\n        }\n    }\n\n    /**\n     * Detail object.\n     * @param index\n     */\n    public detail(index: any = null): void\n    {\n        return this.redirect('detail', index);\n    }\n\n    /**\n     * Redirect page.\n     * @param route\n     * @param index\n     */\n    public redirect(route: string, index: any = null): void\n    {\n        let objectId = null,\n            idField = (this._provider.route[route]['idField'] || 'id');\n\n        // Get index from last selected object if not defined\n        index = ((index == null) ? this._objectIndex : index);\n        if (index !== null) {\n            let objectsProvider = (this._objectsProvider || this._provider.objects);\n            objectId = objectsProvider[index][idField];\n        } else if (this._object) {\n            // Id from provider object (defined on constructor)\n            objectId = this._object[idField]\n        }\n\n        location.href = (this._provider.route[route]['url'] + (objectId ? ('/' + objectId) : ''));\n        return;\n    }\n\n    /**\n     * Run/Execute action. Execute action directly.\n     * @param route\n     * @param data\n     * @param updateData\n     * @returns {Promise}\n     */\n    public runAction(route: string, data: any = null, updateData: boolean = false): Promise<any> {\n        let that = this;\n\n        return new Promise(function(resolve, reject) {\n            return that._postService.post(route, that.getRequestData(data, false, false)).then(\n                data => {\n                    if (updateData) {\n                        that.handleResponse(data);\n                    }\n\n                    return resolve(data);\n                },\n                errors => {\n                    if (updateData && errors['data']) {\n                        that.handleResponse(errors['data']);\n                    }\n                    return reject(errors['errors'] || {});\n                }\n            );\n        });\n    }\n\n    /**\n     * Submit indexes id\n     * @param route\n     * @param indexes\n     * @param allowEmptySubmit (allow submit when data is empty,\n     * some cases it is necessary to inform that the user does not select any choice)\n     * @returns {Promise}\n     */\n    public submitIndexesId(route: string, indexes: any, allowEmptySubmit: boolean = false): Promise<any>\n    {\n        let that = this;\n        let objects = this._provider.objects;\n        let idArr = [];\n\n        return new Promise(function(resolve, reject) {\n            if (objects && indexes && (indexes.length > 0)) {\n                for (let index of indexes) {\n                    if (objects[index.value]) {\n                        idArr.push(objects[index.value]['id']);\n                    }\n                }\n            }\n\n            if  ((idArr.length > 0) || allowEmptySubmit) {\n                // Submit to provided route\n                return that.runAction(route, {id: idArr}).then(\n                    data => { return resolve(data); },\n                    errors => { return reject(errors); }\n                );\n            } else {\n                // No indexes to submit\n                return resolve({});\n            }\n        });\n    }\n\n    /**\n     * Get data to request\n     * @param data\n     * @param updatePagination (determines if pagination should be updated before return request data)\n     * @param hasSearch (determines if search is sent)\n     * @returns {any}\n     */\n    public getRequestData(data: any = null, updatePagination: boolean = true, hasSearch: boolean = true): any\n    {\n        // Update pagination\n        if (updatePagination) {\n            this.updatePagination();\n        }\n\n        if (!data || (typeof data == 'object')) {\n            return {\n                csrfToken: this._helperService.getAppVar('csrfToken'),\n                search: (hasSearch ? this._provider['search'] : null),\n                data: data\n            }\n        }\n\n        // If data is provided it's assume that is a serialized form\n        return (data + '&search=' + JSON.stringify(this._provider['search']));\n    }\n\n    /**\n     * Reset pagination offset\n     * @returns {DataService}\n     */\n    protected resetPagination(): DataService\n    {\n        this._provider.search.offset = 0;\n        return this;\n    }\n\n    /**\n     * Reset pagination offset\n     * @returns {DataService}\n     */\n    protected updatePagination(): DataService\n    {\n        this._provider.search.offset = (this._provider.objects.length - this._newObjectsIds.length);\n        return this;\n    }\n\n    /**\n     * Set local data\n     * @param localData\n     */\n    public setLocalData(localData: any)\n    {\n        // Local data (do not override, merge data)\n        if (localData) {\n            if (localData['data']) {\n                this._provider.localData['data'] = this._helperService.mergeObjects(\n                    this._provider.localData['data'],\n                    localData['data']\n                );\n            }\n            if (localData['template']) {\n                this._provider.localData['template'] = this._helperService.mergeObjects(\n                    this._provider.localData['template'],\n                    localData['template']\n                );\n            }\n        }\n    }\n\n    /**\n     * Handle with regular server responses\n     * @param response\n     * @param objectIndex (object index to update object)\n     * @param hasMergeObjects (merge array of objects, otherwise will be override)\n     * @returns {DataService}\n     */\n    protected handleResponse(response: any, objectIndex: number = null, hasMergeObjects: boolean = false)\n    {\n        // Set default object index (this can be done in method signature)\n        if (objectIndex === null) { objectIndex = this._objectIndex; }\n\n        // Refresh all objects\n        if (response['objects']) {\n            this.setObjects(response['objects'], hasMergeObjects);\n        }\n\n        // Refresh object\n        if (response['object']) {\n            this.setObject(response['object'], objectIndex);\n        }\n\n        // Local data (do not override, merge data)\n        if (response['localData']) {\n            this.setLocalData(response['localData']);\n        }\n\n        // Refresh fields choices\n        if (response['fields'] && response['fields']['choices']) {\n            this.setFieldsChoices(response['fields']['choices']);\n        }\n\n        // Update search pagination\n        if (response['search'] && (typeof response['search']['hasMore'] != 'undefined')) {\n            // Equals search in provider and candidate search to avoid return false\n            // in comparisons doing unnecessary searches.\n            this._candidateSearch.hasMore = this._provider.search.hasMore\n                = this._helperService.castToBoolean(response['search']['hasMore']);\n            this._candidateSearch.offset = this._provider.search.offset\n                = (response['search']['offset'] || 0);\n        }\n\n        return this;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/data-service/data.service.ts","import {Injectable, Inject, EventEmitter} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {PostService} from '../post.service';\nimport {DataService} from './data.service';\nimport {TreeViewDataServiceProvider, Search} from './tree-view-data-service-provider';\n\n// Re-exports\nexport {TreeViewDataServiceProvider};\n\n\n/**\n * This class handles with data in tree-view context.\n * Tree-view are a different objects array structure (hierarchical) than a regular DataService.\n */\n@Injectable()\nexport class TreeViewDataService extends DataService\n{\n    // Index in _provider.objects that contents the partial _objectsProvider of _provider.objects\n    // where the object is housed\n    protected _objectsProviderIndex: number = null;\n\n    constructor(\n        postService: PostService,\n        @Inject('HelperService') helperService: any,\n        @Inject('DataServiceProvider') provider: TreeViewDataServiceProvider,\n        sanitizer: DomSanitizer\n    ) {\n        super(\n            postService,\n            helperService,\n            provider,\n            sanitizer\n        );\n    }\n\n    /**\n     * Get object index\n     * @returns any\n     */\n    public getObjectIndex(): any\n    {\n        return {'objIndex': this._objectIndex, 'parentNodeIndex': this._objectsProviderIndex};\n    }\n\n    /**\n     * Count objects (used in pagination)\n     * @returns {number}\n     */\n    public countObjects(): number\n    {\n        let objects = (this._provider.objects || {}),\n            includeRootIndex = false,\n            total = 0;\n\n        // Check if root nodes (at index 0) has id, if no is id provided, then this objects are not able to check\n        if (objects[0] && objects[0][0] && objects[0][0]['id']) {\n            includeRootIndex = true;\n        }\n\n        for (let index in objects) {\n            if ((parseInt(index, 10) != 0) || includeRootIndex) {\n                total += this._helperService.varCount(objects[index] || []);\n            }\n        }\n\n        return total;\n    }\n\n    /**\n     * Select object\n     * @param index\n     * @returns {Promise}\n     */\n    public selectObject(index: any): Promise<any>\n    {\n        let that = this,\n            objIndex = (index ? index['objIndex'] : null),\n            parentNodeIndex = (index ? index['parentNodeIndex'] : null);\n\n        return new Promise(function(resolve, reject) {\n            // Set only if object is different\n            if((objIndex != that._objectIndex) || (parentNodeIndex != that._objectsProviderIndex)) {\n                let objectsProvider = that._provider.objects[parentNodeIndex];\n\n                that._postService.post(\n                    that._provider.route['get']['url'] + '/' + objectsProvider[objIndex]['id'],\n                    that.getRequestData()\n                ).then(\n                    data => {\n                        // The index of original object that was selected\n                        that._objectIndex = objIndex;\n                        that._objectsProviderIndex = parentNodeIndex;\n                        that._objectsProvider = objectsProvider; // Necessary to set normalized object correctly\n\n                        that.setLocalObject(data.object);\n\n                        // Now object has all of fields with the values, is not limited to the search selected field,\n                        // so we need normalize the object, because now it can has new values.\n                        that.setNormalizedObject();\n\n                        return resolve(true);\n                    },\n                    errors => { console.log(errors); reject(false); });\n            } else {\n                return resolve(true);\n            }\n        });\n    }\n\n    /**\n     * Set object (when the object is changed out of the objects array from _provider,\n     * can be an external order)\n     * @param object\n     * @param index (can be only an index from DataService, or and object from out of service)\n     * @returns any\n     */\n    public setObject(object: any, index: any = null): any\n    {\n        if (object) {\n            let objIndex = null;\n\n            // Objects stored in session does not be considered really objects.\n            if (!object['_isSessionStorage']) {\n                objIndex = ((index && index['objIndex'])\n                        ? index['objIndex'] // From out of service\n                        : index // From DataService or not defined\n                );\n\n                let oldParentNodeIndex = ((index && index['parentNodeIndex'])\n                        ? index['parentNodeIndex'] // From out of service\n                        : ((index != null)\n                            ? this._objectsProviderIndex // From DataService\n                            : null // Not defined\n                    )\n                );\n                let newParentNodeIndex = (object[this._provider['localParentField']] || 0);\n\n                // Create a new array entry for parent node, if not exist yet\n                if (!(newParentNodeIndex in this._provider.objects)) {\n                    this._provider.objects[newParentNodeIndex] = [];\n                }\n\n                // Remove from old parent node\n                if ((oldParentNodeIndex != null) && (oldParentNodeIndex != newParentNodeIndex)) {\n                    this._objectsProvider = this._provider.objects[oldParentNodeIndex];\n                    this.pullFromObjects(objIndex);\n                    this._provider.objects[newParentNodeIndex].unshift(object); // Add new entry in new parent node\n                    objIndex = 0; // Index of new entry in parent (to be marked as edited)\n                }\n\n                // Update objects provider\n                this._objectsProviderIndex = newParentNodeIndex;\n                this._objectsProvider = this._provider.objects[newParentNodeIndex];\n            }\n\n            super.setObject(object, objIndex);\n        }\n\n        return this;\n    }\n\n    /**\n     * Normalize objects to show in template\n     * Detect fields that needs to be rendered to view/template\n     * @param objects\n     * @param fields\n     * @returns any\n     */\n    protected normalizeObjectsToTemplate(objects: any = null, fields: any[] = null): any\n    {\n        objects = (objects || this._provider.objects);\n\n        // Object with nodes\n        if (typeof objects == 'object') {\n            for (let objNodes of objects) {\n                super.normalizeObjectsToTemplate(objNodes, fields);\n            }\n        } else { // Sample array of objects\n            super.normalizeObjectsToTemplate(objects, fields);\n        }\n\n        return this;\n    }\n\n    /**\n     * New object (call this function to create a new object)\n     * @param index\n     * @returns {Promise}\n     */\n    public newObject(index: any = null): Promise<any> {\n        let objIndex = (index ? index['objIndex'] : null),\n            parentNodeIndex = (index ? index['parentNodeIndex'] : null);\n\n        this._objectsProvider = ((parentNodeIndex != null) ? this._provider.objects[parentNodeIndex] : null);\n\n        return super.newObject(objIndex);\n    }\n\n    /**\n     * Delete object.\n     * @param index\n     * @returns {Promise}\n     */\n    public delete(index: any): Promise<any>\n    {\n        let objIndex = (index ? index['objIndex'] : null),\n            parentNodeIndex = (index ? index['parentNodeIndex'] : null);\n\n        this._objectsProvider = ((parentNodeIndex != null) ? this._provider.objects[parentNodeIndex] : null);\n\n        return super.delete(objIndex);\n    }\n\n    /**\n     * Detail object.\n     * @param index\n     */\n    public detail(index: any = null): void\n    {\n        let objIndex = (index ? index['objIndex'] : this._objectIndex),\n            parentNodeIndex = (index ? index['parentNodeIndex'] : this._objectsProviderIndex);\n\n        this._objectsProvider = ((parentNodeIndex != null) ? this._provider.objects[parentNodeIndex] : null);\n\n        super.detail(objIndex);\n\n        return;\n    }\n\n    /**\n     * Set objects\n     * @param objects\n     * @param isMerge (if true merge objects, otherwise replace them)\n     * @returns any\n     */\n    public setObjects(objects: any, isMerge: boolean = false): any\n    {\n        objects = (objects || {});\n\n        this.normalizeObjectsToTemplate(objects);\n\n        this.resetObjects();\n\n        for (let objNodesIndex in objects) {\n            this._objectsProvider = [];\n            this.pushToObjects(objects[objNodesIndex]);\n            this._provider.objects[objNodesIndex] = this._objectsProvider;\n        }\n\n        // Emmit changes\n        this._onObjectsRefreshEmitter.emit(objects);\n\n        return this;\n    }\n\n    /**\n     * Reset objects\n     * @returns {DataService}\n     */\n    protected resetObjects() {\n        super.resetObjects();\n        this._provider.objects = {};\n        return this;\n    }\n\n    /**\n     * Submit indexes id\n     * @param route\n     * @param indexes (index in the format \"parentIndex::childIndex\")\n     * @param allowEmptySubmit (allow submit when data is empty,\n     * some cases it is necessary to inform that the user does not select any choice)\n     * @returns {Promise}\n     */\n    public submitIndexesId(route: string, indexes: any, allowEmptySubmit: boolean = false): Promise<any>\n    {\n        let that = this;\n        let objects = this._provider.objects;\n        let idArr = [];\n\n        return new Promise(function(resolve, reject) {\n            if (objects && indexes && (indexes.length > 0)) {\n                for (let index of indexes) {\n                    let indexArr = index.value.split(\"::\");\n                    if (objects[indexArr[0]] && objects[indexArr[0]][indexArr[1]]) {\n                        idArr.push(objects[indexArr[0]][indexArr[1]]['id']);\n                    }\n                }\n            }\n\n            if  ((idArr.length > 0) || allowEmptySubmit) {\n                // Submit to provided route\n                return that.runAction(route, {id: idArr}).then(\n                    data => { return resolve(data); },\n                    errors => { return reject(errors); }\n                );\n            } else {\n                // No indexes to submit\n                return resolve({});\n            }\n        });\n    }\n\n    /**\n     * Delete objects from array by index.\n     * @param indexes (index in the format \"parentIndex::childIndex\")\n     * @returns {DataService}\n     */\n    public deleteArray(indexes: any): DataService\n    {\n        let that = this;\n        let objects = this._provider.objects;\n        let idArr = [];\n\n        if (objects && indexes && (indexes.length > 0)) {\n            for (let index of indexes) {\n                let indexArr = index.value.split(\"::\");\n                if (objects[indexArr[0]] && objects[indexArr[0]][indexArr[1]]) {\n                    idArr.push(objects[indexArr[0]][indexArr[1]]['id']);\n                }\n            }\n        }\n\n        this._postService.post(\n            this._provider.route['delete']['url'],\n            this.getRequestData({id: idArr})\n        ).then(\n            data => {\n                that.handleResponse(data);\n\n                // Refresh objects array\n                // Correction for index (each time you remove an index, all indices needs to be corrected)\n                let indexCorrection = {};\n                for (let index of indexes) {\n                    let indexArr = index.value.split(\"::\");\n                    if (objects[indexArr[0]] && objects[indexArr[0]][indexArr[1]]) {\n                        that._objectsProvider = that._provider.objects[indexArr[0]];\n                        indexCorrection[indexArr[0]] = (indexCorrection[indexArr[0]] || 0);\n                        that.pullFromObjects(indexArr[1] - indexCorrection[indexArr[0]]);\n                        indexCorrection[indexArr[0]]++;\n                    }\n                }\n            },\n            errors => { console.log(errors); }\n        );\n\n        return this;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/data-service/tree-view-data.service.ts","import {Injectable, Compiler, ReflectiveInjector, ViewContainerRef, Injector} from '@angular/core';\nimport {TasksLoaderManagerService} from '../tasks-loader-manager/ts/tasks-loader-manager.service';\n\n\n// Service\n@Injectable()\nexport class DynamicComponentLoaderService {\n    constructor(\n        protected _compiler: Compiler,\n        protected _tasksLoaderManagerService: TasksLoaderManagerService\n    ) {}\n\n    /**\n     * Load component into ViewContainerRef\n     * @param module\n     * @param component (component name)\n     * @param viewContainerRef\n     * @param injector (result of:\n     *     injector = ReflectiveInjector.fromResolvedProviders(\n     *         ReflectiveInjector.resolve([\n     *             MyService,\n     *             {provide: 'MyProvider', useValue: null}\n     *         ]),\n     *         this._injector\n     *     );\n     * )\n     * @returns {Promise<T>}\n     */\n    public load(module: any, component: string, viewContainerRef: ViewContainerRef, injector: Injector = null): Promise<any>\n    {\n        this._tasksLoaderManagerService.addTask('DYNAMIC_COMPONENT_LOADING');\n\n        let that = this;\n\n        return new Promise(function(resolve, reject) {\n            that.getComponentFactory(module, component).then(\n                componentFactory => {\n                    let componentRef = viewContainerRef.createComponent(componentFactory, 0, injector, []);\n                    that._tasksLoaderManagerService.delTask('DYNAMIC_COMPONENT_LOADING');\n                    return resolve(componentRef);\n                });\n        });\n    }\n\n    /**\n     * Get component factory\n     * @param module\n     * @param component (component name)\n     * @returns {Promise<T>}\n     */\n    public getComponentFactory(module: any, component: string): Promise<any>\n    {\n        let that = this;\n\n        return new Promise(function(resolve, reject) {\n            that._compiler.compileModuleAndAllComponentsAsync(module).then(\n                moduleFactory => {\n                    let componentFactory = moduleFactory.componentFactories.find(\n                        tmpComponentFactory => tmpComponentFactory.componentType['name'] === component\n                    );\n                    return resolve(componentFactory);\n                });\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/dynamic-component-loader.service.ts","import {Component, Input, Output, EventEmitter} from '@angular/core';\n\n// Component\n@Component({\n    selector: 'js_expander',\n    template: `\n    <a [ngClass]=\"['no-user-select', 'expander', customClass]\"\n       (click)=\"toggleAction($event)\">\n        <i *ngIf=\"hasIcon\" [ngClass]=\"['mr-2 fa', (isExpanded ? 'fa-angle-down' : 'fa-angle-right')]\"></i>\n        <i *ngIf=\"labelIcon\" [ngClass]=\"['mr-2 fa', labelIcon]\"></i><span [innerHTML]=\"label\"></span><span *ngIf=\"labelCount !== undefined\" class=\"badge badge-info ml-2\">{{labelCount}}</span></a>\n    `\n})\nexport class ExpanderComponent\n{\n    @Input() isExpanded: boolean = false;\n    @Input() label: string;\n    @Input() labelCount: number = null;\n    @Input() labelIcon: string = null;\n    @Input() hasIcon: boolean = true;\n    @Input() customClass: string = ''; // customClass instead of class because is a reserved word\n    @Output() onChange = new EventEmitter();\n\n    /**\n     * Toggle expanded\n     * @param $event\n     */\n    protected toggleAction($event): void\n    {\n        $event.preventDefault();\n        this.isExpanded = !this.isExpanded;\n        this.onChange.emit(this.isExpanded);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/expander/expander.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ExpanderComponent} from './expander.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [ExpanderComponent],\n    exports: [ExpanderComponent]\n})\nexport class ExpanderModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/expander/expander.module.ts","var toastr = require('toastr');\nimport {Injectable} from '@angular/core';\n\n// FlashMessageTypes\nexport var FlashMessageTypes = {\n    success: 'success',\n    info: 'info',\n    warning: 'warning',\n    error: 'error'\n};\n\n// Service\n@Injectable()\nexport class FlashMessageService {\n    constructor() {\n        toastr.options = {\n            \"closeButton\": true,\n            \"debug\": false,\n            \"progressBar\": true,\n            \"preventDuplicates\": false,\n            \"positionClass\": \"toast-top-left\", // Right side is not the best place because this is the work area\n            \"onclick\": null,\n            \"showDuration\": \"300\",\n            \"hideDuration\": \"1000\",\n            \"timeOut\": \"5000\",\n            \"extendedTimeOut\": \"1000\",\n            \"showEasing\": \"swing\",\n            \"hideEasing\": \"linear\",\n            \"showMethod\": \"slideDown\",\n            \"hideMethod\": \"fadeOut\"\n        }\n    }\n\n    /**\n     * Message\n     * @param body\n     * @param head\n     * @param type\n     */\n    public message(body: string, head = '', type = FlashMessageTypes.info): void\n    {\n        // Set info as default type if is not a valid entry\n        type = (FlashMessageTypes[type] || FlashMessageTypes.info);\n        toastr[type](body, head);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/flash-message.service.ts","import {DataServiceProvider} from './data-service/data-service-provider';\nimport {TreeViewProvider} from '../tree-view/default/ts/src/tree-view-provider';\nimport {DataBoxProvider} from '../data-box/ts/src/data-box-provider';\nimport {ImageProvider} from '../image/ts/src/image-provider';\nimport {BaseProvider} from './base/base-provider';\nimport {BoxProvider} from './box/box-provider';\nimport {FormProvider} from '../form/ts/form-provider';\nimport {WizardPopupProvider} from '../wizard/ts/src/wizard-popup-provider';\nimport {EntityDetailProvider} from '../entity-detail/ts/src/entity-detail-provider';\nimport {ActionsServiceProvider} from './actions/actions-service-provider';\nimport {EntityDetailPreviewProvider} from \"../entity-detail/ts/src/entity-detail-preview-provider\";\n\n\n/**\n * Helper with common functions\n */\nexport class Helper {\n    // Object to use in angular modules at runtime to define global variables.\n    private static globalVar = {};\n\n    // Controls the generation of a unique incremental number,\n    // to be used as unique identifier by any feature instance ensuring that there is no duplication.\n    private static uniqueIdCounter = 0;\n\n\n    // Get an unique incremental number to be used as unique identifier\n    public static getUniqueId(): number\n    {\n        return (Helper.uniqueIdCounter++);\n    }\n\n    /**\n     * Get decimal configuration\n     * @returns {{unit: {value: number, iterator: number}, total: {value: number, iterator: number}}}\n     */\n    public static getDecimalConf(): any\n    {\n        // Configure number of decimals to use and to round\n        let decimalConf = {unit: {value: 4, iterator: 0}, total: {value: 2, iterator: 0}};\n\n        decimalConf.unit.iterator = Math.pow(10, decimalConf.unit.value);\n        decimalConf.total.iterator = Math.pow(10, decimalConf.total.value);\n\n        return decimalConf;\n    }\n\n    /**\n     * Get object length\n     * @param object\n     * @returns {number}\n     */\n    public static objectLength(object: any): number\n    {\n        return Object.keys(object || {}).length;\n    }\n\n    /**\n     * Get object keys\n     * @param object\n     * @returns {string[]|Array}\n     */\n    public static objectKeys(object: any): any\n    {\n        return Object.keys(object || {}) || [];\n    }\n\n    /**\n     * Convert a list of object to an array\n     * @param objects\n     * @returns {string[]|Array}\n     */\n    public static objectsToArray(objects: any): any\n    {\n        let objectsArray = [];\n        for (let key in (objects || {})) {\n            objectsArray.push({key: key, value: objects[key]});\n        }\n        return objectsArray;\n    }\n\n    /**\n     * Compare if object1 is equal to object2\n     * @param object1\n     * @param object2\n     * @returns {boolean}\n     */\n    public static isEqualObject(object1: any, object2: any): boolean\n    {\n        return (JSON.stringify(object1) === JSON.stringify(object2));\n    }\n\n    /**\n     * Var Count (count only is a reserved word)\n     * @param variable\n     * @returns {number}\n     */\n    public static varCount(variable: any): number\n    {\n        return Object.keys(variable || {}).length;\n    }\n\n    /**\n     * Cast to boolean\n     * @param value\n     * @returns {boolean}\n     */\n    public static castToBoolean(value): boolean\n    {\n        return Helper.inArray(value, ['true', 1, true, '1'])\n    }\n\n    /**\n     * Clone object\n     * @param object\n     * @param recursive\n     * @returns {any}\n     */\n    public static cloneObject(object: any, recursive = false): any\n    {\n        return $.extend(recursive, {}, object);\n    }\n\n    /**\n     * Merge objects into a new object\n     * @param object1\n     * @param object2\n     * @param recursive\n     * @returns {any}\n     */\n    public static mergeObjects(object1: any, object2: any, recursive = false): any\n    {\n        return $.extend(recursive, object1, object2);\n    }\n\n    /**\n     * Check if value exists in array\n     * @param value\n     * @param array\n     */\n    public static inArray(value: any, array: any): boolean\n    {\n        return (($.inArray(value, array) >= 0) ? true : false);\n    }\n\n    /**\n     * Search value in array\n     * @param value\n     * @param array\n     */\n    public static arraySearch(value: any, array: any): number\n    {\n        let index = $.inArray(value, array);\n        return ((index >= 0) ? index : null);\n    }\n\n    /**\n     * Search objectKey value in array of objects\n     * @param value\n     * @param objectKey\n     * @param array\n     */\n    public static arraySearchObj(value: any, objectKey: string, array: any): number\n    {\n        for (let i=0; i < array.length; i++) {\n            if (array[i][objectKey] && (array[i][objectKey] == value)) {\n                return i;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Order objects by key\n     * @param objects\n     * @param keys\n     * @returns {any}\n     */\n    public static orderObjects(objects: any, keys: string[]): any\n    {\n        let prevKey = null;\n\n        if (objects && keys) {\n            for (let key of keys) {\n                objects.sort(function (obj1, obj2) {\n                    if (!prevKey || (obj1[prevKey] == obj2[prevKey])) {\n                        // If key is equal, then sort by id \"DESC\"\n                        let orderKey = ((obj1[key] == obj2[key]) ? 'id' : key);\n                        return ((obj1[orderKey] > obj2[orderKey]) ? 1 : 0);\n                    }\n                    return 0;\n                });\n                prevKey = key;\n            }\n        }\n\n        return objects;\n    }\n\n    /**\n     * Set app var\n     * @param index\n     * @param value\n     * @returns {Helper}\n     */\n    public static setAppVar(index: string, value: any): Helper\n    {\n        return Helper.setVar(_app, index, value);\n    }\n\n    /**\n     * Get app var\n     * @param index\n     * @param defaultValue\n     * @returns {any}\n     */\n    public static getAppVar(index: string, defaultValue = null): string\n    {\n        return Helper.getVar(_app, index, defaultValue);\n    }\n\n    /**\n     * Delete app var\n     * @param index\n     * @param defaultValue\n     * @returns {Helper}\n     */\n    public static deleteAppVar(index: string): Helper\n    {\n        return Helper.deleteVar(_app, index);\n    }\n\n    /**\n     * Get data service provider\n     * @param data\n     * @returns any\n     */\n    public static getDataServiceProvider(data: any): DataServiceProvider\n    {\n        return {\n            fields: data.fields || null,\n            search: data.search || null,\n            object: data.object || null,\n            objects: data.objects || null,\n            route: data.route || null,\n            extraData: ((data.extraData && data.extraData.service) ? data.extraData.service : null),\n            localData: (data.localData || {data: {}, template: {}}),\n        };\n    }\n\n    /**\n     * Get tree-view data service provider\n     * @param data\n     * @returns any\n     */\n    public static getTreeViewDataServiceProvider(data: any): any\n    {\n        return Helper.mergeObjects(\n            Helper.getDataServiceProvider(data),\n            {\n                localParentField: (data.treeView.localParentField)\n            }\n        );\n    }\n\n    /**\n     * Get tree-view provider\n     * @param data\n     * @returns any\n     */\n    public static getTreeViewProvider(data: any): any\n    {\n        if (data.treeView) {\n            return Helper.mergeObjects(\n                Helper.getDataBoxProvider(data),\n                {\n                    iconDefault: (data.treeView.iconDefault || null),\n                    iconField: (data.treeView.iconField || null),\n                    iconFieldMap: (data.treeView.iconFieldMap || {}),\n                    parentTargetField: (data.treeView.parentTargetField || 'id')\n                }\n            );\n        }\n\n        return Helper.getDataBoxProvider(data);\n    }\n\n    /**\n     * Get image provider\n     * @param data\n     * @param localData supplied by module/component\n     * @returns any\n     */\n    public static getImageProvider(data: any, localData: any): ImageProvider\n    {\n        return Helper.mergeObjects(\n            Helper.getDataBoxProvider(data),\n            {\n                imageCropPopupModule: localData['imageCropPopupModule'],\n                imageCropPopupComponent: localData['imageCropPopupComponent']\n            }\n        );\n    }\n\n    /**\n     * Get data-box provider\n     * @param data\n     * @returns any\n     */\n    public static getDataBoxProvider(data: any): DataBoxProvider\n    {\n        return Helper.getBoxProvider(data);\n    }\n\n    /**\n     * Get box provider\n     * @param data\n     * @returns any\n     */\n    public static getBoxProvider(data: any): BoxProvider\n    {\n        return Helper.mergeObjects(\n            Helper.getBaseProvider(data),\n            {\n                label: data.label || '',\n                labelCount: ((data.labelCount === undefined) ? null : data.labelCount), // Can be zero\n                labelIcon: data.labelIcon || null,\n                controls: {\n                    expander: (data.controls && data.controls.expander),\n                    legend: ((data['controls'] && data['controls']['legend']) ? data['controls']['legend'] : [])\n                }\n            }\n        );\n    }\n\n    /**\n     * Get box provider\n     * @param data\n     * @returns any\n     */\n    public static getEntityDetailProvider(data: any): EntityDetailProvider\n    {\n        return Helper.getBaseProvider(data);\n    }\n\n    /**\n     * Get Entity Detail Preview Provider\n     * @param data\n     * @returns any\n     */\n    public static getEntityDetailPreviewProvider(data: any): EntityDetailPreviewProvider\n    {\n        return Helper.mergeObjects(\n            Helper.getBaseProvider(data),\n            {\n                object: data['object'] || null,\n                fields: data['fields'] || null,\n                dependencies: data['dependencies'] || null\n            }\n        );\n    }\n\n    /**\n     * Get base provider\n     * @param data\n     * @returns any\n     */\n    public static getBaseProvider(data: any): BaseProvider\n    {\n        return {\n            localData: ((data.localData && data.localData.template) ? data.localData.template : {}),\n            extraData: ((data.extraData && data.extraData.template) ? data.extraData.template : null),\n            language: (data.language ? data.language : {})\n        };\n    }\n\n    /**\n     * Get data box form provider\n     * @param data\n     * @returns any\n     */\n    public static getFormProvider(data: any): FormProvider\n    {\n        return {\n            label: data.label || '',\n            preventObjectOverride: true\n        };\n    }\n\n    /**\n     * Get data box form provider\n     * @param data\n     * @returns any\n     */\n    public static getWizardPopupProvider(data: any): WizardPopupProvider\n    {\n        return {\n            label: data.label || ''\n        };\n    }\n\n    /**\n     * Get actions provider\n     * @param data\n     * @returns {any}\n     */\n    public static getActionsServiceProvider(data: any): ActionsServiceProvider\n    {\n        return (data.actions);\n    }\n\n    /**\n     * Get legend provider\n     * @param data\n     * @returns {any}\n     */\n    public static getLegendProvider(data: any): any\n    {\n        return ((data['controls'] && data['controls']['legend']) ? data['controls']['legend'] : []);\n    }\n\n    /**\n     * Set global var\n     * @param index\n     * @param value\n     * @returns {Helper}\n     */\n    public static setGlobalVar(index: string, value: any): Helper\n    {\n        return Helper.setVar(Helper.globalVar, index, value);\n    }\n\n    /**\n     * Get global var\n     * @param index\n     * @param defaultValue\n     * @returns {any}\n     */\n    public static getGlobalVar(index: string, defaultValue = null): string\n    {\n        return Helper.getVar(Helper.globalVar, index, defaultValue);\n    }\n\n    /**\n     * Delete global var\n     * @param index\n     * @param defaultValue\n     * @returns {Helper}\n     */\n    public static deleteGlobalVar(index: string): Helper\n    {\n        return Helper.deleteVar(Helper.globalVar, index);\n    }\n\n    /**\n     * Get column alignment.\n     * @param type\n     * @returns string\n     */\n    public static getColAlign(type: string): string\n    {\n        switch (type) {\n            case 'number':\n            case 'percentage':\n            case 'monetary':\n            case 'date':\n            case 'datetime':\n                return 'txt-align-r';\n            case 'boolean':\n            case 'icon':\n            case 'img':\n            case 'status':\n                return 'txt-align-c';\n            default:\n                return 'txt-align-l';\n        }\n    }\n\n    /**\n     * Get upload web path\n     * @param path\n     * @param imageFormat (format of image to return)\n     * @returns string\n     */\n    public static getUploadWebPath(path: string, imageFormat: string = null): string\n    {\n        if (path && path.indexOf(\"/upload/\")) {\n            path = (path.substring(path.indexOf(\"/upload/\"), path.length));\n        }\n\n        if (imageFormat) {\n            let firstPartialPath = path.substring(0, path.lastIndexOf(\".\")),\n                lastPartialPath = path.substring(path.lastIndexOf(\".\"), path.length);\n            return (firstPartialPath+'.'+imageFormat+lastPartialPath);\n        }\n\n        return path;\n    }\n\n    /**\n     * Upper case first\n     * @param string\n     * @returns {string}\n     */\n    public static uCFirst(string: string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n\n    /**\n     * Get var\n     * @param object\n     * @param index\n     * @param defaultValue\n     * @returns {any}\n     */\n    public static getVar(object: any, index: string, defaultValue = null): any\n    {\n        if (index in object) {\n            return object[index];\n        }\n        return defaultValue;\n    }\n\n    /**\n     * Set var\n     * @param object\n     * @param index\n     * @param value\n     * @returns {Helper}\n     */\n    public static setVar(object: any, index: string, value: any): Helper\n    {\n        object[index] = value;\n        return Helper;\n    }\n\n    /**\n     * Delete var\n     * @param object\n     * @param index\n     * @returns {Helper}\n     */\n    public static deleteVar(object: any, index: string): Helper\n    {\n        if (index in object) {\n            delete object[index];\n        }\n        return Helper;\n    }\n\n    /**\n     * Set Form Token\n     * @param $form\n     * @returns {Helper}\n     */\n    public static setFormToken($form: any): Helper\n    {\n        let $tokenField = $form.find('#form__token');\n        if ($tokenField) {\n            $tokenField.val(_app.csrfToken);\n        }\n        return Helper;\n    }\n\n    /**\n     * Get Status Map\n     * @returns any\n     */\n    public static getStatusMap()\n    {\n        return {'NO': 'danger', 'PARTIAL': 'warning', 'YES': 'primary'};\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/helper.ts","import {Injectable, Inject, Injector, ReflectiveInjector, ViewContainerRef, QueryList} from '@angular/core';\nimport {DynamicComponentLoaderService} from '../dynamic-component-loader.service';\nimport {TasksLoaderManagerService} from '../../tasks-loader-manager/ts/tasks-loader-manager.service';\nimport {PostService} from '../post.service';\n\n\n/**\n * Interface to be implemented by parent component\n */\nexport interface INavManager {\n    /**\n     * Submit navigation (when leave one container to navigate in other one)\n     * @param index (index to validate)\n     * @returns {Promise<boolean>}\n     */\n    submitNav?(index: number): Promise<boolean>;\n\n    /**\n     * Get navigation data (needed data to lazy load container)\n     * @param index (index to load)\n     * @returns NavData\n     */\n    getNavData?(index: number): LazyLoadData;\n\n    /**\n     * Get nav providers (to lazy load components in container with dependency injection)\n     * @param index (index to load)\n     * @param data (data to resolve all providers)\n     * @returns {Array}\n     */\n    getNavProviders?(index: number, data?: any): any;\n\n    /**\n     * Post (after) load callback\n     * @param index\n     * @param componentRef\n     * @param injector\n     */\n    postLoad?(index: number, componentRef: any, injector: Injector): void;\n}\n\n\n/**\n * Interface for lazy load data\n */\nexport interface LazyLoadData {\n    module: any,\n    component: string,\n    dataProvider?: any, // All necessary data to resolve providers\n    urlProvider?: string, // Url to get all necessary data to resolve providers (usually the ConfAction or DataAction)\n    injector?: string // Injector to resolve providers\n}\n\n\n/**\n * Navigation manager.\n * Use this class to manage the navigation between multiple containers.\n * Containers can be static or lazy load.\n * This class is defined as service because the components that use it already extends another class.\n * The component that use this service should implements the \"INavManager\" interface.\n * The init of this service should be called in \"ngAfterViewInit\" method when you have lazy load containers,\n * so the template has been rendered.\n * NOTE: Prefix \"ll\" means \"Lazy load\"\n */\n@Injectable()\nexport class NavManagerService\n{\n    // Local variables\n    protected _component: any; // Parent component that uses and implement this service\n    protected _llViewContainerRefArr: ViewContainerRef[] = [];\n    protected _llComponentRefArr: any = {}; // Array of ComponentRef with loaded containers\n    protected _currentIndex: number = null; // Index of current container\n    protected _hasToggleContainer: boolean = false; // Determines if has toggle in container when it is already selected\n\n    constructor(\n        @Inject('HelperService') protected _helperService: any,\n        protected _tasksLoaderManagerService: TasksLoaderManagerService,\n        protected _injector: Injector,\n        protected _dynamicComponentLoaderService: DynamicComponentLoaderService,\n        protected _postService: PostService\n    ) {}\n\n    /**\n     * Initialization of service.\n     * This method should be called in \"ngAfterViewInit\" method of parent component when you have lazy load containers,\n     * so the template has been rendered.\n     * @param component (parent component)\n     * @param lazyLoadViewContainerRefQL\n     * @returns {NavManagerService}\n     */\n    public init(component: any, lazyLoadViewContainerRefQL: QueryList<ViewContainerRef> = null): NavManagerService\n    {\n        // Local variables\n        this._component = component;\n\n        if (lazyLoadViewContainerRefQL) {\n            // Get array of ViewContainerRef for lazy loader containers\n            this._llViewContainerRefArr = lazyLoadViewContainerRefQL.toArray();\n        }\n\n        return this;\n    }\n\n    /**\n     * Reset of service.\n     * This method should be called in \"ngOnDestroy\" method of parent component, so variables can be reset (free data)\n     * and the service be able to be reused.\n     */\n    public reset(): NavManagerService\n    {\n        // Local variables\n        // Needs to be reset (free data),\n        // because the service is reused and not created a new when parent component is instantiated\n        this._component = null;\n        this._llViewContainerRefArr = [];\n        this._llComponentRefArr = {};\n        this._currentIndex = null;\n\n        return this;\n    }\n\n    /**\n     * Set Has Toggle Container\n     * @param hasToggleContainer\n     * @returns {NavManagerService}\n     */\n    public setHasToggleContainer(hasToggleContainer: boolean = true)\n    {\n        this._hasToggleContainer = hasToggleContainer;\n        return this;\n    }\n\n    /**\n     * Get current index\n     * @returns {any}\n     */\n    public getIndex(): number\n    {\n        return this._currentIndex;\n    }\n\n    /**\n     * Get componentRef of current index (if index is not provided)\n     * @param index (index of container)\n     * @returns {any}\n     */\n    public getComponentRef(index: number = null): any\n    {\n        if (index == null) {\n            index = this._currentIndex;\n        }\n        return (this._llComponentRefArr[index] || null);\n    }\n\n    /**\n     * Unset componentRef of current index (if index is not provided)\n     * @param index (index of container)\n     * @returns NavManagerService\n     */\n    public unsetComponentRef(index: number = null): NavManagerService\n    {\n        index = (index || this._currentIndex);\n\n        if (this._llComponentRefArr[index]) {\n            this._llComponentRefArr[index].destroy();\n            this._llComponentRefArr[index] = null;\n        }\n\n        return this;\n    }\n\n    /**\n     * Navigate to container.\n     * This method should be called from child component.\n     * @param index (index of container)\n     * @param hasSubmit (determines if submit should be called)\n     * @returns {Promise<boolean>}\n     */\n    public navTo(index: number, hasSubmit: boolean = true): Promise<boolean>\n    {\n        let that = this;\n\n        return new Promise(function (resolve, reject) {\n            // Used in accordion, if the index is the same, then reset the index closing the current container\n            if ((index === that.getIndex()) && that._hasToggleContainer) {\n                that._currentIndex = null;\n                return resolve(true);\n            }\n\n            // Only load module, if module is not yet loading (avoid task duplication)\n            if (!that._tasksLoaderManagerService.addTask('LOAD')) {\n                return reject(false);\n            }\n\n            // Send current container to validation before load the other one\n            if (that._component['submitNav'] && hasSubmit) {\n                return that._component.submitNav(that._currentIndex).then(\n                    data => {\n                        return that.loadNav(index).then(\n                            data => {\n                                that._tasksLoaderManagerService.delTask('LOAD');\n                                return resolve(true);\n                            },\n                            errors => {\n                                console.log(errors);\n                                that._tasksLoaderManagerService.delTask('LOAD');\n                                return reject(false);\n                            }\n                        );\n                    },\n                    errors => {\n                        that._tasksLoaderManagerService.delTask('LOAD');\n                        return reject(false);\n                    }\n                );\n            }\n\n            return that.loadNav(index).then(\n                data => {\n                    that._tasksLoaderManagerService.delTask('LOAD');\n                    return resolve(true);\n                },\n                errors => {\n                    console.log(errors);\n                    that._tasksLoaderManagerService.delTask('LOAD');\n                    return reject(false);\n                }\n            );\n        });\n    }\n\n    /**\n     * Navigate to container action.\n     * This method should be called from view/template.\n     * @param index (index of container)\n     * @param hasSubmit (determines if submit should be called)\n     */\n    public navToAction(index: number, hasSubmit: boolean = true): void\n    {\n        this.navTo(index, hasSubmit).then(\n            data => { return; },\n            errors => { return; }\n        );\n    }\n\n    /**\n     * Load navigation container\n     * @param index\n     * @returns {Promise<boolean>}\n     */\n    private loadNav(index): Promise<boolean>\n    {\n        let that = this;\n\n        return new Promise(function(resolve, reject) {\n            if (that._llComponentRefArr[index] // Container has been loaded\n                || !that._component['getNavData'] // Component doesn't have the necessary implementation to lazy load\n            ) {\n                that._currentIndex = index;\n                return resolve(true);\n            }\n\n            // Get lazy load view\n            let llViewIndex = null,\n                llClass = ('js_lazyLoadContainer_' + index); // Lazy load class\n\n            // Check if is a lazy load container (by its index in class)\n            for (let index in that._llViewContainerRefArr) {\n                if ($(that._llViewContainerRefArr[index].element.nativeElement).parent().hasClass(llClass)) {\n                    llViewIndex = index;\n                    break;\n                }\n            }\n            if (llViewIndex === null) { // No lazy load view\n                that._currentIndex = index;\n                return resolve(true);\n            }\n\n            // Get child data\n            let lazyLoadData: LazyLoadData = that._component.getNavData(index);\n\n            // Load child data from url\n            if (!lazyLoadData.dataProvider && lazyLoadData.urlProvider) {\n                return that._postService.post(lazyLoadData.urlProvider, null).then(\n                    data => {\n                        lazyLoadData.dataProvider = data;\n\n                        // Load container\n                        return that.loadContainer(\n                            index,\n                            llViewIndex,\n                            lazyLoadData\n                        ).then(\n                            data => { return resolve(true); },\n                            errors => { console.log(errors); return reject(false); }\n                        );\n                    },\n                    errors => { console.log(errors); return reject(false); }\n                );\n            }\n\n            // Load container\n            return that.loadContainer(\n                index,\n                llViewIndex,\n                lazyLoadData\n            ).then(\n                data => { return resolve(true); },\n                errors => { console.log(errors); return reject(false); }\n            );\n        });\n    }\n\n    /**\n     * Load container\n     * @param index\n     * @param lazyLoadViewIndex (lazy load view index)\n     * @param lazyLoadData\n     * @returns {Promise<boolean>}\n     */\n    private loadContainer(index, lazyLoadViewIndex, lazyLoadData: LazyLoadData): Promise<boolean>\n    {\n        let providers = (this._component['getNavProviders']\n                ? this._component.getNavProviders(index, lazyLoadData.dataProvider)\n                : null\n        );\n\n        let viewContainerRef: ViewContainerRef = this._llViewContainerRefArr[lazyLoadViewIndex];\n\n        let injector = null;\n        if (providers) {\n            injector = ReflectiveInjector.fromResolvedProviders(\n                ReflectiveInjector.resolve(providers),\n                // Use in firs instance the injector of the component (is more refined)\n                (lazyLoadData.injector || this._component['_injector'] || this._injector)\n            );\n        }\n\n        let that = this;\n\n        return this._dynamicComponentLoaderService.load(\n            lazyLoadData.module,\n            lazyLoadData.component,\n            viewContainerRef,\n            injector\n        ).then(\n            componentRef => {\n                that._llComponentRefArr[index] = componentRef;\n                that._currentIndex = index;\n\n                // Call component postLoad callback if exists\n                if (that._component['postLoad']) {\n                    that._component.postLoad(index, componentRef, injector);\n                }\n\n                return true;\n            },\n            errors => { console.log(errors); return null; }\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/nav-manager/nav-manager.service.ts","import {Injectable} from '@angular/core';\nimport {FlashMessageService, FlashMessageTypes} from './flash-message.service';\nimport {TasksLoaderManagerService} from '../tasks-loader-manager/ts/tasks-loader-manager.service';\n//import {Http, Headers} from 'angular2/http';\n//import 'rxjs/add/operator/map';\n\n// Interface PostResponse (template for post response)\nexport interface PostResponse {\n    status?: number,\n    data?: any,\n    errors?: any,\n    flashMessages?: any\n}\n\n\n// Service\n@Injectable()\nexport class PostService {\n    constructor(\n        private _flashMessageService: FlashMessageService,\n        protected _tasksLoaderManagerService: TasksLoaderManagerService\n    ) {}\n\n    /**\n     * Post. Send data to server\n     * @param url\n     * @param data\n     * @returns {Promise}\n     */\n    public post(url: string, data: any = null): Promise<any>\n    {\n        this._tasksLoaderManagerService.addTask('POSTING_DATA');\n\n        let that = this;\n\n        return new Promise(function(resolve, reject) {\n            return $.post(\n                url,\n                data,\n                postResponse => {\n                    // Unknown response, generally html responses (debug, exceptions, etc.)\n                    if (!postResponse || (typeof postResponse !== 'object')) {\n                        that._tasksLoaderManagerService.delTask('POSTING_DATA');\n                        that.handleFlashMessages({});\n                        return reject({});\n                    }\n\n                    // Regular response\n                    that.handleFlashMessages(postResponse);\n                    let isSuccess = (postResponse.status == 1);\n                    delete postResponse.status; // Is no more necessary\n\n                    // Success\n                    if (isSuccess) {\n                        that._tasksLoaderManagerService.delTask('POSTING_DATA');\n                        return resolve(postResponse['data'] || null);\n                    }\n\n                    // Error\n                    let errors = {\n                        errors: (postResponse['errors'] || {}),\n                        data: (postResponse['data'] || {})\n                    };\n\n                    that._tasksLoaderManagerService.delTask('POSTING_DATA');\n                    return reject(errors);\n                }\n            ).fail(errors => {\n                that._tasksLoaderManagerService.delTask('POSTING_DATA');\n                that.handleFlashMessages({});\n                return reject({});\n            });\n        });\n\n        /*let headers = new Headers();\n         headers.append('Content-Type', 'application/json');\n\n         this._http.post(\n         url,\n         data,\n         { headers: headers }\n         )\n         .map(response => response.json())\n         .subscribe(\n         response => console.log(response)\n         );*/\n    }\n\n    /**\n     * Handle handleFlashMessages from server\n     * @param postResponse\n     * @returns {PostResponse}\n     */\n    private handleFlashMessages(postResponse: PostResponse): any\n    {\n        // Request failed, no response has been returned.\n        if (!('status' in postResponse)) {\n            console.log(postResponse);\n            this._flashMessageService.message(\n                'Something went wrong, no response has been returned.',\n                'Unknown error',\n                FlashMessageTypes.error\n            );\n        }\n\n        // Flash Messages\n        if (postResponse.flashMessages) {\n            for (let flashMessage of postResponse.flashMessages) {\n                this._flashMessageService.message(\n                    flashMessage.body,\n                    flashMessage.head,\n                    flashMessage.type\n                );\n            }\n            delete postResponse.flashMessages; // It's no more necessary\n        }\n\n        return postResponse;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/post.service.ts","import {Component, Inject, ElementRef, Input, Optional} from '@angular/core';\nimport {DataService} from '../data-service/data.service';\n\n\n/**\n * Class provider for search criteria expressions and default values\n */\nexport class SearchCriteriaMap {\n    // Expressions mapping.\n    protected _exprMap = [\n        { key: 'lrlike', label: '?' },\n        { key: 'eq', label: '=' },\n        { key: 'neq', label: '<>' },\n        { key: 'gte', label: '>=' },\n        { key: 'lte', label: '<=' }\n    ];\n\n    // Default value mapping for field type.\n    protected _defaultValueMap = {\n        'date': ((new Date()).toISOString().slice(0,10)), // Current date (yyyy-mm-dd)\n        'boolean': 1\n    };\n\n    // Default expression mapping for field type.\n    protected _defaultExprMap = {\n        'text': 'lrlike',\n        'code': 'lrlike',\n        'date': 'gte',\n        'boolean': 'eq'\n    };\n\n    /**\n     * Get expressions mapping\n     * @returns {any}\n     */\n    public getExprMap(): any\n    {\n        return this._exprMap;\n    }\n\n    /**\n     * Get default expression\n     * @param type\n     * @returns {any}\n     */\n    public getDefaultExpr(type: string = null): string\n    {\n        return ((type && this._defaultExprMap[type]) ? this._defaultExprMap[type] : 'eq');\n    }\n\n    /**\n     * Get default value\n     * @param type\n     * @returns {any}\n     */\n    public getDefaultValue(type: string = null): string\n    {\n        return ((type && this._defaultValueMap[type]) ? this._defaultValueMap[type] : '');\n    }\n}\n\n// Component\n@Component({\n    selector: 'js_searchCriteria',\n    template: `\n    <js_expander [label]=\"'Filter'\" [hasIcon]=\"false\" [customClass]=\"'action'\" (onChange)=\"toggleIsExpanded($event, 'fields')\"></js_expander>\n    <div [hidden]=\"!_isExpanded\" class=\"container-fluid py-3 rounded white-dropdown search-criteria\">\n        <div class=\"row\">\n        <ng-template ngFor let-criteria [ngForOf]=\"_criteriaArr\" let-i=\"index\">\n            <div class=\"col col-md-6 controller\">\n                <div class=\"select\">\n                    <select [(ngModel)]=\"criteria['field']\"\n                            (change)=\"onFieldChange($event, criteria)\"\n                            class=\"form-control\">\n                        <ng-template ngFor let-field [ngForOf]=\"_fields\">\n                            <option *ngIf=\"!_helperService.inArray(_fieldsMetadata[field]['type'], _deniedTypes) && !_fieldsMetadata[field]['isObject']\"\n                                    value=\"{{field}}\">{{_fieldsMetadata[field]['label']}}</option>\n                        </ng-template>\n                    </select>\n                    <!-- ng switch should be here -->\n                    <ng-template [ngIf]=\"(_fieldsMetadata[criteria['field']]) && (_fieldsMetadata[criteria['field']]['type'] == 'boolean')\">\n                        <select [(ngModel)]=\"criteria['value']\"\n                                class=\"form-control\">\n                            <option *ngFor=\"let value of [{key: 1, label: 'Yes'}, {key: 0, label: 'No'}]\"\n                                    value=\"{{value['key']}}\">{{value['label']}}</option>\n                        </select>\n                    </ng-template>\n                    <ng-template [ngIf]=\"(!_fieldsMetadata[criteria['field']]) || (_fieldsMetadata[criteria['field']]['type'] != 'boolean')\">\n                        <select [(ngModel)]=\"criteria['expr']\"\n                                class=\"form-control\">\n                            <option *ngFor=\"let expr of _searchCriteriaMap.getExprMap()\"\n                                    value=\"{{expr['key']}}\">{{expr['label']}}</option>\n                        </select>\n                        <input [(ngModel)]=\"criteria['value']\"\n                               class=\"form-control\" type=\"text\">\n                    </ng-template>\n                </div>\n                <div class=\"actions\">\n                    <a class=\"fa fa-trash-o\" (click)=\"del($event, i)\"></a>\n                    <a *ngIf=\"(i+1) == _criteriaArr.length\" class=\"fa fa-plus\" (click)=\"add($event)\"></a>\n                </div>\n            </div>\n        </ng-template>\n        <div class=\"col controller\"\n             *ngIf=\"_criteriaArr.length < 1\">\n            <div class=\"actions\">\n                <a class=\"fa fa-plus\" (click)=\"add($event)\"></a>\n            </div>\n        </div>\n    </div>\n    `,\n    host: {\n        '(document:click)': 'onDocumentClick($event)',\n    }\n})\nexport class SearchCriteriaComponent {\n    // Injector to get dependencies. Used when injector comes from child component (like accordion)\n    @Input() injector: any = null;\n\n    // Denied types. Doesn't make sense to search for this filed types.\n    protected _deniedTypes: string[] = ['file', 'icon', 'img', 'password', 'avatar'];\n    protected _criteriaArr: any;\n    protected _fields: any;\n    protected _fieldsMetadata: any;\n    protected _isExpanded: boolean = false;\n    protected _searchCriteriaMap: SearchCriteriaMap;\n\n    constructor(\n        protected _elementRef: ElementRef,\n        @Inject('HelperService') private _helperService: any,\n        @Optional() @Inject('DataService') protected _dataService: any\n    ) {\n        this._searchCriteriaMap = new SearchCriteriaMap();\n    }\n\n    /**\n     * Set default values\n     * @param criteria\n     * @param field (field to override criteria['field'], because select change event was not update it yet)\n     */\n    protected setDefaults(criteria: any, field: string = null): void\n    {\n        field = (field || criteria['field']);\n        if (field in this._fieldsMetadata) {\n            criteria['expr'] = this._searchCriteriaMap.getDefaultExpr(this._fieldsMetadata[field]['type']);\n            criteria['value'] = this._searchCriteriaMap.getDefaultValue(this._fieldsMetadata[field]['type']);\n        }\n    }\n\n    /**\n     * Add criteria\n     * @param $event\n     */\n    protected add($event = null): void\n    {\n        if ($event) {\n            $event.preventDefault();\n            $event.stopPropagation();\n        }\n\n        let criteria = {\n            field: (this._fields[0] ? this._fields[0] : null),\n            expr: null,\n            value: null\n        };\n\n        this.setDefaults(criteria, null);\n\n        this._criteriaArr.push(criteria);\n    }\n\n    /**\n     * Delete criteria\n     * @param $event\n     * @param index\n     */\n    protected del($event, index: number): void\n    {\n        $event.preventDefault();\n        $event.stopPropagation();\n        this._criteriaArr.splice(index, 1);\n    }\n\n    /**\n     * Toggle isExpanded\n     * @param $event (value returned by expander directive)\n     */\n    protected toggleIsExpanded($event): void\n    {\n        this._isExpanded = !this._isExpanded;\n    }\n\n    /**\n     * On field change\n     * @param $event\n     * @param criteria\n     */\n    protected onFieldChange($event, criteria: any): void\n    {\n        // Field to override criteria['field'], because select change event was not update it yet\n        let field = $event.target.value || null;\n        this.setDefaults(criteria, field);\n    }\n\n    /**\n     * Host event\n     * @param $event\n     */\n    protected onDocumentClick($event): void\n    {\n        if (!this._elementRef.nativeElement.contains($event.target)) {\n            this._isExpanded = false;\n        }\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnInit()\n    {\n        // If injector is provided, override dependencies\n        if (this.injector) {\n            this._dataService = this.injector.get('DataService');\n        }\n\n        this._criteriaArr = this._dataService.getCandidateSearchAttr('criteria');\n        this._fields = (this._dataService.getFields('view') || []);\n        this._fieldsMetadata = (this._dataService.getFields('metadata') || {});\n\n        if (this._criteriaArr.length < 1) {\n            this.add();\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/search/search-criteria.component.ts","import {Component, Inject, ElementRef, Input, Optional} from '@angular/core';\nimport {DataService} from '../data-service/data.service';\n\n// Component\n@Component({\n    selector: 'js_searchFields',\n    template: `\n    <js_expander [label]=\"'Fields'\" [hasIcon]=\"false\" [customClass]=\"'action'\" (onChange)=\"toggleIsExpanded($event, 'fields')\"></js_expander>\n    <div [hidden]=\"!_isExpanded\" class=\"container-fluid py-3 rounded white-dropdown search-fields\">\n        <div class=\"row\"><div class=\"col\">\n            <select multiple size=\"6\" [(ngModel)]=\"_search['fields']\" class=\"form-control\">\n                <ng-template ngFor let-field [ngForOf]=\"_fields\">\n                    <option *ngIf=\"!_helperService.inArray(_fieldsMetadata[field]['type'], _deniedTypes)\"\n                            value=\"{{field}}\">{{_fieldsMetadata[field]['label']}}</option>\n                </ng-template>\n            </select>\n        </div></div>\n    </div>\n    `,\n    host: {\n        '(document:click)': 'onDocumentClick($event)',\n    }\n})\nexport class SearchFieldsComponent {\n    // Injector to get dependencies. Used when injector comes from child component (like accordion)\n    @Input() injector: any = null;\n\n    // Denied types. Doesn't make sense to show this filed types.\n    protected _deniedTypes: string[] = ['password'];\n    protected _search: any;\n    protected _fields: any;\n    protected _fieldsMetadata: any;\n    protected _isExpanded: boolean = false;\n\n    constructor(\n        protected _elementRef: ElementRef,\n        @Inject('HelperService') private _helperService: any,\n        @Optional() @Inject('DataService') protected _dataService: any\n    ) {}\n\n    /**\n     * Toggle isExpanded\n     * @param $event (value returned by expander directive)\n     */\n    protected toggleIsExpanded($event): void\n    {\n        this._isExpanded = !this._isExpanded;\n    }\n\n    /**\n     * Host event\n     * @param $event\n     */\n    protected onDocumentClick($event): void\n    {\n        if (!this._elementRef.nativeElement.contains($event.target)) {\n            this._isExpanded = false;\n        }\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnInit()\n    {\n        // If injector is provided, override dependencies\n        if (this.injector) {\n            this._dataService = this.injector.get('DataService');\n        }\n\n        this._search = this._dataService.getCandidateSearch();\n        this._fields = (this._dataService.getFields('view') || []);\n        this._fieldsMetadata = (this._dataService.getFields('metadata') || {});\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/search/search-fields.component.ts","import {Component, Inject, ElementRef, Input, Optional} from '@angular/core';\nimport {DataService} from '../data-service/data.service';\n\n// Component\n@Component({\n    selector: 'js_searchOrderBy',\n    template: `\n    <js_expander [label]=\"'Order'\" [hasIcon]=\"false\" [customClass]=\"'action'\" (onChange)=\"toggleIsExpanded($event, 'fields')\"></js_expander>\n    <div [hidden]=\"!_isExpanded\" class=\"container-fluid py-3 rounded white-dropdown search-order-by\">\n        <div class=\"row\">\n        <ng-template ngFor let-orderBy [ngForOf]=\"_orderByArray\" let-i=\"index\">\n            <div class=\"col col-md-6 controller\">\n                <div class=\"select\">\n                    <select [(ngModel)]=\"orderBy['field']\" class=\"form-control\">\n                        <ng-template ngFor let-field [ngForOf]=\"_fields\">\n                            <option *ngIf=\"!_helperService.inArray(_fieldsMetadata[field]['type'], _deniedTypes) && !_fieldsMetadata[field]['isObject']\"\n                                    value=\"{{field}}\">{{_fieldsMetadata[field]['label']}}</option>\n                        </ng-template>\n                    </select>\n                    <select [(ngModel)]=\"orderBy['value']\" class=\"form-control\">\n                        <option *ngFor=\"let value of [{key: 'ASC', label: 'Asc'}, {key: 'DESC', label: 'Desc'}]\"\n                                value=\"{{value['key']}}\">{{value['label']}}</option>\n                    </select>\n                </div>\n                <div class=\"actions\">\n                    <a *ngIf=\"_orderByArray.length > 1\" class=\"fa fa-trash-o\" (click)=\"del($event, i)\"></a>\n                    <a *ngIf=\"(i+1) == _orderByArray.length\" class=\"fa fa-plus\" (click)=\"add($event)\"></a>\n                </div>\n            </div>\n        </ng-template>\n        </div>\n    </div>\n    `,\n    host: {\n        '(document:click)': 'onDocumentClick($event)',\n    }\n})\nexport class SearchOrderByComponent {\n    // Injector to get dependencies. Used when injector comes from child component (like accordion)\n    @Input() injector: any = null;\n\n    // Denied types. Doesn't make sense to order by this filed types.\n    protected _deniedTypes: string[] = ['file', 'icon', 'img', 'password', 'avatar'];\n    protected _orderByArray: any;\n    protected _fields: any;\n    protected _fieldsMetadata: any;\n    protected _isExpanded: boolean = false;\n\n    constructor(\n        protected _elementRef: ElementRef,\n        @Inject('HelperService') private _helperService: any,\n        @Optional() @Inject('DataService') protected _dataService: any\n    ) {}\n\n    /**\n     * Add order by\n     * @param $event\n     */\n    protected add($event = null): void\n    {\n        if ($event) {\n            $event.preventDefault();\n            $event.stopPropagation();\n        }\n\n        this._orderByArray.push({\n            field: (this._fields[0] ? this._fields[0]['key'] : null),\n            value: 'ASC',\n        });\n    }\n\n    /**\n     * Delete order by\n     * @param $event\n     * @param index\n     */\n    protected del($event, index: number): void\n    {\n        $event.preventDefault();\n        $event.stopPropagation();\n        this._orderByArray.splice(index, 1);\n    }\n\n    /**\n     * Toggle isExpanded\n     * @param $event (value returned by expander directive)\n     */\n    protected toggleIsExpanded($event): void\n    {\n        this._isExpanded = !this._isExpanded;\n    }\n\n    /**\n     * Host event\n     * @param $event\n     */\n    protected onDocumentClick($event): void\n    {\n        if (!this._elementRef.nativeElement.contains($event.target)) {\n            this._isExpanded = false;\n        }\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnInit()\n    {\n        // If injector is provided, override dependencies\n        if (this.injector) {\n            this._dataService = this.injector.get('DataService');\n        }\n\n        this._orderByArray = this._dataService.getCandidateSearchAttr('orderBy');\n        this._fields = (this._dataService.getFields('view') || []);\n        this._fieldsMetadata = (this._dataService.getFields('metadata') || {});\n\n        if (this._orderByArray.length < 1) {\n            this.add();\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/search/search-order-by.component.ts","import {Component, Input, Inject} from '@angular/core';\nimport {DataService} from '../data-service/data.service';\n\n// Component\n@Component({\n    selector: 'js_searchPagination',\n    template: `\n    <div *ngIf=\"_dataService.countObjects() > 0\"\n         class=\"search-pagination no-user-select\">\n        <span>{{_dataService.countObjects()}} Results</span>\n        <a class=\"search-has-more -note\"\n           *ngIf=\"_dataService.getProviderAttr('search')['hasMore']\"\n           (click)=\"getMoreObjects($event)\"\n           href=\"#\"\n           title=\"Load more results...\">...</a>\n    </div>\n    `\n})\nexport class SearchPaginationComponent {\n\n    constructor(\n        @Inject('DataService') protected _dataService: any,\n        @Inject('HelperService') protected _helperService: any\n    ) {}\n\n    /**\n     * Get more objects (pagination)\n     * @param $event\n     */\n    protected getMoreObjects($event): void\n    {\n        $event.preventDefault();\n        this._dataService.getMoreObjects();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/search/search-pagination.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SearchPaginationComponent} from './search-pagination.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [\n        SearchPaginationComponent\n    ],\n    exports: [SearchPaginationComponent]\n})\nexport class SearchPaginationModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/search/search-pagination.module.ts","import {Component, Inject, Injector, Input, Optional} from '@angular/core';\nimport {DataService} from '../data-service/data.service';\nimport {ActionsService} from '../actions/actions.service';\n\n// Component\n@Component({\n    selector: 'js_search',\n    template: `\n    <js_searchCriteria [injector]=\"injector\"></js_searchCriteria>\n    <js_searchOrderBy [injector]=\"injector\"></js_searchOrderBy>\n    <js_searchFields [injector]=\"injector\"></js_searchFields>\n    <a class=\"action -round fa\"\n       [ngClass]=\"[_actionsService.getActionAttr('search', 'icon')]\"\n       (click)=\"searchAction($event)\"></a>\n    `\n})\nexport class SearchComponent {\n    // Injector to get dependencies. Used when injector comes from child component (like accordion)\n    @Input() injector: any = null;\n\n    constructor(\n        @Optional() @Inject('DataService') protected _dataService: any,\n        @Optional() protected _actionsService: ActionsService\n    ) {}\n\n    /**\n     * Search objects.\n     * @param $event\n     */\n    public searchAction($event: any): void\n    {\n        $event.preventDefault();\n        this._dataService.search();\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnInit()\n    {\n        // If injector is provided, override dependencies\n        if (this.injector) {\n            this._dataService = this.injector.get('DataService');\n            this._actionsService = this.injector.get(ActionsService);\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/search/search.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {ExpanderModule} from '../expander/expander.module';\nimport {SearchFieldsComponent} from './search-fields.component';\nimport {SearchOrderByComponent} from './search-order-by.component';\nimport {SearchCriteriaComponent} from './search-criteria.component';\nimport {SearchComponent} from './search.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ExpanderModule],\n    declarations: [\n        SearchComponent,\n        SearchCriteriaComponent,\n        SearchOrderByComponent,\n        SearchFieldsComponent\n    ],\n    exports: [SearchComponent]\n})\nexport class SearchModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/search/search.module.ts","import {Component, ElementRef, Inject, Optional, Injector, Renderer, ViewContainerRef, QueryList, ViewChild, ViewChildren} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {FormService, IForm} from '../../../form/ts/form.service';\nimport {WizardManagerService, IWizardManager as IWizard, LazyLoadData} from './wizard-manager.service';\nimport {WizardFormPopupExtComponent, WizardPopupProvider} from './wizard-form-popup.ext-component';\n\n// Reexports\nexport {WizardPopupProvider, IWizard, LazyLoadData};\n\n\n@Component({\n    selector: '.js_wizard',\n    template: '' // Define template in child component\n})\nexport abstract class WizardFormPopupComponent extends WizardFormPopupExtComponent implements IForm\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: WizardPopupProvider,\n        wizardManagerService: WizardManagerService,\n        formService: FormService\n    ) {\n        // Call parent\n        super();\n        super.initWizardFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            wizardManagerService,\n            formService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/wizard/ts/src/wizard-form-popup.component.ts","import {Component, ElementRef, Inject, Optional, Injector, Renderer, ViewContainerRef, QueryList, ViewChild, ViewChildren} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {IForm} from '../../../form/ts/form.service';\nimport {IWizardManager as IWizard, LazyLoadData} from './wizard-manager.service';\nimport {WizardPopupExtComponent, WizardPopupProvider} from './wizard-popup.ext-component';\n\n// Reexports\nexport {WizardPopupProvider, IWizard, LazyLoadData};\n\n\n@Component({\n    selector: '.js_wizard',\n    template: '' // Define template in child component\n})\nexport abstract class WizardFormPopupExtComponent extends WizardPopupExtComponent implements IForm\n{\n    // Constructor vars\n    protected _formService: any; // Form Service should be shared between all steps\n\n    // For NavManagerService\n    @ViewChildren('js_lazyLoadContainer', {read: ViewContainerRef}) lazyLoadViewContainerRefQL: QueryList<ViewContainerRef>;\n\n    constructor() { super(); }\n\n    /**\n     * Initialization of component (replace the original constructor to avoid angular injection inheritance bug)\n     * @param elementRef\n     * @param renderer\n     * @param provider\n     * @param wizardManagerService\n     * @param formService\n     */\n    public initWizardFormPopupExtComponent(\n        elementRef: any,\n        renderer: any,\n        @Inject('Provider') provider: WizardPopupProvider,\n        wizardManagerService: any, // Any is used, otherwise you get an error \"[Class] is not defined\"\n        formService: any // Any is used, otherwise you get an error \"[Class] is not defined\"\n\n    ) {\n        // Parent init (construct)\n        super.initWizardPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            wizardManagerService\n        );\n\n        this._formService = formService;\n    }\n\n    /**\n     * Close action.\n     * @param $event\n     */\n    public closeAction($event: any = null): void\n    {\n        if ($event) { $event.preventDefault(); }\n\n        // Current form object has changes from user?\n        this._formService.reset().then(\n            data => {\n                this.onDismissEmitter.emit(data);\n                return;\n            },\n            errors => { return; }\n        );\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngAfterViewInit()\n    {\n        super.ngAfterViewInit();\n        this._formService.init(this);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/wizard/ts/src/wizard-form-popup.ext-component.ts","import {Injectable, ViewContainerRef, QueryList, Optional, Inject} from '@angular/core';\nimport {NavManagerService, INavManager as IWizardManager, LazyLoadData} from '../../../ts/nav-manager/nav-manager.service';\nimport {WizardManagerServiceProvider} from './wizard-manager-service-provider';\nimport {TasksLoaderManagerService} from '../../../tasks-loader-manager/ts/tasks-loader-manager.service';\n\n// Reexports\nexport {IWizardManager, LazyLoadData};\n\n\n/**\n * Wizard manager.\n * Use this class to manage the navigation between multiple containers in wizard mode.\n * Containers can be static or lazy load.\n * This class is defined as service because the components that use it already extends another class.\n * The component that use this service should implements the \"IWizardManager\" interface.\n * The init of this service should be called in \"ngAfterViewInit\" method when you have lazy load containers,\n * so the template has been rendered.\n */\n@Injectable()\nexport class WizardManagerService\n{\n    // Local variables\n    protected _component: any = null; // Parent component that uses and implement this service\n\n    constructor(\n        protected _navManagerService: NavManagerService,\n        protected _tasksLoaderManagerService: TasksLoaderManagerService,\n        @Optional() @Inject('WizardManagerServiceProvider') protected _provider: WizardManagerServiceProvider\n    ) {\n        // Set default values for provider\n        if (!this._provider) {\n            this._provider = {};\n        }\n    }\n\n    /**\n     * Initialization of service.\n     * This method should be called in \"ngAfterViewInit\" method of parent component when you have lazy load containers,\n     * so the template has been rendered.\n     * @param component (parent component)\n     * @param lazyLoadViewContainerRefQL\n     */\n    public init(component: any, lazyLoadViewContainerRefQL: QueryList<ViewContainerRef> = null): void\n    {\n        // Local variables\n        this._component = component;\n        \n        // Initializes the NavManagerService\n        this._navManagerService.init(component, lazyLoadViewContainerRefQL);\n        this._navManagerService.navTo(0);\n    }\n\n    /**\n     * Reset of service.\n     * This method should be called in \"ngOnDestroy\" method of parent component, so variables can be reset (free data)\n     * and the service be able to be reused.\n     */\n    public reset(): void\n    {\n        // Local variables\n        this._component = null;\n\n        // Reset the NavManagerService\n        this._navManagerService.reset();\n    }\n\n    /**\n     * Next action.\n     * @param $event\n     */\n    public nextAction($event: any = null): void\n    {\n        // Avoid task duplication\n        if (this._tasksLoaderManagerService.hasTask('LOAD')) {\n            return;\n        }\n\n        if ($event) { $event.preventDefault(); }\n\n        let nextIndex = (this._navManagerService.getIndex() + 1);\n\n        // Force to rebuild all components\n        if (this._provider.rebuildNextStepComponents) {\n            this._navManagerService.unsetComponentRef(nextIndex);\n        }\n\n        this._navManagerService.navTo(nextIndex).then(\n            data => { return; },\n            errors => { return; }\n        );\n    }\n\n    /**\n     * Previous action.\n     * @param $event\n     */\n    public prevAction($event: any = null): void\n    {\n        // Avoid task duplication\n        if (this._tasksLoaderManagerService.hasTask('LOAD')) {\n            return;\n        }\n\n        if ($event) { $event.preventDefault(); }\n\n        // Skip submit to go into the prev container\n        this._navManagerService.navTo(this._navManagerService.getIndex() - 1, false).then(\n            data => { return; },\n            errors => { return; }\n        );\n    }\n\n    /**\n     * Finish action.\n     * @param $event\n     */\n    public finishAction($event: any = null): void\n    {\n        // Avoid task duplication\n        if (this._tasksLoaderManagerService.hasTask('LOAD')) {\n            return;\n        }\n\n        if ($event) { $event.preventDefault(); }\n\n        let that = this;\n\n        // Called only to check te current container (submit)\n        this._navManagerService.navTo(this._navManagerService.getIndex()).then(\n            data => { return that._component.closeAction(); },\n            errors => { return; }\n        );\n    }\n\n    /**\n     * Cancel action.\n     * @param $event\n     */\n    public cancelAction($event: any = null): void\n    {\n        if ($event) { $event.preventDefault(); }\n        this._component.closeAction();\n    }\n\n\n    /* NAVIGATION MANAGER SERVICE METHODS */\n\n    public getIndex(): number {\n        return this._navManagerService.getIndex();\n    }\n\n    public getComponentRef(index: number = null): any {\n        return this._navManagerService.getComponentRef(index);\n    }\n\n    public unsetComponentRef(index: number = null): WizardManagerService\n    {\n        this._navManagerService.unsetComponentRef(index);\n        return this;\n    }\n\n    public navTo(index: number, hasSubmit: boolean = false): void\n    {\n        return this._navManagerService.navToAction(index, hasSubmit);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/wizard/ts/src/wizard-manager.service.ts","import {Component, Inject, ElementRef, Renderer, ViewChild, ViewChildren, ViewContainerRef, QueryList} from '@angular/core';\nimport {IWizardManager as IWizard, LazyLoadData} from './wizard-manager.service';\nimport {BaseModalPopupExt} from '../../../modal/ts/modal.service';\nimport {WizardPopupProvider} from './wizard-popup-provider';\n\n// Reexports\nexport {WizardPopupProvider, IWizard, LazyLoadData};\n\n\n@Component({\n    selector: '.js_wizard',\n    template: '' // Define template in child component\n})\nexport class WizardPopupExtComponent extends BaseModalPopupExt\n{\n    // Constructor vars\n    protected _wizardManagerService: any;\n\n    // For NavManagerService\n    @ViewChildren('js_lazyLoadContainer', {read: ViewContainerRef}) lazyLoadViewContainerRefQL: QueryList<ViewContainerRef>;\n\n    constructor() { super(); }\n\n    public initWizardPopupExtComponent(\n        elementRef: any,\n        renderer: any,\n        @Inject('Provider') provider: WizardPopupProvider,\n        wizardManagerService: any, // Any is used, otherwise you get an error \"[Class] is not defined\"\n    ) {\n        super.initBaseModalPopupExt(\n            elementRef,\n            renderer,\n            provider\n        );\n        this._wizardManagerService = wizardManagerService;\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngAfterViewInit()\n    {\n        // Initializes the children navigation manager service\n        this._wizardManagerService.init(this, this.lazyLoadViewContainerRefQL);\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnDestroy()\n    {\n        // Free variables\n        this._wizardManagerService.reset();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/wizard/ts/src/wizard-popup.ext-component.ts","import {Component, ElementRef, Inject, Injector, Renderer, QueryList, Optional, ViewChildren, ViewContainerRef, ViewChild} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {DataService} from \"../../../../../../../AppBundle/Resources/public/ts/data-service/data.service\";\nimport {TreeViewDataService} from \"../../../../../../../AppBundle/Resources/public/ts/data-service/tree-view-data.service\";\nimport {ActionsService} from '../../../../../../../AppBundle/Resources/public/ts/actions/actions.service';\nimport {WizardFormPopupExtComponent, WizardPopupProvider, IWizard, LazyLoadData} from '../../../../../../../AppBundle/Resources/public/wizard/ts/src/wizard-form-popup.ext-component';\n\n\n@Component({\n    selector: '.js_addFormPopup',\n    template: ''\n})\nexport abstract class FormPopupExtComponent extends WizardFormPopupExtComponent implements IWizard\n{\n    // For NavManagerService\n    @ViewChildren('js_lazyLoadContainer', {read: ViewContainerRef}) lazyLoadViewContainerRefQL: QueryList<ViewContainerRef>;\n\n    // Constructor vars\n    protected _helperService: any;\n    protected _dataService: any;\n    protected _parentFormService: any;\n    protected _injector: Injector;\n\n    constructor() { super(); }\n\n    initBaseDocumentInvoiceAddFormPopupExtComponent(\n        elementRef: any,\n        renderer: any,\n        @Inject('Provider') provider: WizardPopupProvider,\n        wizardManagerService: any,\n        formService: any,\n        @Inject('HelperService') helperService: any,\n        @Inject('DataService') dataService: any,\n        @Inject('ParentFormService') parentFormService: any, // To get parent object\n        injector: any\n    ) {\n        // Call parent\n        super.initWizardFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            wizardManagerService,\n            formService\n        );\n\n        // Constructor vars\n        this._helperService = helperService;\n        this._dataService = dataService;\n        this._parentFormService = parentFormService;\n        this._injector = injector;\n    }\n\n    /**\n     * Submit navigation (when leave one container to navigate in other one)\n     * @param index (index to validate)\n     * @returns {Promise<boolean>}\n     */\n    public submitNav(index: number): Promise<boolean>\n    {\n        let that = this,\n            route = null,\n            componentRef = null;\n\n        return new Promise(function(resolve, reject) {\n            switch (index) {\n                case 0:\n                    // Submit values\n                    componentRef = that._wizardManagerService.getComponentRef(index);\n                    if (componentRef) {\n                        route = that._dataService.getRoute('addStep1Submit');\n\n                        return componentRef.instance.submitChoices(route, true).then(\n                            data => {\n                                if (data['object']) {\n                                    that._formService.setObject(data['object']);\n                                    return resolve(true);\n                                }\n                            },\n                            errors => { return reject(false); }\n                        );\n                    }\n                    return reject(false);\n                case 1:\n                    // Save form changes\n\n                    // Force form submit to save object into data base\n                    // (at this time, object is stored in session)\n                    that._formService.setForceSubmit(true);\n                    route = that._dataService.getRoute('addStep2');\n\n                    return that._formService.save(route).then(\n                        data => { return resolve(true); },\n                        errors => { return reject(false); }\n                    );\n            }\n\n            // Nothing to do\n            return resolve(true);\n        });\n    }\n\n    /**\n     * Get navigation data (needed data to lazy load container)\n     * @param index (index to load)\n     * @returns NavData\n     */\n    abstract getNavData(index: number): LazyLoadData\n\n    /**\n     * Get nav providers (to lazy load components in container with dependency injection)\n     * @param index (index to load)\n     * @param data (data to resolve all providers)\n     * @returns {Array}\n     */\n    public getNavProviders(index: number, data = null): any\n    {\n        switch (index) {\n            case 0:\n                // Set actions\n                data['actions'] = {search: true, radioChoice: true};\n                return [\n                    {provide: 'DataService', useClass: TreeViewDataService},\n                    {provide: 'DataServiceProvider', useValue: this._helperService.getTreeViewDataServiceProvider(data)},\n                    {provide: 'Provider', useValue: this._helperService.getTreeViewProvider(data)},\n                    ActionsService,\n                    {provide: 'ActionsServiceProvider', useValue: this._helperService.getActionsServiceProvider(data)},\n                    {provide: 'Popups', useValue: null}\n                ];\n            case 1:\n                return [];\n        }\n\n        return null;\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngAfterViewInit()\n    {\n        super.ngAfterViewInit();\n\n        // Open the first tab\n        this._wizardManagerService.navTo(0);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/base-document-invoice/add/ts/form-popup.ext-component.ts","import {Component, ElementRef, Inject, Optional, Injector, Renderer} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormPopupExtensionComponent, FormProvider} from '../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\n\n\n@Component({\n    selector: '#js_documentInvoiceDetailFormPopup',\n    template: ''\n})\nexport class FormPopupExtComponent extends FormPopupExtensionComponent\n{\n    // Constructor vars\n    protected _helperService: any;\n\n    // Configure number of decimals to use and to round\n    protected decimalConf: any;\n\n    constructor() { super(); }\n\n    initBaseDocumentInvoiceEditFormPopupExtComponent(\n        elementRef: any,\n        renderer: any,\n        @Inject('Provider') provider: FormProvider,\n        formService: any,\n        @Inject('DataService') dataService: any,\n        @Inject('HelperService') helperService: any\n    ) {\n        super.initFormPopupExtensionComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService\n        );\n\n        // Constructor vars\n        this._helperService = helperService;\n\n        this.decimalConf = this._helperService.getDecimalConf();\n    }\n\n    /**\n     * onServiceChange\n     * @param value\n     */\n    protected onServiceChange(value: string): void\n    {\n        let that = this;\n\n        this._dataService.runAction(\n            (this._helperService.getAppVar('route')\n                + 'bck/services/regular-service/get-vat-code-percentage/'\n                + value\n            )\n        ).then(\n            data => {\n                if (data['localData']) {\n                    that._formService.getObject()['vatCode_percentage']\n                        = (data['localData']['data']['vatCodePercentage'] || null);\n                    that.setTotals();\n                }\n            },\n            errors => { console.log(errors); return; }\n        );\n    }\n\n    /**\n     * onQuantityEnterKey\n     * @param value\n     */\n    protected onQuantityEnterKey(value: any): void\n    {\n        this._formService.getObject()['quantity'] = value; // Value is not yet setted in object\n        this.setTotals();\n    }\n\n    /**\n     * onValueEnterKey\n     * @param value\n     */\n    protected onValueEnterKey(value: any): void\n    {\n        this._formService.getObject()['user_value'] = value;\n        this.setTotals();\n    }\n\n    /**\n     * onIsVatIncludedChange\n     * @param value\n     */\n    protected onIsVatIncludedChange(value: any): void\n    {\n        this._formService.getObject()['isVatIncluded'] = value;\n        this.setTotals();\n    }\n\n    /**\n     * Set totals\n     * @returns any\n     */\n    protected setTotals(): any {\n        let obj = this._formService.getObject(),\n            quantity = parseFloat(obj['quantity'] || '0'),\n            user_value = parseFloat(obj['user_value'] || '0'),\n            isVatIncluded = obj['isVatIncluded'],\n            vatPercentage = parseFloat(obj['vatCode_percentage'] || '0'),\n            vatValue = 0;\n\n        // Normalize decimals and update inputs with rounded values (with or without VAT, according with user preferences)\n        // @TODO update only when the user leaves the input,\n        // otherwise user can not fill the input with more that one digit at a time (commented bellow).\n        user_value = parseFloat(/*obj['user_value'] = */  (Math.round(\n                user_value * this.decimalConf.unit.iterator) / this.decimalConf.unit.iterator\n            ).toFixed(this.decimalConf.unit.value)\n        );\n\n        // Calc VAT value and value\n        if (vatPercentage > 0) {\n            if (isVatIncluded) {\n                // KEEP SAME METHOD THAT PHP FUNCTIONS\n                // We need to adjust the VAT value.\n                // Sometimes the rounded value can produce a different VAT value when it is calculated again\n                // based on the rounded value, since that all forms use the value (rounded without VAT) to make all\n                // calculus, this issue can cause inquiries between forms when try to calc the VAT value again, so we\n                // need to adjust the VAT value according with the rounded value\n                user_value = parseFloat((Math.round(\n                            (user_value / (1 + (vatPercentage / 100)))\n                            * this.decimalConf.unit.iterator) / this.decimalConf.unit.iterator\n                    ).toFixed(this.decimalConf.unit.value)\n                );\n            }\n            vatValue = parseFloat((Math.round(\n                        (user_value * (vatPercentage / 100))\n                        * this.decimalConf.unit.iterator) / this.decimalConf.unit.iterator\n                ).toFixed(this.decimalConf.unit.value)\n            );\n        }\n\n        // Value (unit value without VAT)\n        obj['value'] = parseFloat(user_value.toFixed(this.decimalConf.unit.value));\n\n        // Total vat\n        obj['totalVat'] = (Math.round(\n                    (vatValue * quantity)\n                    * this.decimalConf.total.iterator) / this.decimalConf.total.iterator\n            ).toFixed(this.decimalConf.total.value);\n\n        // Total unit\n        let totalUnit = parseFloat((Math.round(\n                    (parseFloat(obj['value'] || 0) + vatValue)\n                    * this.decimalConf.total.iterator) / this.decimalConf.total.iterator\n            ).toFixed(this.decimalConf.total.value)\n        );\n\n        // Total\n        obj['total'] = (Math.round(\n                // Do not use \"subTotal\" nor \"totalVat\" to get the \"total\", because this values are already rounded,\n                // and in some cases the sum of 2 rounded values cause inquiries.\n                // Before multiply round the sum to get a coherent total unit value\n                (totalUnit * quantity)\n                * this.decimalConf.total.iterator) / this.decimalConf.total.iterator\n        ).toFixed(this.decimalConf.total.value);\n\n        // Sub total\n        obj['subTotal'] = (Math.round(\n                // Sub total is determined in this way, because in some cases the sum of \"subTotal\" and \"totalVat\"\n                // rounded does not match with the correct total, given that this values are rounded to 2 decimals\n                // and lost precision, so in this way we keep the calculus with coherence giving preference to keep\n                // \"totalVat\" untouched (legal values).\n                (parseFloat(obj['total'] || '0') - parseFloat(obj['totalVat'] || '0'))\n                * this.decimalConf.total.iterator) / this.decimalConf.total.iterator\n        ).toFixed(this.decimalConf.total.value);\n\n        return this;\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnDestroy()\n    {\n        // If is a '_isSessionStorage' object, the object is ignored, so we need to update manually all objects\n        // (occurs in add mode)\n        if (this._dataService.getObject()['_isSessionStorage']\n            && this._formService.getObject()['id']\n        ) {\n            this._dataService.refresh();\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/base-document-invoice/edit/ts/form-popup.ext-component.ts","import {Component, ElementRef, Inject, Injector, Renderer, QueryList, Optional, ViewChildren, ViewContainerRef, ViewChild} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {DataService} from \"../../../../../../../AppBundle/Resources/public/ts/data-service/data.service\";\nimport {TreeViewDataService} from \"../../../../../../../AppBundle/Resources/public/ts/data-service/tree-view-data.service\";\nimport {ActionsService} from '../../../../../../../AppBundle/Resources/public/ts/actions/actions.service';\nimport {WizardFormPopupExtComponent, WizardPopupProvider, IWizard, LazyLoadData} from '../../../../../../../AppBundle/Resources/public/wizard/ts/src/wizard-form-popup.ext-component';\n\n\n@Component({\n    selector: '.js_addFormPopup',\n    template: ''\n})\nexport abstract class FormPopupExtComponent extends WizardFormPopupExtComponent implements IWizard\n{\n    // For NavManagerService\n    @ViewChildren('js_lazyLoadContainer', {read: ViewContainerRef}) lazyLoadViewContainerRefQL: QueryList<ViewContainerRef>;\n\n    // Constructor vars\n    protected _helperService: any;\n    protected _dataService: any;\n    protected _parentFormService: any;\n    protected _injector: Injector;\n\n    constructor() { super(); }\n\n    initBaseDocumentRectificationAddFormPopupExtComponent(\n        elementRef: any,\n        renderer: any,\n        @Inject('Provider') provider: WizardPopupProvider,\n        wizardManagerService: any,\n        formService: any,\n        @Inject('HelperService') helperService: any,\n        @Inject('DataService') dataService: any,\n        @Inject('ParentFormService') parentFormService: any, // To get parent object\n        injector: any\n    ) {\n        // Call parent\n        super.initWizardFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            wizardManagerService,\n            formService\n        );\n\n        // Constructor vars\n        this._helperService = helperService;\n        this._dataService = dataService;\n        this._parentFormService = parentFormService;\n        this._injector = injector;\n    }\n\n    /**\n     * Submit navigation (when leave one container to navigate in other one)\n     * @param index (index to validate)\n     * @returns {Promise<boolean>}\n     */\n    public submitNav(index: number): Promise<boolean>\n    {\n        let that = this,\n            route = null,\n            componentRef = null;\n\n        return new Promise(function(resolve, reject) {\n            switch (index) {\n                case 0:\n                    // Submit values\n                    componentRef = that._wizardManagerService.getComponentRef(index);\n                    if (componentRef) {\n                        route = that._dataService.getRoute('addStep1Submit');\n\n                        return componentRef.instance.submitChoices(route, true).then(\n                            data => {\n                                if (data['object']) {\n                                    // Reset new object\n                                    that._dataService.newObject(null, data['object']);\n                                    return resolve(true);\n                                }\n                            },\n                            errors => { return reject(false); }\n                        );\n                    }\n                    return reject(false);\n                case 1:\n                    // Save form changes\n\n                    // Force form submit to save object into data base\n                    // (at this time, object is stored in session)\n                    that._formService.setForceSubmit(true);\n                    route = that._dataService.getRoute('addStep2');\n\n                    return that._formService.save(route).then(\n                        data => { return resolve(true); },\n                        errors => { return reject(false); }\n                    );\n            }\n\n            // Nothing to do\n            return resolve(true);\n        });\n    }\n\n    /**\n     * Get navigation data (needed data to lazy load container)\n     * @param index (index to load)\n     * @returns NavData\n     */\n    abstract getNavData(index: number): LazyLoadData\n\n    /**\n     * Get nav providers (to lazy load components in container with dependency injection)\n     * @param index (index to load)\n     * @param data (data to resolve all providers)\n     * @returns {Array}\n     */\n    public getNavProviders(index: number, data = null): any\n    {\n        switch (index) {\n            case 0:\n                // Set actions\n                data['actions'] = {search: true, radioChoice: true};\n                return [\n                    {provide: 'DataService', useClass: TreeViewDataService},\n                    {provide: 'DataServiceProvider', useValue: this._helperService.getTreeViewDataServiceProvider(data)},\n                    {provide: 'Provider', useValue: this._helperService.getTreeViewProvider(data)},\n                    ActionsService,\n                    {provide: 'ActionsServiceProvider', useValue: this._helperService.getActionsServiceProvider(data)},\n                    {provide: 'Popups', useValue: null}\n                ];\n            case 1:\n                return [];\n        }\n\n        return null;\n    }\n\n\n    /**\n     * Lifecycle callback\n     */\n    ngAfterViewInit()\n    {\n        super.ngAfterViewInit();\n\n        // Open the first tab\n        this._wizardManagerService.navTo(0);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/base-document-rectification/add/ts/form-popup.ext-component.ts","import {Component, ElementRef, Inject, Optional, Injector, Renderer} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormPopupExtensionComponent, FormProvider} from '../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\n\n\n@Component({\n    selector: '#js_documentInvoiceRectificationFormPopup',\n    template: ''\n})\nexport class FormPopupExtComponent extends FormPopupExtensionComponent\n{\n    // Constructor vars\n    protected _helperService: any;\n\n    // Configure number of decimals to use and to round\n    protected decimalConf: any;\n\n    constructor() { super(); }\n\n    initBaseDocumentRectificationEditFormPopupExtComponent(\n        elementRef: any,\n        renderer: any,\n        @Inject('Provider') provider: FormProvider,\n        formService: any,\n        @Inject('DataService') dataService: any,\n        @Inject('HelperService') helperService: any\n    ) {\n        super.initFormPopupExtensionComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService\n        );\n\n        // Constructor vars\n        this._helperService = helperService;\n\n        this.decimalConf = this._helperService.getDecimalConf();\n    }\n\n    /**\n     * onServiceChange\n     * @param value\n     */\n    protected onServiceChange(value: string): void\n    {\n        let that = this;\n\n        this._dataService.runAction(\n            (this._helperService.getAppVar('route')\n                + 'bck/services/regular-service/get-vat-code-percentage/'\n                + value\n            )\n        ).then(\n            data => {\n                if (data['localData']) {\n                    that._formService.getObject()['vatCode_percentage']\n                        = (data['localData']['data']['vatCodePercentage'] || null);\n                    that.setTotals();\n                }\n            },\n            errors => { console.log(errors); return; }\n        );\n    }\n\n    /**\n     * onQuantityEnterKey\n     * @param value\n     */\n    protected onQuantityEnterKey(value: any): void\n    {\n        this._formService.getObject()['quantity'] = value; // Value is not yet setted in object\n        this.setTotals();\n    }\n\n    /**\n     * onValueEnterKey\n     * @param value\n     */\n    protected onValueEnterKey(value: any): void\n    {\n        this._formService.getObject()['user_value'] = value;\n        this.setTotals();\n    }\n\n    /**\n     * onIsVatIncludedChange\n     * @param value\n     */\n    protected onIsVatIncludedChange(value: any): void\n    {\n        this._formService.getObject()['isVatIncluded'] = value;\n        this.setTotals();\n    }\n\n    /**\n     * Set totals\n     * @returns any\n     */\n    protected setTotals(): any {\n        let obj = this._formService.getObject(),\n            quantity = parseFloat(obj['quantity'] || '0'),\n            user_value = parseFloat(obj['user_value'] || '0'),\n            isVatIncluded = obj['isVatIncluded'],\n            vatPercentage = parseFloat(obj['vatCode_percentage'] || '0'),\n            vatValue = 0;\n\n        // Normalize decimals and update inputs with rounded values (with or without VAT, according with user preferences)\n        // @TODO update only when the user leaves the input,\n        // otherwise user can not fill the input with more that one digit at a time (commented bellow).\n        user_value = parseFloat(/*obj['user_value'] = */  (Math.round(\n                user_value * this.decimalConf.unit.iterator) / this.decimalConf.unit.iterator\n            ).toFixed(this.decimalConf.unit.value)\n        );\n\n        // Calc VAT value and value\n        if (vatPercentage > 0) {\n            if (isVatIncluded) {\n                // KEEP SAME METHOD THAT PHP FUNCTIONS\n                // We need to adjust the VAT value.\n                // Sometimes the rounded value can produce a different VAT value when it is calculated again\n                // based on the rounded value, since that all forms use the value (rounded without VAT) to make all\n                // calculus, this issue can cause inquiries between forms when try to calc the VAT value again, so we\n                // need to adjust the VAT value according with the rounded value\n                user_value = parseFloat((Math.round(\n                            (user_value / (1 + (vatPercentage / 100)))\n                            * this.decimalConf.unit.iterator) / this.decimalConf.unit.iterator\n                    ).toFixed(this.decimalConf.unit.value)\n                );\n            }\n            vatValue = parseFloat((Math.round(\n                        (user_value * (vatPercentage / 100))\n                        * this.decimalConf.unit.iterator) / this.decimalConf.unit.iterator\n                ).toFixed(this.decimalConf.unit.value)\n            );\n        }\n\n        // Value (unit value without VAT)\n        obj['value'] = parseFloat(user_value.toFixed(this.decimalConf.unit.value));\n\n        // Total vat\n        obj['totalVat'] = (Math.round(\n                (vatValue * quantity)\n                * this.decimalConf.total.iterator) / this.decimalConf.total.iterator\n        ).toFixed(this.decimalConf.total.value);\n\n        // Total unit\n        let totalUnit = parseFloat((Math.round(\n                    (parseFloat(obj['value'] || 0) + vatValue)\n                    * this.decimalConf.total.iterator) / this.decimalConf.total.iterator\n            ).toFixed(this.decimalConf.total.value)\n        );\n\n        // Total\n        obj['total'] = (Math.round(\n                // Do not use \"subTotal\" nor \"totalVat\" to get the \"total\", because this values are already rounded,\n                // and in some cases the sum of 2 rounded values cause inquiries.\n                // Before multiply round the sum to get a coherent total unit value\n                (totalUnit * quantity)\n                * this.decimalConf.total.iterator) / this.decimalConf.total.iterator\n        ).toFixed(this.decimalConf.total.value);\n\n        // Sub total\n        obj['subTotal'] = (Math.round(\n                // Sub total is determined in this way, because in some cases the sum of \"subTotal\" and \"totalVat\"\n                // rounded does not match with the correct total, given that this values are rounded to 2 decimals\n                // and lost precision, so in this way we keep the calculus with coherence giving preference to keep\n                // \"totalVat\" untouched (legal values).\n                (parseFloat(obj['total'] || '0') - parseFloat(obj['totalVat'] || '0'))\n                * this.decimalConf.total.iterator) / this.decimalConf.total.iterator\n        ).toFixed(this.decimalConf.total.value);\n\n        return this;\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnDestroy()\n    {\n        // If is a '_isSessionStorage' object, the object is ignored, so we need to update manually all objects\n        // (occurs in add mode)\n        if (this._dataService.getObject()['_isSessionStorage']\n            && this._formService.getObject()['id']\n        ) {\n            this._dataService.refresh();\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/base-document-rectification/edit/ts/form-popup.ext-component.ts","import {Component, ElementRef, Inject, Injector, Renderer, QueryList, Optional, ViewChildren, ViewContainerRef, ViewChild} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {DataService} from \"../../../../../../../AppBundle/Resources/public/ts/data-service/data.service\";\nimport {ActionsService} from '../../../../../../../AppBundle/Resources/public/ts/actions/actions.service';\nimport {WizardFormPopupExtComponent, WizardPopupProvider, IWizard, LazyLoadData} from '../../../../../../../AppBundle/Resources/public/wizard/ts/src/wizard-form-popup.ext-component';\n\n\n@Component({\n    selector: '.js_addFormPopup',\n    template: ''\n})\nexport abstract class FormPopupExtComponent extends WizardFormPopupExtComponent implements IWizard\n{\n    // For NavManagerService\n    @ViewChildren('js_lazyLoadContainer', {read: ViewContainerRef}) lazyLoadViewContainerRefQL: QueryList<ViewContainerRef>;\n\n    // Constructor vars\n    protected _helperService: any;\n    protected _dataService: any;\n    protected _parentFormService: any;\n    protected _injector: Injector;\n\n    constructor() { super(); }\n\n    initBaseDocumentSettlementAddFormPopupExtComponent(\n        elementRef: any,\n        renderer: any,\n        @Inject('Provider') provider: WizardPopupProvider,\n        wizardManagerService: any,\n        formService: any,\n        @Inject('HelperService') helperService: any,\n        @Inject('DataService') dataService: any,\n        @Inject('ParentFormService') parentFormService: any, // To get parent object\n        injector: any\n    ) {\n        // Call parent\n        super.initWizardFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            wizardManagerService,\n            formService\n        );\n\n        // Constructor vars\n        this._helperService = helperService;\n        this._dataService = dataService;\n        this._parentFormService = parentFormService;\n        this._injector = injector;\n    }\n\n    /**\n     * Submit navigation (when leave one container to navigate in other one)\n     * @param index (index to validate)\n     * @returns {Promise<boolean>}\n     */\n    public submitNav(index: number): Promise<boolean>\n    {\n        let that = this,\n            route = null,\n            componentRef = null;\n\n        return new Promise(function(resolve, reject) {\n            switch (index) {\n                case 0:\n                    // Submit values\n                    componentRef = that._wizardManagerService.getComponentRef(index);\n                    if (componentRef) {\n                        route = that._dataService.getRoute('addStep1Submit');\n\n                        return componentRef.instance.submitChoices(route, true).then(\n                            data => {\n                                if (data['object']) {\n                                    // Reset new object\n                                    that._dataService.newObject(null, data['object']);\n                                    return resolve(true);\n                                }\n                            },\n                            errors => {\n                                return reject(false);\n                            }\n                        );\n                    }\n                    return reject(false);\n                case 1:\n                    // Save form changes\n\n                    // Force form submit to save object into data base\n                    // (at this time, object is stored in session)\n                    that._formService.setForceSubmit(true);\n                    route = that._dataService.getRoute('addStep2');\n\n                    return that._formService.save(route).then(\n                        data => { return resolve(true); },\n                        errors => { return reject(false); }\n                    );\n            }\n\n            // Nothing to do\n            return resolve(true);\n        });\n    }\n\n    /**\n     * Get navigation data (needed data to lazy load container)\n     * @param index (index to load)\n     * @returns NavData\n     */\n    abstract getNavData(index: number): LazyLoadData\n\n    /**\n     * Get nav providers (to lazy load components in container with dependency injection)\n     * @param index (index to load)\n     * @param data (data to resolve all providers)\n     * @returns {Array}\n     */\n    public getNavProviders(index: number, data = null): any\n    {\n        switch (index) {\n            case 0:\n                // Set actions\n                data['actions'] = {search: true, radioChoice: true};\n                return [\n                    {provide: 'DataService', useClass: DataService},\n                    {provide: 'DataServiceProvider', useValue: this._helperService.getDataServiceProvider(data)},\n                    {provide: 'Provider', useValue: this._helperService.getDataBoxProvider(data)},\n                    ActionsService,\n                    {provide: 'ActionsServiceProvider', useValue: this._helperService.getActionsServiceProvider(data)},\n                    {provide: 'Popups', useValue: null}\n                ];\n            case 1:\n                return [];\n        }\n\n        return null;\n    }\n\n\n    /**\n     * Lifecycle callback\n     */\n    ngAfterViewInit()\n    {\n        super.ngAfterViewInit();\n\n        // Open the first tab\n        this._wizardManagerService.navTo(0);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/base-document-settlement/add/ts/form-popup.ext-component.ts","import {Component, ElementRef, Inject, Injector, Renderer, QueryList, Optional, ViewChildren, ViewContainerRef, ViewChild} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {FormService} from '../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {DataService} from \"../../../../../../../AppBundle/Resources/public/ts/data-service/data.service\";\nimport {TreeViewDataService} from \"../../../../../../../AppBundle/Resources/public/ts/data-service/tree-view-data.service\";\nimport {ActionsService} from '../../../../../../../AppBundle/Resources/public/ts/actions/actions.service';\nimport {WizardFormPopupExtComponent, WizardPopupProvider, IWizard, LazyLoadData} from '../../../../../../../AppBundle/Resources/public/wizard/ts/src/wizard-form-popup.ext-component';\n\n\n@Component({\n    selector: '.js_addFormPopup',\n    template: ''\n})\nexport abstract class FormPopupExtComponent extends WizardFormPopupExtComponent implements IWizard\n{\n    // For NavManagerService\n    @ViewChildren('js_lazyLoadContainer', {read: ViewContainerRef}) lazyLoadViewContainerRefQL: QueryList<ViewContainerRef>;\n\n    // Constructor vars\n    protected _helperService: any;\n    protected _dataService: any;\n    protected _injector: Injector;\n\n    constructor() { super(); }\n\n    public initBaseDocumentAddFormPopupExtComponent(\n        elementRef: any,\n        renderer: any,\n        @Inject('Provider') provider: WizardPopupProvider,\n        wizardManagerService: any,\n        formService: any,\n        @Inject('HelperService') helperService: any,\n        @Inject('DataService') dataService: any,\n        injector: any\n    ) {\n        // Call parent\n        super.initWizardFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            wizardManagerService,\n            formService\n        );\n\n        // Constructor vars\n        this._helperService = helperService;\n        this._dataService = dataService;\n        this._injector = injector;\n    }\n\n    /**\n     * Submit navigation (when leave one container to navigate in other one)\n     * @param index (index to validate)\n     * @returns {Promise<boolean>}\n     */\n    public submitNav(index: number): Promise<boolean>\n    {\n        let that = this,\n            route = null,\n            componentRef = null;\n\n        return new Promise(function(resolve, reject) {\n            switch (index) {\n                case 0:\n                    // Save form\n                    route = (that._dataService.getRoute('addStep1'));\n\n                    return that._formService.save(route).then(\n                        data => {\n                            // Update entityAddress autoCompleteProvider choices route to the updated entity\n                            let autoCompleteProviders = that._injector.get('AutoCompleteProviders');\n                            if (autoCompleteProviders['entityAddressObj']['childInjector']) {\n                                let choicesDataService = autoCompleteProviders['entityAddressObj']['childInjector'].get('DataServiceChoices'),\n                                    choicesRoute = choicesDataService.getRoute('choices');\n                                choicesRoute = (choicesRoute.substr(0, choicesRoute.lastIndexOf('/') + 1)\n                                    + that._formService.getObject()['entityObj']\n                                );\n                                choicesDataService.setRoute('choices', choicesRoute);\n                            }\n\n                            return resolve(true);\n                        },\n                        errors => { return reject(false); }\n                    );\n                case 1:\n                    // Submit values\n                    componentRef = that._wizardManagerService.getComponentRef(index);\n\n                    // PAYMENT\n                    if (that._formService.getObject()['documentType_type'] == 'PAYMENT') {\n                        return componentRef.instance._formService.save().then(\n                            data => {\n                                that._dataService.refreshObject();\n                                return resolve(true);\n                            },\n                            errors => { return reject(false); }\n                        );\n                    }\n\n                    route = (that._dataService.getRoute('addStep2') + '/' + that._formService.getObject()['id']);\n                    return componentRef.instance.submitChoices(route, true).then(\n                        data => {\n                            that._dataService.refreshObject();\n                            return resolve(true);\n                        },\n                        errors => { return reject(false); }\n                    );\n                case 2:\n                    // Save form\n                    componentRef = that._wizardManagerService.getComponentRef(index);\n\n                    switch (that._formService.getObject()['documentType_type']) {\n                        case 'RECEIPT':\n                            route = (that._dataService.getRoute('addStep3Receipt'));\n                            break;\n                        case 'PAYMENT':\n                            route = (that._dataService.getRoute('addStep3Payment'));\n                            break;\n                        case 'SETTLEMENT':\n                            route = (that._dataService.getRoute('addStep3Settlement'));\n                            break;\n                        default:\n                            route = (that._dataService.getRoute('addStep3Invoice'));\n                            break;\n                    }\n\n                    that._formService.setForceSubmit(false); // Disable force submit, at this time the user is finishing\n                    // the process and submitting the form (this procedure avoid form to question the user when\n                    // the saved object is returned, because we have two FormServices here using the same DataService)\n                    return componentRef.instance._formService.save(route).then(\n                        data => { return resolve(true); },\n                        errors => {\n                            that._formService.setForceSubmit(true); // If error put again form waiting for submit\n                            return reject(false);\n                        }\n                    );\n            }\n\n            // Nothing to do\n            return resolve(true);\n        });\n    }\n\n    /**\n     * Get navigation data (needed data to lazy load container)\n     * @param index (index to load)\n     * @returns NavData\n     */\n    abstract getNavData(index: number): LazyLoadData\n\n    /**\n     * Get nav providers (to lazy load components in container with dependency injection)\n     * @param index (index to load)\n     * @param data (data to resolve all providers)\n     * @returns {Array}\n     */\n    public getNavProviders(index: number, data = null): any\n    {\n        switch (index) {\n            case 1:\n                let providers = [];\n                switch (this._formService.getObject()['documentType_type']) {\n                    case 'INVOICE':\n                    case 'RECTIFICATION':\n                        providers = [\n                            {provide: 'DataService', useClass: TreeViewDataService},\n                            {provide: 'DataServiceProvider', useValue: this._helperService.getTreeViewDataServiceProvider(data)},\n                            {provide: 'Provider', useValue: this._helperService.getTreeViewProvider(data)},\n                        ];\n                        break;\n                    case 'PAYMENT':\n                        return [\n                            {provide: 'DataService', useClass: DataService},\n                            {provide: 'DataServiceProvider', useValue: this._helperService.getDataServiceProvider(data)},\n                            {provide: 'LegendProvider', useValue: this._helperService.getLegendProvider(data)},\n                            // Reset FormServiceProvider to use DataServiceProvider as default values\n                            {provide: 'FormServiceProvider', useValue: {}},\n                            FormService\n                        ];\n                    default:\n                        providers = [\n                            {provide: 'DataService', useClass: DataService},\n                            {provide: 'DataServiceProvider', useValue: this._helperService.getDataServiceProvider(data)},\n                            {provide: 'Provider', useValue: this._helperService.getDataBoxProvider(data)},\n                        ];\n                }\n\n                return providers.concat([\n                    ActionsService,\n                    {provide: 'ActionsServiceProvider', useValue: this._helperService.getActionsServiceProvider(data)},\n                    {provide: 'LegendProvider', useValue: this._helperService.getLegendProvider(data)},\n                    {provide: 'Popups', useValue: null}\n                ]);\n            case 2:\n                return [\n                    // Reset FormServiceProvider to use DataServiceProvider as default values\n                    {provide: 'FormServiceProvider', useValue: {}},\n                    FormService\n                ];\n        }\n\n        return null;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/base-document/add/ts/form-popup.ext-component.ts","import {Component, Inject, Injector, ViewContainerRef, Renderer} from '@angular/core';\nimport {DataService} from '../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {DataBoxExtensionComponent, DataBoxProvider, Popups, Popup} from '../../../../../../../AppBundle/Resources/public/data-box/ts/src/data-box.extension-component';\n\n\n// Component\n@Component({\n    selector: '.js_document',\n    template: ''\n})\nexport class MainExtComponent extends DataBoxExtensionComponent\n{\n    constructor() { super(); }\n\n    initBaseDocumentIndexMainExtComponent(\n        viewContainerRef: any,\n        renderer: any,\n        @Inject('Provider') dataBoxProvider: DataBoxProvider,\n        @Inject('DataService') dataService: any,\n        tasksLoaderManagerService: any,\n        @Inject('HelperService') helperService: any,\n        actionsService: any,\n        modalService: any,\n        @Inject('Popups') popups: Popups | Popup,\n        injector: any\n    ) {\n        // Call parent\n        super.initDataBoxExtensionComponent(\n            viewContainerRef,\n            renderer,\n            dataBoxProvider,\n            dataService,\n            tasksLoaderManagerService,\n            helperService,\n            actionsService,\n            modalService,\n            popups,\n            injector\n        );\n    }\n\n    /**\n     * Overrides parent\n     * @returns any\n     */\n    protected postCancelObject(): any\n    {\n        return this;\n    }\n\n    /**\n     * Overrides parent\n     * @returns any\n     */\n    protected postDeleteObject(): any\n    {\n        return this.postCancelObject();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/base-document/index/ts/main.ext-component.ts","import {Component, ElementRef, Inject, Optional, Injector, ReflectiveInjector, Renderer, ViewChild, ViewContainerRef} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormPopupExtensionComponent, FormProvider} from '../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\n\n\n// Re-exports\nexport {FormProvider}\n\n\n@Component({\n    selector: '.js_baseFormPopup',\n    template: ''\n})\nexport class BaseFormPopupExtComponent extends FormPopupExtensionComponent\n{\n    // Constructor vars\n    protected _injector: Injector;\n\n    // To check if object has changed to refresh parent\n    protected _object: any;\n\n    constructor() { super(); }\n\n    public initBaseFormPopupExtComponent(\n        elementRef: any,\n        renderer: any,\n        provider: FormProvider,\n        formService: any,\n        dataService: any,\n        injector: any,\n    ) {\n        super.initFormPopupExtensionComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService\n        );\n\n        // Constructor vars\n        this._injector = injector;\n\n        // Set choices route according with the entity\n        this.updateEntityAddressAutoCompleteProviderChoicesRoute();\n    }\n\n    /**\n     * Update Entity Address Auto Complete Provider Choices Route\n     * Set choices route according with the entity\n     * @returns any\n     */\n    protected updateEntityAddressAutoCompleteProviderChoicesRoute()\n    {\n        // Update entityAddress autoCompleteProvider choices route to the updated entity\n        let autoCompleteProviders = this._injector.get('AutoCompleteProviders');\n        if (autoCompleteProviders['entityAddressObj']['childInjector']) {\n            let choicesDataService = autoCompleteProviders['entityAddressObj']['childInjector'].get('DataServiceChoices'),\n                choicesRoute = choicesDataService.getRoute('choices');\n            choicesRoute = (choicesRoute.substr(0, choicesRoute.lastIndexOf('/') + 1)\n                + this._formService.getObject()['entityObj']\n            );\n            choicesDataService.setRoute('choices', choicesRoute);\n        } else {\n            autoCompleteProviders['entityAddressObj']['urlConf'] = (\n                autoCompleteProviders['entityAddressObj']['urlConf'].substr(\n                    0,\n                    (autoCompleteProviders['entityAddressObj']['urlConf'].lastIndexOf('/') + 1)\n                )\n                + this._formService.getObject()['entityObj']\n            );\n        }\n\n        return this;\n    }\n\n    /**\n     * onEntityAddressChange\n     * @param value\n     */\n    protected onEntityAddressChange(value: string): void\n    {\n        this._dataService.runAction(\n            (this._dataService.getRoute('edit-entity-address')\n                + '\\\\'\n                + this._formService.getObject()['id']\n            ),\n            {entityAddressObj: value}\n        ).then(\n            data => {\n                if (data['object']) {\n                    // Copy values instead of set the updated object to avoid lost user changes like dates, comment, etc.\n                    let obj = this._formService.getObject();\n                    let originalObj = this._formService.getOriginalObject();\n                    for (let field of ['entityAddressObj', 'entityStreet1', 'entityStreet2', 'entityPostCode', 'entityCity', 'entityRegion']) {\n                        obj[field] = (data['object'][field] || null);\n                        // Update original object yet, because this changes are already saved in database,\n                        // otherwise user will be asked when close the form, because objects are different (have changes),\n                        // and user can wrongly reset the object for the previous address when this procedure is no more\n                        // possible because object is updated in database\n                        originalObj[field] = obj[field];\n                    }\n                }\n                return;\n            },\n            errors => { console.log(errors); return; }\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/base-document/ts/base-form-popup.ext-component.ts","import {Component, ElementRef, Inject, Injector, Renderer, QueryList, Optional, ViewChildren, ViewContainerRef, ViewChild} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {Helper} from '../../../../../../../../AppBundle/Resources/public/ts/helper';\nimport {DataService} from \"../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service\";\nimport {WizardPopupProvider, LazyLoadData} from '../../../../../../../../AppBundle/Resources/public/wizard/ts/src/wizard-form-popup.ext-component';\nimport {WizardManagerService} from '../../../../../../../../AppBundle/Resources/public/wizard/ts/src/wizard-manager.service';\nimport {FormPopupExtComponent} from '../../../../base-document-invoice/add/ts/form-popup.ext-component';\n\n\n/* Import dependencies */\n\n// Booking Parent, used when the document is aggregated to one booking\n// (this code is putted here to avoid to repeat this module in the booking bundle, so we can reuse the same modules)\nvar bookingContext = ((Helper.getAppVar('conf')['localData']['data']['bookingContext'])\n            ? Helper.getAppVar('conf')['localData']['data']['bookingContext'] :\n            null\n    ),\n    bookingId = (bookingContext ? Helper.getAppVar('conf')['object']['id'] : null);\n\nimport {TreeViewExtModule} from '../../../../../../../../AppBundle/Resources/public/tree-view/default/ts/src/tree-view.ext-module';\nimport {Step2ExtModule as ClientDocumentInvoiceDetailAddStep2ExtModule} from './step2.ext-module';\n\n/* /Import dependencies */\n\n\n@Component({\n    selector: '.js_addFormPopup',\n    templateUrl: '../templates/form-popup.component.html'\n})\nexport class FormPopupComponent extends FormPopupExtComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: WizardPopupProvider,\n        wizardManagerService: WizardManagerService,\n        formService: FormService,\n        @Inject('HelperService') helperService: any,\n        @Inject('DataService') dataService: any,\n        @Inject('ParentFormService') parentFormService: any, // To get parent object\n        injector: Injector\n    ) {\n        // Call parent\n        super();\n        super.initBaseDocumentInvoiceAddFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            wizardManagerService,\n            formService,\n            helperService,\n            dataService,\n            parentFormService,\n            injector\n        );\n    }\n\n    /**\n     * Get navigation data (needed data to lazy load container)\n     * @param index (index to load)\n     * @returns NavData\n     */\n    public getNavData(index: number): LazyLoadData\n    {\n        switch (index) {\n            case 0:\n                return {\n                    module: TreeViewExtModule,\n                    component: 'TreeViewComponent',\n                    urlProvider: (this._helperService.getAppVar('route') + 'bck/booking/booking-service-price/data-for-invoice-client/' + this._parentFormService.getObject()['clientObj'] + (bookingContext ? ('/' + bookingId) : ''))\n                };\n            case 1:\n                return {\n                    module: ClientDocumentInvoiceDetailAddStep2ExtModule,\n                    component: 'Step2Component'\n                };\n        }\n\n        return null;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-invoice/add/ts/src/form-popup.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {FormPopupComponent} from './form-popup.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        FormPopupComponent\n    ],\n    exports: [FormPopupComponent]\n})\nexport class FormPopupExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-invoice/add/ts/src/form-popup.ext-module.ts","import {Component, ElementRef, Inject, Optional, Injector, Renderer} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {FormPopupComponent as ClientDocumentInvoiceEditFormPopupComponent} from '../../../edit/ts/src/form-popup.component';\n\n\n@Component({\n    selector: '#js_addStep2',\n    templateUrl: '../templates/step2.component.html'\n})\nexport class Step2Component extends ClientDocumentInvoiceEditFormPopupComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any,\n        @Inject('HelperService') helperService: any\n    ) {\n        super(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            helperService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-invoice/add/ts/src/step2.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {Step2Component} from './step2.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        Step2Component\n    ],\n    exports: [Step2Component]\n})\nexport class Step2ExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-invoice/add/ts/src/step2.ext-module.ts","module.exports = \"<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">    \\n                        <ul class=\\\"row mb-3 no-gutters wizard-nav\\\">\\n                                    <li class=\\\"col-auto wizard-step\\\"\\n                        [class.step-active]=\\\"0 == _wizardManagerService.getIndex()\\\">\\n                        <span class=\\\"step-number\\\">1</span>\\n                        <span class=\\\"step-text\\\">Booking Service</span>\\n                    </li>\\n                                    <li class=\\\"col-auto wizard-step\\\"\\n                        [class.step-active]=\\\"1 == _wizardManagerService.getIndex()\\\">\\n                        <span class=\\\"step-number\\\">2</span>\\n                        <span class=\\\"step-text\\\">Preview</span>\\n                    </li>\\n                            </ul>\\n\\n            \\n                <section [hidden]=\\\"_wizardManagerService.getIndex() != 0\\\"\\n         class=\\\"js_lazyLoadContainer_0\\\">\\n    <ng-template #js_lazyLoadContainer></ng-template>\\n</section>\\n    <section [hidden]=\\\"_wizardManagerService.getIndex() != 1\\\"\\n         class=\\\"js_lazyLoadContainer_1\\\">\\n    <ng-template #js_lazyLoadContainer></ng-template>\\n</section>\\n            \\n            \\n    </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-auto\\\">\\n            <button type=\\\"button\\\" class=\\\"btn-light btn\\\" (click)=\\\"_wizardManagerService.cancelAction($event)\\\">Cancel</button>\\n                <button type=\\\"button\\\" class=\\\"btn-primary btn\\\" (click)=\\\"_wizardManagerService.prevAction($event)\\\"\\n                    *ngIf=\\\"0 < _wizardManagerService.getIndex()\\\">Prev</button>\\n            <button type=\\\"button\\\" class=\\\"btn-primary btn\\\" (click)=\\\"_wizardManagerService.nextAction($event)\\\"\\n                    *ngIf=\\\"1 > _wizardManagerService.getIndex()\\\">Next</button>\\n            <button type=\\\"button\\\" class=\\\"btn-primary btn\\\" (click)=\\\"_wizardManagerService.finishAction($event)\\\"\\n                    *ngIf=\\\"1 == _wizardManagerService.getIndex()\\\">Finish</button>\\n        \\n    </div>\\n</div></div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-invoice/add/ts/templates/form-popup.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/client-document-invoice/add/ts/templates/form-popup.component.html\n// module chunks = main","module.exports = \"\\n\\n\\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n\\n    \\n\\n                        \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().document_code\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_document_code\\\">Doc. Code</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_document_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().document_code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().document_code\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().booking_code\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_booking_code\\\">Booking</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_booking_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().booking_code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().booking_code\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_serviceObj\\\">Service</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                                                        <div class=\\\"html-select\\\"\\n         [htmlSelect]=\\\"'serviceObj'\\\"\\n                      (onChange)=\\\"onServiceChange($event)\\\"         >\\n        <div class=\\\"input-group-control\\\"\\n             [class.error]=\\\"_formService.getErrors()['serviceObj'] && (_formService.getErrors()['serviceObj'].length > 0)\\\">\\n            <span class=\\\"js_label form-control\\\"></span>\\n            <a class=\\\"pull-right\\\"><i class=\\\"fa fa-angle-down\\\"></i></a>\\n        </div>\\n        <div class=\\\"choices js_choices\\\">\\n            <ul class=\\\"form-control-box\\\">        <ng-template ngFor let-choice [ngForOf]=\\\"_dataService.getFieldChoices('serviceObj')\\\">\\n            <li [attr.data-value]=\\\"choice['id']\\\" [innerHtml]=\\\"choice['label']\\\"></li>\\n        </ng-template>\\n    </ul>\\n        </div>\\n    </div>\\n    <input [(ngModel)]=\\\"_formService.getObject().serviceObj\\\"\\n           formControlName = serviceObj\\n           name=\\\"form[serviceObj]\\\"\\n           required=\\\"required\\\"           type=\\\"hidden\\\">\\n                                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().serviceObj\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_description\\\">Description</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_description\\\" name=\\\"form[description]\\\" required=\\\"required\\\" maxlength=\\\"256\\\" [(ngModel)]=\\\"_formService.getObject().description\\\" formControlName=\\\"description\\\" [class.error]=\\\"_formService.getErrors().description &amp;&amp; _formService.getErrors().description.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().description\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_quantity\\\">Quantity</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"number\\\" id=\\\"form_quantity\\\" name=\\\"form[quantity]\\\" required=\\\"required\\\" (input)=\\\"onQuantityEnterKey($event.target.value)\\\" (focusout)=\\\"onQuantityEnterKey($event.target.value)\\\" [(ngModel)]=\\\"_formService.getObject().quantity\\\" formControlName=\\\"quantity\\\" [class.error]=\\\"_formService.getErrors().quantity &amp;&amp; _formService.getErrors().quantity.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().quantity\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                                \\n\\n                                            <input type=\\\"hidden\\\" id=\\\"form_value\\\" name=\\\"form[value]\\\" [(ngModel)]=\\\"_formService.getObject().value\\\" formControlName=\\\"value\\\" [class.error]=\\\"_formService.getErrors().value &amp;&amp; _formService.getErrors().value.length &gt; 0\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().value\\\">{{error}}</label>\\n                                    <div class=\\\"row form-group\\\">\\n                            <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_user_value\\\">Value</label>\\n                    <div class=\\\"col-sm-10\\\"><div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-8\\\">\\n                                                    <input type=\\\"text\\\" id=\\\"form_user_value\\\" name=\\\"form[user_value]\\\" (input)=\\\"onValueEnterKey($event.target.value)\\\" (focusout)=\\\"onValueEnterKey($event.target.value)\\\" [(ngModel)]=\\\"_formService.getObject().user_value\\\" formControlName=\\\"user_value\\\" [class.error]=\\\"_formService.getErrors().user_value &amp;&amp; _formService.getErrors().user_value.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().user_value\\\">{{error}}</label>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                                                    <div class=\\\"checkbox\\\">                                        <label for=\\\"form_isVatIncluded\\\"><input type=\\\"checkbox\\\" id=\\\"form_isVatIncluded\\\" name=\\\"form[isVatIncluded]\\\" (change)=\\\"onIsVatIncludedChange($event.target.checked)\\\" [(ngModel)]=\\\"_formService.getObject().isVatIncluded\\\" formControlName=\\\"isVatIncluded\\\" [class.error]=\\\"_formService.getErrors().isVatIncluded &amp;&amp; _formService.getErrors().isVatIncluded.length &gt; 0\\\" value=\\\"1\\\" /> Is vat included</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isVatIncluded\\\">{{error}}</label>\\n                    </div>\\n                </div></div>\\n            </div>\\n                                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_subTotal\\\">Sub Total</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_subTotal\\\" name=\\\"form[subTotal]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().subTotal\\\" formControlName=\\\"subTotal\\\" [class.error]=\\\"_formService.getErrors().subTotal &amp;&amp; _formService.getErrors().subTotal.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().subTotal\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_totalVat\\\">TAX</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_totalVat\\\" name=\\\"form[totalVat]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().totalVat\\\" formControlName=\\\"totalVat\\\" [class.error]=\\\"_formService.getErrors().totalVat &amp;&amp; _formService.getErrors().totalVat.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().totalVat\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_total\\\">Total</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_total\\\" name=\\\"form[total]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().total\\\" formControlName=\\\"total\\\" [class.error]=\\\"_formService.getErrors().total &amp;&amp; _formService.getErrors().total.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().total\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" [innerHTML]=\\\"getLang('Enabled')\\\"></label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <div class=\\\"checkbox\\\">                                        <label for=\\\"form_isEnabled\\\"><input type=\\\"checkbox\\\" id=\\\"form_isEnabled\\\" name=\\\"form[isEnabled]\\\" [(ngModel)]=\\\"_formService.getObject().isEnabled\\\" formControlName=\\\"isEnabled\\\" [class.error]=\\\"_formService.getErrors().isEnabled &amp;&amp; _formService.getErrors().isEnabled.length &gt; 0\\\" value=\\\"1\\\" checked=\\\"checked\\\" /> Is enabled</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isEnabled\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n    \\n\\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-invoice/add/ts/templates/step2.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/client-document-invoice/add/ts/templates/step2.component.html\n// module chunks = main","import {Component, ElementRef, Inject, Optional, Injector, Renderer} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {FormPopupExtComponent as BaseDocumentInvoiceEditFormPopupExtComponent} from '../../../../base-document-invoice/edit/ts/form-popup.ext-component';\n\n\n@Component({\n    selector: '#js_clientDocumentInvoiceDetailFormPopup',\n    templateUrl: '../templates/form-popup.component.html'\n})\nexport class FormPopupComponent extends BaseDocumentInvoiceEditFormPopupExtComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any,\n        @Inject('HelperService') helperService: any\n    ) {\n        super();\n        super.initBaseDocumentInvoiceEditFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            helperService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-invoice/edit/ts/src/form-popup.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {FormPopupComponent} from './form-popup.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        FormPopupComponent\n    ],\n    exports: [FormPopupComponent]\n})\nexport class FormPopupExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-invoice/edit/ts/src/form-popup.ext-module.ts","module.exports = \"    \\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">    \\n\\n                        \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().document_code\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_document_code\\\">Doc. Code</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_document_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().document_code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().document_code\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().booking_code\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_booking_code\\\">Booking</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_booking_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().booking_code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().booking_code\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_serviceObj\\\">Service</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                                                        <div class=\\\"html-select\\\"\\n         [htmlSelect]=\\\"'serviceObj'\\\"\\n                      (onChange)=\\\"onServiceChange($event)\\\"         >\\n        <div class=\\\"input-group-control\\\"\\n             [class.error]=\\\"_formService.getErrors()['serviceObj'] && (_formService.getErrors()['serviceObj'].length > 0)\\\">\\n            <span class=\\\"js_label form-control\\\"></span>\\n            <a class=\\\"pull-right\\\"><i class=\\\"fa fa-angle-down\\\"></i></a>\\n        </div>\\n        <div class=\\\"choices js_choices\\\">\\n            <ul class=\\\"form-control-box\\\">        <ng-template ngFor let-choice [ngForOf]=\\\"_dataService.getFieldChoices('serviceObj')\\\">\\n            <li [attr.data-value]=\\\"choice['id']\\\" [innerHtml]=\\\"choice['label']\\\"></li>\\n        </ng-template>\\n    </ul>\\n        </div>\\n    </div>\\n    <input [(ngModel)]=\\\"_formService.getObject().serviceObj\\\"\\n           formControlName = serviceObj\\n           name=\\\"form[serviceObj]\\\"\\n           required=\\\"required\\\"           type=\\\"hidden\\\">\\n                                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().serviceObj\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_description\\\">Description</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_description\\\" name=\\\"form[description]\\\" required=\\\"required\\\" maxlength=\\\"256\\\" [(ngModel)]=\\\"_formService.getObject().description\\\" formControlName=\\\"description\\\" [class.error]=\\\"_formService.getErrors().description &amp;&amp; _formService.getErrors().description.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().description\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_quantity\\\">Quantity</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"number\\\" id=\\\"form_quantity\\\" name=\\\"form[quantity]\\\" required=\\\"required\\\" (input)=\\\"onQuantityEnterKey($event.target.value)\\\" (focusout)=\\\"onQuantityEnterKey($event.target.value)\\\" [(ngModel)]=\\\"_formService.getObject().quantity\\\" formControlName=\\\"quantity\\\" [class.error]=\\\"_formService.getErrors().quantity &amp;&amp; _formService.getErrors().quantity.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().quantity\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                                \\n\\n                                            <input type=\\\"hidden\\\" id=\\\"form_value\\\" name=\\\"form[value]\\\" [(ngModel)]=\\\"_formService.getObject().value\\\" formControlName=\\\"value\\\" [class.error]=\\\"_formService.getErrors().value &amp;&amp; _formService.getErrors().value.length &gt; 0\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().value\\\">{{error}}</label>\\n                                    <div class=\\\"row form-group\\\">\\n                            <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_user_value\\\">Value</label>\\n                    <div class=\\\"col-sm-10\\\"><div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-8\\\">\\n                                                    <input type=\\\"text\\\" id=\\\"form_user_value\\\" name=\\\"form[user_value]\\\" (input)=\\\"onValueEnterKey($event.target.value)\\\" (focusout)=\\\"onValueEnterKey($event.target.value)\\\" [(ngModel)]=\\\"_formService.getObject().user_value\\\" formControlName=\\\"user_value\\\" [class.error]=\\\"_formService.getErrors().user_value &amp;&amp; _formService.getErrors().user_value.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().user_value\\\">{{error}}</label>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                                                    <div class=\\\"checkbox\\\">                                        <label for=\\\"form_isVatIncluded\\\"><input type=\\\"checkbox\\\" id=\\\"form_isVatIncluded\\\" name=\\\"form[isVatIncluded]\\\" (change)=\\\"onIsVatIncludedChange($event.target.checked)\\\" [(ngModel)]=\\\"_formService.getObject().isVatIncluded\\\" formControlName=\\\"isVatIncluded\\\" [class.error]=\\\"_formService.getErrors().isVatIncluded &amp;&amp; _formService.getErrors().isVatIncluded.length &gt; 0\\\" value=\\\"1\\\" /> Is vat included</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isVatIncluded\\\">{{error}}</label>\\n                    </div>\\n                </div></div>\\n            </div>\\n                                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_subTotal\\\">Sub Total</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_subTotal\\\" name=\\\"form[subTotal]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().subTotal\\\" formControlName=\\\"subTotal\\\" [class.error]=\\\"_formService.getErrors().subTotal &amp;&amp; _formService.getErrors().subTotal.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().subTotal\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_totalVat\\\">TAX</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_totalVat\\\" name=\\\"form[totalVat]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().totalVat\\\" formControlName=\\\"totalVat\\\" [class.error]=\\\"_formService.getErrors().totalVat &amp;&amp; _formService.getErrors().totalVat.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().totalVat\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_total\\\">Total</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_total\\\" name=\\\"form[total]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().total\\\" formControlName=\\\"total\\\" [class.error]=\\\"_formService.getErrors().total &amp;&amp; _formService.getErrors().total.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().total\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" [innerHTML]=\\\"getLang('Enabled')\\\"></label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <div class=\\\"checkbox\\\">                                        <label for=\\\"form_isEnabled\\\"><input type=\\\"checkbox\\\" id=\\\"form_isEnabled\\\" name=\\\"form[isEnabled]\\\" [(ngModel)]=\\\"_formService.getObject().isEnabled\\\" formControlName=\\\"isEnabled\\\" [class.error]=\\\"_formService.getErrors().isEnabled &amp;&amp; _formService.getErrors().isEnabled.length &gt; 0\\\" value=\\\"1\\\" checked=\\\"checked\\\" /> Is enabled</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isEnabled\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n        \\n                    <div class=\\\"row\\\">\\n            <div class=\\\"col-auto ml-auto\\\">\\n                                            <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"cancelAction($event)\\\"\\n                                        id=\\\"form_cancel\\\"\\n            name=\\\"form[cancel]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Cancel</button>\\n                                                <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"resetAction($event)\\\"\\n                                        id=\\\"form_reset\\\"\\n            name=\\\"form[reset]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-ban\\\"></i>&nbsp;Reset</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAction($event)\\\"\\n                                        id=\\\"form_save\\\"\\n            name=\\\"form[save]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-check\\\"></i>&nbsp;Save</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAndCloseAction($event)\\\"\\n                                        id=\\\"form_saveAndClose\\\"\\n            name=\\\"form[saveAndClose]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Save and Close</button>\\n                                </div>\\n        </div>\\n    </div>    \\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-invoice/edit/ts/templates/form-popup.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/client-document-invoice/edit/ts/templates/form-popup.component.html\n// module chunks = main","import {Component, Inject, Injector, ViewContainerRef, Renderer} from '@angular/core';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {ActionsService} from '../../../../../../../../AppBundle/Resources/public/ts/actions/actions.service';\nimport {DataBoxExtensionComponent, DataBoxProvider, Popups, Popup} from '../../../../../../../../AppBundle/Resources/public/data-box/ts/src/data-box.extension-component';\nimport {ModalService} from '../../../../../../../../AppBundle/Resources/public/modal/ts/modal.service';\nimport {TasksLoaderManagerService} from '../../../../../../../../AppBundle/Resources/public/tasks-loader-manager/ts/tasks-loader-manager.service';\n\n\n// Component\n@Component({\n    selector: '.js_clientDocumentInvoiceDetail',\n    templateUrl: '../templates/main.component.html'\n})\nexport class MainComponent extends DataBoxExtensionComponent\n{\n    constructor(\n        viewContainerRef: ViewContainerRef,\n        renderer: Renderer,\n        @Inject('Provider') dataBoxProvider: DataBoxProvider,\n        @Inject('DataService') dataService: any,\n        tasksLoaderManagerService: TasksLoaderManagerService,\n        @Inject('HelperService') helperService: any,\n        actionsService: ActionsService,\n        modalService: ModalService,\n        @Inject('Popups') popups: Popups | Popup,\n        injector: Injector,\n        @Inject('ParentDataService') protected _parentDataService: any // Used in view\n    ) {\n        // Call parent\n        super();\n        super.initDataBoxExtensionComponent(\n            viewContainerRef,\n            renderer,\n            dataBoxProvider,\n            dataService,\n            tasksLoaderManagerService,\n            helperService,\n            actionsService,\n            modalService,\n            popups,\n            injector\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-invoice/index/ts/src/main.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n// This module doesn't use \"ReactiveFormsModule\", but it needs to import this class\n// to provide \"formBuilder\" when inject dependencies in child modules (like form)\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {SearchModule} from '../../../../../../../../AppBundle/Resources/public/ts/search/search.module';\nimport {ExpanderModule} from '../../../../../../../../AppBundle/Resources/public/ts/expander/expander.module';\nimport {SearchPaginationModule} from '../../../../../../../../AppBundle/Resources/public/ts/search/search-pagination.module';\nimport {LegendExtModule} from \"../../../../../../../../AppBundle/Resources/public/legend/ts/src/legend.ext-module\";\nimport {MainComponent} from './main.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        SearchModule,\n        SearchPaginationModule,\n        ExpanderModule,\n        LegendExtModule\n    ],\n    declarations: [\n        MainComponent\n    ],\n    exports: [MainComponent]\n})\nexport class MainExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-invoice/index/ts/src/main.ext-module.ts","module.exports = \"\\n\\n<div class=\\\"ibox\\\" >\\n                        <div class=\\\"ibox-title\\\" *ngIf=\\\"!getProviderExtraDataAttr('hasMergeHeader')\\\">\\n                <h5>\\n                    <ng-template [ngIf]=\\\"getProviderAttr('controls')['expander']['isEnabled']\\\"><js_expander\\n                        [isExpanded]=\\\"_isExpanded || null\\\"\\n                        [label]=\\\"getLang(getProviderAttr('label'))\\\"\\n                        [labelCount]=\\\"getProviderAttr('labelCount')\\\"\\n                        [labelIcon]=\\\"getProviderAttr('labelIcon')\\\"\\n                        (onChange)=\\\"expanderAction($event)\\\"></js_expander></ng-template>\\n                    <ng-template [ngIf]=\\\"!getProviderAttr('controls')['expander']['isEnabled']\\\">\\n                        <span [innerHTML]=\\\"getProviderAttr('label')\\\"></span>\\n                    </ng-template>\\n                </h5>\\n                <div *ngIf=\\\"_isExpanded\\\"\\n                     class=\\\"txt-align-r hide-on-empty\\\">    <div class=\\\"row align-items-center\\\">\\n        <div class=\\\"col ml-auto text-right actions no-user-select\\\">\\n            <ng-template [ngIf]=\\\"_actionsService.getActionAttr('search', 'isEnabled')\\\"><js_search class=\\\"search\\\"></js_search></ng-template>\\n            <div (click)=\\\"triggerAction($event)\\\">\\n                <ng-template ngFor let-action [ngForOf]=\\\"_actionsService.getHeadActions()\\\">\\n                    <a *ngIf=\\\"_actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                       [ngClass]=\\\"[_actionsService.getActionAttr(action, 'icon')]\\\"\\n                       class=\\\"-round fa\\\"\\n                       [attr.data-action]=\\\"action\\\"></a>\\n                </ng-template>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n            </div>\\n            \\n    <div [hidden]=\\\"!(_isExpanded)\\\" class=\\\"ibox-content hide-on-empty\\\">    <ng-template [ngIf]=\\\"(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">\\n            <div class=\\\"table-responsive m-t\\\">\\n        <form>\\n            <table class=\\\"table table-bordered\\\">\\n                <thead>\\n                <tr>\\n                    <th *ngFor=\\\"let field of ['description', 'quantity', 'totalUnit', 'vatCode_name', 'total']\\\">{{ _dataService.getFields('metadata')[field].label }}</th>\\n                    <th>&nbsp;</th>\\n                </tr>\\n                </thead>\\n                <tbody>\\n                <ng-template ngFor let-obj [ngForOf]=\\\"_dataService.getProviderAttr('objects')\\\" let-objIndex=\\\"index\\\"><tr\\n                          (dblclick)=\\\"editAction($event, objIndex)\\\">\\n                        <td class=\\\"txt-align-l\\\"><div><strong><span\\n                            [innerHTML]=\\\"obj['service_icon']\\\" class=\\\"mr-1\\\"></span><span class=\\\"mr-1\\\"\\n                            [innerHTML]=\\\"obj['service_name']\\\"></span><span *ngIf=\\\"obj['booking_code']\\\">(<span\\n                            [innerHTML]=\\\"obj['booking_code']\\\"></span>)</span></strong></div><small><span\\n                            [innerHTML]=\\\"obj['description']\\\"></span></small></td>\\n                        <td *ngFor=\\\"let field of ['quantity', 'totalUnit', 'vatCode_name', 'total']\\\"\\n                            [ngClass]=\\\"getColAlign(field)\\\"\\n                            [innerHTML]=\\\"obj[field]\\\"></td>\\n                        <td>\\n                            <span *ngIf=\\\"obj['_isNew']\\\" class=\\\"badge badge-info\\\">New</span>\\n                            <span *ngIf=\\\"obj['_isEdited']\\\" class=\\\"badge badge-info\\\">Edited</span>\\n                            <input *ngIf=\\\"_actionsService.getActionAttr('radioChoice', 'isEnabled')\\\"\\n                                   class=\\\"pull-right action\\\"\\n                                   type=\\\"radio\\\"\\n                                   name=\\\"index[]\\\"\\n                                   value=\\\"{{objIndex}}\\\"/>\\n                            <input *ngIf=\\\"_actionsService.getActionAttr('checkAll', 'isEnabled')\\\"\\n                                   class=\\\"pull-right action js_checkAll\\\"\\n                                   type=\\\"checkbox\\\"\\n                                   name=\\\"index[]\\\"\\n                                   value=\\\"{{objIndex}}\\\"\\n                                   [ngModel]=\\\"checkAll\\\"/>\\n                            <div class=\\\"pull-right actions no-user-select\\\" (click)=\\\"triggerAction($event)\\\">\\n                                <ng-template ngFor let-action [ngForOf]=\\\"_actionsService.getDetailActions()\\\">\\n                                    <a *ngIf=\\\"_actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                                       [ngClass]=\\\"[_actionsService.getActionAttr(action, 'icon')]\\\"\\n                                       class=\\\"fa\\\"\\n                                       [attr.data-action]=\\\"action\\\"\\n                                       [attr.data-value]=\\\"objIndex\\\"></a>\\n                                </ng-template>\\n                            </div>\\n                        </td>\\n                    </tr></ng-template>\\n                </tbody>\\n            </table>\\n        </form>\\n    </div>\\n    </ng-template><p\\n        class=\\\"text-center\\\"\\n        *ngIf=\\\"!(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">No results.</p>\\n</div>\\n        <div [hidden]=\\\"!(_isExpanded)\\\"\\n         class=\\\"ibox-footer\\\"\\n         *ngIf=\\\"_dataService.countObjects() > 0\\\"><js_searchPagination></js_searchPagination></div>\\n\\n</div>\\n\\n<js_legend></js_legend>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-invoice/index/ts/templates/main.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/client-document-invoice/index/ts/templates/main.component.html\n// module chunks = main","import {Component, ElementRef, Inject, Injector, Renderer, QueryList, Optional, ViewChildren, ViewContainerRef, ViewChild} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {ActionsService} from '../../../../../../../../AppBundle/Resources/public/ts/actions/actions.service';\nimport {DataService} from \"../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service\";\nimport {WizardManagerService} from '../../../../../../../../AppBundle/Resources/public/wizard/ts/src/wizard-manager.service';\nimport {WizardFormPopupExtComponent, WizardPopupProvider, IWizard, LazyLoadData} from '../../../../../../../../AppBundle/Resources/public/wizard/ts/src/wizard-form-popup.ext-component';\n\n\n/* Import dependencies */\nimport {DataBoxExtensionModule} from '../../../../../../../../AppBundle/Resources/public/data-box/ts/src/data-box.extension-module';\nimport {Step2ExtModule as ClientDocumentInvoiceDetailAddStep2ExtModule} from './step2.ext-module';\n/* /Import dependencies */\n\n\n@Component({\n    selector: '.js_addFormPopup',\n    templateUrl: '../templates/form-popup.component.html'\n})\nexport class FormPopupComponent extends WizardFormPopupExtComponent implements IWizard\n{\n    // For NavManagerService\n    @ViewChildren('js_lazyLoadContainer', {read: ViewContainerRef}) lazyLoadViewContainerRefQL: QueryList<ViewContainerRef>;\n\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: WizardPopupProvider,\n        wizardManagerService: WizardManagerService,\n        formService: FormService,\n        @Inject('HelperService') protected _helperService: any,\n        @Inject('DataService') protected _dataService: any,\n        @Inject('ParentFormService') protected _parentFormService: any, // To get parent object\n        injector: Injector\n    ) {\n        // Call parent\n        super();\n        super.initWizardFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            wizardManagerService,\n            formService\n        );\n    }\n\n    /**\n     * Submit navigation (when leave one container to navigate in other one)\n     * @param index (index to validate)\n     * @returns {Promise<boolean>}\n     */\n    public submitNav(index: number): Promise<boolean>\n    {\n        let that = this,\n            route = null,\n            componentRef = null;\n\n        return new Promise(function(resolve, reject) {\n            switch (index) {\n                case 0:\n                    // Submit values\n                    componentRef = that._wizardManagerService.getComponentRef(index);\n                    if (componentRef) {\n                        route = that._dataService.getRoute('addStep1Submit');\n\n                        return componentRef.instance.submitChoices(route).then(\n                            data => {\n                                if (data['object']) {\n                                    that._formService.setObject(data['object']);\n                                }\n                                return resolve(true);\n                            },\n                            errors => { return reject(false); }\n                        );\n                    }\n                    return reject(false);\n                case 1:\n                    // Save form changes\n\n                    // Force form submit to save object into data base\n                    // (at this time, object is stored in session)\n                    that._formService.setForceSubmit(true);\n                    route = that._dataService.getRoute('addStep2');\n\n                    return that._formService.save(route).then(\n                        data => { return resolve(true); },\n                        errors => { return reject(false); }\n                    );\n            }\n\n            // Nothing to do\n            return resolve(true);\n        });\n    }\n\n    /**\n     * Get navigation data (needed data to lazy load container)\n     * @param index (index to load)\n     * @returns NavData\n     */\n    public getNavData(index: number): LazyLoadData\n    {\n        switch (index) {\n            case 0:\n                return {\n                    module: DataBoxExtensionModule,\n                    component: 'DataBoxComponent',\n                    urlProvider: (this._helperService.getAppVar('route') + 'bck/accounting/client-payment-request/data-for-receipt/' + this._parentFormService.getObject()['clientObj'])\n                };\n            case 1:\n                return {\n                    module: ClientDocumentInvoiceDetailAddStep2ExtModule,\n                    component: 'Step2Component'\n                };\n        }\n\n        return null;\n    }\n\n    /**\n     * Get nav providers (to lazy load components in container with dependency injection)\n     * @param index (index to load)\n     * @param data (data to resolve all providers)\n     * @returns {Array}\n     */\n    public getNavProviders(index: number, data = null): any\n    {\n        switch (index) {\n            case 0:\n                return [\n                    {provide: 'DataService', useClass: DataService},\n                    {provide: 'DataServiceProvider', useValue: this._helperService.getDataServiceProvider(data)},\n                    {provide: 'Provider', useValue: this._helperService.getDataBoxProvider(data)},\n                    ActionsService,\n                    {provide: 'ActionsServiceProvider', useValue: this._helperService.getActionsServiceProvider(data)},\n                    {provide: 'Popups', useValue: null}\n                ];\n            case 1:\n                return [];\n        }\n\n        return null;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-payment/add/ts/src/form-popup.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {FormPopupComponent} from './form-popup.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        FormPopupComponent\n    ],\n    exports: [FormPopupComponent]\n})\nexport class FormPopupExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-payment/add/ts/src/form-popup.ext-module.ts","import {Component, ElementRef, Inject, Optional, Injector, Renderer} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {FormExtensionComponent, FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.extension-component';\n\n@Component({\n    selector: '#js_addStep2',\n    templateUrl: '../templates/step2.component.html'\n})\nexport class Step2Component extends FormExtensionComponent\n{\n    constructor(elementRef: ElementRef,\n                renderer: Renderer,\n                @Inject('Provider') provider: FormProvider,\n                formService: FormService,\n                @Inject('DataService') dataService: any,\n                @Inject('HelperService') protected _helperService: any) {\n        super();\n        super.initFormExtensionComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-payment/add/ts/src/step2.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {Step2Component} from './step2.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        Step2Component\n    ],\n    exports: [Step2Component]\n})\nexport class Step2ExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-payment/add/ts/src/step2.ext-module.ts","module.exports = \"<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">    \\n                        <ul class=\\\"row mb-3 no-gutters wizard-nav\\\">\\n                                    <li class=\\\"col-auto wizard-step\\\"\\n                        [class.step-active]=\\\"0 == _wizardManagerService.getIndex()\\\">\\n                        <span class=\\\"step-number\\\">1</span>\\n                        <span class=\\\"step-text\\\">Client Payments</span>\\n                    </li>\\n                                    <li class=\\\"col-auto wizard-step\\\"\\n                        [class.step-active]=\\\"1 == _wizardManagerService.getIndex()\\\">\\n                        <span class=\\\"step-number\\\">2</span>\\n                        <span class=\\\"step-text\\\">Preview</span>\\n                    </li>\\n                            </ul>\\n\\n            \\n                <section [hidden]=\\\"_wizardManagerService.getIndex() != 0\\\"\\n         class=\\\"js_lazyLoadContainer_0\\\">\\n    <ng-template #js_lazyLoadContainer></ng-template>\\n</section>\\n    <section [hidden]=\\\"_wizardManagerService.getIndex() != 1\\\"\\n         class=\\\"js_lazyLoadContainer_1\\\">\\n    <ng-template #js_lazyLoadContainer></ng-template>\\n</section>\\n            \\n            \\n    </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-auto\\\">\\n            <button type=\\\"button\\\" class=\\\"btn-light btn\\\" (click)=\\\"_wizardManagerService.cancelAction($event)\\\">Cancel</button>\\n                <button type=\\\"button\\\" class=\\\"btn-primary btn\\\" (click)=\\\"_wizardManagerService.prevAction($event)\\\"\\n                    *ngIf=\\\"0 < _wizardManagerService.getIndex()\\\">Prev</button>\\n            <button type=\\\"button\\\" class=\\\"btn-primary btn\\\" (click)=\\\"_wizardManagerService.nextAction($event)\\\"\\n                    *ngIf=\\\"1 > _wizardManagerService.getIndex()\\\">Next</button>\\n            <button type=\\\"button\\\" class=\\\"btn-primary btn\\\" (click)=\\\"_wizardManagerService.finishAction($event)\\\"\\n                    *ngIf=\\\"1 == _wizardManagerService.getIndex()\\\">Finish</button>\\n        \\n    </div>\\n</div></div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-payment/add/ts/templates/form-popup.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/client-document-payment/add/ts/templates/form-popup.component.html\n// module chunks = main","module.exports = \"\\n\\n\\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n\\n    \\n            \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_paymentMethodObj\\\">Payment Method</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                                                        <div class=\\\"html-select\\\"\\n         [htmlSelect]=\\\"'paymentMethodObj'\\\"\\n                               >\\n        <div class=\\\"input-group-control\\\"\\n             [class.error]=\\\"_formService.getErrors()['paymentMethodObj'] && (_formService.getErrors()['paymentMethodObj'].length > 0)\\\">\\n            <span class=\\\"js_label form-control\\\"></span>\\n            <a class=\\\"pull-right\\\"><i class=\\\"fa fa-angle-down\\\"></i></a>\\n        </div>\\n        <div class=\\\"choices js_choices\\\">\\n            <ul class=\\\"form-control-box\\\">        <ng-template ngFor let-choice [ngForOf]=\\\"_dataService.getFieldChoices('paymentMethodObj')\\\">\\n            <li [attr.data-value]=\\\"choice['id']\\\" [innerHtml]=\\\"choice['label']\\\"></li>\\n        </ng-template>\\n    </ul>\\n        </div>\\n    </div>\\n    <input [(ngModel)]=\\\"_formService.getObject().paymentMethodObj\\\"\\n           formControlName = paymentMethodObj\\n           name=\\\"form[paymentMethodObj]\\\"\\n           required=\\\"required\\\"           type=\\\"hidden\\\">\\n                                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().paymentMethodObj\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_reference\\\">Reference</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_reference\\\" name=\\\"form[reference]\\\" maxlength=\\\"64\\\" [(ngModel)]=\\\"_formService.getObject().reference\\\" formControlName=\\\"reference\\\" [class.error]=\\\"_formService.getErrors().reference &amp;&amp; _formService.getErrors().reference.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().reference\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_description\\\">Description</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_description\\\" name=\\\"form[description]\\\" maxlength=\\\"256\\\" [(ngModel)]=\\\"_formService.getObject().description\\\" formControlName=\\\"description\\\" [class.error]=\\\"_formService.getErrors().description &amp;&amp; _formService.getErrors().description.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().description\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_value\\\">Value</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_value\\\" name=\\\"form[value]\\\" required=\\\"required\\\" [(ngModel)]=\\\"_formService.getObject().value\\\" formControlName=\\\"value\\\" [class.error]=\\\"_formService.getErrors().value &amp;&amp; _formService.getErrors().value.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().value\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" [innerHTML]=\\\"getLang('Enabled')\\\"></label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <div class=\\\"checkbox\\\">                                        <label for=\\\"form_isEnabled\\\"><input type=\\\"checkbox\\\" id=\\\"form_isEnabled\\\" name=\\\"form[isEnabled]\\\" [(ngModel)]=\\\"_formService.getObject().isEnabled\\\" formControlName=\\\"isEnabled\\\" [class.error]=\\\"_formService.getErrors().isEnabled &amp;&amp; _formService.getErrors().isEnabled.length &gt; 0\\\" value=\\\"1\\\" checked=\\\"checked\\\" /> Is enabled</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isEnabled\\\">{{error}}</label>\\n            </div>\\n        </div>\\n        \\n\\n    \\n\\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-payment/add/ts/templates/step2.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/client-document-payment/add/ts/templates/step2.component.html\n// module chunks = main","import {Component, ElementRef, Inject, Optional, Injector, Renderer} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormPopupExtensionComponent, FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\n\n\n@Component({\n    selector: '#js_clientDocumentReceiptPaymentFormPopup',\n    templateUrl: '../templates/form-popup.component.html'\n})\nexport class FormPopupComponent extends FormPopupExtensionComponent {\n    constructor(elementRef: ElementRef,\n                renderer: Renderer,\n                @Inject('Provider') provider: FormProvider,\n                formService: FormService,\n                @Inject('DataService') dataService: any,\n                @Inject('HelperService') protected _helperService: any) {\n        super();\n        super.initFormPopupExtensionComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-payment/edit/ts/src/form-popup.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {FormPopupComponent} from './form-popup.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        FormPopupComponent\n    ],\n    exports: [FormPopupComponent]\n})\nexport class FormPopupExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-payment/edit/ts/src/form-popup.ext-module.ts","module.exports = \"    \\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">    \\n            \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_paymentMethodObj\\\">Payment Method</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                                                        <div class=\\\"html-select\\\"\\n         [htmlSelect]=\\\"'paymentMethodObj'\\\"\\n                               >\\n        <div class=\\\"input-group-control\\\"\\n             [class.error]=\\\"_formService.getErrors()['paymentMethodObj'] && (_formService.getErrors()['paymentMethodObj'].length > 0)\\\">\\n            <span class=\\\"js_label form-control\\\"></span>\\n            <a class=\\\"pull-right\\\"><i class=\\\"fa fa-angle-down\\\"></i></a>\\n        </div>\\n        <div class=\\\"choices js_choices\\\">\\n            <ul class=\\\"form-control-box\\\">        <ng-template ngFor let-choice [ngForOf]=\\\"_dataService.getFieldChoices('paymentMethodObj')\\\">\\n            <li [attr.data-value]=\\\"choice['id']\\\" [innerHtml]=\\\"choice['label']\\\"></li>\\n        </ng-template>\\n    </ul>\\n        </div>\\n    </div>\\n    <input [(ngModel)]=\\\"_formService.getObject().paymentMethodObj\\\"\\n           formControlName = paymentMethodObj\\n           name=\\\"form[paymentMethodObj]\\\"\\n           required=\\\"required\\\"           type=\\\"hidden\\\">\\n                                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().paymentMethodObj\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_reference\\\">Reference</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_reference\\\" name=\\\"form[reference]\\\" maxlength=\\\"64\\\" [(ngModel)]=\\\"_formService.getObject().reference\\\" formControlName=\\\"reference\\\" [class.error]=\\\"_formService.getErrors().reference &amp;&amp; _formService.getErrors().reference.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().reference\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_description\\\">Description</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_description\\\" name=\\\"form[description]\\\" maxlength=\\\"256\\\" [(ngModel)]=\\\"_formService.getObject().description\\\" formControlName=\\\"description\\\" [class.error]=\\\"_formService.getErrors().description &amp;&amp; _formService.getErrors().description.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().description\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_value\\\">Value</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_value\\\" name=\\\"form[value]\\\" required=\\\"required\\\" [(ngModel)]=\\\"_formService.getObject().value\\\" formControlName=\\\"value\\\" [class.error]=\\\"_formService.getErrors().value &amp;&amp; _formService.getErrors().value.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().value\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" [innerHTML]=\\\"getLang('Enabled')\\\"></label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <div class=\\\"checkbox\\\">                                        <label for=\\\"form_isEnabled\\\"><input type=\\\"checkbox\\\" id=\\\"form_isEnabled\\\" name=\\\"form[isEnabled]\\\" [(ngModel)]=\\\"_formService.getObject().isEnabled\\\" formControlName=\\\"isEnabled\\\" [class.error]=\\\"_formService.getErrors().isEnabled &amp;&amp; _formService.getErrors().isEnabled.length &gt; 0\\\" value=\\\"1\\\" checked=\\\"checked\\\" /> Is enabled</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isEnabled\\\">{{error}}</label>\\n            </div>\\n        </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n        \\n                    <div class=\\\"row\\\">\\n            <div class=\\\"col-auto ml-auto\\\">\\n                                            <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"cancelAction($event)\\\"\\n                                        id=\\\"form_cancel\\\"\\n            name=\\\"form[cancel]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Cancel</button>\\n                                                <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"resetAction($event)\\\"\\n                                        id=\\\"form_reset\\\"\\n            name=\\\"form[reset]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-ban\\\"></i>&nbsp;Reset</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAction($event)\\\"\\n                                        id=\\\"form_save\\\"\\n            name=\\\"form[save]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-check\\\"></i>&nbsp;Save</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAndCloseAction($event)\\\"\\n                                        id=\\\"form_saveAndClose\\\"\\n            name=\\\"form[saveAndClose]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Save and Close</button>\\n                                </div>\\n        </div>\\n    </div>    \\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-payment/edit/ts/templates/form-popup.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/client-document-payment/edit/ts/templates/form-popup.component.html\n// module chunks = main","import {Component, Inject, Injector, ViewContainerRef, Renderer} from '@angular/core';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {ActionsService} from '../../../../../../../../AppBundle/Resources/public/ts/actions/actions.service';\nimport {DataBoxExtensionComponent, DataBoxProvider, Popups, Popup} from '../../../../../../../../AppBundle/Resources/public/data-box/ts/src/data-box.extension-component';\nimport {ModalService} from '../../../../../../../../AppBundle/Resources/public/modal/ts/modal.service';\nimport {TasksLoaderManagerService} from '../../../../../../../../AppBundle/Resources/public/tasks-loader-manager/ts/tasks-loader-manager.service';\n\n\n// Component\n@Component({\n    selector: '.js_clientDocumentReceiptPayment',\n    templateUrl: '../templates/main.component.html'\n})\nexport class MainComponent extends DataBoxExtensionComponent\n{\n    constructor(\n        viewContainerRef: ViewContainerRef,\n        renderer: Renderer,\n        @Inject('Provider') dataBoxProvider: DataBoxProvider,\n        @Inject('DataService') dataService: any,\n        tasksLoaderManagerService: TasksLoaderManagerService,\n        @Inject('HelperService') helperService: any,\n        actionsService: ActionsService,\n        modalService: ModalService,\n        @Inject('Popups') popups: Popups | Popup,\n        injector: Injector,\n        @Inject('ParentDataService') protected _parentDataService: any // Used in view\n    ) {\n        // Call parent\n        super();\n        super.initDataBoxExtensionComponent(\n            viewContainerRef,\n            renderer,\n            dataBoxProvider,\n            dataService,\n            tasksLoaderManagerService,\n            helperService,\n            actionsService,\n            modalService,\n            popups,\n            injector\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-payment/index/ts/src/main.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n// This module doesn't use \"ReactiveFormsModule\", but it needs to import this class\n// to provide \"formBuilder\" when inject dependencies in child modules (like form)\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {SearchModule} from '../../../../../../../../AppBundle/Resources/public/ts/search/search.module';\nimport {ExpanderModule} from '../../../../../../../../AppBundle/Resources/public/ts/expander/expander.module';\nimport {SearchPaginationModule} from '../../../../../../../../AppBundle/Resources/public/ts/search/search-pagination.module';\nimport {MainComponent} from './main.component';\nimport {LegendExtModule} from \"../../../../../../../../AppBundle/Resources/public/legend/ts/src/legend.ext-module\";\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        SearchModule,\n        SearchPaginationModule,\n        ExpanderModule,\n        LegendExtModule\n    ],\n    declarations: [\n        MainComponent\n    ],\n    exports: [MainComponent]\n})\nexport class MainExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-payment/index/ts/src/main.ext-module.ts","module.exports = \"\\n\\n<div class=\\\"ibox\\\" >\\n                        <div class=\\\"ibox-title\\\" *ngIf=\\\"!getProviderExtraDataAttr('hasMergeHeader')\\\">\\n                <h5>\\n                    <ng-template [ngIf]=\\\"getProviderAttr('controls')['expander']['isEnabled']\\\"><js_expander\\n                        [isExpanded]=\\\"_isExpanded || null\\\"\\n                        [label]=\\\"getLang(getProviderAttr('label'))\\\"\\n                        [labelCount]=\\\"getProviderAttr('labelCount')\\\"\\n                        [labelIcon]=\\\"getProviderAttr('labelIcon')\\\"\\n                        (onChange)=\\\"expanderAction($event)\\\"></js_expander></ng-template>\\n                    <ng-template [ngIf]=\\\"!getProviderAttr('controls')['expander']['isEnabled']\\\">\\n                        <span [innerHTML]=\\\"getProviderAttr('label')\\\"></span>\\n                    </ng-template>\\n                </h5>\\n                <div *ngIf=\\\"_isExpanded\\\"\\n                     class=\\\"txt-align-r hide-on-empty\\\">    <div class=\\\"row align-items-center\\\">\\n        <div class=\\\"col ml-auto text-right actions no-user-select\\\">\\n            <ng-template [ngIf]=\\\"_actionsService.getActionAttr('search', 'isEnabled')\\\"><js_search class=\\\"search\\\"></js_search></ng-template>\\n            <div (click)=\\\"triggerAction($event)\\\">\\n                <ng-template ngFor let-action [ngForOf]=\\\"_actionsService.getHeadActions()\\\">\\n                    <a *ngIf=\\\"_actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                       [ngClass]=\\\"[_actionsService.getActionAttr(action, 'icon')]\\\"\\n                       class=\\\"-round fa\\\"\\n                       [attr.data-action]=\\\"action\\\"></a>\\n                </ng-template>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n            </div>\\n            \\n    <div [hidden]=\\\"!(_isExpanded)\\\" class=\\\"ibox-content hide-on-empty\\\">    <ng-template [ngIf]=\\\"(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">\\n                \\n    <div class=\\\"table-responsive\\\">\\n    <form>    <table class=\\\"data-table table table-hover dataTables-example table-bordered\\\">\\n        <thead>\\n        <tr>\\n            <th *ngFor=\\\"let searchField of _dataService.getSearch('fields')\\\">{{ getLang(_dataService.getFields('metadata')[searchField].label) }}</th>\\n            <th>&nbsp;</th>\\n        </tr>\\n        </thead>        <tbody>\\n        <ng-template ngFor let-obj [ngForOf]=\\\"_dataService.getProviderAttr('objects')\\\" let-objIndex=\\\"index\\\">\\n        <tr (dblclick)=\\\"editAction($event, objIndex)\\\"            [ngClass]=\\\"getLegendClasses(obj, 'tr')\\\">                    <td *ngFor=\\\"let searchField of _dataService.getSearch('fields')\\\"\\n    [ngClass]=\\\"getColAlign(searchField)\\\"\\n    [innerHTML]=\\\"obj[searchField]\\\"></td>                        <td>\\n                <span *ngIf=\\\"obj['_isNew']\\\" class=\\\"badge badge-info\\\">New</span>\\n                <span *ngIf=\\\"obj['_isEdited']\\\" class=\\\"badge badge-info\\\">Edited</span>\\n                <input *ngIf=\\\"_actionsService.getActionAttr('radioChoice', 'isEnabled')\\\"\\n                       class=\\\"pull-right action\\\"\\n                       type=\\\"radio\\\"\\n                       name=\\\"index[]\\\"\\n                       value=\\\"{{objIndex}}\\\"/>\\n                <input *ngIf=\\\"_actionsService.getActionAttr('checkAll', 'isEnabled')\\\"\\n                       class=\\\"pull-right action js_checkAll\\\"\\n                       type=\\\"checkbox\\\"\\n                       name=\\\"index[]\\\"\\n                       value=\\\"{{objIndex}}\\\"\\n                       [ngModel]=\\\"checkAll\\\"/>\\n                <div class=\\\"pull-right actions no-user-select text-secondary\\\" (click)=\\\"triggerAction($event)\\\">\\n                    <ng-template ngFor let-action [ngForOf]=\\\"_actionsService.getDetailActions()\\\">\\n                        <a *ngIf=\\\"_actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                           [ngClass]=\\\"[_actionsService.getActionAttr(action, 'icon') + getActionsLegendClasses(obj, action)]\\\"\\n                           class=\\\"fa\\\"\\n                           [attr.data-action]=\\\"action\\\"\\n                           [attr.data-value]=\\\"objIndex\\\"></a>\\n                    </ng-template>\\n                </div>\\n            </td>        </tr>\\n        </ng-template>\\n        </tbody>\\n    </table>\\n    </form></div>    </ng-template><p\\n        class=\\\"text-center\\\"\\n        *ngIf=\\\"!(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">No results.</p>\\n</div>\\n        <div [hidden]=\\\"!(_isExpanded)\\\"\\n         class=\\\"ibox-footer\\\"\\n         *ngIf=\\\"_dataService.countObjects() > 0\\\"><js_searchPagination></js_searchPagination></div>\\n\\n</div>\\n\\n<js_legend></js_legend>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-payment/index/ts/templates/main.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/client-document-payment/index/ts/templates/main.component.html\n// module chunks = main","import {Component, ElementRef, Inject, Injector, Renderer, QueryList, Optional, ViewChildren, ViewContainerRef, ViewChild} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {Helper} from '../../../../../../../../AppBundle/Resources/public/ts/helper';\nimport {DataService} from \"../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service\";\nimport {WizardPopupProvider, LazyLoadData} from '../../../../../../../../AppBundle/Resources/public/wizard/ts/src/wizard-form-popup.ext-component';\nimport {WizardManagerService} from '../../../../../../../../AppBundle/Resources/public/wizard/ts/src/wizard-manager.service';\nimport {FormPopupExtComponent as BaseDocumentRectificationAddFormPopupExtComponent} from '../../../../base-document-rectification/add/ts/form-popup.ext-component';\n\n\n/* Import dependencies */\n\n// Booking Parent, used when the document is aggregated to one booking\n// (this code is putted here to avoid to repeat this module in the booking bundle, so we can reuse the same modules)\nvar bookingContext = ((Helper.getAppVar('conf')['localData']['data']['bookingContext'])\n            ? Helper.getAppVar('conf')['localData']['data']['bookingContext'] :\n            null\n    ),\n    bookingId = (bookingContext ? Helper.getAppVar('conf')['object']['id'] : null);\n\n// RECTIFICATION DOCUMENT CHOICES\nimport {TreeViewExtModule} from '../../../../../../../../AppBundle/Resources/public/tree-view/default/ts/src/tree-view.ext-module';\n// EDIT FORM\nimport {Step2FormPopupExtModule} from \"./step2-form-popup.ext-module\";\n\n/* /Import dependencies */\n\n\n@Component({\n    selector: '.js_addFormPopup',\n    templateUrl: '../templates/form-popup.component.html'\n})\nexport class FormPopupComponent extends BaseDocumentRectificationAddFormPopupExtComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: WizardPopupProvider,\n        wizardManagerService: WizardManagerService,\n        formService: FormService,\n        @Inject('HelperService') helperService: any,\n        @Inject('DataService') dataService: any,\n        @Inject('ParentFormService') parentFormService: any, // To get parent object\n        injector: Injector\n    ) {\n        // Call parent\n        super();\n        super.initBaseDocumentRectificationAddFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            wizardManagerService,\n            formService,\n            helperService,\n            dataService,\n            parentFormService,\n            injector\n        );\n    }\n\n    /**\n     * Get navigation data (needed data to lazy load container)\n     * @param index (index to load)\n     * @returns NavData\n     */\n    public getNavData(index: number): LazyLoadData\n    {\n        switch (index) {\n            case 0:\n                return {\n                    module: TreeViewExtModule,\n                    component: 'TreeViewComponent',\n                    urlProvider: (this._helperService.getAppVar('route') + 'bck/accounting/client-document-invoice-rectification/data-for-rectification/' + this._parentFormService.getObject()['id'] + (bookingContext ? ('/' + bookingId) : ''))\n                };\n            case 1:\n                return {\n                    module: Step2FormPopupExtModule,\n                    component: 'Step2FormPopupComponent'\n                };\n        }\n\n        return null;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-rectification/add/ts/src/form-popup.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {FormPopupComponent} from './form-popup.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        FormPopupComponent\n    ],\n    exports: [FormPopupComponent]\n})\nexport class FormPopupExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-rectification/add/ts/src/form-popup.ext-module.ts","import {Component, ElementRef, Inject, Optional, Injector, Renderer} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {FormPopupComponent as ClientDocumentRectificationEditFormPopupComponent} from '../../../edit/ts/src/form-popup.component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\n\n\n/**\n * This class is necessary to redefine the template url for add step 2\n */\n@Component({\n    selector: '#js_clientDocumentReceiptSettlementFormPopup',\n    templateUrl: '../templates/step2-form-popup.component.html'\n})\nexport class Step2FormPopupComponent extends ClientDocumentRectificationEditFormPopupComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any,\n        @Inject('HelperService') helperService: any\n    ) {\n        super(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            helperService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-rectification/add/ts/src/step2-form-popup.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {Step2FormPopupComponent} from './step2-form-popup.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        Step2FormPopupComponent\n    ],\n    exports: [Step2FormPopupComponent]\n})\nexport class Step2FormPopupExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-rectification/add/ts/src/step2-form-popup.ext-module.ts","module.exports = \"<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">    \\n                        <ul class=\\\"row mb-3 no-gutters wizard-nav\\\">\\n                                    <li class=\\\"col-auto wizard-step\\\"\\n                        [class.step-active]=\\\"0 == _wizardManagerService.getIndex()\\\">\\n                        <span class=\\\"step-number\\\">1</span>\\n                        <span class=\\\"step-text\\\">Documents</span>\\n                    </li>\\n                                    <li class=\\\"col-auto wizard-step\\\"\\n                        [class.step-active]=\\\"1 == _wizardManagerService.getIndex()\\\">\\n                        <span class=\\\"step-number\\\">2</span>\\n                        <span class=\\\"step-text\\\">Preview</span>\\n                    </li>\\n                            </ul>\\n\\n            \\n                <section [hidden]=\\\"_wizardManagerService.getIndex() != 0\\\"\\n         class=\\\"js_lazyLoadContainer_0\\\">\\n    <ng-template #js_lazyLoadContainer></ng-template>\\n</section>\\n    <section [hidden]=\\\"_wizardManagerService.getIndex() != 1\\\"\\n         class=\\\"js_lazyLoadContainer_1\\\">\\n    <ng-template #js_lazyLoadContainer></ng-template>\\n</section>\\n            \\n            \\n    </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-auto\\\">\\n            <button type=\\\"button\\\" class=\\\"btn-light btn\\\" (click)=\\\"_wizardManagerService.cancelAction($event)\\\">Cancel</button>\\n                <button type=\\\"button\\\" class=\\\"btn-primary btn\\\" (click)=\\\"_wizardManagerService.prevAction($event)\\\"\\n                    *ngIf=\\\"0 < _wizardManagerService.getIndex()\\\">Prev</button>\\n            <button type=\\\"button\\\" class=\\\"btn-primary btn\\\" (click)=\\\"_wizardManagerService.nextAction($event)\\\"\\n                    *ngIf=\\\"1 > _wizardManagerService.getIndex()\\\">Next</button>\\n            <button type=\\\"button\\\" class=\\\"btn-primary btn\\\" (click)=\\\"_wizardManagerService.finishAction($event)\\\"\\n                    *ngIf=\\\"1 == _wizardManagerService.getIndex()\\\">Finish</button>\\n        \\n    </div>\\n</div></div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-rectification/add/ts/templates/form-popup.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/client-document-rectification/add/ts/templates/form-popup.component.html\n// module chunks = main","module.exports = \"\\n\\n\\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n\\n    \\n\\n                        <div class=\\\"row form-group -multiple-field\\\">\\n                            <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_originalDocument_code\\\">Original Doc.</label>\\n                    <div class=\\\"col-sm-10\\\">\\n                                            <p id=\\\"form_originalDocumentType_name\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().originalDocumentType_name\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().originalDocumentType_name\\\">{{error}}</label>\\n                                            <p id=\\\"form_originalDocument_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().originalDocument_code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().originalDocument_code\\\">{{error}}</label>\\n                </div>\\n            </div>\\n                                            \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().document_code\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_clientDocumentInvoiceDetailObj_document_code\\\">Doc. Code</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_clientDocumentInvoiceDetailObj_document_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().document_code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().document_code\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().booking_code\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_clientDocumentInvoiceDetailObj_booking_code\\\">Booking</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_clientDocumentInvoiceDetailObj_booking_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().booking_code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().booking_code\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_clientDocumentInvoiceDetailObj_description\\\">Description</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_clientDocumentInvoiceDetailObj_description\\\" name=\\\"form[clientDocumentInvoiceDetailObj][description]\\\" required=\\\"required\\\" maxlength=\\\"256\\\" [(ngModel)]=\\\"_formService.getObject().description\\\" formControlName=\\\"description\\\" [class.error]=\\\"_formService.getErrors().description &amp;&amp; _formService.getErrors().description.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().description\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_clientDocumentInvoiceDetailObj_quantity\\\">Quantity</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"number\\\" id=\\\"form_clientDocumentInvoiceDetailObj_quantity\\\" name=\\\"form[clientDocumentInvoiceDetailObj][quantity]\\\" required=\\\"required\\\" (input)=\\\"onQuantityEnterKey($event.target.value)\\\" (focusout)=\\\"onQuantityEnterKey($event.target.value)\\\" [(ngModel)]=\\\"_formService.getObject().quantity\\\" formControlName=\\\"quantity\\\" [class.error]=\\\"_formService.getErrors().quantity &amp;&amp; _formService.getErrors().quantity.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().quantity\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                                \\n\\n                                            <input type=\\\"hidden\\\" id=\\\"form_clientDocumentInvoiceDetailObj_value\\\" name=\\\"form[clientDocumentInvoiceDetailObj][value]\\\" [(ngModel)]=\\\"_formService.getObject().value\\\" formControlName=\\\"value\\\" [class.error]=\\\"_formService.getErrors().value &amp;&amp; _formService.getErrors().value.length &gt; 0\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().value\\\">{{error}}</label>\\n                                    <div class=\\\"row form-group\\\">\\n                            <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_clientDocumentInvoiceDetailObj_user_value\\\">Value</label>\\n                    <div class=\\\"col-sm-10\\\"><div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-8\\\">\\n                                                        <input type=\\\"text\\\" id=\\\"form_clientDocumentInvoiceDetailObj_user_value\\\" name=\\\"form[clientDocumentInvoiceDetailObj][user_value]\\\" (input)=\\\"onValueEnterKey($event.target.value)\\\" (focusout)=\\\"onValueEnterKey($event.target.value)\\\" [(ngModel)]=\\\"_formService.getObject().user_value\\\" formControlName=\\\"user_value\\\" [class.error]=\\\"_formService.getErrors().user_value &amp;&amp; _formService.getErrors().user_value.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().user_value\\\">{{error}}</label>\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\">\\n                                                        <div class=\\\"checkbox\\\">                                        <label for=\\\"form_clientDocumentInvoiceDetailObj_isVatIncluded\\\"><input type=\\\"checkbox\\\" id=\\\"form_clientDocumentInvoiceDetailObj_isVatIncluded\\\" name=\\\"form[clientDocumentInvoiceDetailObj][isVatIncluded]\\\" (change)=\\\"onIsVatIncludedChange($event.target.checked)\\\" [(ngModel)]=\\\"_formService.getObject().isVatIncluded\\\" formControlName=\\\"isVatIncluded\\\" [class.error]=\\\"_formService.getErrors().isVatIncluded &amp;&amp; _formService.getErrors().isVatIncluded.length &gt; 0\\\" value=\\\"1\\\" /> Is vat included</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isVatIncluded\\\">{{error}}</label>\\n                        </div>\\n                    </div></div>\\n            </div>\\n                                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_clientDocumentInvoiceDetailObj_subTotal\\\">Sub Total</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_clientDocumentInvoiceDetailObj_subTotal\\\" name=\\\"form[clientDocumentInvoiceDetailObj][subTotal]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().subTotal\\\" formControlName=\\\"subTotal\\\" [class.error]=\\\"_formService.getErrors().subTotal &amp;&amp; _formService.getErrors().subTotal.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().subTotal\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_clientDocumentInvoiceDetailObj_totalVat\\\">TAX</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_clientDocumentInvoiceDetailObj_totalVat\\\" name=\\\"form[clientDocumentInvoiceDetailObj][totalVat]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().totalVat\\\" formControlName=\\\"totalVat\\\" [class.error]=\\\"_formService.getErrors().totalVat &amp;&amp; _formService.getErrors().totalVat.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().totalVat\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_clientDocumentInvoiceDetailObj_total\\\">Total</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_clientDocumentInvoiceDetailObj_total\\\" name=\\\"form[clientDocumentInvoiceDetailObj][total]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().total\\\" formControlName=\\\"total\\\" [class.error]=\\\"_formService.getErrors().total &amp;&amp; _formService.getErrors().total.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().total\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" [innerHTML]=\\\"getLang('Enabled')\\\"></label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <div class=\\\"checkbox\\\">                                        <label for=\\\"form_isEnabled\\\"><input type=\\\"checkbox\\\" id=\\\"form_isEnabled\\\" name=\\\"form[isEnabled]\\\" [(ngModel)]=\\\"_formService.getObject().isEnabled\\\" formControlName=\\\"isEnabled\\\" [class.error]=\\\"_formService.getErrors().isEnabled &amp;&amp; _formService.getErrors().isEnabled.length &gt; 0\\\" value=\\\"1\\\" checked=\\\"checked\\\" /> Is enabled</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isEnabled\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                                <div class=\\\"row form-group -multiple-field\\\">\\n                            <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_service_name\\\">Service</label>\\n                    <div class=\\\"col-sm-10\\\">\\n                                            <p id=\\\"form_service_icon\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().service_icon\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().service_icon\\\">{{error}}</label>\\n                                            <p id=\\\"form_service_name\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().service_name\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().service_name\\\">{{error}}</label>\\n                </div>\\n            </div>\\n            \\n\\n    \\n\\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-rectification/add/ts/templates/step2-form-popup.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/client-document-rectification/add/ts/templates/step2-form-popup.component.html\n// module chunks = main","import {Component, ElementRef, Inject, Optional, Injector, Renderer} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {FormPopupExtComponent as BaseDocumentRectificationEditFormPopupExtComponent} from '../../../../base-document-rectification/edit/ts/form-popup.ext-component';\n\n\n@Component({\n    selector: '#js_clientDocumentInvoiceRectificationFormPopup',\n    templateUrl: '../templates/form-popup.component.html'\n})\nexport class FormPopupComponent extends BaseDocumentRectificationEditFormPopupExtComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any,\n        @Inject('HelperService') helperService: any\n    ) {\n        super();\n        super.initBaseDocumentRectificationEditFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            helperService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-rectification/edit/ts/src/form-popup.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {FormPopupComponent} from './form-popup.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        FormPopupComponent\n    ],\n    exports: [FormPopupComponent]\n})\nexport class FormPopupExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-rectification/edit/ts/src/form-popup.ext-module.ts","module.exports = \"    \\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">    \\n\\n                        <div class=\\\"row form-group -multiple-field\\\">\\n                            <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_originalDocument_code\\\">Original Doc.</label>\\n                    <div class=\\\"col-sm-10\\\">\\n                                            <p id=\\\"form_originalDocumentType_name\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().originalDocumentType_name\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().originalDocumentType_name\\\">{{error}}</label>\\n                                            <p id=\\\"form_originalDocument_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().originalDocument_code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().originalDocument_code\\\">{{error}}</label>\\n                </div>\\n            </div>\\n                                            \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().document_code\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_clientDocumentInvoiceDetailObj_document_code\\\">Doc. Code</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_clientDocumentInvoiceDetailObj_document_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().document_code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().document_code\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().booking_code\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_clientDocumentInvoiceDetailObj_booking_code\\\">Booking</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_clientDocumentInvoiceDetailObj_booking_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().booking_code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().booking_code\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_clientDocumentInvoiceDetailObj_description\\\">Description</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_clientDocumentInvoiceDetailObj_description\\\" name=\\\"form[clientDocumentInvoiceDetailObj][description]\\\" required=\\\"required\\\" maxlength=\\\"256\\\" [(ngModel)]=\\\"_formService.getObject().description\\\" formControlName=\\\"description\\\" [class.error]=\\\"_formService.getErrors().description &amp;&amp; _formService.getErrors().description.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().description\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_clientDocumentInvoiceDetailObj_quantity\\\">Quantity</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"number\\\" id=\\\"form_clientDocumentInvoiceDetailObj_quantity\\\" name=\\\"form[clientDocumentInvoiceDetailObj][quantity]\\\" required=\\\"required\\\" (input)=\\\"onQuantityEnterKey($event.target.value)\\\" (focusout)=\\\"onQuantityEnterKey($event.target.value)\\\" [(ngModel)]=\\\"_formService.getObject().quantity\\\" formControlName=\\\"quantity\\\" [class.error]=\\\"_formService.getErrors().quantity &amp;&amp; _formService.getErrors().quantity.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().quantity\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                                \\n\\n                                            <input type=\\\"hidden\\\" id=\\\"form_clientDocumentInvoiceDetailObj_value\\\" name=\\\"form[clientDocumentInvoiceDetailObj][value]\\\" [(ngModel)]=\\\"_formService.getObject().value\\\" formControlName=\\\"value\\\" [class.error]=\\\"_formService.getErrors().value &amp;&amp; _formService.getErrors().value.length &gt; 0\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().value\\\">{{error}}</label>\\n                                    <div class=\\\"row form-group\\\">\\n                            <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_clientDocumentInvoiceDetailObj_user_value\\\">Value</label>\\n                    <div class=\\\"col-sm-10\\\"><div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-8\\\">\\n                                                        <input type=\\\"text\\\" id=\\\"form_clientDocumentInvoiceDetailObj_user_value\\\" name=\\\"form[clientDocumentInvoiceDetailObj][user_value]\\\" (input)=\\\"onValueEnterKey($event.target.value)\\\" (focusout)=\\\"onValueEnterKey($event.target.value)\\\" [(ngModel)]=\\\"_formService.getObject().user_value\\\" formControlName=\\\"user_value\\\" [class.error]=\\\"_formService.getErrors().user_value &amp;&amp; _formService.getErrors().user_value.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().user_value\\\">{{error}}</label>\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\">\\n                                                        <div class=\\\"checkbox\\\">                                        <label for=\\\"form_clientDocumentInvoiceDetailObj_isVatIncluded\\\"><input type=\\\"checkbox\\\" id=\\\"form_clientDocumentInvoiceDetailObj_isVatIncluded\\\" name=\\\"form[clientDocumentInvoiceDetailObj][isVatIncluded]\\\" (change)=\\\"onIsVatIncludedChange($event.target.checked)\\\" [(ngModel)]=\\\"_formService.getObject().isVatIncluded\\\" formControlName=\\\"isVatIncluded\\\" [class.error]=\\\"_formService.getErrors().isVatIncluded &amp;&amp; _formService.getErrors().isVatIncluded.length &gt; 0\\\" value=\\\"1\\\" /> Is vat included</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isVatIncluded\\\">{{error}}</label>\\n                        </div>\\n                    </div></div>\\n            </div>\\n                                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_clientDocumentInvoiceDetailObj_subTotal\\\">Sub Total</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_clientDocumentInvoiceDetailObj_subTotal\\\" name=\\\"form[clientDocumentInvoiceDetailObj][subTotal]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().subTotal\\\" formControlName=\\\"subTotal\\\" [class.error]=\\\"_formService.getErrors().subTotal &amp;&amp; _formService.getErrors().subTotal.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().subTotal\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_clientDocumentInvoiceDetailObj_totalVat\\\">TAX</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_clientDocumentInvoiceDetailObj_totalVat\\\" name=\\\"form[clientDocumentInvoiceDetailObj][totalVat]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().totalVat\\\" formControlName=\\\"totalVat\\\" [class.error]=\\\"_formService.getErrors().totalVat &amp;&amp; _formService.getErrors().totalVat.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().totalVat\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_clientDocumentInvoiceDetailObj_total\\\">Total</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_clientDocumentInvoiceDetailObj_total\\\" name=\\\"form[clientDocumentInvoiceDetailObj][total]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().total\\\" formControlName=\\\"total\\\" [class.error]=\\\"_formService.getErrors().total &amp;&amp; _formService.getErrors().total.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().total\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" [innerHTML]=\\\"getLang('Enabled')\\\"></label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <div class=\\\"checkbox\\\">                                        <label for=\\\"form_isEnabled\\\"><input type=\\\"checkbox\\\" id=\\\"form_isEnabled\\\" name=\\\"form[isEnabled]\\\" [(ngModel)]=\\\"_formService.getObject().isEnabled\\\" formControlName=\\\"isEnabled\\\" [class.error]=\\\"_formService.getErrors().isEnabled &amp;&amp; _formService.getErrors().isEnabled.length &gt; 0\\\" value=\\\"1\\\" checked=\\\"checked\\\" /> Is enabled</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isEnabled\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                                <div class=\\\"row form-group -multiple-field\\\">\\n                            <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_service_name\\\">Service</label>\\n                    <div class=\\\"col-sm-10\\\">\\n                                            <p id=\\\"form_service_icon\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().service_icon\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().service_icon\\\">{{error}}</label>\\n                                            <p id=\\\"form_service_name\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().service_name\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().service_name\\\">{{error}}</label>\\n                </div>\\n            </div>\\n            </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n        \\n                    <div class=\\\"row\\\">\\n            <div class=\\\"col-auto ml-auto\\\">\\n                                            <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"cancelAction($event)\\\"\\n                                        id=\\\"form_cancel\\\"\\n            name=\\\"form[cancel]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Cancel</button>\\n                                                <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"resetAction($event)\\\"\\n                                        id=\\\"form_reset\\\"\\n            name=\\\"form[reset]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-ban\\\"></i>&nbsp;Reset</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAction($event)\\\"\\n                                        id=\\\"form_save\\\"\\n            name=\\\"form[save]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-check\\\"></i>&nbsp;Save</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAndCloseAction($event)\\\"\\n                                        id=\\\"form_saveAndClose\\\"\\n            name=\\\"form[saveAndClose]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Save and Close</button>\\n                                </div>\\n        </div>\\n    </div>    \\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-rectification/edit/ts/templates/form-popup.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/client-document-rectification/edit/ts/templates/form-popup.component.html\n// module chunks = main","import {Component, Inject, Injector, ViewContainerRef, Renderer} from '@angular/core';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {ActionsService} from '../../../../../../../../AppBundle/Resources/public/ts/actions/actions.service';\nimport {DataBoxExtensionComponent, DataBoxProvider, Popups, Popup} from '../../../../../../../../AppBundle/Resources/public/data-box/ts/src/data-box.extension-component';\nimport {ModalService} from '../../../../../../../../AppBundle/Resources/public/modal/ts/modal.service';\nimport {TasksLoaderManagerService} from '../../../../../../../../AppBundle/Resources/public/tasks-loader-manager/ts/tasks-loader-manager.service';\n\n\n// Component\n@Component({\n    selector: '.js_clientDocumentInvoiceRectification',\n    templateUrl: '../templates/main.component.html'\n})\nexport class MainComponent extends DataBoxExtensionComponent\n{\n    constructor(\n        viewContainerRef: ViewContainerRef,\n        renderer: Renderer,\n        @Inject('Provider') dataBoxProvider: DataBoxProvider,\n        @Inject('DataService') dataService: any,\n        tasksLoaderManagerService: TasksLoaderManagerService,\n        @Inject('HelperService') helperService: any,\n        actionsService: ActionsService,\n        modalService: ModalService,\n        @Inject('Popups') popups: Popups | Popup,\n        injector: Injector,\n        @Inject('ParentDataService') protected _parentDataService: any // Used in view\n    ) {\n        // Call parent\n        super();\n        super.initDataBoxExtensionComponent(\n            viewContainerRef,\n            renderer,\n            dataBoxProvider,\n            dataService,\n            tasksLoaderManagerService,\n            helperService,\n            actionsService,\n            modalService,\n            popups,\n            injector\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-rectification/index/ts/src/main.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n// This module doesn't use \"ReactiveFormsModule\", but it needs to import this class\n// to provide \"formBuilder\" when inject dependencies in child modules (like form)\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {SearchModule} from '../../../../../../../../AppBundle/Resources/public/ts/search/search.module';\nimport {ExpanderModule} from '../../../../../../../../AppBundle/Resources/public/ts/expander/expander.module';\nimport {SearchPaginationModule} from '../../../../../../../../AppBundle/Resources/public/ts/search/search-pagination.module';\nimport {MainComponent} from './main.component';\nimport {LegendExtModule} from \"../../../../../../../../AppBundle/Resources/public/legend/ts/src/legend.ext-module\";\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        SearchModule,\n        SearchPaginationModule,\n        ExpanderModule,\n        LegendExtModule\n    ],\n    declarations: [\n        MainComponent\n    ],\n    exports: [MainComponent]\n})\nexport class MainExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-rectification/index/ts/src/main.ext-module.ts","module.exports = \"\\n\\n<div class=\\\"ibox\\\" >\\n                        <div class=\\\"ibox-title\\\" *ngIf=\\\"!getProviderExtraDataAttr('hasMergeHeader')\\\">\\n                <h5>\\n                    <ng-template [ngIf]=\\\"getProviderAttr('controls')['expander']['isEnabled']\\\"><js_expander\\n                        [isExpanded]=\\\"_isExpanded || null\\\"\\n                        [label]=\\\"getLang(getProviderAttr('label'))\\\"\\n                        [labelCount]=\\\"getProviderAttr('labelCount')\\\"\\n                        [labelIcon]=\\\"getProviderAttr('labelIcon')\\\"\\n                        (onChange)=\\\"expanderAction($event)\\\"></js_expander></ng-template>\\n                    <ng-template [ngIf]=\\\"!getProviderAttr('controls')['expander']['isEnabled']\\\">\\n                        <span [innerHTML]=\\\"getProviderAttr('label')\\\"></span>\\n                    </ng-template>\\n                </h5>\\n                <div *ngIf=\\\"_isExpanded\\\"\\n                     class=\\\"txt-align-r hide-on-empty\\\">    <div class=\\\"row align-items-center\\\">\\n        <div class=\\\"col ml-auto text-right actions no-user-select\\\">\\n            <ng-template [ngIf]=\\\"_actionsService.getActionAttr('search', 'isEnabled')\\\"><js_search class=\\\"search\\\"></js_search></ng-template>\\n            <div (click)=\\\"triggerAction($event)\\\">\\n                <ng-template ngFor let-action [ngForOf]=\\\"_actionsService.getHeadActions()\\\">\\n                    <a *ngIf=\\\"_actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                       [ngClass]=\\\"[_actionsService.getActionAttr(action, 'icon')]\\\"\\n                       class=\\\"-round fa\\\"\\n                       [attr.data-action]=\\\"action\\\"></a>\\n                </ng-template>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n            </div>\\n            \\n    <div [hidden]=\\\"!(_isExpanded)\\\" class=\\\"ibox-content hide-on-empty\\\">    <ng-template [ngIf]=\\\"(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">\\n        <div class=\\\"table-responsive m-t\\\">\\n        <form>\\n            <table class=\\\"table table-bordered\\\">\\n                <thead>\\n                <tr>\\n                    <th *ngFor=\\\"let field of ['description', 'quantity', 'value', 'vatCode_name', 'total']\\\">{{ _dataService.getFields('metadata')[field].label }}</th>\\n                    <th>&nbsp;</th>\\n                </tr>\\n                </thead>\\n                <tbody>\\n                <ng-template ngFor let-obj [ngForOf]=\\\"_dataService.getProviderAttr('objects')\\\" let-objIndex=\\\"index\\\"><tr\\n                          (dblclick)=\\\"editAction($event, objIndex)\\\">\\n                        <td class=\\\"txt-align-l\\\"><small><span class=\\\"m-r-xs\\\">Original&nbsp;Doc:</span><span class=\\\"m-r-xs\\\"\\n                            [innerHTML]=\\\"obj['originalDocumentType_name']\\\"></span><span class=\\\"m-r-xs\\\"\\n                            [innerHTML]=\\\"obj['originalDocument_code']\\\"></span></small><div><strong><span\\n                            [innerHTML]=\\\"obj['service_icon']\\\" class=\\\"m-r-xs\\\"></span><span\\n                            [innerHTML]=\\\"obj['service_name']\\\"></span></strong></div><small><span\\n                            [innerHTML]=\\\"obj['description']\\\"></span></small></td>\\n                        <td *ngFor=\\\"let field of ['quantity', 'totalUnit', 'vatCode_name', 'total']\\\"\\n                            [ngClass]=\\\"getColAlign(field)\\\"\\n                            [innerHTML]=\\\"obj[field]\\\"></td>\\n                        <td>\\n                            <span *ngIf=\\\"obj['_isNew']\\\" class=\\\"badge badge-info\\\">New</span>\\n                            <span *ngIf=\\\"obj['_isEdited']\\\" class=\\\"badge badge-info\\\">Edited</span>\\n                            <input *ngIf=\\\"_actionsService.getActionAttr('checkAll', 'isEnabled')\\\"\\n                                   class=\\\"pull-right action js_checkAll\\\"\\n                                   type=\\\"checkbox\\\"\\n                                   name=\\\"index[]\\\"\\n                                   value=\\\"{{objIndex}}\\\"\\n                                   [ngModel]=\\\"checkAll\\\"/>\\n                            <div class=\\\"pull-right actions no-user-select\\\" (click)=\\\"triggerAction($event)\\\">\\n                                <ng-template ngFor let-action [ngForOf]=\\\"_actionsService.getDetailActions()\\\">\\n                                    <a *ngIf=\\\"_actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                                       [ngClass]=\\\"[_actionsService.getActionAttr(action, 'icon')]\\\"\\n                                       class=\\\"fa\\\"\\n                                       [attr.data-action]=\\\"action\\\"\\n                                       [attr.data-value]=\\\"objIndex\\\"></a>\\n                                </ng-template>\\n                            </div>\\n                        </td>\\n                    </tr></ng-template>\\n                </tbody>\\n            </table>\\n        </form>\\n    </div>\\n    </ng-template><p\\n        class=\\\"text-center\\\"\\n        *ngIf=\\\"!(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">No results.</p>\\n</div>\\n        <div [hidden]=\\\"!(_isExpanded)\\\"\\n         class=\\\"ibox-footer\\\"\\n         *ngIf=\\\"_dataService.countObjects() > 0\\\"><js_searchPagination></js_searchPagination></div>\\n\\n</div>\\n\\n<js_legend></js_legend>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-rectification/index/ts/templates/main.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/client-document-rectification/index/ts/templates/main.component.html\n// module chunks = main","import {Component, ElementRef, Inject, Injector, Renderer, QueryList, Optional, ViewChildren, ViewContainerRef, ViewChild} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {Helper} from '../../../../../../../../AppBundle/Resources/public/ts/helper';\nimport {DataService} from \"../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service\";\nimport {WizardPopupProvider, LazyLoadData} from '../../../../../../../../AppBundle/Resources/public/wizard/ts/src/wizard-form-popup.ext-component';\nimport {WizardManagerService} from '../../../../../../../../AppBundle/Resources/public/wizard/ts/src/wizard-manager.service';\nimport {FormPopupExtComponent as BaseDocumentSettlementAddFormPopupExtComponent} from '../../../../base-document-settlement/add/ts/form-popup.ext-component';\n\n/* Import dependencies */\n\n// Booking Parent, used when the document is aggregated to one booking\n// (this code is putted here to avoid to repeat this module in the booking bundle, so we can reuse the same modules)\nvar bookingContext = ((Helper.getAppVar('conf')['localData']['data']['bookingContext'])\n            ? Helper.getAppVar('conf')['localData']['data']['bookingContext'] :\n            null\n    ),\n    bookingId = (bookingContext ? Helper.getAppVar('conf')['object']['id'] : null);\n\n// SETTLEMENT DOCUMENT CHOICES\nimport {DataBoxExtensionModule as ClientDocumentMainExtModule} from '../../../../../../../../AppBundle/Resources/public/data-box/ts/src/data-box.extension-module';\n// EDIT FORM\nimport {Step2FormPopupExtModule} from \"./step2-form-popup.ext-module\";\n\n/* /Import dependencies */\n\n\n@Component({\n    selector: '.js_addFormPopup',\n    templateUrl: '../templates/form-popup.component.html'\n})\nexport class FormPopupComponent extends BaseDocumentSettlementAddFormPopupExtComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: WizardPopupProvider,\n        wizardManagerService: WizardManagerService,\n        formService: FormService,\n        @Inject('HelperService') helperService: any,\n        @Inject('DataService') dataService: any,\n        @Inject('ParentFormService') parentFormService: any, // To get parent object\n        injector: Injector\n    ) {\n        // Call parent\n        super();\n        super.initBaseDocumentSettlementAddFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            wizardManagerService,\n            formService,\n            helperService,\n            dataService,\n            parentFormService,\n            injector\n        );\n    }\n\n    /**\n     * Get navigation data (needed data to lazy load container)\n     * @param index (index to load)\n     * @returns NavData\n     */\n    public getNavData(index: number): LazyLoadData\n    {\n        switch (index) {\n            case 0:\n                return {\n                    module: ClientDocumentMainExtModule,\n                    component: 'DataBoxComponent',\n                    urlProvider: (this._helperService.getAppVar('route') + 'bck/accounting/client-document/data-for-settlement/' + this._parentFormService.getObject()['id'] + (bookingContext ? ('/' + bookingId) : ''))\n                };\n            case 1:\n                return {\n                    module: Step2FormPopupExtModule,\n                    component: 'Step2FormPopupComponent'\n                };\n        }\n\n        return null;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-settlement/add/ts/src/form-popup.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {FormPopupComponent} from './form-popup.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        FormPopupComponent\n    ],\n    exports: [FormPopupComponent]\n})\nexport class FormPopupExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-settlement/add/ts/src/form-popup.ext-module.ts","import {Component, ElementRef, Inject, Optional, Injector, Renderer} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {FormPopupComponent as ClientDocumentSettlementEditFormPopupComponent} from '../../../edit/ts/src/form-popup.component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\n\n\n/**\n * This class is necessary to redefine the template url for add step 2\n */\n@Component({\n    selector: '#js_clientDocumentReceiptSettlementFormPopup',\n    templateUrl: '../templates/step2-form-popup.component.html'\n})\nexport class Step2FormPopupComponent extends ClientDocumentSettlementEditFormPopupComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any\n    ) {\n        super(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-settlement/add/ts/src/step2-form-popup.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {Step2FormPopupComponent} from './step2-form-popup.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        Step2FormPopupComponent\n    ],\n    exports: [Step2FormPopupComponent]\n})\nexport class Step2FormPopupExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-settlement/add/ts/src/step2-form-popup.ext-module.ts","module.exports = \"<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">    \\n                        <ul class=\\\"row mb-3 no-gutters wizard-nav\\\">\\n                                    <li class=\\\"col-auto wizard-step\\\"\\n                        [class.step-active]=\\\"0 == _wizardManagerService.getIndex()\\\">\\n                        <span class=\\\"step-number\\\">1</span>\\n                        <span class=\\\"step-text\\\">Documents</span>\\n                    </li>\\n                                    <li class=\\\"col-auto wizard-step\\\"\\n                        [class.step-active]=\\\"1 == _wizardManagerService.getIndex()\\\">\\n                        <span class=\\\"step-number\\\">2</span>\\n                        <span class=\\\"step-text\\\">Preview</span>\\n                    </li>\\n                            </ul>\\n\\n            \\n                <section [hidden]=\\\"_wizardManagerService.getIndex() != 0\\\"\\n         class=\\\"js_lazyLoadContainer_0\\\">\\n    <ng-template #js_lazyLoadContainer></ng-template>\\n</section>\\n    <section [hidden]=\\\"_wizardManagerService.getIndex() != 1\\\"\\n         class=\\\"js_lazyLoadContainer_1\\\">\\n    <ng-template #js_lazyLoadContainer></ng-template>\\n</section>\\n            \\n            \\n    </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-auto\\\">\\n            <button type=\\\"button\\\" class=\\\"btn-light btn\\\" (click)=\\\"_wizardManagerService.cancelAction($event)\\\">Cancel</button>\\n                <button type=\\\"button\\\" class=\\\"btn-primary btn\\\" (click)=\\\"_wizardManagerService.prevAction($event)\\\"\\n                    *ngIf=\\\"0 < _wizardManagerService.getIndex()\\\">Prev</button>\\n            <button type=\\\"button\\\" class=\\\"btn-primary btn\\\" (click)=\\\"_wizardManagerService.nextAction($event)\\\"\\n                    *ngIf=\\\"1 > _wizardManagerService.getIndex()\\\">Next</button>\\n            <button type=\\\"button\\\" class=\\\"btn-primary btn\\\" (click)=\\\"_wizardManagerService.finishAction($event)\\\"\\n                    *ngIf=\\\"1 == _wizardManagerService.getIndex()\\\">Finish</button>\\n        \\n    </div>\\n</div></div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-settlement/add/ts/templates/form-popup.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/client-document-settlement/add/ts/templates/form-popup.component.html\n// module chunks = main","module.exports = \"\\n\\n\\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n\\n    \\n\\n\\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n\\n    \\n            \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().code\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_code\\\">Code</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().code\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_value\\\">Value</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_value\\\" name=\\\"form[value]\\\" required=\\\"required\\\" [(ngModel)]=\\\"_formService.getObject().value\\\" formControlName=\\\"value\\\" [class.error]=\\\"_formService.getErrors().value &amp;&amp; _formService.getErrors().value.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().value\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" [innerHTML]=\\\"getLang('Enabled')\\\"></label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <div class=\\\"checkbox\\\">                                        <label for=\\\"form_isEnabled\\\"><input type=\\\"checkbox\\\" id=\\\"form_isEnabled\\\" name=\\\"form[isEnabled]\\\" [(ngModel)]=\\\"_formService.getObject().isEnabled\\\" formControlName=\\\"isEnabled\\\" [class.error]=\\\"_formService.getErrors().isEnabled &amp;&amp; _formService.getErrors().isEnabled.length &gt; 0\\\" value=\\\"1\\\" checked=\\\"checked\\\" /> Is enabled</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isEnabled\\\">{{error}}</label>\\n            </div>\\n        </div>\\n        \\n\\n    \\n\\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\\n\\n\\n    \\n\\n    </form>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-settlement/add/ts/templates/step2-form-popup.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/client-document-settlement/add/ts/templates/step2-form-popup.component.html\n// module chunks = main","import {Component, ElementRef, Inject, Optional, Injector, Renderer} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormPopupExtensionComponent, FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\n\n\n@Component({\n    selector: '#js_clientDocumentReceiptSettlementFormPopup',\n    templateUrl: '../templates/form-popup.component.html'\n})\nexport class FormPopupComponent extends FormPopupExtensionComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any\n    ) {\n        super();\n        super.initFormPopupExtensionComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-settlement/edit/ts/src/form-popup.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {FormPopupComponent} from './form-popup.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        FormPopupComponent\n    ],\n    exports: [FormPopupComponent]\n})\nexport class FormPopupExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-settlement/edit/ts/src/form-popup.ext-module.ts","module.exports = \"    \\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">    \\n            \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().code\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_code\\\">Code</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().code\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_value\\\">Value</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_value\\\" name=\\\"form[value]\\\" required=\\\"required\\\" [(ngModel)]=\\\"_formService.getObject().value\\\" formControlName=\\\"value\\\" [class.error]=\\\"_formService.getErrors().value &amp;&amp; _formService.getErrors().value.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().value\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" [innerHTML]=\\\"getLang('Enabled')\\\"></label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <div class=\\\"checkbox\\\">                                        <label for=\\\"form_isEnabled\\\"><input type=\\\"checkbox\\\" id=\\\"form_isEnabled\\\" name=\\\"form[isEnabled]\\\" [(ngModel)]=\\\"_formService.getObject().isEnabled\\\" formControlName=\\\"isEnabled\\\" [class.error]=\\\"_formService.getErrors().isEnabled &amp;&amp; _formService.getErrors().isEnabled.length &gt; 0\\\" value=\\\"1\\\" checked=\\\"checked\\\" /> Is enabled</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isEnabled\\\">{{error}}</label>\\n            </div>\\n        </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n        \\n                    <div class=\\\"row\\\">\\n            <div class=\\\"col-auto ml-auto\\\">\\n                                            <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"cancelAction($event)\\\"\\n                                        id=\\\"form_cancel\\\"\\n            name=\\\"form[cancel]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Cancel</button>\\n                                                <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"resetAction($event)\\\"\\n                                        id=\\\"form_reset\\\"\\n            name=\\\"form[reset]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-ban\\\"></i>&nbsp;Reset</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAction($event)\\\"\\n                                        id=\\\"form_save\\\"\\n            name=\\\"form[save]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-check\\\"></i>&nbsp;Save</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAndCloseAction($event)\\\"\\n                                        id=\\\"form_saveAndClose\\\"\\n            name=\\\"form[saveAndClose]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Save and Close</button>\\n                                </div>\\n        </div>\\n    </div>    \\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-settlement/edit/ts/templates/form-popup.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/client-document-settlement/edit/ts/templates/form-popup.component.html\n// module chunks = main","import {Component, Inject, Injector, ViewContainerRef, Renderer} from '@angular/core';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {ActionsService} from '../../../../../../../../AppBundle/Resources/public/ts/actions/actions.service';\nimport {DataBoxExtensionComponent, DataBoxProvider, Popups, Popup} from '../../../../../../../../AppBundle/Resources/public/data-box/ts/src/data-box.extension-component';\nimport {ModalService} from '../../../../../../../../AppBundle/Resources/public/modal/ts/modal.service';\nimport {TasksLoaderManagerService} from '../../../../../../../../AppBundle/Resources/public/tasks-loader-manager/ts/tasks-loader-manager.service';\n\n\n// Component\n@Component({\n    selector: '.js_clientDocumentReceiptSettlement',\n    templateUrl: '../templates/main.component.html'\n})\nexport class MainComponent extends DataBoxExtensionComponent\n{\n    constructor(\n        viewContainerRef: ViewContainerRef,\n        renderer: Renderer,\n        @Inject('Provider') dataBoxProvider: DataBoxProvider,\n        @Inject('DataService') dataService: any,\n        tasksLoaderManagerService: TasksLoaderManagerService,\n        @Inject('HelperService') helperService: any,\n        actionsService: ActionsService,\n        modalService: ModalService,\n        @Inject('Popups') popups: Popups | Popup,\n        injector: Injector,\n        @Inject('ParentDataService') protected _parentDataService: any // Used in view\n    ) {\n        // Call parent\n        super();\n        super.initDataBoxExtensionComponent(\n            viewContainerRef,\n            renderer,\n            dataBoxProvider,\n            dataService,\n            tasksLoaderManagerService,\n            helperService,\n            actionsService,\n            modalService,\n            popups,\n            injector\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-settlement/index/ts/src/main.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n// This module doesn't use \"ReactiveFormsModule\", but it needs to import this class\n// to provide \"formBuilder\" when inject dependencies in child modules (like form)\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {SearchModule} from '../../../../../../../../AppBundle/Resources/public/ts/search/search.module';\nimport {ExpanderModule} from '../../../../../../../../AppBundle/Resources/public/ts/expander/expander.module';\nimport {SearchPaginationModule} from '../../../../../../../../AppBundle/Resources/public/ts/search/search-pagination.module';\nimport {MainComponent} from './main.component';\nimport {LegendExtModule} from \"../../../../../../../../AppBundle/Resources/public/legend/ts/src/legend.ext-module\";\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        SearchModule,\n        SearchPaginationModule,\n        ExpanderModule,\n        LegendExtModule\n    ],\n    declarations: [\n        MainComponent\n    ],\n    exports: [MainComponent]\n})\nexport class MainExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-settlement/index/ts/src/main.ext-module.ts","module.exports = \"\\n\\n<div class=\\\"ibox\\\" >\\n                        <div class=\\\"ibox-title\\\" *ngIf=\\\"!getProviderExtraDataAttr('hasMergeHeader')\\\">\\n                <h5>\\n                    <ng-template [ngIf]=\\\"getProviderAttr('controls')['expander']['isEnabled']\\\"><js_expander\\n                        [isExpanded]=\\\"_isExpanded || null\\\"\\n                        [label]=\\\"getLang(getProviderAttr('label'))\\\"\\n                        [labelCount]=\\\"getProviderAttr('labelCount')\\\"\\n                        [labelIcon]=\\\"getProviderAttr('labelIcon')\\\"\\n                        (onChange)=\\\"expanderAction($event)\\\"></js_expander></ng-template>\\n                    <ng-template [ngIf]=\\\"!getProviderAttr('controls')['expander']['isEnabled']\\\">\\n                        <span [innerHTML]=\\\"getProviderAttr('label')\\\"></span>\\n                    </ng-template>\\n                </h5>\\n                <div *ngIf=\\\"_isExpanded\\\"\\n                     class=\\\"txt-align-r hide-on-empty\\\">    <div class=\\\"row align-items-center\\\">\\n        <div class=\\\"col ml-auto text-right actions no-user-select\\\">\\n            <ng-template [ngIf]=\\\"_actionsService.getActionAttr('search', 'isEnabled')\\\"><js_search class=\\\"search\\\"></js_search></ng-template>\\n            <div (click)=\\\"triggerAction($event)\\\">\\n                <ng-template ngFor let-action [ngForOf]=\\\"_actionsService.getHeadActions()\\\">\\n                    <a *ngIf=\\\"_actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                       [ngClass]=\\\"[_actionsService.getActionAttr(action, 'icon')]\\\"\\n                       class=\\\"-round fa\\\"\\n                       [attr.data-action]=\\\"action\\\"></a>\\n                </ng-template>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n            </div>\\n            \\n    <div [hidden]=\\\"!(_isExpanded)\\\" class=\\\"ibox-content hide-on-empty\\\">    <ng-template [ngIf]=\\\"(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">\\n                \\n    <div class=\\\"table-responsive\\\">\\n    <form>    <table class=\\\"data-table table table-hover dataTables-example table-bordered\\\">\\n        <thead>\\n        <tr>\\n            <th *ngFor=\\\"let searchField of _dataService.getSearch('fields')\\\">{{ getLang(_dataService.getFields('metadata')[searchField].label) }}</th>\\n            <th>&nbsp;</th>\\n        </tr>\\n        </thead>        <tbody>\\n        <ng-template ngFor let-obj [ngForOf]=\\\"_dataService.getProviderAttr('objects')\\\" let-objIndex=\\\"index\\\">\\n        <tr (dblclick)=\\\"editAction($event, objIndex)\\\"            [ngClass]=\\\"getLegendClasses(obj, 'tr')\\\">                    <td *ngFor=\\\"let searchField of _dataService.getSearch('fields')\\\"\\n    [ngClass]=\\\"getColAlign(searchField)\\\"\\n    [innerHTML]=\\\"obj[searchField]\\\"></td>                        <td>\\n                <span *ngIf=\\\"obj['_isNew']\\\" class=\\\"badge badge-info\\\">New</span>\\n                <span *ngIf=\\\"obj['_isEdited']\\\" class=\\\"badge badge-info\\\">Edited</span>\\n                <input *ngIf=\\\"_actionsService.getActionAttr('radioChoice', 'isEnabled')\\\"\\n                       class=\\\"pull-right action\\\"\\n                       type=\\\"radio\\\"\\n                       name=\\\"index[]\\\"\\n                       value=\\\"{{objIndex}}\\\"/>\\n                <input *ngIf=\\\"_actionsService.getActionAttr('checkAll', 'isEnabled')\\\"\\n                       class=\\\"pull-right action js_checkAll\\\"\\n                       type=\\\"checkbox\\\"\\n                       name=\\\"index[]\\\"\\n                       value=\\\"{{objIndex}}\\\"\\n                       [ngModel]=\\\"checkAll\\\"/>\\n                <div class=\\\"pull-right actions no-user-select text-secondary\\\" (click)=\\\"triggerAction($event)\\\">\\n                    <ng-template ngFor let-action [ngForOf]=\\\"_actionsService.getDetailActions()\\\">\\n                        <a *ngIf=\\\"_actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                           [ngClass]=\\\"[_actionsService.getActionAttr(action, 'icon') + getActionsLegendClasses(obj, action)]\\\"\\n                           class=\\\"fa\\\"\\n                           [attr.data-action]=\\\"action\\\"\\n                           [attr.data-value]=\\\"objIndex\\\"></a>\\n                    </ng-template>\\n                </div>\\n            </td>        </tr>\\n        </ng-template>\\n        </tbody>\\n    </table>\\n    </form></div>    </ng-template><p\\n        class=\\\"text-center\\\"\\n        *ngIf=\\\"!(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">No results.</p>\\n</div>\\n        <div [hidden]=\\\"!(_isExpanded)\\\"\\n         class=\\\"ibox-footer\\\"\\n         *ngIf=\\\"_dataService.countObjects() > 0\\\"><js_searchPagination></js_searchPagination></div>\\n\\n</div>\\n\\n<js_legend></js_legend>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document-settlement/index/ts/templates/main.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/client-document-settlement/index/ts/templates/main.component.html\n// module chunks = main","import {Component, ElementRef, Inject, Injector, Renderer, QueryList, Optional, ViewChildren, ViewContainerRef, ViewChild} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {Helper} from '../../../../../../../../AppBundle/Resources/public/ts/helper';\nimport {DataService} from \"../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service\";\nimport {ActionsService} from '../../../../../../../../AppBundle/Resources/public/ts/actions/actions.service';\nimport {WizardPopupProvider, LazyLoadData} from '../../../../../../../../AppBundle/Resources/public/wizard/ts/src/wizard-form-popup.ext-component';\nimport {WizardManagerService} from '../../../../../../../../AppBundle/Resources/public/wizard/ts/src/wizard-manager.service';\nimport {FormPopupExtComponent as BaseDocumentAddFormPopupExtComponent} from '../../../../base-document/add/ts/form-popup.ext-component';\n\n\n/* Import dependencies */\n\n// Booking Parent, used when the document is aggregated to one booking\n// (this code is putted here to avoid to repeat this module in the booking bundle, so we can reuse the same modules)\nvar bookingContext = ((Helper.getAppVar('conf')['localData'] && Helper.getAppVar('conf')['localData']['data']['bookingContext'])\n            ? Helper.getAppVar('conf')['localData']['data']['bookingContext'] :\n            null\n    ),\n    bookingId = (bookingContext ? Helper.getAppVar('conf')['object']['id'] : null);\n\n// STEP 2\n// INVOICE and RECTIFICATION\nimport {TreeViewExtModule} from '../../../../../../../../AppBundle/Resources/public/tree-view/default/ts/src/tree-view.ext-module';\n// RECEIPT and SETTLEMENT\nimport {DataBoxExtensionModule as ClientDocumentExtensionModule} from '../../../../../../../../AppBundle/Resources/public/data-box/ts/src/data-box.extension-module';\n// PAYMENT (RECEIPT WITHOUT SETTLEMENT, BASED ON CLIENT PAYMENT REQUEST)\nimport {DataBoxExtensionModule as ClientPaymentRequestExtModule} from '../../../../../../../../AppBundle/Resources/public/data-box/ts/src/data-box.extension-module';\n\n// STEP 3\n// INVOICE\nimport {Step3InvoiceExtModule} from './step3-invoice.ext-module';\n// RECTIFICATION\nimport {Step3RectificationExtModule} from './step3-rectification.ext-module';\n// RECEIPT\nimport {Step3ReceiptExtModule} from './step3-receipt.ext-module';\n// PAYMENT\nimport {Step3PaymentExtModule} from './step3-payment.ext-module';\n// SETTLEMENT\nimport {Step3SettlementExtModule} from './step3-settlement.ext-module';\n\n/* /Import dependencies */\n\n\n@Component({\n    selector: '.js_addFormPopup',\n    templateUrl: '../templates/form-popup.component.html'\n})\nexport class FormPopupComponent extends BaseDocumentAddFormPopupExtComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: WizardPopupProvider,\n        wizardManagerService: WizardManagerService,\n        formService: FormService,\n        @Inject('HelperService') helperService: any,\n        @Inject('DataService') dataService: any,\n        injector: Injector\n    ) {\n        // Call parent\n        super();\n        super.initBaseDocumentAddFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            wizardManagerService,\n            formService,\n            helperService,\n            dataService,\n            injector\n        );\n    }\n\n    /**\n     * Submit navigation (when leave one container to navigate in other one)\n     * @param index (index to validate)\n     * @returns {Promise<boolean>}\n     */\n    public submitNav(index: number): Promise<boolean>\n    {\n        let that = this;\n\n        // Step 1 for receipt payment\n        if ((index == 1) &&\n            (this._formService.getObject()['documentType_type'] == 'PAYMENT') &&\n            (this._formService.getObject()['documentType_operation'] == 'CREDIT')\n        ) {\n            return new Promise(function(resolve, reject) {\n                // Submit values\n                let componentRef = that._wizardManagerService.getComponentRef(index);\n                if (componentRef) {\n                    let route = (that._helperService.getAppVar('route') +\n                        'bck/accounting/client-document-receipt-payment/add-step1-submit/' +\n                        that._formService.getObject()['id'] + '/1'\n                    );\n\n                    return componentRef.instance.submitChoices(route).then(\n                        data => {\n                            // Refresh the parent object (total)\n                            that._dataService.refreshObject();\n                            return resolve(true);\n                        },\n                        errors => { return reject(false); }\n                    );\n                }\n                return reject(false);\n            });\n        }\n\n        return super.submitNav(index);\n    }\n\n    /**\n     * Get navigation data (needed data to lazy load container)\n     * @param index (index to load)\n     * @returns NavData\n     */\n    public getNavData(index: number): LazyLoadData\n    {\n        switch (index) {\n            case 1:\n                switch (this._formService.getObject()['documentType_type']) {\n                    case 'RECTIFICATION':\n                        return {\n                            module: TreeViewExtModule,\n                            component: 'TreeViewComponent',\n                            urlProvider: (this._helperService.getAppVar('route') + 'bck/accounting/client-document-invoice-rectification/data-for-rectification/' + this._formService.getObject()['id'] + (bookingContext ? ('/' + bookingId) : ''))\n                        };\n                    case 'RECEIPT':\n                    case 'SETTLEMENT':\n                        return {\n                            module: ClientDocumentExtensionModule,\n                            component: 'DataBoxComponent',\n                            urlProvider: (this._helperService.getAppVar('route') + 'bck/accounting/client-document/data-for-settlement/' + this._formService.getObject()['id'] + (bookingContext ? ('/' + bookingId) : ''))\n                        };\n                    case 'PAYMENT':\n                        return {\n                            module: ClientPaymentRequestExtModule,\n                            component: 'DataBoxComponent',\n                            urlProvider: (this._helperService.getAppVar('route') + 'bck/accounting/client-payment-request/data-for-receipt/' + this._formService.getObject()['clientObj'])\n                        };\n                    default: // INVOICE\n                        return {\n                            module: TreeViewExtModule,\n                            component: 'TreeViewComponent',\n                            urlProvider: (this._helperService.getAppVar('route') + 'bck/booking/booking-service-price/data-for-invoice-client/' + this._formService.getObject()['clientObj'] + (bookingContext ? ('/' + bookingId) : ''))\n                        };\n                }\n            case 2:\n                switch (this._formService.getObject()['documentType_type']) {\n                    case 'RECTIFICATION':\n                        return {\n                            module: Step3RectificationExtModule,\n                            component: 'Step3RectificationComponent',\n                        };\n                    case 'RECEIPT':\n                        return {\n                            module: Step3ReceiptExtModule,\n                            component: 'Step3ReceiptComponent',\n                        };\n                    case 'PAYMENT':\n                        return {\n                            module: Step3PaymentExtModule,\n                            component: 'Step3PaymentComponent'\n                        };\n                    case 'SETTLEMENT':\n                        return {\n                            module: Step3SettlementExtModule,\n                            component: 'Step3SettlementComponent',\n                        };\n                    default: // INVOICE\n                        return {\n                            module: Step3InvoiceExtModule,\n                            component: 'Step3InvoiceComponent',\n                        };\n                }\n        }\n\n        return null;\n    }\n\n    /**\n     * Get nav providers (to lazy load components in container with dependency injection)\n     * @param index (index to load)\n     * @param data (data to resolve all providers)\n     * @returns {Array}\n     */\n    public getNavProviders(index: number, data = null): any\n    {\n        // Step 1 for payments\n        if ((index == 1) &&\n            (this._formService.getObject()['documentType_type'] == 'PAYMENT') &&\n            (this._formService.getObject()['documentType_operation'] == 'CREDIT')\n        ) {\n            return [\n                {provide: 'DataService', useClass: DataService},\n                {provide: 'DataServiceProvider', useValue: this._helperService.getDataServiceProvider(data)},\n                {provide: 'Provider', useValue: this._helperService.getDataBoxProvider(data)},\n                ActionsService,\n                {provide: 'LegendProvider', useValue: Helper.getLegendProvider(data)},\n                {provide: 'ActionsServiceProvider', useValue: this._helperService.getActionsServiceProvider(data)},\n                {provide: 'Popups', useValue: null}\n            ];\n        }\n\n        return super.getNavProviders(index, data);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/add/ts/src/form-popup.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {FormPopupComponent} from './form-popup.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        FormPopupComponent\n    ],\n    exports: [FormPopupComponent]\n})\nexport class FormPopupExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/add/ts/src/form-popup.ext-module.ts","import {Component, ElementRef, Inject, Optional, Injector, ReflectiveInjector, Renderer, ViewChild, ViewContainerRef} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {DynamicComponentLoaderService} from '../../../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\nimport {PostService} from '../../../../../../../../AppBundle/Resources/public/ts/post.service';\nimport {BaseInvoiceDocumentFormPopupExtComponent} from '../../../ts/base-invoice-document-form-popup.ext-component';\n\n\n@Component({\n    selector: '.js_addInvoiceDetailFormPopup',\n    templateUrl: '../templates/step3-invoice.component.html'\n})\nexport class Step3InvoiceComponent extends BaseInvoiceDocumentFormPopupExtComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any,\n        injector: Injector,\n        @Inject('ParentDataService') parentDataService: any,\n        @Inject('HelperService') helperService: any,\n        dynamicComponentLoaderService: DynamicComponentLoaderService,\n        postService: PostService\n    ) {\n        super();\n        super.initBaseInvoiceDocumentFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            injector,\n            parentDataService,\n            helperService,\n            dynamicComponentLoaderService,\n            postService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/add/ts/src/step3-invoice.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {Step3InvoiceComponent} from './step3-invoice.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        Step3InvoiceComponent\n    ],\n    exports: [Step3InvoiceComponent]\n})\nexport class Step3InvoiceExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/add/ts/src/step3-invoice.ext-module.ts","import {Component, ElementRef, Inject, Optional, Injector, ReflectiveInjector, Renderer, ViewChild, ViewContainerRef} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {DynamicComponentLoaderService} from '../../../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\nimport {PostService} from '../../../../../../../../AppBundle/Resources/public/ts/post.service';\nimport {BaseReceiptPaymentDocumentFormPopupExtComponent} from '../../../ts/base-receipt-payment-document-form-popup.ext-component';\n\n\n@Component({\n    selector: '.js_addDetailFormPopup',\n    templateUrl: '../templates/step3-payment.component.html'\n})\nexport class Step3PaymentComponent extends BaseReceiptPaymentDocumentFormPopupExtComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any,\n        injector: Injector,\n        @Inject('ParentDataService') parentDataService: any,\n        @Inject('HelperService') helperService: any,\n        dynamicComponentLoaderService: DynamicComponentLoaderService,\n        postService: PostService\n    ) {\n        super();\n        super.initBaseReceiptPaymentDocumentFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            injector,\n            parentDataService,\n            helperService,\n            dynamicComponentLoaderService,\n            postService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/add/ts/src/step3-payment.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {Step3PaymentComponent} from './step3-payment.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        Step3PaymentComponent\n    ],\n    exports: [Step3PaymentComponent]\n})\nexport class Step3PaymentExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/add/ts/src/step3-payment.ext-module.ts","import {Component, ElementRef, Inject, Optional, Injector, ReflectiveInjector, Renderer, ViewChild, ViewContainerRef} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {NavManagerService} from '../../../../../../../../AppBundle/Resources/public/ts/nav-manager/nav-manager.service';\nimport {WizardManagerService} from '../../../../../../../../AppBundle/Resources/public/wizard/ts/src/wizard-manager.service';\nimport {DynamicComponentLoaderService} from '../../../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\nimport {PostService} from '../../../../../../../../AppBundle/Resources/public/ts/post.service';\nimport {BaseReceiptDocumentFormPopupExtComponent, Popups, Popup} from '../../../ts/base-receipt-document-form-popup.ext-component';\n\n/* Import dependencies */\nimport {FormPopupExtModule as ClientDocumentPaymentEditFormPopupExtModule} from \"../../../../client-document-payment/edit/ts/src/form-popup.ext-module\";\nimport {FormPopupExtModule as ClientDocumentPaymentAddFormPopupExtModule} from \"../../../../client-document-payment/add/ts/src/form-popup.ext-module\";\n/* /Import dependencies */\n\n\n@Component({\n    selector: '.js_addDetailFormPopup',\n    templateUrl: '../templates/step3-receipt.component.html'\n})\nexport class Step3ReceiptComponent extends BaseReceiptDocumentFormPopupExtComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any,\n        injector: Injector,\n        @Inject('ParentDataService') parentDataService: any,\n        @Inject('HelperService') helperService: any,\n        dynamicComponentLoaderService: DynamicComponentLoaderService,\n        postService: PostService\n    ) {\n        super();\n        super.initBaseReceiptDocumentFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            injector,\n            parentDataService,\n            helperService,\n            dynamicComponentLoaderService,\n            postService\n        );\n    }\n\n    /**\n     * Get payment dependency popups provider\n     * Using this method, each child component can redefine the payment popups\n     * @param data\n     * @returns {Popups}\n     */\n    protected getPaymentDependencyPopupsProvider(data): Popups | Popup {\n        // Not returned directly to avoid the IDE error (method override error)\n\n        // Edit form\n        let popups: Popup | Popups = {\n            module: ClientDocumentPaymentEditFormPopupExtModule,\n            component: 'FormPopupComponent',\n            providers: [\n                FormService,\n                {provide: 'FormServiceProvider', useValue: {}},\n                {provide: 'Provider', useValue: this._helperService.getFormProvider(data)}\n            ]\n        };\n\n        // Edit and add\n        if ((this._formService.getObject()['documentType_type'] == 'RECEIPT') &&\n            (this._formService.getObject()['documentType_operation'] == 'CREDIT')) {\n            popups = {\n                add: {\n                    module: ClientDocumentPaymentAddFormPopupExtModule,\n                    component: 'FormPopupComponent',\n                    providers: [\n                        FormService,\n                        {provide: 'FormServiceProvider', useValue: {}},\n                        {provide: 'Provider', useValue: this._helperService.getFormProvider(data)},\n                        {provide: 'ParentFormService', useValue: this._formService},\n                        NavManagerService,\n                        WizardManagerService,\n\n                    ]\n                },\n                edit: popups\n            };\n        }\n\n        return popups;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/add/ts/src/step3-receipt.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {Step3ReceiptComponent} from './step3-receipt.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        Step3ReceiptComponent\n    ],\n    exports: [Step3ReceiptComponent]\n})\nexport class Step3ReceiptExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/add/ts/src/step3-receipt.ext-module.ts","import {Component, ElementRef, Inject, Optional, Injector, ReflectiveInjector, Renderer, ViewChild, ViewContainerRef} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {DynamicComponentLoaderService} from '../../../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\nimport {PostService} from '../../../../../../../../AppBundle/Resources/public/ts/post.service';\nimport {BaseInvoiceRectificationDocumentFormPopupExtComponent} from '../../../ts/base-invoice-rectification-document-form-popup.ext-component';\n\n\n@Component({\n    selector: '.js_documentAddInvoiceRectificationFormPopup',\n    templateUrl: '../templates/step3-rectification.component.html'\n})\nexport class Step3RectificationComponent extends BaseInvoiceRectificationDocumentFormPopupExtComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any,\n        injector: Injector,\n        @Inject('ParentDataService') parentDataService: any,\n        @Inject('HelperService') helperService: any,\n        dynamicComponentLoaderService: DynamicComponentLoaderService,\n        postService: PostService\n    ) {\n        super();\n        super.initBaseInvoiceRectificationDocumentFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            injector,\n            parentDataService,\n            helperService,\n            dynamicComponentLoaderService,\n            postService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/add/ts/src/step3-rectification.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {Step3RectificationComponent} from './step3-rectification.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        Step3RectificationComponent\n    ],\n    exports: [Step3RectificationComponent]\n})\nexport class Step3RectificationExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/add/ts/src/step3-rectification.ext-module.ts","import {Component, ElementRef, Inject, Optional, Injector, ReflectiveInjector, Renderer, ViewChild, ViewContainerRef} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {DynamicComponentLoaderService} from '../../../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\nimport {PostService} from '../../../../../../../../AppBundle/Resources/public/ts/post.service';\nimport {BaseReceiptSettlementDocumentFormPopupExtComponent} from '../../../ts/base-receipt-settlement-document-form-popup.ext-component';\n\n\n@Component({\n    selector: '.js_addDetailFormPopup',\n    templateUrl: '../templates/step3-settlement.component.html'\n})\nexport class Step3SettlementComponent extends BaseReceiptSettlementDocumentFormPopupExtComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any,\n        injector: Injector,\n        @Inject('ParentDataService') parentDataService: any,\n        @Inject('HelperService') helperService: any,\n        dynamicComponentLoaderService: DynamicComponentLoaderService,\n        postService: PostService\n    ) {\n        super();\n        super.initBaseReceiptSettlementDocumentFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            injector,\n            parentDataService,\n            helperService,\n            dynamicComponentLoaderService,\n            postService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/add/ts/src/step3-settlement.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {Step3SettlementComponent} from './step3-settlement.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        Step3SettlementComponent\n    ],\n    exports: [Step3SettlementComponent]\n})\nexport class Step3SettlementExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/add/ts/src/step3-settlement.ext-module.ts","module.exports = \"<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">    \\n                        <ul class=\\\"row mb-3 no-gutters wizard-nav\\\">\\n                                    <li class=\\\"col-auto wizard-step\\\"\\n                        [class.step-active]=\\\"0 == _wizardManagerService.getIndex()\\\">\\n                        <span class=\\\"step-number\\\">1</span>\\n                        <span class=\\\"step-text\\\">Document Type</span>\\n                    </li>\\n                                    <li class=\\\"col-auto wizard-step\\\"\\n                        [class.step-active]=\\\"1 == _wizardManagerService.getIndex()\\\">\\n                        <span class=\\\"step-number\\\">2</span>\\n                        <span class=\\\"step-text\\\">Detail</span>\\n                    </li>\\n                                    <li class=\\\"col-auto wizard-step\\\"\\n                        [class.step-active]=\\\"2 == _wizardManagerService.getIndex()\\\">\\n                        <span class=\\\"step-number\\\">3</span>\\n                        <span class=\\\"step-text\\\">Preview</span>\\n                    </li>\\n                            </ul>\\n\\n            \\n                                                                        <section [hidden]=\\\"_wizardManagerService.getIndex() != 0\\\">                    \\n\\n\\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n\\n    \\n            \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_clientDocumentTypeObj\\\">Document Type</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                                                            <select [(ngModel)]=\\\"_formService.getObject().clientDocumentTypeObj\\\"\\n            formControlName = clientDocumentTypeObj\\n            class=\\\"form-control\\\"\\n            [class.error]=\\\"_formService.getErrors().clientDocumentTypeObj && (_formService.getErrors().clientDocumentTypeObj.length > 0)\\\"\\n            id=\\\"form_clientDocumentTypeObj\\\"\\n            name=\\\"form[clientDocumentTypeObj]\\\"\\n            required=\\\"required\\\">\\n        <option value=\\\"\\\"></option>\\n                    <option *ngFor=\\\"let choice of _dataService.getFieldChoices('clientDocumentTypeObj')\\\"\\n                    value=\\\"{{choice['id']}}\\\">{{choice['label']}}</option>\\n            </select>\\n                                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().clientDocumentTypeObj\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_clientObj\\\">Client</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input [(ngModel)]=\\\"_formService.getObject().clientObj\\\"\\n           formControlName = clientObj\\n           name=\\\"form[clientObj]\\\"\\n           required=\\\"required\\\"           type=\\\"hidden\\\">\\n    <js_autoComplete [field]=\\\"'clientObj'\\\"\\n                     [hasSelfReference]=\\\"_dataService.getFieldChoicesAttr('clientObj', 'hasSelfReference')\\\"\\n                                                                       ></js_autoComplete>\\n                    <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().clientObj\\\">{{error}}</label>\\n            </div>\\n        </div>\\n        \\n\\n    \\n\\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\\n                </section>                                            <section [hidden]=\\\"_wizardManagerService.getIndex() != 1\\\"\\n         class=\\\"js_lazyLoadContainer_1\\\">\\n    <ng-template #js_lazyLoadContainer></ng-template>\\n</section>                                <section [hidden]=\\\"_wizardManagerService.getIndex() != 2\\\"\\n         class=\\\"js_lazyLoadContainer_2\\\">\\n    <ng-template #js_lazyLoadContainer></ng-template>\\n</section>            \\n            \\n            \\n    </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-auto\\\">\\n            <button type=\\\"button\\\" class=\\\"btn-light btn\\\" (click)=\\\"_wizardManagerService.cancelAction($event)\\\">Cancel</button>\\n                <button type=\\\"button\\\" class=\\\"btn-primary btn\\\" (click)=\\\"_wizardManagerService.prevAction($event)\\\"\\n                    *ngIf=\\\"0 < _wizardManagerService.getIndex()\\\">Prev</button>\\n            <button type=\\\"button\\\" class=\\\"btn-primary btn\\\" (click)=\\\"_wizardManagerService.nextAction($event)\\\"\\n                    *ngIf=\\\"2 > _wizardManagerService.getIndex()\\\">Next</button>\\n            <button type=\\\"button\\\" class=\\\"btn-primary btn\\\" (click)=\\\"_wizardManagerService.finishAction($event)\\\"\\n                    *ngIf=\\\"2 == _wizardManagerService.getIndex()\\\">Finish</button>\\n        \\n    </div>\\n</div></div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/add/ts/templates/form-popup.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/client-document/add/ts/templates/form-popup.component.html\n// module chunks = main","module.exports = \"\\n\\n\\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n\\n\\n    \\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-6\\\">\\n            <img *ngIf=\\\"_dataService.getLocalDataAttr('storeLogo')\\\"\\n                 height=\\\"96\\\"\\n                 alt=\\\"logo\\\"\\n                 class=\\\"m-b-md\\\"\\n                 [src]=\\\"_helperService.getUploadWebPath(_dataService.getLocalDataAttr('storeLogo'), 'resize_96')\\\">\\n            <address>\\n                <strong>{{_formService.getObject().storeLegalName}}</strong><br>\\n                <ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet1\\\"\\n                    ><span>{{_formService.getObject().storeStreet1}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet2\\\"\\n                    ><span>{{_formService.getObject().storeStreet2}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storePostCode\\\"\\n                    ><span>{{_formService.getObject().storePostCode}} {{_formService.getObject().storeCity}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeRegion\\\"\\n                    ><span>{{_formService.getObject().storeRegion}}</span><br></ng-template>            </address>\\n            <ng-template ngFor let-field [ngForOf]=\\\"_dataService.getLocalDataAttr('storeInfo')\\\"><span\\n                    [innerHtml]=\\\"field\\\"></span><br></ng-template>\\n            <p class=\\\"m-t-sm\\\">Tax Number: {{_formService.getObject().storeTaxNumber}}</p>\\n        </div>\\n        <div class=\\\"col-sm-6\\\">\\n            <h3 *ngIf=\\\"_formService.getObject().code\\\" class=\\\"document-number text-right\\\"><span>{{_formService.getObject().documentType_name}}:&nbsp;</span>                        <p id=\\\"form_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().code\\\">{{error}}</label>\\n</h3>\\n            <table class=\\\"table document-dates\\\">\\n                <tbody>\\n                <tr>\\n                    <td><strong>Date:</strong></td>\\n                    <td>                        \\n    <div class=\\\"input-group js_dataPicker\\\"\\n         [datePicker]=\\\"'date'\\\"\\n         #dpk_date=\\\"\\\" [control]=\\\"dpk_date\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"yyyy-mm-dd\\\"\\n               [(ngModel)]=\\\"_formService.getObject().date\\\"\\n               formControlName = date\\n               name=\\\"form[date]\\\"\\n               required=\\\"required\\\"               [class.error]=\\\"_formService.getErrors()['date'] && (_formService.getErrors()['date'].length > 0)\\\"\\n               ngbDatepicker #dpk_date=\\\"ngbDatepicker\\\">\\n        <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn\\\" type=\\\"button\\\"><a class=\\\"fa fa-calendar\\\"></a></button>\\n        </div>\\n    </div>\\n    \\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().date\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                <tr>\\n                    <td><strong>Due Date:</strong></td>\\n                    <td>                        \\n    <div class=\\\"input-group js_dataPicker\\\"\\n         [datePicker]=\\\"'dueDate'\\\"\\n         #dpk_dueDate=\\\"\\\" [control]=\\\"dpk_dueDate\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"yyyy-mm-dd\\\"\\n               [(ngModel)]=\\\"_formService.getObject().dueDate\\\"\\n               formControlName = dueDate\\n               name=\\\"form[dueDate]\\\"\\n               required=\\\"required\\\"               [class.error]=\\\"_formService.getErrors()['dueDate'] && (_formService.getErrors()['dueDate'].length > 0)\\\"\\n               ngbDatepicker #dpk_dueDate=\\\"ngbDatepicker\\\">\\n        <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn\\\" type=\\\"button\\\"><a class=\\\"fa fa-calendar\\\"></a></button>\\n        </div>\\n    </div>\\n    \\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().dueDate\\\">{{error}}</label>\\n</td>\\n                </tr>                </tbody>\\n            </table>\\n\\n            <div class=\\\"\\\">\\n                <span class=\\\"\\\">To:</span>\\n                <div class=\\\"document-entity mt-1\\\">\\n                    <span *ngIf=\\\"_formService.getObject().entity_avatar\\\"\\n                          [innerHTML]=\\\"_formService.getViewObject().entity_avatar\\\" class=\\\"pr-1\\\"></span>\\n                    <address>\\n                        <strong>{{_formService.getObject().entityLegalName}}</strong><br>\\n                        <div class=\\\"m-t-xs m-b-xs\\\">\\n                                                        <input [(ngModel)]=\\\"_formService.getObject().entityAddressObj\\\"\\n           formControlName = entityAddressObj\\n           name=\\\"form[entityAddressObj]\\\"\\n                      type=\\\"hidden\\\">\\n    <js_autoComplete [field]=\\\"'entityAddressObj'\\\"\\n                     [hasSelfReference]=\\\"_dataService.getFieldChoicesAttr('entityAddressObj', 'hasSelfReference')\\\"\\n                                              (onChange)=\\\"onEntityAddressChange($event)\\\"[placeholder]=\\\"&#039;Address&#039;\\\"                         ></js_autoComplete>\\n                    <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().entityAddressObj\\\">{{error}}</label>\\n                        </div>\\n                        <ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet1\\\"\\n                            ><span>{{_formService.getObject().entityStreet1}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet2\\\"\\n                            ><span>{{_formService.getObject().entityStreet2}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityPostCode\\\"\\n                            ><span>{{_formService.getObject().entityPostCode}} {{_formService.getObject().entityCity}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityRegion\\\"\\n                            ><span>{{_formService.getObject().entityRegion}}</span><br></ng-template>                    </address>\\n                </div>\\n            </div>\\n            <p class=\\\"mt-2\\\">Tax Number: {{_formService.getObject().entityTaxNumber}}</p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"mt-2 mb-4\\\">\\n        <span>Comments</span>\\n        <div class=\\\"border rounded document-comments\\\">                            <textarea id=\\\"form_comments\\\" name=\\\"form[comments]\\\" rows=\\\"3\\\" [(ngModel)]=\\\"_formService.getObject().comments\\\" formControlName=\\\"comments\\\" [class.error]=\\\"_formService.getErrors().comments &amp;&amp; _formService.getErrors().comments.length &gt; 0\\\" class=\\\"form-control\\\"></textarea>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().comments\\\">{{error}}</label>\\n</div>\\n    </div>\\n\\n            <section><ng-template #js_lazyLoadContainer></ng-template></section>\\n    \\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-8\\\">\\n            <ng-template [ngIf]=\\\"_dataService.getLocalDataAttr('totalVatSplitByCode')\\\">\\n            <span>TAX Resume</span>\\n            <div class=\\\"border rounded document-tax-resume\\\">\\n                <table class=\\\"table\\\">\\n                    <tbody>\\n                    <tr>\\n                        <th>Code</th>\\n                        <th>Description</th>\\n                        <th>Percentage</th>\\n                        <th>Net</th>\\n                        <th>TAX</th>\\n                        <th>Total</th>\\n                    </tr>\\n                    <tr *ngFor=\\\"let obj of _dataService.getLocalDataAttr('totalVatSplitByCode')\\\">\\n                        <td>{{ obj['name'] }}</td>\\n                        <td>{{ obj['description'] }}</td>\\n                        <td class=\\\"text-right\\\">{{ obj['percentage'] }}%</td>\\n                        <td class=\\\"text-right\\\">{{ obj['subTotal'] }}</td>\\n                        <td class=\\\"text-right\\\">{{ obj['totalVat'] }}</td>\\n                        <td class=\\\"text-right\\\">{{ obj['total'] }}</td>\\n                    </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n            </ng-template>\\n        </div>\\n        <div class=\\\"col-sm-4\\\">\\n            <table class=\\\"table document-total\\\">\\n                <tbody>\\n                <tr>\\n                    <td><strong>Sub Total:</strong></td>\\n                    <td>                            <input type=\\\"text\\\" id=\\\"form_subTotal\\\" name=\\\"form[subTotal]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().subTotal\\\" formControlName=\\\"subTotal\\\" [class.error]=\\\"_formService.getErrors().subTotal &amp;&amp; _formService.getErrors().subTotal.length &gt; 0\\\" class=\\\"form-control\\\" value=\\\"0\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().subTotal\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                <tr>\\n                    <td><strong>TAX:</strong></td>\\n                    <td>                            <input type=\\\"text\\\" id=\\\"form_totalVat\\\" name=\\\"form[totalVat]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().totalVat\\\" formControlName=\\\"totalVat\\\" [class.error]=\\\"_formService.getErrors().totalVat &amp;&amp; _formService.getErrors().totalVat.length &gt; 0\\\" class=\\\"form-control\\\" value=\\\"0\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().totalVat\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                <tr>\\n                    <td><strong>Total:</strong></td>\\n                    <td>                            <input type=\\\"text\\\" id=\\\"form_total\\\" name=\\\"form[total]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().total\\\" formControlName=\\\"total\\\" [class.error]=\\\"_formService.getErrors().total &amp;&amp; _formService.getErrors().total.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().total\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n    <div *ngIf=\\\"_dataService.getLocalDataAttr('documentInfo') && _dataService.getLocalDataAttr('documentInfo')['footer']\\\"\\n         class=\\\"mt-2 bg-light p-3\\\"\\n         [innerHTML]=\\\"_dataService.getLocalDataAttr('documentInfo')['footer']\\\"></div>\\n\\n\\n    \\n\\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/add/ts/templates/step3-invoice.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/client-document/add/ts/templates/step3-invoice.component.html\n// module chunks = main","module.exports = \"\\n\\n\\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n\\n\\n    \\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-6\\\">\\n            <img *ngIf=\\\"_dataService.getLocalDataAttr('storeLogo')\\\"\\n                 height=\\\"96\\\"\\n                 alt=\\\"logo\\\"\\n                 class=\\\"m-b-md\\\"\\n                 [src]=\\\"_helperService.getUploadWebPath(_dataService.getLocalDataAttr('storeLogo'), 'resize_96')\\\">\\n            <address>\\n                <strong>{{_formService.getObject().storeLegalName}}</strong><br>\\n                <ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet1\\\"\\n                    ><span>{{_formService.getObject().storeStreet1}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet2\\\"\\n                    ><span>{{_formService.getObject().storeStreet2}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storePostCode\\\"\\n                    ><span>{{_formService.getObject().storePostCode}} {{_formService.getObject().storeCity}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeRegion\\\"\\n                    ><span>{{_formService.getObject().storeRegion}}</span><br></ng-template>            </address>\\n            <ng-template ngFor let-field [ngForOf]=\\\"_dataService.getLocalDataAttr('storeInfo')\\\"><span\\n                    [innerHtml]=\\\"field\\\"></span><br></ng-template>\\n            <p class=\\\"m-t-sm\\\">Tax Number: {{_formService.getObject().storeTaxNumber}}</p>\\n        </div>\\n        <div class=\\\"col-sm-6\\\">\\n            <h3 *ngIf=\\\"_formService.getObject().code\\\" class=\\\"document-number text-right\\\"><span>{{_formService.getObject().documentType_name}}:&nbsp;</span>                        <p id=\\\"form_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().code\\\">{{error}}</label>\\n</h3>\\n            <table class=\\\"table document-dates\\\">\\n                <tbody>\\n                <tr>\\n                    <td><strong>Date:</strong></td>\\n                    <td>                        \\n    <div class=\\\"input-group js_dataPicker\\\"\\n         [datePicker]=\\\"'date'\\\"\\n         #dpk_date=\\\"\\\" [control]=\\\"dpk_date\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"yyyy-mm-dd\\\"\\n               [(ngModel)]=\\\"_formService.getObject().date\\\"\\n               formControlName = date\\n               name=\\\"form[date]\\\"\\n               required=\\\"required\\\"               [class.error]=\\\"_formService.getErrors()['date'] && (_formService.getErrors()['date'].length > 0)\\\"\\n               ngbDatepicker #dpk_date=\\\"ngbDatepicker\\\">\\n        <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn\\\" type=\\\"button\\\"><a class=\\\"fa fa-calendar\\\"></a></button>\\n        </div>\\n    </div>\\n    \\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().date\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                                </tbody>\\n            </table>\\n\\n            <div class=\\\"\\\">\\n                <span class=\\\"\\\">To:</span>\\n                <div class=\\\"document-entity mt-1\\\">\\n                    <span *ngIf=\\\"_formService.getObject().entity_avatar\\\"\\n                          [innerHTML]=\\\"_formService.getViewObject().entity_avatar\\\" class=\\\"pr-1\\\"></span>\\n                    <address>\\n                        <strong>{{_formService.getObject().entityLegalName}}</strong><br>\\n                        <div class=\\\"m-t-xs m-b-xs\\\">\\n                                                        <input [(ngModel)]=\\\"_formService.getObject().entityAddressObj\\\"\\n           formControlName = entityAddressObj\\n           name=\\\"form[entityAddressObj]\\\"\\n                      type=\\\"hidden\\\">\\n    <js_autoComplete [field]=\\\"'entityAddressObj'\\\"\\n                     [hasSelfReference]=\\\"_dataService.getFieldChoicesAttr('entityAddressObj', 'hasSelfReference')\\\"\\n                                              (onChange)=\\\"onEntityAddressChange($event)\\\"[placeholder]=\\\"&#039;Address&#039;\\\"                         ></js_autoComplete>\\n                    <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().entityAddressObj\\\">{{error}}</label>\\n                        </div>\\n                        <ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet1\\\"\\n                            ><span>{{_formService.getObject().entityStreet1}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet2\\\"\\n                            ><span>{{_formService.getObject().entityStreet2}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityPostCode\\\"\\n                            ><span>{{_formService.getObject().entityPostCode}} {{_formService.getObject().entityCity}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityRegion\\\"\\n                            ><span>{{_formService.getObject().entityRegion}}</span><br></ng-template>                    </address>\\n                </div>\\n            </div>\\n            <p class=\\\"mt-2\\\">Tax Number: {{_formService.getObject().entityTaxNumber}}</p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"mt-2 mb-4\\\">\\n        <span>Comments</span>\\n        <div class=\\\"border rounded document-comments\\\">                            <textarea id=\\\"form_comments\\\" name=\\\"form[comments]\\\" rows=\\\"3\\\" [(ngModel)]=\\\"_formService.getObject().comments\\\" formControlName=\\\"comments\\\" [class.error]=\\\"_formService.getErrors().comments &amp;&amp; _formService.getErrors().comments.length &gt; 0\\\" class=\\\"form-control\\\"></textarea>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().comments\\\">{{error}}</label>\\n</div>\\n    </div>\\n\\n    <section><ng-template #js_lazyLoadContainer></ng-template></section>\\n    <div class=\\\"row\\\"><div class=\\\"col-md-4 offset-md-8\\\">\\n    <table class=\\\"table document-total\\\">\\n        <tbody>\\n        <tr>\\n    <td><strong>Total:</strong></td>\\n    <td>                            <input type=\\\"text\\\" id=\\\"form_total\\\" name=\\\"form[total]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().total\\\" formControlName=\\\"total\\\" [class.error]=\\\"_formService.getErrors().total &amp;&amp; _formService.getErrors().total.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().total\\\">{{error}}</label>\\n</td>\\n</tr>        </tbody>\\n    </table>\\n</div></div>\\n    <div *ngIf=\\\"_dataService.getLocalDataAttr('documentInfo') && _dataService.getLocalDataAttr('documentInfo')['footer']\\\"\\n         class=\\\"mt-2 bg-light p-3\\\"\\n         [innerHTML]=\\\"_dataService.getLocalDataAttr('documentInfo')['footer']\\\"></div>\\n\\n\\n    \\n\\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/add/ts/templates/step3-payment.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/client-document/add/ts/templates/step3-payment.component.html\n// module chunks = main","module.exports = \"\\n\\n\\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n\\n\\n    \\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-6\\\">\\n            <img *ngIf=\\\"_dataService.getLocalDataAttr('storeLogo')\\\"\\n                 height=\\\"96\\\"\\n                 alt=\\\"logo\\\"\\n                 class=\\\"m-b-md\\\"\\n                 [src]=\\\"_helperService.getUploadWebPath(_dataService.getLocalDataAttr('storeLogo'), 'resize_96')\\\">\\n            <address>\\n                <strong>{{_formService.getObject().storeLegalName}}</strong><br>\\n                <ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet1\\\"\\n                    ><span>{{_formService.getObject().storeStreet1}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet2\\\"\\n                    ><span>{{_formService.getObject().storeStreet2}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storePostCode\\\"\\n                    ><span>{{_formService.getObject().storePostCode}} {{_formService.getObject().storeCity}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeRegion\\\"\\n                    ><span>{{_formService.getObject().storeRegion}}</span><br></ng-template>            </address>\\n            <ng-template ngFor let-field [ngForOf]=\\\"_dataService.getLocalDataAttr('storeInfo')\\\"><span\\n                    [innerHtml]=\\\"field\\\"></span><br></ng-template>\\n            <p class=\\\"m-t-sm\\\">Tax Number: {{_formService.getObject().storeTaxNumber}}</p>\\n        </div>\\n        <div class=\\\"col-sm-6\\\">\\n            <h3 *ngIf=\\\"_formService.getObject().code\\\" class=\\\"document-number text-right\\\"><span>{{_formService.getObject().documentType_name}}:&nbsp;</span>                        <p id=\\\"form_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().code\\\">{{error}}</label>\\n</h3>\\n            <table class=\\\"table document-dates\\\">\\n                <tbody>\\n                <tr>\\n                    <td><strong>Date:</strong></td>\\n                    <td>                        \\n    <div class=\\\"input-group js_dataPicker\\\"\\n         [datePicker]=\\\"'date'\\\"\\n         #dpk_date=\\\"\\\" [control]=\\\"dpk_date\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"yyyy-mm-dd\\\"\\n               [(ngModel)]=\\\"_formService.getObject().date\\\"\\n               formControlName = date\\n               name=\\\"form[date]\\\"\\n               required=\\\"required\\\"               [class.error]=\\\"_formService.getErrors()['date'] && (_formService.getErrors()['date'].length > 0)\\\"\\n               ngbDatepicker #dpk_date=\\\"ngbDatepicker\\\">\\n        <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn\\\" type=\\\"button\\\"><a class=\\\"fa fa-calendar\\\"></a></button>\\n        </div>\\n    </div>\\n    \\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().date\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                                </tbody>\\n            </table>\\n\\n            <div class=\\\"\\\">\\n                <span class=\\\"\\\">To:</span>\\n                <div class=\\\"document-entity mt-1\\\">\\n                    <span *ngIf=\\\"_formService.getObject().entity_avatar\\\"\\n                          [innerHTML]=\\\"_formService.getViewObject().entity_avatar\\\" class=\\\"pr-1\\\"></span>\\n                    <address>\\n                        <strong>{{_formService.getObject().entityLegalName}}</strong><br>\\n                        <div class=\\\"m-t-xs m-b-xs\\\">\\n                                                        <input [(ngModel)]=\\\"_formService.getObject().entityAddressObj\\\"\\n           formControlName = entityAddressObj\\n           name=\\\"form[entityAddressObj]\\\"\\n                      type=\\\"hidden\\\">\\n    <js_autoComplete [field]=\\\"'entityAddressObj'\\\"\\n                     [hasSelfReference]=\\\"_dataService.getFieldChoicesAttr('entityAddressObj', 'hasSelfReference')\\\"\\n                                              (onChange)=\\\"onEntityAddressChange($event)\\\"[placeholder]=\\\"&#039;Address&#039;\\\"                         ></js_autoComplete>\\n                    <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().entityAddressObj\\\">{{error}}</label>\\n                        </div>\\n                        <ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet1\\\"\\n                            ><span>{{_formService.getObject().entityStreet1}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet2\\\"\\n                            ><span>{{_formService.getObject().entityStreet2}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityPostCode\\\"\\n                            ><span>{{_formService.getObject().entityPostCode}} {{_formService.getObject().entityCity}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityRegion\\\"\\n                            ><span>{{_formService.getObject().entityRegion}}</span><br></ng-template>                    </address>\\n                </div>\\n            </div>\\n            <p class=\\\"mt-2\\\">Tax Number: {{_formService.getObject().entityTaxNumber}}</p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"mt-2 mb-4\\\">\\n        <span>Comments</span>\\n        <div class=\\\"border rounded document-comments\\\">                            <textarea id=\\\"form_comments\\\" name=\\\"form[comments]\\\" rows=\\\"3\\\" [(ngModel)]=\\\"_formService.getObject().comments\\\" formControlName=\\\"comments\\\" [class.error]=\\\"_formService.getErrors().comments &amp;&amp; _formService.getErrors().comments.length &gt; 0\\\" class=\\\"form-control\\\"></textarea>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().comments\\\">{{error}}</label>\\n</div>\\n    </div>\\n\\n    <section>\\n    <ng-template #js_lazyLoadContainer></ng-template>\\n    <ng-template #js_lazyLoadContainer></ng-template>\\n</section>\\n    <div class=\\\"row\\\"><div class=\\\"col-md-4 offset-md-8\\\">\\n    <table class=\\\"table document-total\\\">\\n        <tbody>\\n        <tr>\\n            <td><strong>DIFF:</strong></td>\\n            <td><input class=\\\"form-control js_diffControl\\\"\\n                       readonly=\\\"readonly\\\"\\n                       type=\\\"text\\\"\\n                       value=\\\"0\\\"></td>\\n        </tr>        </tbody>\\n    </table>\\n</div></div>\\n    <div *ngIf=\\\"_dataService.getLocalDataAttr('documentInfo') && _dataService.getLocalDataAttr('documentInfo')['footer']\\\"\\n         class=\\\"mt-2 bg-light p-3\\\"\\n         [innerHTML]=\\\"_dataService.getLocalDataAttr('documentInfo')['footer']\\\"></div>\\n\\n\\n    \\n\\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/add/ts/templates/step3-receipt.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/client-document/add/ts/templates/step3-receipt.component.html\n// module chunks = main","module.exports = \"\\n\\n\\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n\\n\\n    \\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-6\\\">\\n            <img *ngIf=\\\"_dataService.getLocalDataAttr('storeLogo')\\\"\\n                 height=\\\"96\\\"\\n                 alt=\\\"logo\\\"\\n                 class=\\\"m-b-md\\\"\\n                 [src]=\\\"_helperService.getUploadWebPath(_dataService.getLocalDataAttr('storeLogo'), 'resize_96')\\\">\\n            <address>\\n                <strong>{{_formService.getObject().storeLegalName}}</strong><br>\\n                <ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet1\\\"\\n                    ><span>{{_formService.getObject().storeStreet1}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet2\\\"\\n                    ><span>{{_formService.getObject().storeStreet2}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storePostCode\\\"\\n                    ><span>{{_formService.getObject().storePostCode}} {{_formService.getObject().storeCity}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeRegion\\\"\\n                    ><span>{{_formService.getObject().storeRegion}}</span><br></ng-template>            </address>\\n            <ng-template ngFor let-field [ngForOf]=\\\"_dataService.getLocalDataAttr('storeInfo')\\\"><span\\n                    [innerHtml]=\\\"field\\\"></span><br></ng-template>\\n            <p class=\\\"m-t-sm\\\">Tax Number: {{_formService.getObject().storeTaxNumber}}</p>\\n        </div>\\n        <div class=\\\"col-sm-6\\\">\\n            <h3 *ngIf=\\\"_formService.getObject().code\\\" class=\\\"document-number text-right\\\"><span>{{_formService.getObject().documentType_name}}:&nbsp;</span>                        <p id=\\\"form_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().code\\\">{{error}}</label>\\n</h3>\\n            <table class=\\\"table document-dates\\\">\\n                <tbody>\\n                <tr>\\n                    <td><strong>Date:</strong></td>\\n                    <td>                        \\n    <div class=\\\"input-group js_dataPicker\\\"\\n         [datePicker]=\\\"'date'\\\"\\n         #dpk_date=\\\"\\\" [control]=\\\"dpk_date\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"yyyy-mm-dd\\\"\\n               [(ngModel)]=\\\"_formService.getObject().date\\\"\\n               formControlName = date\\n               name=\\\"form[date]\\\"\\n               required=\\\"required\\\"               [class.error]=\\\"_formService.getErrors()['date'] && (_formService.getErrors()['date'].length > 0)\\\"\\n               ngbDatepicker #dpk_date=\\\"ngbDatepicker\\\">\\n        <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn\\\" type=\\\"button\\\"><a class=\\\"fa fa-calendar\\\"></a></button>\\n        </div>\\n    </div>\\n    \\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().date\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                <tr>\\n                    <td><strong>Due Date:</strong></td>\\n                    <td>                        \\n    <div class=\\\"input-group js_dataPicker\\\"\\n         [datePicker]=\\\"'dueDate'\\\"\\n         #dpk_dueDate=\\\"\\\" [control]=\\\"dpk_dueDate\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"yyyy-mm-dd\\\"\\n               [(ngModel)]=\\\"_formService.getObject().dueDate\\\"\\n               formControlName = dueDate\\n               name=\\\"form[dueDate]\\\"\\n               required=\\\"required\\\"               [class.error]=\\\"_formService.getErrors()['dueDate'] && (_formService.getErrors()['dueDate'].length > 0)\\\"\\n               ngbDatepicker #dpk_dueDate=\\\"ngbDatepicker\\\">\\n        <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn\\\" type=\\\"button\\\"><a class=\\\"fa fa-calendar\\\"></a></button>\\n        </div>\\n    </div>\\n    \\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().dueDate\\\">{{error}}</label>\\n</td>\\n                </tr>                </tbody>\\n            </table>\\n\\n            <div class=\\\"\\\">\\n                <span class=\\\"\\\">To:</span>\\n                <div class=\\\"document-entity mt-1\\\">\\n                    <span *ngIf=\\\"_formService.getObject().entity_avatar\\\"\\n                          [innerHTML]=\\\"_formService.getViewObject().entity_avatar\\\" class=\\\"pr-1\\\"></span>\\n                    <address>\\n                        <strong>{{_formService.getObject().entityLegalName}}</strong><br>\\n                        <div class=\\\"m-t-xs m-b-xs\\\">\\n                                                        <input [(ngModel)]=\\\"_formService.getObject().entityAddressObj\\\"\\n           formControlName = entityAddressObj\\n           name=\\\"form[entityAddressObj]\\\"\\n                      type=\\\"hidden\\\">\\n    <js_autoComplete [field]=\\\"'entityAddressObj'\\\"\\n                     [hasSelfReference]=\\\"_dataService.getFieldChoicesAttr('entityAddressObj', 'hasSelfReference')\\\"\\n                                              (onChange)=\\\"onEntityAddressChange($event)\\\"[placeholder]=\\\"&#039;Address&#039;\\\"                         ></js_autoComplete>\\n                    <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().entityAddressObj\\\">{{error}}</label>\\n                        </div>\\n                        <ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet1\\\"\\n                            ><span>{{_formService.getObject().entityStreet1}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet2\\\"\\n                            ><span>{{_formService.getObject().entityStreet2}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityPostCode\\\"\\n                            ><span>{{_formService.getObject().entityPostCode}} {{_formService.getObject().entityCity}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityRegion\\\"\\n                            ><span>{{_formService.getObject().entityRegion}}</span><br></ng-template>                    </address>\\n                </div>\\n            </div>\\n            <p class=\\\"mt-2\\\">Tax Number: {{_formService.getObject().entityTaxNumber}}</p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"mt-2 mb-4\\\">\\n        <span>Comments</span>\\n        <div class=\\\"border rounded document-comments\\\">                            <textarea id=\\\"form_comments\\\" name=\\\"form[comments]\\\" rows=\\\"3\\\" [(ngModel)]=\\\"_formService.getObject().comments\\\" formControlName=\\\"comments\\\" [class.error]=\\\"_formService.getErrors().comments &amp;&amp; _formService.getErrors().comments.length &gt; 0\\\" class=\\\"form-control\\\"></textarea>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().comments\\\">{{error}}</label>\\n</div>\\n    </div>\\n\\n            <section><ng-template #js_lazyLoadContainer></ng-template></section>\\n    \\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-8\\\">\\n            <ng-template [ngIf]=\\\"_dataService.getLocalDataAttr('totalVatSplitByCode')\\\">\\n            <span>TAX Resume</span>\\n            <div class=\\\"border rounded document-tax-resume\\\">\\n                <table class=\\\"table\\\">\\n                    <tbody>\\n                    <tr>\\n                        <th>Code</th>\\n                        <th>Description</th>\\n                        <th>Percentage</th>\\n                        <th>Net</th>\\n                        <th>TAX</th>\\n                        <th>Total</th>\\n                    </tr>\\n                    <tr *ngFor=\\\"let obj of _dataService.getLocalDataAttr('totalVatSplitByCode')\\\">\\n                        <td>{{ obj['name'] }}</td>\\n                        <td>{{ obj['description'] }}</td>\\n                        <td class=\\\"text-right\\\">{{ obj['percentage'] }}%</td>\\n                        <td class=\\\"text-right\\\">{{ obj['subTotal'] }}</td>\\n                        <td class=\\\"text-right\\\">{{ obj['totalVat'] }}</td>\\n                        <td class=\\\"text-right\\\">{{ obj['total'] }}</td>\\n                    </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n            </ng-template>\\n        </div>\\n        <div class=\\\"col-sm-4\\\">\\n            <table class=\\\"table document-total\\\">\\n                <tbody>\\n                <tr>\\n                    <td><strong>Sub Total:</strong></td>\\n                    <td>                            <input type=\\\"text\\\" id=\\\"form_subTotal\\\" name=\\\"form[subTotal]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().subTotal\\\" formControlName=\\\"subTotal\\\" [class.error]=\\\"_formService.getErrors().subTotal &amp;&amp; _formService.getErrors().subTotal.length &gt; 0\\\" class=\\\"form-control\\\" value=\\\"0\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().subTotal\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                <tr>\\n                    <td><strong>TAX:</strong></td>\\n                    <td>                            <input type=\\\"text\\\" id=\\\"form_totalVat\\\" name=\\\"form[totalVat]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().totalVat\\\" formControlName=\\\"totalVat\\\" [class.error]=\\\"_formService.getErrors().totalVat &amp;&amp; _formService.getErrors().totalVat.length &gt; 0\\\" class=\\\"form-control\\\" value=\\\"0\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().totalVat\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                <tr>\\n                    <td><strong>Total:</strong></td>\\n                    <td>                            <input type=\\\"text\\\" id=\\\"form_total\\\" name=\\\"form[total]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().total\\\" formControlName=\\\"total\\\" [class.error]=\\\"_formService.getErrors().total &amp;&amp; _formService.getErrors().total.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().total\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n    <div *ngIf=\\\"_dataService.getLocalDataAttr('documentInfo') && _dataService.getLocalDataAttr('documentInfo')['footer']\\\"\\n         class=\\\"mt-2 bg-light p-3\\\"\\n         [innerHTML]=\\\"_dataService.getLocalDataAttr('documentInfo')['footer']\\\"></div>\\n\\n\\n    \\n\\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/add/ts/templates/step3-rectification.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/client-document/add/ts/templates/step3-rectification.component.html\n// module chunks = main","module.exports = \"\\n\\n\\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n\\n\\n    \\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-6\\\">\\n            <img *ngIf=\\\"_dataService.getLocalDataAttr('storeLogo')\\\"\\n                 height=\\\"96\\\"\\n                 alt=\\\"logo\\\"\\n                 class=\\\"m-b-md\\\"\\n                 [src]=\\\"_helperService.getUploadWebPath(_dataService.getLocalDataAttr('storeLogo'), 'resize_96')\\\">\\n            <address>\\n                <strong>{{_formService.getObject().storeLegalName}}</strong><br>\\n                <ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet1\\\"\\n                    ><span>{{_formService.getObject().storeStreet1}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet2\\\"\\n                    ><span>{{_formService.getObject().storeStreet2}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storePostCode\\\"\\n                    ><span>{{_formService.getObject().storePostCode}} {{_formService.getObject().storeCity}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeRegion\\\"\\n                    ><span>{{_formService.getObject().storeRegion}}</span><br></ng-template>            </address>\\n            <ng-template ngFor let-field [ngForOf]=\\\"_dataService.getLocalDataAttr('storeInfo')\\\"><span\\n                    [innerHtml]=\\\"field\\\"></span><br></ng-template>\\n            <p class=\\\"m-t-sm\\\">Tax Number: {{_formService.getObject().storeTaxNumber}}</p>\\n        </div>\\n        <div class=\\\"col-sm-6\\\">\\n            <h3 *ngIf=\\\"_formService.getObject().code\\\" class=\\\"document-number text-right\\\"><span>{{_formService.getObject().documentType_name}}:&nbsp;</span>                        <p id=\\\"form_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().code\\\">{{error}}</label>\\n</h3>\\n            <table class=\\\"table document-dates\\\">\\n                <tbody>\\n                <tr>\\n                    <td><strong>Date:</strong></td>\\n                    <td>                        \\n    <div class=\\\"input-group js_dataPicker\\\"\\n         [datePicker]=\\\"'date'\\\"\\n         #dpk_date=\\\"\\\" [control]=\\\"dpk_date\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"yyyy-mm-dd\\\"\\n               [(ngModel)]=\\\"_formService.getObject().date\\\"\\n               formControlName = date\\n               name=\\\"form[date]\\\"\\n               required=\\\"required\\\"               [class.error]=\\\"_formService.getErrors()['date'] && (_formService.getErrors()['date'].length > 0)\\\"\\n               ngbDatepicker #dpk_date=\\\"ngbDatepicker\\\">\\n        <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn\\\" type=\\\"button\\\"><a class=\\\"fa fa-calendar\\\"></a></button>\\n        </div>\\n    </div>\\n    \\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().date\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                                </tbody>\\n            </table>\\n\\n            <div class=\\\"\\\">\\n                <span class=\\\"\\\">To:</span>\\n                <div class=\\\"document-entity mt-1\\\">\\n                    <span *ngIf=\\\"_formService.getObject().entity_avatar\\\"\\n                          [innerHTML]=\\\"_formService.getViewObject().entity_avatar\\\" class=\\\"pr-1\\\"></span>\\n                    <address>\\n                        <strong>{{_formService.getObject().entityLegalName}}</strong><br>\\n                        <div class=\\\"m-t-xs m-b-xs\\\">\\n                                                        <input [(ngModel)]=\\\"_formService.getObject().entityAddressObj\\\"\\n           formControlName = entityAddressObj\\n           name=\\\"form[entityAddressObj]\\\"\\n                      type=\\\"hidden\\\">\\n    <js_autoComplete [field]=\\\"'entityAddressObj'\\\"\\n                     [hasSelfReference]=\\\"_dataService.getFieldChoicesAttr('entityAddressObj', 'hasSelfReference')\\\"\\n                                              (onChange)=\\\"onEntityAddressChange($event)\\\"[placeholder]=\\\"&#039;Address&#039;\\\"                         ></js_autoComplete>\\n                    <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().entityAddressObj\\\">{{error}}</label>\\n                        </div>\\n                        <ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet1\\\"\\n                            ><span>{{_formService.getObject().entityStreet1}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet2\\\"\\n                            ><span>{{_formService.getObject().entityStreet2}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityPostCode\\\"\\n                            ><span>{{_formService.getObject().entityPostCode}} {{_formService.getObject().entityCity}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityRegion\\\"\\n                            ><span>{{_formService.getObject().entityRegion}}</span><br></ng-template>                    </address>\\n                </div>\\n            </div>\\n            <p class=\\\"mt-2\\\">Tax Number: {{_formService.getObject().entityTaxNumber}}</p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"mt-2 mb-4\\\">\\n        <span>Comments</span>\\n        <div class=\\\"border rounded document-comments\\\">                            <textarea id=\\\"form_comments\\\" name=\\\"form[comments]\\\" rows=\\\"3\\\" [(ngModel)]=\\\"_formService.getObject().comments\\\" formControlName=\\\"comments\\\" [class.error]=\\\"_formService.getErrors().comments &amp;&amp; _formService.getErrors().comments.length &gt; 0\\\" class=\\\"form-control\\\"></textarea>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().comments\\\">{{error}}</label>\\n</div>\\n    </div>\\n\\n    <section><ng-template #js_lazyLoadContainer></ng-template></section>\\n    <div class=\\\"row\\\"><div class=\\\"col-md-4 offset-md-8\\\">\\n    <table class=\\\"table document-total\\\">\\n        <tbody>\\n        <tr>\\n            <td><strong>DIFF:</strong></td>\\n            <td><input class=\\\"form-control js_diffControl\\\"\\n                       readonly=\\\"readonly\\\"\\n                       type=\\\"text\\\"\\n                       value=\\\"0\\\"></td>\\n        </tr>        </tbody>\\n    </table>\\n</div></div>\\n    <div *ngIf=\\\"_dataService.getLocalDataAttr('documentInfo') && _dataService.getLocalDataAttr('documentInfo')['footer']\\\"\\n         class=\\\"mt-2 bg-light p-3\\\"\\n         [innerHTML]=\\\"_dataService.getLocalDataAttr('documentInfo')['footer']\\\"></div>\\n\\n\\n    \\n\\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/add/ts/templates/step3-settlement.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/client-document/add/ts/templates/step3-settlement.component.html\n// module chunks = main","import {Component, ElementRef, Inject, Optional, Injector, ReflectiveInjector, Renderer, ViewChild, ViewContainerRef, EventEmitter} from '@angular/core';\nimport {BaseModalPopup} from '../../../../../../../../AppBundle/Resources/public/modal/ts/base-modal-popup';\nimport {DynamicComponentLoaderService} from '../../../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\n\n\n/* Import dependencies */\n// INVOICE\nimport {InvoiceFormPopupExtModule as ClientDocumentEditInvoiceFormPopupExtModule} from './invoice-form-popup.ext-module';\n// RECTIFICATION\nimport {InvoiceRectificationFormPopupExtModule as ClientDocumentEditInvoiceRectificationFormPopupExtModule} from './invoice-rectification-form-popup.ext-module';\n// RECEIPT\nimport {ReceiptFormPopupExtModule as ClientDocumentEditReceiptFormPopupExtModule} from './receipt-form-popup.ext-module';\n// PAYMENT\nimport {ReceiptPaymentFormPopupExtModule as ClientDocumentEditReceiptPaymentFormPopupExtModule} from './receipt-payment-form-popup.ext-module';\n// SETTLEMENT\nimport {ReceiptSettlementFormPopupExtModule as ClientDocumentEditReceiptSettlementFormPopupExtModule} from './receipt-settlement-form-popup.ext-module';\n/* /Import dependencies */\n\n\n@Component({\n    selector: '.js_clientDocumentEditFormPopup',\n    template: `<ng-template #js_lazyLoadContainer></ng-template>`\n})\nexport class FormPopupComponent extends BaseModalPopup\n{\n    // To load the edit module according with the document type\n    @ViewChild('js_lazyLoadContainer', {read: ViewContainerRef}) lazyLoadViewContainerRef: ViewContainerRef;\n    // To dependency close popup\n    protected _onDependencyDismissSubscription: any;\n\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        protected _dynamicComponentLoaderService: DynamicComponentLoaderService,\n        protected _injector: Injector,\n        @Inject('DataService') protected _dataService: any\n    ) {\n        super(\n            elementRef,\n            renderer,\n            null\n        );\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngAfterViewInit() {\n        let that = this,\n            documentType = (this._dataService.getObject()['documentType_type'] || null),\n            module = null,\n            component = null;\n\n        // Determine context\n        switch (documentType) {\n            case 'RECTIFICATION':\n                module = ClientDocumentEditInvoiceRectificationFormPopupExtModule;\n                component = 'InvoiceRectificationFormPopupComponent';\n                break;\n            case 'RECEIPT':\n                module = ClientDocumentEditReceiptFormPopupExtModule;\n                component = 'ReceiptFormPopupComponent';\n                break;\n            case 'PAYMENT':\n                module = ClientDocumentEditReceiptPaymentFormPopupExtModule;\n                component = 'ReceiptPaymentFormPopupComponent';\n                break;\n            case 'SETTLEMENT':\n                module = ClientDocumentEditReceiptSettlementFormPopupExtModule;\n                component = 'ReceiptSettlementFormPopupComponent';\n                break;\n            default: // INVOICE\n                module = ClientDocumentEditInvoiceFormPopupExtModule;\n                component = 'InvoiceFormPopupComponent';\n        }\n\n        // Load dependency\n        this._dynamicComponentLoaderService.load(\n            module,\n            component,\n            this.lazyLoadViewContainerRef,\n            this._injector\n        ).then(\n            componentRef => {\n                that._onDependencyDismissSubscription = componentRef.instance.onDismissEmitter.subscribe(\n                    data => {\n                        // Close popup\n                        that.closeAction();\n                    }\n                );\n                return true;\n            },\n            errors => {\n                console.log(errors);\n                return null;\n            }\n        );\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnDestroy()\n    {\n        // At this time, the component subscription is already destroyed, so does not need to unsubscribe.\n        if (this._onDependencyDismissSubscription) {\n            this._onDependencyDismissSubscription.unsubscribe();\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/src/form-popup.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {FormPopupComponent} from './form-popup.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        FormPopupComponent\n    ],\n    exports: [FormPopupComponent]\n})\nexport class FormPopupExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/src/form-popup.ext-module.ts","import {Component, ElementRef, Inject, Optional, Injector, ReflectiveInjector, Renderer, ViewChild, ViewContainerRef} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {DynamicComponentLoaderService} from '../../../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\nimport {PostService} from '../../../../../../../../AppBundle/Resources/public/ts/post.service';\nimport {BaseInvoiceDocumentFormPopupExtComponent} from '../../../ts/base-invoice-document-form-popup.ext-component';\n\n\n@Component({\n    selector: '.js_documentEditFormPopup',\n    templateUrl: '../templates/invoice-form-popup.component.html'\n})\nexport class InvoiceFormPopupComponent extends BaseInvoiceDocumentFormPopupExtComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any,\n        injector: Injector,\n        @Inject('ParentDataService') parentDataService: any,\n        @Inject('HelperService') helperService: any,\n        dynamicComponentLoaderService: DynamicComponentLoaderService,\n        postService: PostService\n    ) {\n        super();\n        super.initBaseInvoiceDocumentFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            injector,\n            parentDataService,\n            helperService,\n            dynamicComponentLoaderService,\n            postService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/src/invoice-form-popup.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {InvoiceFormPopupComponent} from './invoice-form-popup.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        InvoiceFormPopupComponent\n    ],\n    exports: [InvoiceFormPopupComponent]\n})\nexport class InvoiceFormPopupExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/src/invoice-form-popup.ext-module.ts","import {Component, ElementRef, Inject, Optional, Injector, ReflectiveInjector, Renderer, ViewChild, ViewContainerRef} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {DynamicComponentLoaderService} from '../../../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\nimport {PostService} from '../../../../../../../../AppBundle/Resources/public/ts/post.service';\nimport {BaseInvoiceRectificationDocumentFormPopupExtComponent} from '../../../ts/base-invoice-rectification-document-form-popup.ext-component';\n\n\n@Component({\n    selector: '.js_documentEditFormPopup',\n    templateUrl: '../templates/invoice-rectification-form-popup.component.html'\n})\nexport class InvoiceRectificationFormPopupComponent extends BaseInvoiceRectificationDocumentFormPopupExtComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any,\n        injector: Injector,\n        @Inject('ParentDataService') parentDataService: any,\n        @Inject('HelperService') helperService: any,\n        dynamicComponentLoaderService: DynamicComponentLoaderService,\n        postService: PostService\n    ) {\n        super();\n        super.initBaseInvoiceRectificationDocumentFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            injector,\n            parentDataService,\n            helperService,\n            dynamicComponentLoaderService,\n            postService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/src/invoice-rectification-form-popup.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {InvoiceRectificationFormPopupComponent} from './invoice-rectification-form-popup.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        InvoiceRectificationFormPopupComponent\n    ],\n    exports: [InvoiceRectificationFormPopupComponent]\n})\nexport class InvoiceRectificationFormPopupExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/src/invoice-rectification-form-popup.ext-module.ts","import {Component, ElementRef, Inject, Optional, Injector, ReflectiveInjector, Renderer, ViewChild, ViewContainerRef} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {DynamicComponentLoaderService} from '../../../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\nimport {PostService} from '../../../../../../../../AppBundle/Resources/public/ts/post.service';\nimport {BaseReceiptDocumentFormPopupExtComponent} from '../../../ts/base-receipt-document-form-popup.ext-component';\n\n\n@Component({\n    selector: '.js_documentEditFormPopup',\n    templateUrl: '../templates/receipt-form-popup.component.html'\n})\nexport class ReceiptFormPopupComponent extends BaseReceiptDocumentFormPopupExtComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any,\n        injector: Injector,\n        @Inject('ParentDataService') parentDataService: any,\n        @Inject('HelperService') helperService: any,\n        dynamicComponentLoaderService: DynamicComponentLoaderService,\n        postService: PostService\n    ) {\n        super();\n        super.initBaseReceiptDocumentFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            injector,\n            parentDataService,\n            helperService,\n            dynamicComponentLoaderService,\n            postService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/src/receipt-form-popup.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {ReceiptFormPopupComponent} from './receipt-form-popup.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        ReceiptFormPopupComponent\n    ],\n    exports: [ReceiptFormPopupComponent]\n})\nexport class ReceiptFormPopupExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/src/receipt-form-popup.ext-module.ts","import {Component, ElementRef, Inject, Optional, Injector, ReflectiveInjector, Renderer, ViewChild, ViewContainerRef} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {DynamicComponentLoaderService} from '../../../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\nimport {PostService} from '../../../../../../../../AppBundle/Resources/public/ts/post.service';\nimport {BaseReceiptPaymentDocumentFormPopupExtComponent} from '../../../../client-document/ts/base-receipt-payment-document-form-popup.ext-component';\n\n\n@Component({\n    selector: '.js_documentEditFormPopup',\n    templateUrl: '../templates/receipt-payment-form-popup.component.html'\n})\nexport class ReceiptPaymentFormPopupComponent extends BaseReceiptPaymentDocumentFormPopupExtComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any,\n        injector: Injector,\n        @Inject('ParentDataService') parentDataService: any,\n        @Inject('HelperService') helperService: any,\n        dynamicComponentLoaderService: DynamicComponentLoaderService,\n        postService: PostService\n    ) {\n        super();\n        super.initBaseReceiptPaymentDocumentFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            injector,\n            parentDataService,\n            helperService,\n            dynamicComponentLoaderService,\n            postService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/src/receipt-payment-form-popup.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {ReceiptPaymentFormPopupComponent} from './receipt-payment-form-popup.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        ReceiptPaymentFormPopupComponent\n    ],\n    exports: [ReceiptPaymentFormPopupComponent]\n})\nexport class ReceiptPaymentFormPopupExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/src/receipt-payment-form-popup.ext-module.ts","import {Component, ElementRef, Inject, Optional, Injector, ReflectiveInjector, Renderer, ViewChild, ViewContainerRef} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {DynamicComponentLoaderService} from '../../../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\nimport {PostService} from '../../../../../../../../AppBundle/Resources/public/ts/post.service';\nimport {BaseReceiptSettlementDocumentFormPopupExtComponent} from '../../../../client-document/ts/base-receipt-settlement-document-form-popup.ext-component';\n\n\n@Component({\n    selector: '.js_documentEditFormPopup',\n    templateUrl: '../templates/receipt-settlement-form-popup.component.html'\n})\nexport class ReceiptSettlementFormPopupComponent extends BaseReceiptSettlementDocumentFormPopupExtComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any,\n        injector: Injector,\n        @Inject('ParentDataService') parentDataService: any,\n        @Inject('HelperService') helperService: any,\n        dynamicComponentLoaderService: DynamicComponentLoaderService,\n        postService: PostService\n    ) {\n        super();\n        super.initBaseReceiptSettlementDocumentFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            injector,\n            parentDataService,\n            helperService,\n            dynamicComponentLoaderService,\n            postService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/src/receipt-settlement-form-popup.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {ReceiptSettlementFormPopupComponent} from './receipt-settlement-form-popup.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        ReceiptSettlementFormPopupComponent\n    ],\n    exports: [ReceiptSettlementFormPopupComponent]\n})\nexport class ReceiptSettlementFormPopupExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/src/receipt-settlement-form-popup.ext-module.ts","module.exports = \"    \\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n    \\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-6\\\">\\n            <img *ngIf=\\\"_dataService.getLocalDataAttr('storeLogo')\\\"\\n                 height=\\\"96\\\"\\n                 alt=\\\"logo\\\"\\n                 class=\\\"m-b-md\\\"\\n                 [src]=\\\"_helperService.getUploadWebPath(_dataService.getLocalDataAttr('storeLogo'), 'resize_96')\\\">\\n            <address>\\n                <strong>{{_formService.getObject().storeLegalName}}</strong><br>\\n                <ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet1\\\"\\n                    ><span>{{_formService.getObject().storeStreet1}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet2\\\"\\n                    ><span>{{_formService.getObject().storeStreet2}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storePostCode\\\"\\n                    ><span>{{_formService.getObject().storePostCode}} {{_formService.getObject().storeCity}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeRegion\\\"\\n                    ><span>{{_formService.getObject().storeRegion}}</span><br></ng-template>            </address>\\n            <ng-template ngFor let-field [ngForOf]=\\\"_dataService.getLocalDataAttr('storeInfo')\\\"><span\\n                    [innerHtml]=\\\"field\\\"></span><br></ng-template>\\n            <p class=\\\"m-t-sm\\\">Tax Number: {{_formService.getObject().storeTaxNumber}}</p>\\n        </div>\\n        <div class=\\\"col-sm-6\\\">\\n            <h3 *ngIf=\\\"_formService.getObject().code\\\" class=\\\"document-number text-right\\\"><span>{{_formService.getObject().documentType_name}}:&nbsp;</span>                        <p id=\\\"form_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().code\\\">{{error}}</label>\\n</h3>\\n            <table class=\\\"table document-dates\\\">\\n                <tbody>\\n                <tr>\\n                    <td><strong>Date:</strong></td>\\n                    <td>                        \\n    <div class=\\\"input-group js_dataPicker\\\"\\n         [datePicker]=\\\"'date'\\\"\\n         #dpk_date=\\\"\\\" [control]=\\\"dpk_date\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"yyyy-mm-dd\\\"\\n               [(ngModel)]=\\\"_formService.getObject().date\\\"\\n               formControlName = date\\n               name=\\\"form[date]\\\"\\n               required=\\\"required\\\"               [class.error]=\\\"_formService.getErrors()['date'] && (_formService.getErrors()['date'].length > 0)\\\"\\n               ngbDatepicker #dpk_date=\\\"ngbDatepicker\\\">\\n        <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn\\\" type=\\\"button\\\"><a class=\\\"fa fa-calendar\\\"></a></button>\\n        </div>\\n    </div>\\n    \\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().date\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                <tr>\\n                    <td><strong>Due Date:</strong></td>\\n                    <td>                        \\n    <div class=\\\"input-group js_dataPicker\\\"\\n         [datePicker]=\\\"'dueDate'\\\"\\n         #dpk_dueDate=\\\"\\\" [control]=\\\"dpk_dueDate\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"yyyy-mm-dd\\\"\\n               [(ngModel)]=\\\"_formService.getObject().dueDate\\\"\\n               formControlName = dueDate\\n               name=\\\"form[dueDate]\\\"\\n               required=\\\"required\\\"               [class.error]=\\\"_formService.getErrors()['dueDate'] && (_formService.getErrors()['dueDate'].length > 0)\\\"\\n               ngbDatepicker #dpk_dueDate=\\\"ngbDatepicker\\\">\\n        <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn\\\" type=\\\"button\\\"><a class=\\\"fa fa-calendar\\\"></a></button>\\n        </div>\\n    </div>\\n    \\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().dueDate\\\">{{error}}</label>\\n</td>\\n                </tr>                </tbody>\\n            </table>\\n\\n            <div class=\\\"\\\">\\n                <span class=\\\"\\\">To:</span>\\n                <div class=\\\"document-entity mt-1\\\">\\n                    <span *ngIf=\\\"_formService.getObject().entity_avatar\\\"\\n                          [innerHTML]=\\\"_formService.getViewObject().entity_avatar\\\" class=\\\"pr-1\\\"></span>\\n                    <address>\\n                        <strong>{{_formService.getObject().entityLegalName}}</strong><br>\\n                        <div class=\\\"m-t-xs m-b-xs\\\">\\n                                                        <input [(ngModel)]=\\\"_formService.getObject().entityAddressObj\\\"\\n           formControlName = entityAddressObj\\n           name=\\\"form[entityAddressObj]\\\"\\n                      type=\\\"hidden\\\">\\n    <js_autoComplete [field]=\\\"'entityAddressObj'\\\"\\n                     [hasSelfReference]=\\\"_dataService.getFieldChoicesAttr('entityAddressObj', 'hasSelfReference')\\\"\\n                                              (onChange)=\\\"onEntityAddressChange($event)\\\"[placeholder]=\\\"&#039;Address&#039;\\\"                         ></js_autoComplete>\\n                    <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().entityAddressObj\\\">{{error}}</label>\\n                        </div>\\n                        <ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet1\\\"\\n                            ><span>{{_formService.getObject().entityStreet1}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet2\\\"\\n                            ><span>{{_formService.getObject().entityStreet2}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityPostCode\\\"\\n                            ><span>{{_formService.getObject().entityPostCode}} {{_formService.getObject().entityCity}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityRegion\\\"\\n                            ><span>{{_formService.getObject().entityRegion}}</span><br></ng-template>                    </address>\\n                </div>\\n            </div>\\n            <p class=\\\"mt-2\\\">Tax Number: {{_formService.getObject().entityTaxNumber}}</p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"mt-2 mb-4\\\">\\n        <span>Comments</span>\\n        <div class=\\\"border rounded document-comments\\\">                            <textarea id=\\\"form_comments\\\" name=\\\"form[comments]\\\" rows=\\\"3\\\" [(ngModel)]=\\\"_formService.getObject().comments\\\" formControlName=\\\"comments\\\" [class.error]=\\\"_formService.getErrors().comments &amp;&amp; _formService.getErrors().comments.length &gt; 0\\\" class=\\\"form-control\\\"></textarea>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().comments\\\">{{error}}</label>\\n</div>\\n    </div>\\n\\n            <section><ng-template #js_lazyLoadContainer></ng-template></section>\\n    \\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-8\\\">\\n            <ng-template [ngIf]=\\\"_dataService.getLocalDataAttr('totalVatSplitByCode')\\\">\\n            <span>TAX Resume</span>\\n            <div class=\\\"border rounded document-tax-resume\\\">\\n                <table class=\\\"table\\\">\\n                    <tbody>\\n                    <tr>\\n                        <th>Code</th>\\n                        <th>Description</th>\\n                        <th>Percentage</th>\\n                        <th>Net</th>\\n                        <th>TAX</th>\\n                        <th>Total</th>\\n                    </tr>\\n                    <tr *ngFor=\\\"let obj of _dataService.getLocalDataAttr('totalVatSplitByCode')\\\">\\n                        <td>{{ obj['name'] }}</td>\\n                        <td>{{ obj['description'] }}</td>\\n                        <td class=\\\"text-right\\\">{{ obj['percentage'] }}%</td>\\n                        <td class=\\\"text-right\\\">{{ obj['subTotal'] }}</td>\\n                        <td class=\\\"text-right\\\">{{ obj['totalVat'] }}</td>\\n                        <td class=\\\"text-right\\\">{{ obj['total'] }}</td>\\n                    </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n            </ng-template>\\n        </div>\\n        <div class=\\\"col-sm-4\\\">\\n            <table class=\\\"table document-total\\\">\\n                <tbody>\\n                <tr>\\n                    <td><strong>Sub Total:</strong></td>\\n                    <td>                            <input type=\\\"text\\\" id=\\\"form_subTotal\\\" name=\\\"form[subTotal]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().subTotal\\\" formControlName=\\\"subTotal\\\" [class.error]=\\\"_formService.getErrors().subTotal &amp;&amp; _formService.getErrors().subTotal.length &gt; 0\\\" class=\\\"form-control\\\" value=\\\"0\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().subTotal\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                <tr>\\n                    <td><strong>TAX:</strong></td>\\n                    <td>                            <input type=\\\"text\\\" id=\\\"form_totalVat\\\" name=\\\"form[totalVat]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().totalVat\\\" formControlName=\\\"totalVat\\\" [class.error]=\\\"_formService.getErrors().totalVat &amp;&amp; _formService.getErrors().totalVat.length &gt; 0\\\" class=\\\"form-control\\\" value=\\\"0\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().totalVat\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                <tr>\\n                    <td><strong>Total:</strong></td>\\n                    <td>                            <input type=\\\"text\\\" id=\\\"form_total\\\" name=\\\"form[total]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().total\\\" formControlName=\\\"total\\\" [class.error]=\\\"_formService.getErrors().total &amp;&amp; _formService.getErrors().total.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().total\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n    <div *ngIf=\\\"_dataService.getLocalDataAttr('documentInfo') && _dataService.getLocalDataAttr('documentInfo')['footer']\\\"\\n         class=\\\"mt-2 bg-light p-3\\\"\\n         [innerHTML]=\\\"_dataService.getLocalDataAttr('documentInfo')['footer']\\\"></div>\\n</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n        \\n                    <div class=\\\"row\\\">\\n            <div class=\\\"col-auto ml-auto\\\">\\n                                            <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"cancelAction($event)\\\"\\n                                        id=\\\"form_cancel\\\"\\n            name=\\\"form[cancel]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Cancel</button>\\n                                                <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"resetAction($event)\\\"\\n                                        id=\\\"form_reset\\\"\\n            name=\\\"form[reset]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-ban\\\"></i>&nbsp;Reset</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAction($event)\\\"\\n                                        id=\\\"form_save\\\"\\n            name=\\\"form[save]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-check\\\"></i>&nbsp;Save</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAndCloseAction($event)\\\"\\n                                        id=\\\"form_saveAndClose\\\"\\n            name=\\\"form[saveAndClose]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Save and Close</button>\\n                                </div>\\n        </div>\\n    </div>    \\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/templates/invoice-form-popup.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/templates/invoice-form-popup.component.html\n// module chunks = main","module.exports = \"    \\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n    \\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-6\\\">\\n            <img *ngIf=\\\"_dataService.getLocalDataAttr('storeLogo')\\\"\\n                 height=\\\"96\\\"\\n                 alt=\\\"logo\\\"\\n                 class=\\\"m-b-md\\\"\\n                 [src]=\\\"_helperService.getUploadWebPath(_dataService.getLocalDataAttr('storeLogo'), 'resize_96')\\\">\\n            <address>\\n                <strong>{{_formService.getObject().storeLegalName}}</strong><br>\\n                <ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet1\\\"\\n                    ><span>{{_formService.getObject().storeStreet1}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet2\\\"\\n                    ><span>{{_formService.getObject().storeStreet2}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storePostCode\\\"\\n                    ><span>{{_formService.getObject().storePostCode}} {{_formService.getObject().storeCity}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeRegion\\\"\\n                    ><span>{{_formService.getObject().storeRegion}}</span><br></ng-template>            </address>\\n            <ng-template ngFor let-field [ngForOf]=\\\"_dataService.getLocalDataAttr('storeInfo')\\\"><span\\n                    [innerHtml]=\\\"field\\\"></span><br></ng-template>\\n            <p class=\\\"m-t-sm\\\">Tax Number: {{_formService.getObject().storeTaxNumber}}</p>\\n        </div>\\n        <div class=\\\"col-sm-6\\\">\\n            <h3 *ngIf=\\\"_formService.getObject().code\\\" class=\\\"document-number text-right\\\"><span>{{_formService.getObject().documentType_name}}:&nbsp;</span>                        <p id=\\\"form_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().code\\\">{{error}}</label>\\n</h3>\\n            <table class=\\\"table document-dates\\\">\\n                <tbody>\\n                <tr>\\n                    <td><strong>Date:</strong></td>\\n                    <td>                        \\n    <div class=\\\"input-group js_dataPicker\\\"\\n         [datePicker]=\\\"'date'\\\"\\n         #dpk_date=\\\"\\\" [control]=\\\"dpk_date\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"yyyy-mm-dd\\\"\\n               [(ngModel)]=\\\"_formService.getObject().date\\\"\\n               formControlName = date\\n               name=\\\"form[date]\\\"\\n               required=\\\"required\\\"               [class.error]=\\\"_formService.getErrors()['date'] && (_formService.getErrors()['date'].length > 0)\\\"\\n               ngbDatepicker #dpk_date=\\\"ngbDatepicker\\\">\\n        <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn\\\" type=\\\"button\\\"><a class=\\\"fa fa-calendar\\\"></a></button>\\n        </div>\\n    </div>\\n    \\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().date\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                <tr>\\n                    <td><strong>Due Date:</strong></td>\\n                    <td>                        \\n    <div class=\\\"input-group js_dataPicker\\\"\\n         [datePicker]=\\\"'dueDate'\\\"\\n         #dpk_dueDate=\\\"\\\" [control]=\\\"dpk_dueDate\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"yyyy-mm-dd\\\"\\n               [(ngModel)]=\\\"_formService.getObject().dueDate\\\"\\n               formControlName = dueDate\\n               name=\\\"form[dueDate]\\\"\\n               required=\\\"required\\\"               [class.error]=\\\"_formService.getErrors()['dueDate'] && (_formService.getErrors()['dueDate'].length > 0)\\\"\\n               ngbDatepicker #dpk_dueDate=\\\"ngbDatepicker\\\">\\n        <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn\\\" type=\\\"button\\\"><a class=\\\"fa fa-calendar\\\"></a></button>\\n        </div>\\n    </div>\\n    \\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().dueDate\\\">{{error}}</label>\\n</td>\\n                </tr>                </tbody>\\n            </table>\\n\\n            <div class=\\\"\\\">\\n                <span class=\\\"\\\">To:</span>\\n                <div class=\\\"document-entity mt-1\\\">\\n                    <span *ngIf=\\\"_formService.getObject().entity_avatar\\\"\\n                          [innerHTML]=\\\"_formService.getViewObject().entity_avatar\\\" class=\\\"pr-1\\\"></span>\\n                    <address>\\n                        <strong>{{_formService.getObject().entityLegalName}}</strong><br>\\n                        <div class=\\\"m-t-xs m-b-xs\\\">\\n                                                        <input [(ngModel)]=\\\"_formService.getObject().entityAddressObj\\\"\\n           formControlName = entityAddressObj\\n           name=\\\"form[entityAddressObj]\\\"\\n                      type=\\\"hidden\\\">\\n    <js_autoComplete [field]=\\\"'entityAddressObj'\\\"\\n                     [hasSelfReference]=\\\"_dataService.getFieldChoicesAttr('entityAddressObj', 'hasSelfReference')\\\"\\n                                              (onChange)=\\\"onEntityAddressChange($event)\\\"[placeholder]=\\\"&#039;Address&#039;\\\"                         ></js_autoComplete>\\n                    <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().entityAddressObj\\\">{{error}}</label>\\n                        </div>\\n                        <ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet1\\\"\\n                            ><span>{{_formService.getObject().entityStreet1}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet2\\\"\\n                            ><span>{{_formService.getObject().entityStreet2}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityPostCode\\\"\\n                            ><span>{{_formService.getObject().entityPostCode}} {{_formService.getObject().entityCity}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityRegion\\\"\\n                            ><span>{{_formService.getObject().entityRegion}}</span><br></ng-template>                    </address>\\n                </div>\\n            </div>\\n            <p class=\\\"mt-2\\\">Tax Number: {{_formService.getObject().entityTaxNumber}}</p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"mt-2 mb-4\\\">\\n        <span>Comments</span>\\n        <div class=\\\"border rounded document-comments\\\">                            <textarea id=\\\"form_comments\\\" name=\\\"form[comments]\\\" rows=\\\"3\\\" [(ngModel)]=\\\"_formService.getObject().comments\\\" formControlName=\\\"comments\\\" [class.error]=\\\"_formService.getErrors().comments &amp;&amp; _formService.getErrors().comments.length &gt; 0\\\" class=\\\"form-control\\\"></textarea>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().comments\\\">{{error}}</label>\\n</div>\\n    </div>\\n\\n            <section><ng-template #js_lazyLoadContainer></ng-template></section>\\n    \\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-8\\\">\\n            <ng-template [ngIf]=\\\"_dataService.getLocalDataAttr('totalVatSplitByCode')\\\">\\n            <span>TAX Resume</span>\\n            <div class=\\\"border rounded document-tax-resume\\\">\\n                <table class=\\\"table\\\">\\n                    <tbody>\\n                    <tr>\\n                        <th>Code</th>\\n                        <th>Description</th>\\n                        <th>Percentage</th>\\n                        <th>Net</th>\\n                        <th>TAX</th>\\n                        <th>Total</th>\\n                    </tr>\\n                    <tr *ngFor=\\\"let obj of _dataService.getLocalDataAttr('totalVatSplitByCode')\\\">\\n                        <td>{{ obj['name'] }}</td>\\n                        <td>{{ obj['description'] }}</td>\\n                        <td class=\\\"text-right\\\">{{ obj['percentage'] }}%</td>\\n                        <td class=\\\"text-right\\\">{{ obj['subTotal'] }}</td>\\n                        <td class=\\\"text-right\\\">{{ obj['totalVat'] }}</td>\\n                        <td class=\\\"text-right\\\">{{ obj['total'] }}</td>\\n                    </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n            </ng-template>\\n        </div>\\n        <div class=\\\"col-sm-4\\\">\\n            <table class=\\\"table document-total\\\">\\n                <tbody>\\n                <tr>\\n                    <td><strong>Sub Total:</strong></td>\\n                    <td>                            <input type=\\\"text\\\" id=\\\"form_subTotal\\\" name=\\\"form[subTotal]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().subTotal\\\" formControlName=\\\"subTotal\\\" [class.error]=\\\"_formService.getErrors().subTotal &amp;&amp; _formService.getErrors().subTotal.length &gt; 0\\\" class=\\\"form-control\\\" value=\\\"0\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().subTotal\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                <tr>\\n                    <td><strong>TAX:</strong></td>\\n                    <td>                            <input type=\\\"text\\\" id=\\\"form_totalVat\\\" name=\\\"form[totalVat]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().totalVat\\\" formControlName=\\\"totalVat\\\" [class.error]=\\\"_formService.getErrors().totalVat &amp;&amp; _formService.getErrors().totalVat.length &gt; 0\\\" class=\\\"form-control\\\" value=\\\"0\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().totalVat\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                <tr>\\n                    <td><strong>Total:</strong></td>\\n                    <td>                            <input type=\\\"text\\\" id=\\\"form_total\\\" name=\\\"form[total]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().total\\\" formControlName=\\\"total\\\" [class.error]=\\\"_formService.getErrors().total &amp;&amp; _formService.getErrors().total.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().total\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n    <div *ngIf=\\\"_dataService.getLocalDataAttr('documentInfo') && _dataService.getLocalDataAttr('documentInfo')['footer']\\\"\\n         class=\\\"mt-2 bg-light p-3\\\"\\n         [innerHTML]=\\\"_dataService.getLocalDataAttr('documentInfo')['footer']\\\"></div>\\n</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n        \\n                    <div class=\\\"row\\\">\\n            <div class=\\\"col-auto ml-auto\\\">\\n                                            <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"cancelAction($event)\\\"\\n                                        id=\\\"form_cancel\\\"\\n            name=\\\"form[cancel]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Cancel</button>\\n                                                <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"resetAction($event)\\\"\\n                                        id=\\\"form_reset\\\"\\n            name=\\\"form[reset]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-ban\\\"></i>&nbsp;Reset</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAction($event)\\\"\\n                                        id=\\\"form_save\\\"\\n            name=\\\"form[save]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-check\\\"></i>&nbsp;Save</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAndCloseAction($event)\\\"\\n                                        id=\\\"form_saveAndClose\\\"\\n            name=\\\"form[saveAndClose]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Save and Close</button>\\n                                </div>\\n        </div>\\n    </div>    \\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/templates/invoice-rectification-form-popup.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/templates/invoice-rectification-form-popup.component.html\n// module chunks = main","module.exports = \"    \\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n    \\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-6\\\">\\n            <img *ngIf=\\\"_dataService.getLocalDataAttr('storeLogo')\\\"\\n                 height=\\\"96\\\"\\n                 alt=\\\"logo\\\"\\n                 class=\\\"m-b-md\\\"\\n                 [src]=\\\"_helperService.getUploadWebPath(_dataService.getLocalDataAttr('storeLogo'), 'resize_96')\\\">\\n            <address>\\n                <strong>{{_formService.getObject().storeLegalName}}</strong><br>\\n                <ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet1\\\"\\n                    ><span>{{_formService.getObject().storeStreet1}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet2\\\"\\n                    ><span>{{_formService.getObject().storeStreet2}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storePostCode\\\"\\n                    ><span>{{_formService.getObject().storePostCode}} {{_formService.getObject().storeCity}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeRegion\\\"\\n                    ><span>{{_formService.getObject().storeRegion}}</span><br></ng-template>            </address>\\n            <ng-template ngFor let-field [ngForOf]=\\\"_dataService.getLocalDataAttr('storeInfo')\\\"><span\\n                    [innerHtml]=\\\"field\\\"></span><br></ng-template>\\n            <p class=\\\"m-t-sm\\\">Tax Number: {{_formService.getObject().storeTaxNumber}}</p>\\n        </div>\\n        <div class=\\\"col-sm-6\\\">\\n            <h3 *ngIf=\\\"_formService.getObject().code\\\" class=\\\"document-number text-right\\\"><span>{{_formService.getObject().documentType_name}}:&nbsp;</span>                        <p id=\\\"form_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().code\\\">{{error}}</label>\\n</h3>\\n            <table class=\\\"table document-dates\\\">\\n                <tbody>\\n                <tr>\\n                    <td><strong>Date:</strong></td>\\n                    <td>                        \\n    <div class=\\\"input-group js_dataPicker\\\"\\n         [datePicker]=\\\"'date'\\\"\\n         #dpk_date=\\\"\\\" [control]=\\\"dpk_date\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"yyyy-mm-dd\\\"\\n               [(ngModel)]=\\\"_formService.getObject().date\\\"\\n               formControlName = date\\n               name=\\\"form[date]\\\"\\n               required=\\\"required\\\"               [class.error]=\\\"_formService.getErrors()['date'] && (_formService.getErrors()['date'].length > 0)\\\"\\n               ngbDatepicker #dpk_date=\\\"ngbDatepicker\\\">\\n        <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn\\\" type=\\\"button\\\"><a class=\\\"fa fa-calendar\\\"></a></button>\\n        </div>\\n    </div>\\n    \\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().date\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                                </tbody>\\n            </table>\\n\\n            <div class=\\\"\\\">\\n                <span class=\\\"\\\">To:</span>\\n                <div class=\\\"document-entity mt-1\\\">\\n                    <span *ngIf=\\\"_formService.getObject().entity_avatar\\\"\\n                          [innerHTML]=\\\"_formService.getViewObject().entity_avatar\\\" class=\\\"pr-1\\\"></span>\\n                    <address>\\n                        <strong>{{_formService.getObject().entityLegalName}}</strong><br>\\n                        <div class=\\\"m-t-xs m-b-xs\\\">\\n                                                        <input [(ngModel)]=\\\"_formService.getObject().entityAddressObj\\\"\\n           formControlName = entityAddressObj\\n           name=\\\"form[entityAddressObj]\\\"\\n                      type=\\\"hidden\\\">\\n    <js_autoComplete [field]=\\\"'entityAddressObj'\\\"\\n                     [hasSelfReference]=\\\"_dataService.getFieldChoicesAttr('entityAddressObj', 'hasSelfReference')\\\"\\n                                              (onChange)=\\\"onEntityAddressChange($event)\\\"[placeholder]=\\\"&#039;Address&#039;\\\"                         ></js_autoComplete>\\n                    <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().entityAddressObj\\\">{{error}}</label>\\n                        </div>\\n                        <ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet1\\\"\\n                            ><span>{{_formService.getObject().entityStreet1}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet2\\\"\\n                            ><span>{{_formService.getObject().entityStreet2}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityPostCode\\\"\\n                            ><span>{{_formService.getObject().entityPostCode}} {{_formService.getObject().entityCity}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityRegion\\\"\\n                            ><span>{{_formService.getObject().entityRegion}}</span><br></ng-template>                    </address>\\n                </div>\\n            </div>\\n            <p class=\\\"mt-2\\\">Tax Number: {{_formService.getObject().entityTaxNumber}}</p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"mt-2 mb-4\\\">\\n        <span>Comments</span>\\n        <div class=\\\"border rounded document-comments\\\">                            <textarea id=\\\"form_comments\\\" name=\\\"form[comments]\\\" rows=\\\"3\\\" [(ngModel)]=\\\"_formService.getObject().comments\\\" formControlName=\\\"comments\\\" [class.error]=\\\"_formService.getErrors().comments &amp;&amp; _formService.getErrors().comments.length &gt; 0\\\" class=\\\"form-control\\\"></textarea>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().comments\\\">{{error}}</label>\\n</div>\\n    </div>\\n\\n    <section>\\n    <ng-template #js_lazyLoadContainer></ng-template>\\n    <ng-template #js_lazyLoadContainer></ng-template>\\n</section>\\n    <div class=\\\"row\\\"><div class=\\\"col-md-4 offset-md-8\\\">\\n    <table class=\\\"table document-total\\\">\\n        <tbody>\\n        <tr>\\n            <td><strong>DIFF:</strong></td>\\n            <td><input class=\\\"form-control js_diffControl\\\"\\n                       readonly=\\\"readonly\\\"\\n                       type=\\\"text\\\"\\n                       value=\\\"0\\\"></td>\\n        </tr>        </tbody>\\n    </table>\\n</div></div>\\n    <div *ngIf=\\\"_dataService.getLocalDataAttr('documentInfo') && _dataService.getLocalDataAttr('documentInfo')['footer']\\\"\\n         class=\\\"mt-2 bg-light p-3\\\"\\n         [innerHTML]=\\\"_dataService.getLocalDataAttr('documentInfo')['footer']\\\"></div>\\n</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n        \\n                    <div class=\\\"row\\\">\\n            <div class=\\\"col-auto ml-auto\\\">\\n                                            <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"cancelAction($event)\\\"\\n                                        id=\\\"form_cancel\\\"\\n            name=\\\"form[cancel]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Cancel</button>\\n                                                <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"resetAction($event)\\\"\\n                                        id=\\\"form_reset\\\"\\n            name=\\\"form[reset]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-ban\\\"></i>&nbsp;Reset</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAction($event)\\\"\\n                                        id=\\\"form_save\\\"\\n            name=\\\"form[save]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-check\\\"></i>&nbsp;Save</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAndCloseAction($event)\\\"\\n                                        id=\\\"form_saveAndClose\\\"\\n            name=\\\"form[saveAndClose]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Save and Close</button>\\n                                </div>\\n        </div>\\n    </div>    \\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/templates/receipt-form-popup.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/templates/receipt-form-popup.component.html\n// module chunks = main","module.exports = \"    \\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n    \\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-6\\\">\\n            <img *ngIf=\\\"_dataService.getLocalDataAttr('storeLogo')\\\"\\n                 height=\\\"96\\\"\\n                 alt=\\\"logo\\\"\\n                 class=\\\"m-b-md\\\"\\n                 [src]=\\\"_helperService.getUploadWebPath(_dataService.getLocalDataAttr('storeLogo'), 'resize_96')\\\">\\n            <address>\\n                <strong>{{_formService.getObject().storeLegalName}}</strong><br>\\n                <ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet1\\\"\\n                    ><span>{{_formService.getObject().storeStreet1}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet2\\\"\\n                    ><span>{{_formService.getObject().storeStreet2}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storePostCode\\\"\\n                    ><span>{{_formService.getObject().storePostCode}} {{_formService.getObject().storeCity}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeRegion\\\"\\n                    ><span>{{_formService.getObject().storeRegion}}</span><br></ng-template>            </address>\\n            <ng-template ngFor let-field [ngForOf]=\\\"_dataService.getLocalDataAttr('storeInfo')\\\"><span\\n                    [innerHtml]=\\\"field\\\"></span><br></ng-template>\\n            <p class=\\\"m-t-sm\\\">Tax Number: {{_formService.getObject().storeTaxNumber}}</p>\\n        </div>\\n        <div class=\\\"col-sm-6\\\">\\n            <h3 *ngIf=\\\"_formService.getObject().code\\\" class=\\\"document-number text-right\\\"><span>{{_formService.getObject().documentType_name}}:&nbsp;</span>                        <p id=\\\"form_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().code\\\">{{error}}</label>\\n</h3>\\n            <table class=\\\"table document-dates\\\">\\n                <tbody>\\n                <tr>\\n                    <td><strong>Date:</strong></td>\\n                    <td>                        \\n    <div class=\\\"input-group js_dataPicker\\\"\\n         [datePicker]=\\\"'date'\\\"\\n         #dpk_date=\\\"\\\" [control]=\\\"dpk_date\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"yyyy-mm-dd\\\"\\n               [(ngModel)]=\\\"_formService.getObject().date\\\"\\n               formControlName = date\\n               name=\\\"form[date]\\\"\\n               required=\\\"required\\\"               [class.error]=\\\"_formService.getErrors()['date'] && (_formService.getErrors()['date'].length > 0)\\\"\\n               ngbDatepicker #dpk_date=\\\"ngbDatepicker\\\">\\n        <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn\\\" type=\\\"button\\\"><a class=\\\"fa fa-calendar\\\"></a></button>\\n        </div>\\n    </div>\\n    \\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().date\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                                </tbody>\\n            </table>\\n\\n            <div class=\\\"\\\">\\n                <span class=\\\"\\\">To:</span>\\n                <div class=\\\"document-entity mt-1\\\">\\n                    <span *ngIf=\\\"_formService.getObject().entity_avatar\\\"\\n                          [innerHTML]=\\\"_formService.getViewObject().entity_avatar\\\" class=\\\"pr-1\\\"></span>\\n                    <address>\\n                        <strong>{{_formService.getObject().entityLegalName}}</strong><br>\\n                        <div class=\\\"m-t-xs m-b-xs\\\">\\n                                                        <input [(ngModel)]=\\\"_formService.getObject().entityAddressObj\\\"\\n           formControlName = entityAddressObj\\n           name=\\\"form[entityAddressObj]\\\"\\n                      type=\\\"hidden\\\">\\n    <js_autoComplete [field]=\\\"'entityAddressObj'\\\"\\n                     [hasSelfReference]=\\\"_dataService.getFieldChoicesAttr('entityAddressObj', 'hasSelfReference')\\\"\\n                                              (onChange)=\\\"onEntityAddressChange($event)\\\"[placeholder]=\\\"&#039;Address&#039;\\\"                         ></js_autoComplete>\\n                    <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().entityAddressObj\\\">{{error}}</label>\\n                        </div>\\n                        <ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet1\\\"\\n                            ><span>{{_formService.getObject().entityStreet1}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet2\\\"\\n                            ><span>{{_formService.getObject().entityStreet2}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityPostCode\\\"\\n                            ><span>{{_formService.getObject().entityPostCode}} {{_formService.getObject().entityCity}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityRegion\\\"\\n                            ><span>{{_formService.getObject().entityRegion}}</span><br></ng-template>                    </address>\\n                </div>\\n            </div>\\n            <p class=\\\"mt-2\\\">Tax Number: {{_formService.getObject().entityTaxNumber}}</p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"mt-2 mb-4\\\">\\n        <span>Comments</span>\\n        <div class=\\\"border rounded document-comments\\\">                            <textarea id=\\\"form_comments\\\" name=\\\"form[comments]\\\" rows=\\\"3\\\" [(ngModel)]=\\\"_formService.getObject().comments\\\" formControlName=\\\"comments\\\" [class.error]=\\\"_formService.getErrors().comments &amp;&amp; _formService.getErrors().comments.length &gt; 0\\\" class=\\\"form-control\\\"></textarea>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().comments\\\">{{error}}</label>\\n</div>\\n    </div>\\n\\n    <section><ng-template #js_lazyLoadContainer></ng-template></section>\\n    <div class=\\\"row\\\"><div class=\\\"col-md-4 offset-md-8\\\">\\n    <table class=\\\"table document-total\\\">\\n        <tbody>\\n        <tr>\\n    <td><strong>Total:</strong></td>\\n    <td>                            <input type=\\\"text\\\" id=\\\"form_total\\\" name=\\\"form[total]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().total\\\" formControlName=\\\"total\\\" [class.error]=\\\"_formService.getErrors().total &amp;&amp; _formService.getErrors().total.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().total\\\">{{error}}</label>\\n</td>\\n</tr>        </tbody>\\n    </table>\\n</div></div>\\n    <div *ngIf=\\\"_dataService.getLocalDataAttr('documentInfo') && _dataService.getLocalDataAttr('documentInfo')['footer']\\\"\\n         class=\\\"mt-2 bg-light p-3\\\"\\n         [innerHTML]=\\\"_dataService.getLocalDataAttr('documentInfo')['footer']\\\"></div>\\n</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n        \\n                    <div class=\\\"row\\\">\\n            <div class=\\\"col-auto ml-auto\\\">\\n                                            <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"cancelAction($event)\\\"\\n                                        id=\\\"form_cancel\\\"\\n            name=\\\"form[cancel]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Cancel</button>\\n                                                <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"resetAction($event)\\\"\\n                                        id=\\\"form_reset\\\"\\n            name=\\\"form[reset]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-ban\\\"></i>&nbsp;Reset</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAction($event)\\\"\\n                                        id=\\\"form_save\\\"\\n            name=\\\"form[save]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-check\\\"></i>&nbsp;Save</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAndCloseAction($event)\\\"\\n                                        id=\\\"form_saveAndClose\\\"\\n            name=\\\"form[saveAndClose]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Save and Close</button>\\n                                </div>\\n        </div>\\n    </div>    \\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/templates/receipt-payment-form-popup.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/templates/receipt-payment-form-popup.component.html\n// module chunks = main","module.exports = \"    \\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n    \\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-6\\\">\\n            <img *ngIf=\\\"_dataService.getLocalDataAttr('storeLogo')\\\"\\n                 height=\\\"96\\\"\\n                 alt=\\\"logo\\\"\\n                 class=\\\"m-b-md\\\"\\n                 [src]=\\\"_helperService.getUploadWebPath(_dataService.getLocalDataAttr('storeLogo'), 'resize_96')\\\">\\n            <address>\\n                <strong>{{_formService.getObject().storeLegalName}}</strong><br>\\n                <ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet1\\\"\\n                    ><span>{{_formService.getObject().storeStreet1}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet2\\\"\\n                    ><span>{{_formService.getObject().storeStreet2}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storePostCode\\\"\\n                    ><span>{{_formService.getObject().storePostCode}} {{_formService.getObject().storeCity}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeRegion\\\"\\n                    ><span>{{_formService.getObject().storeRegion}}</span><br></ng-template>            </address>\\n            <ng-template ngFor let-field [ngForOf]=\\\"_dataService.getLocalDataAttr('storeInfo')\\\"><span\\n                    [innerHtml]=\\\"field\\\"></span><br></ng-template>\\n            <p class=\\\"m-t-sm\\\">Tax Number: {{_formService.getObject().storeTaxNumber}}</p>\\n        </div>\\n        <div class=\\\"col-sm-6\\\">\\n            <h3 *ngIf=\\\"_formService.getObject().code\\\" class=\\\"document-number text-right\\\"><span>{{_formService.getObject().documentType_name}}:&nbsp;</span>                        <p id=\\\"form_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().code\\\">{{error}}</label>\\n</h3>\\n            <table class=\\\"table document-dates\\\">\\n                <tbody>\\n                <tr>\\n                    <td><strong>Date:</strong></td>\\n                    <td>                        \\n    <div class=\\\"input-group js_dataPicker\\\"\\n         [datePicker]=\\\"'date'\\\"\\n         #dpk_date=\\\"\\\" [control]=\\\"dpk_date\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"yyyy-mm-dd\\\"\\n               [(ngModel)]=\\\"_formService.getObject().date\\\"\\n               formControlName = date\\n               name=\\\"form[date]\\\"\\n               required=\\\"required\\\"               [class.error]=\\\"_formService.getErrors()['date'] && (_formService.getErrors()['date'].length > 0)\\\"\\n               ngbDatepicker #dpk_date=\\\"ngbDatepicker\\\">\\n        <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn\\\" type=\\\"button\\\"><a class=\\\"fa fa-calendar\\\"></a></button>\\n        </div>\\n    </div>\\n    \\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().date\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                                </tbody>\\n            </table>\\n\\n            <div class=\\\"\\\">\\n                <span class=\\\"\\\">To:</span>\\n                <div class=\\\"document-entity mt-1\\\">\\n                    <span *ngIf=\\\"_formService.getObject().entity_avatar\\\"\\n                          [innerHTML]=\\\"_formService.getViewObject().entity_avatar\\\" class=\\\"pr-1\\\"></span>\\n                    <address>\\n                        <strong>{{_formService.getObject().entityLegalName}}</strong><br>\\n                        <div class=\\\"m-t-xs m-b-xs\\\">\\n                                                        <input [(ngModel)]=\\\"_formService.getObject().entityAddressObj\\\"\\n           formControlName = entityAddressObj\\n           name=\\\"form[entityAddressObj]\\\"\\n                      type=\\\"hidden\\\">\\n    <js_autoComplete [field]=\\\"'entityAddressObj'\\\"\\n                     [hasSelfReference]=\\\"_dataService.getFieldChoicesAttr('entityAddressObj', 'hasSelfReference')\\\"\\n                                              (onChange)=\\\"onEntityAddressChange($event)\\\"[placeholder]=\\\"&#039;Address&#039;\\\"                         ></js_autoComplete>\\n                    <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().entityAddressObj\\\">{{error}}</label>\\n                        </div>\\n                        <ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet1\\\"\\n                            ><span>{{_formService.getObject().entityStreet1}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet2\\\"\\n                            ><span>{{_formService.getObject().entityStreet2}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityPostCode\\\"\\n                            ><span>{{_formService.getObject().entityPostCode}} {{_formService.getObject().entityCity}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityRegion\\\"\\n                            ><span>{{_formService.getObject().entityRegion}}</span><br></ng-template>                    </address>\\n                </div>\\n            </div>\\n            <p class=\\\"mt-2\\\">Tax Number: {{_formService.getObject().entityTaxNumber}}</p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"mt-2 mb-4\\\">\\n        <span>Comments</span>\\n        <div class=\\\"border rounded document-comments\\\">                            <textarea id=\\\"form_comments\\\" name=\\\"form[comments]\\\" rows=\\\"3\\\" [(ngModel)]=\\\"_formService.getObject().comments\\\" formControlName=\\\"comments\\\" [class.error]=\\\"_formService.getErrors().comments &amp;&amp; _formService.getErrors().comments.length &gt; 0\\\" class=\\\"form-control\\\"></textarea>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().comments\\\">{{error}}</label>\\n</div>\\n    </div>\\n\\n    <section><ng-template #js_lazyLoadContainer></ng-template></section>\\n    <div class=\\\"row\\\"><div class=\\\"col-md-4 offset-md-8\\\">\\n    <table class=\\\"table document-total\\\">\\n        <tbody>\\n        <tr>\\n            <td><strong>DIFF:</strong></td>\\n            <td><input class=\\\"form-control js_diffControl\\\"\\n                       readonly=\\\"readonly\\\"\\n                       type=\\\"text\\\"\\n                       value=\\\"0\\\"></td>\\n        </tr>        </tbody>\\n    </table>\\n</div></div>\\n    <div *ngIf=\\\"_dataService.getLocalDataAttr('documentInfo') && _dataService.getLocalDataAttr('documentInfo')['footer']\\\"\\n         class=\\\"mt-2 bg-light p-3\\\"\\n         [innerHTML]=\\\"_dataService.getLocalDataAttr('documentInfo')['footer']\\\"></div>\\n</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n        \\n                    <div class=\\\"row\\\">\\n            <div class=\\\"col-auto ml-auto\\\">\\n                                            <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"cancelAction($event)\\\"\\n                                        id=\\\"form_cancel\\\"\\n            name=\\\"form[cancel]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Cancel</button>\\n                                                <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"resetAction($event)\\\"\\n                                        id=\\\"form_reset\\\"\\n            name=\\\"form[reset]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-ban\\\"></i>&nbsp;Reset</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAction($event)\\\"\\n                                        id=\\\"form_save\\\"\\n            name=\\\"form[save]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-check\\\"></i>&nbsp;Save</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAndCloseAction($event)\\\"\\n                                        id=\\\"form_saveAndClose\\\"\\n            name=\\\"form[saveAndClose]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Save and Close</button>\\n                                </div>\\n        </div>\\n    </div>    \\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/templates/receipt-settlement-form-popup.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/client-document/edit/ts/templates/receipt-settlement-form-popup.component.html\n// module chunks = main","import {Component, Inject, Injector, ViewContainerRef, Renderer} from '@angular/core';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {ActionsService} from '../../../../../../../../AppBundle/Resources/public/ts/actions/actions.service';\nimport {DataBoxProvider, Popups, Popup} from '../../../../../../../../AppBundle/Resources/public/data-box/ts/src/data-box.extension-component';\nimport {ModalService} from '../../../../../../../../AppBundle/Resources/public/modal/ts/modal.service';\nimport {MainExtComponent as BaseDocumentIndexMainExtComponent} from '../../../../base-document/index/ts/main.ext-component';\nimport {TasksLoaderManagerService} from '../../../../../../../../AppBundle/Resources/public/tasks-loader-manager/ts/tasks-loader-manager.service';\n\n\n// Component\n@Component({\n    selector: '.js_dataBox',\n    templateUrl: '../templates/main.component.html'\n})\nexport class MainComponent extends BaseDocumentIndexMainExtComponent\n{\n    constructor(\n        viewContainerRef: ViewContainerRef,\n        renderer: Renderer,\n        @Inject('Provider') dataBoxProvider: DataBoxProvider,\n        @Inject('DataService') dataService: any,\n        tasksLoaderManagerService: TasksLoaderManagerService,\n        @Inject('HelperService') helperService: any,\n        actionsService: ActionsService,\n        modalService: ModalService,\n        @Inject('Popups') popups: Popups | Popup,\n        injector: Injector\n    ) {\n        // Call parent\n        super();\n        super.initBaseDocumentIndexMainExtComponent(\n            viewContainerRef,\n            renderer,\n            dataBoxProvider,\n            dataService,\n            tasksLoaderManagerService,\n            helperService,\n            actionsService,\n            modalService,\n            popups,\n            injector\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/index/ts/src/main.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n// This module doesn't use \"ReactiveFormsModule\", but it needs to import this class\n// to provide \"formBuilder\" when inject dependencies in child modules (like form)\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {SearchModule} from '../../../../../../../../AppBundle/Resources/public/ts/search/search.module';\nimport {ExpanderModule} from '../../../../../../../../AppBundle/Resources/public/ts/expander/expander.module';\nimport {LegendExtModule} from '../../../../../../../../AppBundle/Resources/public/legend/ts/src/legend.ext-module';\nimport {SearchPaginationModule} from '../../../../../../../../AppBundle/Resources/public/ts/search/search-pagination.module';\nimport {MainComponent} from './main.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        SearchModule,\n        SearchPaginationModule,\n        ExpanderModule,\n        LegendExtModule\n    ],\n    declarations: [\n        MainComponent\n    ],\n    exports: [MainComponent]\n})\nexport class MainExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/index/ts/src/main.extension-module.ts","module.exports = \"\\n\\n<div class=\\\"ibox\\\" >\\n                        <div class=\\\"ibox-title\\\" *ngIf=\\\"!getProviderExtraDataAttr('hasMergeHeader')\\\">\\n                <h5>\\n                    <ng-template [ngIf]=\\\"getProviderAttr('controls')['expander']['isEnabled']\\\"><js_expander\\n                        [isExpanded]=\\\"_isExpanded || null\\\"\\n                        [label]=\\\"getLang(getProviderAttr('label'))\\\"\\n                        [labelCount]=\\\"getProviderAttr('labelCount')\\\"\\n                        [labelIcon]=\\\"getProviderAttr('labelIcon')\\\"\\n                        (onChange)=\\\"expanderAction($event)\\\"></js_expander></ng-template>\\n                    <ng-template [ngIf]=\\\"!getProviderAttr('controls')['expander']['isEnabled']\\\">\\n                        <span [innerHTML]=\\\"getProviderAttr('label')\\\"></span>\\n                    </ng-template>\\n                </h5>\\n                <div *ngIf=\\\"_isExpanded\\\"\\n                     class=\\\"txt-align-r hide-on-empty\\\">    <div class=\\\"row align-items-center\\\">\\n        <div class=\\\"col ml-auto text-right actions no-user-select\\\">\\n            <ng-template [ngIf]=\\\"_actionsService.getActionAttr('search', 'isEnabled')\\\"><js_search class=\\\"search\\\"></js_search></ng-template>\\n            <div (click)=\\\"triggerAction($event)\\\">\\n                <ng-template ngFor let-action [ngForOf]=\\\"_actionsService.getHeadActions()\\\">\\n                    <a *ngIf=\\\"_actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                       [ngClass]=\\\"[_actionsService.getActionAttr(action, 'icon')]\\\"\\n                       class=\\\"-round fa\\\"\\n                       [attr.data-action]=\\\"action\\\"></a>\\n                </ng-template>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n            </div>\\n            \\n    <div [hidden]=\\\"!(_isExpanded)\\\" class=\\\"ibox-content hide-on-empty\\\">    <ng-template [ngIf]=\\\"(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">\\n                \\n    <div class=\\\"table-responsive\\\">\\n    <form>    <table class=\\\"data-table table table-hover dataTables-example table-bordered\\\">\\n        <thead>\\n        <tr>\\n            <th *ngFor=\\\"let searchField of _dataService.getSearch('fields')\\\">{{ getLang(_dataService.getFields('metadata')[searchField].label) }}</th>\\n            <th>&nbsp;</th>\\n        </tr>\\n        </thead>        <tbody>\\n        <ng-template ngFor let-obj [ngForOf]=\\\"_dataService.getProviderAttr('objects')\\\" let-objIndex=\\\"index\\\">\\n        <tr (dblclick)=\\\"editAction($event, objIndex)\\\"            [ngClass]=\\\"getLegendClasses(obj, 'tr')\\\">                    <td *ngFor=\\\"let searchField of _dataService.getSearch('fields')\\\"\\n    [ngClass]=\\\"getColAlign(searchField)\\\"\\n    [innerHTML]=\\\"obj[searchField]\\\"></td>                        <td>\\n                <span *ngIf=\\\"obj['_isNew']\\\" class=\\\"badge badge-info\\\">New</span>\\n                <span *ngIf=\\\"obj['_isEdited']\\\" class=\\\"badge badge-info\\\">Edited</span>\\n                <input *ngIf=\\\"_actionsService.getActionAttr('radioChoice', 'isEnabled')\\\"\\n                       class=\\\"pull-right action\\\"\\n                       type=\\\"radio\\\"\\n                       name=\\\"index[]\\\"\\n                       value=\\\"{{objIndex}}\\\"/>\\n                <input *ngIf=\\\"_actionsService.getActionAttr('checkAll', 'isEnabled')\\\"\\n                       class=\\\"pull-right action js_checkAll\\\"\\n                       type=\\\"checkbox\\\"\\n                       name=\\\"index[]\\\"\\n                       value=\\\"{{objIndex}}\\\"\\n                       [ngModel]=\\\"checkAll\\\"/>\\n                <div class=\\\"pull-right actions no-user-select text-secondary\\\" (click)=\\\"triggerAction($event)\\\">\\n                    <ng-template ngFor let-action [ngForOf]=\\\"_actionsService.getDetailActions()\\\">\\n                        <a *ngIf=\\\"_actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                           [ngClass]=\\\"[_actionsService.getActionAttr(action, 'icon') + getActionsLegendClasses(obj, action)]\\\"\\n                           class=\\\"fa\\\"\\n                           [attr.data-action]=\\\"action\\\"\\n                           [attr.data-value]=\\\"objIndex\\\"></a>\\n                    </ng-template>\\n                </div>\\n            </td>        </tr>\\n        </ng-template>\\n        </tbody>\\n    </table>\\n    </form></div>    </ng-template><p\\n        class=\\\"text-center\\\"\\n        *ngIf=\\\"!(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">No results.</p>\\n</div>\\n        <div [hidden]=\\\"!(_isExpanded)\\\"\\n         class=\\\"ibox-footer\\\"\\n         *ngIf=\\\"_dataService.countObjects() > 0\\\"><js_searchPagination></js_searchPagination></div>\\n\\n</div>\\n\\n<js_legend></js_legend>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/index/ts/templates/main.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/client-document/index/ts/templates/main.component.html\n// module chunks = main","import {Component, ElementRef, Inject, Optional, Injector, ReflectiveInjector, Renderer, ViewChild, ViewContainerRef} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {BaseFormPopupExtComponent, FormProvider} from '../../base-document/ts/base-form-popup.ext-component';\nimport {DataService} from '../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {ActionsService} from '../../../../../../AppBundle/Resources/public/ts/actions/actions.service';\nimport {FormService} from '../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {NavManagerService} from '../../../../../../AppBundle/Resources/public/ts/nav-manager/nav-manager.service';\nimport {WizardManagerService} from '../../../../../../AppBundle/Resources/public/wizard/ts/src/wizard-manager.service';\nimport {DynamicComponentLoaderService} from '../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\nimport {PostService} from '../../../../../../AppBundle/Resources/public/ts/post.service';\n\n\n/* Import dependencies */\n// ClientDocumentInvoiceDetail\nimport {MainExtModule as ClientDocumentInvoiceIndexMainExtModule} from '../../client-document-invoice/index/ts/src/main.ext-module';\nimport {FormPopupExtModule as ClientDocumentInvoiceEditFormPopupExtModule} from \"../../client-document-invoice/edit/ts/src/form-popup.ext-module\";\nimport {FormPopupExtModule as ClientDocumentInvoiceAddFormPopupExtModule} from \"../../client-document-invoice/add/ts/src/form-popup.ext-module\";\n/* /Import dependencies */\n\n\n@Component({\n    selector: '.js_baseClientDocumentFormPopup',\n    template: ''\n})\nexport class BaseInvoiceDocumentFormPopupExtComponent extends BaseFormPopupExtComponent\n{\n    // To load DocumentInvoiceDetailExtModule\n    @ViewChild('js_lazyLoadContainer', {read: ViewContainerRef}) lazyLoadViewContainerRef: ViewContainerRef;\n    // To handle with dependency objects changes to refresh the local object\n    protected onObjectsChangeSubscription_documentInvoiceDetail: any;\n\n    // Constructor vars\n    protected _parentDataService: any;\n    protected _helperService: any;\n    protected _dynamicComponentLoaderService: DynamicComponentLoaderService;\n    protected _postService: PostService;\n\n    // To check if object has changed to refresh parent\n    protected _object: any;\n\n    constructor() { super(); }\n\n    public initBaseInvoiceDocumentFormPopupExtComponent(\n        elementRef: any,\n        renderer: any,\n        provider: FormProvider,\n        formService: any,\n        dataService: any,\n        injector: any,\n        parentDataService: any,\n        helperService: any,\n        dynamicComponentLoaderService: any,\n        postService: any\n    ) {\n        super.initBaseFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            injector\n        );\n\n        // Constructor vars\n        this._parentDataService = parentDataService;\n        this._helperService = helperService;\n        this._dynamicComponentLoaderService = dynamicComponentLoaderService;\n        this._postService = postService;\n\n        // Save initial object to detect changes\n        this._object = this._dataService.getObject();\n    }\n\n    /**\n     * Overrides the parent method\n     * @returns {Promise}\n     */\n    public save(): Promise<any>\n    {\n        let that = this,\n            route = this._dataService.getRoute('edit-invoice');\n\n        return new Promise(function(resolve, reject) {\n            that._formService.save(route).then(\n                data => { return resolve(data); },\n                errors => { return reject(errors); }\n            );\n        });\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngAfterViewInit()\n    {\n        super.ngAfterViewInit();\n\n        // Load dependency\n        let that = this,\n            dependencyUrlProvider = (\n                this._helperService.getAppVar('route')\n                + 'bck/accounting/client-document-invoice-detail/data/'\n                + this._formService.getObject()['id']\n            );\n\n        this._postService.post(dependencyUrlProvider, null).then(\n            data => {\n                let providers = [\n                        {provide: 'DataService', useClass: DataService},\n                        ActionsService,\n                        {provide: 'DataServiceProvider', useValue: that._helperService.getDataServiceProvider(data)},\n                        {provide: 'ActionsServiceProvider', useValue: that._helperService.getActionsServiceProvider(data)},\n                        {provide: 'LegendProvider', useValue: that._helperService.getLegendProvider(data)},\n                        {provide: 'Provider', useValue: that._helperService.getDataBoxProvider(data)},\n                        {provide: 'Popups', useValue: {\n                            add: {\n                                module: ClientDocumentInvoiceAddFormPopupExtModule,\n                                component: 'FormPopupComponent',\n                                providers: [\n                                    FormService,\n                                    {provide: 'Provider', useValue: this._helperService.getFormProvider(data)},\n                                    {provide: 'ParentFormService', useValue: that._formService},\n                                    NavManagerService,\n                                    WizardManagerService\n                                ]\n                            },\n                            edit: {\n                                module: ClientDocumentInvoiceEditFormPopupExtModule,\n                                component: 'FormPopupComponent',\n                                providers: [\n                                    FormService,\n                                    {provide: 'Provider', useValue: this._helperService.getFormProvider(data)}\n                                ]\n                            }\n                        }},\n                        {provide: 'ParentDataService', useValue: this._dataService}\n                    ],\n                    injector = ReflectiveInjector.fromResolvedProviders(\n                        ReflectiveInjector.resolve(providers),\n                        that._injector\n                    );\n\n                let dependencyDataService = injector.get('DataService');\n                that.onObjectsChangeSubscription_documentInvoiceDetail\n                    = dependencyDataService.getOnObjectsChangeEmitter()\n                        .subscribe(data => {\n                            // Update local object\n                            that._dataService.refreshObject();\n                        });\n\n                that._dynamicComponentLoaderService.load(\n                    ClientDocumentInvoiceIndexMainExtModule,\n                    'MainComponent',\n                    that.lazyLoadViewContainerRef,\n                    injector\n                ).then(\n                    componentRef => {\n                        return true;\n                    },\n                    errors => { console.log(errors); return null; }\n                );\n            },\n            errors => { console.log(errors); return false; }\n        );\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnDestroy()\n    {\n        // Check subscription (if component load fail, subscription may not exist)\n        if (this.onObjectsChangeSubscription_documentInvoiceDetail) {\n            this.onObjectsChangeSubscription_documentInvoiceDetail.unsubscribe();\n        }\n\n        // If object has no changes or \"id\" is not defined, popup was open and closed without save the object,\n        // and if the flag '_isSessionStorage' is defined, the object was not saved in database,\n        // so doesn't make sense refresh the objects\n        if ((this._object != this._dataService.getObject())\n            && (this._dataService.getObject()['id'])\n            && (!this._dataService.getObject()['_isSessionStorage'])\n            && this._parentDataService\n        ) {\n            // Update object and parent object\n            this._parentDataService.refreshObject();\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/ts/base-invoice-document-form-popup.ext-component.ts","import {Component, ElementRef, Inject, Optional, Injector, ReflectiveInjector, Renderer, ViewChild, ViewContainerRef} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {BaseFormPopupExtComponent, FormProvider} from '../../base-document/ts/base-form-popup.ext-component';\nimport {DataService} from '../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {ActionsService} from '../../../../../../AppBundle/Resources/public/ts/actions/actions.service';\nimport {FormService} from '../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {NavManagerService} from '../../../../../../AppBundle/Resources/public/ts/nav-manager/nav-manager.service';\nimport {WizardManagerService} from '../../../../../../AppBundle/Resources/public/wizard/ts/src/wizard-manager.service';\nimport {DynamicComponentLoaderService} from '../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\nimport {PostService} from '../../../../../../AppBundle/Resources/public/ts/post.service';\n\n\n/* Import dependencies */\nimport {MainExtModule as ClientDocumentRectificationIndexMainExtModule} from '../../client-document-rectification/index/ts/src/main.ext-module';\nimport {FormPopupExtModule as ClientDocumentRectificationEditFormPopupExtModule} from \"../../client-document-rectification/edit/ts/src/form-popup.ext-module\";\nimport {FormPopupExtModule as ClientDocumentRectificationAddFormPopupExtModule} from \"../../client-document-rectification/add/ts/src/form-popup.ext-module\";\n/* /Import dependencies */\n\n\n@Component({\n    selector: '.js_baseClientInvoiceRectificationDocumentFormPopup',\n    template: ''\n})\nexport class BaseInvoiceRectificationDocumentFormPopupExtComponent extends BaseFormPopupExtComponent\n{\n    // To load ClientDocumentInvoiceRectificationExtModule\n    @ViewChild('js_lazyLoadContainer', {read: ViewContainerRef}) lazyLoadViewContainerRef: ViewContainerRef;\n    // To handle with dependency objects changes to refresh the local object\n    protected _onDependencyObjectsChangeSubscription: any;\n\n    // Constructor vars\n    protected _parentDataService: any;\n    protected _helperService: any;\n    protected _dynamicComponentLoaderService: DynamicComponentLoaderService;\n    protected _postService: PostService;\n\n    // To check if object has changed to refresh parent\n    protected _object: any;\n\n    constructor() { super(); }\n\n    public initBaseInvoiceRectificationDocumentFormPopupExtComponent(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        provider: FormProvider,\n        formService: FormService,\n        dataService: any,\n        injector: Injector,\n        parentDataService: any,\n        helperService: any,\n        dynamicComponentLoaderService: DynamicComponentLoaderService,\n        postService: PostService\n    ) {\n        super.initBaseFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            injector\n        );\n\n        // Constructor vars\n        this._parentDataService = parentDataService;\n        this._helperService = helperService;\n        this._dynamicComponentLoaderService = dynamicComponentLoaderService;\n        this._postService = postService;\n\n        // Save initial object to detect changes\n        this._object = this._dataService.getObject();\n    }\n\n    /**\n     * Overrides the parent method\n     * @returns {Promise}\n     */\n    public save(): Promise<any>\n    {\n        let that = this,\n            route = this._dataService.getRoute('edit-invoice');\n\n        return new Promise(function(resolve, reject) {\n            that._formService.save(route).then(\n                data => { return resolve(data); },\n                errors => { return reject(errors); }\n            );\n        });\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngAfterViewInit()\n    {\n        super.ngAfterViewInit();\n\n        // Load dependency\n        let that = this,\n            dependencyUrlProvider = (\n                this._helperService.getAppVar('route')\n                + 'bck/accounting/client-document-invoice-rectification/data/'\n                + this._formService.getObject()['id']\n            );\n\n        this._postService.post(dependencyUrlProvider, null).then(\n            data => {\n                let providers = [\n                        {provide: 'DataService', useClass: DataService},\n                        ActionsService,\n                        {provide: 'DataServiceProvider', useValue: that._helperService.getDataServiceProvider(data)},\n                        {provide: 'ActionsServiceProvider', useValue: that._helperService.getActionsServiceProvider(data)},\n                        {provide: 'LegendProvider', useValue: that._helperService.getLegendProvider(data)},\n                        {provide: 'Provider', useValue: that._helperService.getDataBoxProvider(data)},\n                        {provide: 'Popups', useValue: {\n                            add: {\n                                module: ClientDocumentRectificationAddFormPopupExtModule,\n                                component: 'FormPopupComponent',\n                                providers: [\n                                    FormService,\n                                    {provide: 'Provider', useValue: this._helperService.getFormProvider(data)},\n                                    {provide: 'ParentFormService', useValue: that._formService},\n                                    NavManagerService,\n                                    WizardManagerService\n                                ]\n                            },\n                            edit: {\n                                module: ClientDocumentRectificationEditFormPopupExtModule,\n                                component: 'FormPopupComponent',\n                                providers: [\n                                    FormService,\n                                    {provide: 'Provider', useValue: that._helperService.getFormProvider(data)}\n                                ]\n                            }\n                        }},\n                        {provide: 'ParentDataService', useValue: that._dataService}\n                    ],\n                    injector = ReflectiveInjector.fromResolvedProviders(\n                        ReflectiveInjector.resolve(providers),\n                        that._injector\n                    );\n\n                let dependencyDataService = injector.get('DataService');\n                that._onDependencyObjectsChangeSubscription\n                    = dependencyDataService.getOnObjectsChangeEmitter()\n                        .subscribe(data => {\n                            // Update local object\n                            that._dataService.refreshObject();\n                        });\n\n                that._dynamicComponentLoaderService.load(\n                    ClientDocumentRectificationIndexMainExtModule,\n                    'MainComponent',\n                    that.lazyLoadViewContainerRef,\n                    injector\n                ).then(\n                    componentRef => { return true; },\n                    errors => { console.log(errors); return null; }\n                );\n            },\n            errors => { console.log(errors); return false; }\n        );\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnDestroy()\n    {\n        // Check subscription (if component load fail, subscription may not exist)\n        if (this._onDependencyObjectsChangeSubscription) {\n            this._onDependencyObjectsChangeSubscription.unsubscribe();\n        }\n\n        // If object has no changes or \"id\" is not defined, popup was open and closed without save the object,\n        // and if the flag '_isSessionStorage' is defined, the object was not saved in database,\n        // so doesn't make sense refresh the objects\n        if ((this._object != this._dataService.getObject())\n            && (this._dataService.getObject()['id'])\n            && (!this._dataService.getObject()['_isSessionStorage'])\n            && this._parentDataService\n        ) {\n            // Update object and parent object\n            this._parentDataService.refreshObject();\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/ts/base-invoice-rectification-document-form-popup.ext-component.ts","import {Component, ElementRef, Inject, Optional, Injector, ReflectiveInjector, Renderer, ViewChildren, QueryList, ViewContainerRef} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {BaseFormPopupExtComponent, FormProvider} from '../../base-document/ts/base-form-popup.ext-component';\nimport {DataService} from '../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {ActionsService} from '../../../../../../AppBundle/Resources/public/ts/actions/actions.service';\nimport {FormService} from '../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {NavManagerService} from '../../../../../../AppBundle/Resources/public/ts/nav-manager/nav-manager.service';\nimport {WizardManagerService} from '../../../../../../AppBundle/Resources/public/wizard/ts/src/wizard-manager.service';\nimport {DynamicComponentLoaderService} from '../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\nimport {PostService} from '../../../../../../AppBundle/Resources/public/ts/post.service';\n\n\n/* Import dependencies */\n\n// ClientDocumentReceiptSettlement\nimport {MainExtModule as ClientDocumentSettlementIndexMainExtModule} from '../../client-document-settlement/index/ts/src/main.ext-module';\nimport {FormPopupExtModule as ClientDocumentSettlementEditFormPopupExtModule} from \"../../client-document-settlement/edit/ts/src/form-popup.ext-module\";\nimport {FormPopupExtModule as ClientDocumentSettlementAddFormPopupExtModule} from \"../../client-document-settlement/add/ts/src/form-popup.ext-module\";\n// ClientDocumentReceiptPayment\nimport {MainExtModule as ClientDocumentPaymentIndexExtModule} from '../../client-document-payment/index/ts/src/main.ext-module';\nimport {FormPopupExtModule as ClientDocumentPaymentEditFormPopupExtModule} from \"../../client-document-payment/edit/ts/src/form-popup.ext-module\";\nimport {Popups, Popup} from \"../../../../../../AppBundle/Resources/public/data-box/ts/src/data-box.extension-component\";\n\n/* /Import dependencies */\n\n// Reexports\nexport {Popups, Popup};\n\n\n@Component({\n    selector: '.js_baseClientDocumentReceiptFormPopup',\n    template: ''\n})\nexport class BaseReceiptDocumentFormPopupExtComponent extends BaseFormPopupExtComponent\n{\n    // To load document detail\n    @ViewChildren('js_lazyLoadContainer', {read: ViewContainerRef}) lazyLoadViewContainerRefQL: QueryList<ViewContainerRef>;\n    protected _llViewContainerRefArr: ViewContainerRef[] = [];\n    // Data service of dependencies to calc the \"diffControl\" [settlement, payment]\n    protected _dependencyDataServiceArr: any[] = [null, null];\n    // To handle with dependencies objects changes to refresh the diffControl\n    protected _onDependencyObjectsChangeSubscription: any[] = [null, null];\n\n    // Constructor vars\n    protected _parentDataService: any;\n    protected _helperService: any;\n    protected _dynamicComponentLoaderService: DynamicComponentLoaderService;\n    protected _postService: PostService;\n\n    // To check if object has changed to refresh parent\n    //protected _object: any;\n    protected _$diffControl: any;\n\n    constructor() { super(); }\n\n    public initBaseReceiptDocumentFormPopupExtComponent(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        provider: FormProvider,\n        formService: FormService,\n        dataService: any,\n        injector: Injector,\n        parentDataService: any,\n        helperService: any,\n        dynamicComponentLoaderService: DynamicComponentLoaderService,\n        postService: PostService\n    ) {\n        super.initBaseFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            injector\n        );\n\n        // Constructor vars\n        this._parentDataService = parentDataService;\n        this._helperService = helperService;\n        this._dynamicComponentLoaderService = dynamicComponentLoaderService;\n        this._postService = postService;\n\n        // Save initial object to detect changes\n        //this._object = this._dataService.getObject(); // DISABLED BECAUSE PARENT OBJECT IS NOT UPDATED, CHECK BELOW\n    }\n\n    /**\n     * Refresh diff control\n     * @returns {BaseReceiptDocumentFormPopupExtComponent}\n     */\n    protected refreshDiffControl()\n    {\n        if (!this._dependencyDataServiceArr[0] || !this._dependencyDataServiceArr[1]) {\n            // Dependencies has not been loaded yet\n            return this;\n        }\n\n        // [settlement, payment]\n        let totals = [0, 0];\n\n        for (let index in this._dependencyDataServiceArr) {\n            let objects = this._dependencyDataServiceArr[index].getProviderAttr('objects');\n            for (let object of objects) {\n                totals[index] += parseFloat(object['value'] || '0');\n            }\n        }\n\n        this._$diffControl.val((Math.round((totals[0] - totals[1]) * 100) / 100).toFixed(2));\n\n        return this;\n    }\n\n    /**\n     * Overrides the parent method\n     * @returns {Promise}\n     */\n    public save(): Promise<any>\n    {\n        let that = this,\n            route = this._dataService.getRoute('edit-receipt');\n\n        return new Promise(function(resolve, reject) {\n            that._formService.save(route).then(\n                data => { return resolve(data); },\n                errors => { return reject(errors); }\n            );\n        });\n    }\n\n    /**\n     * Load dependency\n     * @param dependency\n     * @param module\n     * @param viewContainerRef\n     * @returns {Object}\n     */\n    protected loadDependency(dependency, module, viewContainerRef: ViewContainerRef)\n    {\n        // Load dependency\n        let that = this,\n            dependencyUrlProvider = (\n                this._helperService.getAppVar('route')\n                + 'bck/accounting/client-document-receipt-' + dependency + '/data/'\n                + this._formService.getObject()['id']\n            );\n\n        this._postService.post(dependencyUrlProvider, null).then(\n            data => {\n                let providers = [\n                        {provide: 'DataService', useClass: DataService},\n                        ActionsService,\n                        {provide: 'DataServiceProvider', useValue: that._helperService.getDataServiceProvider(data)},\n                        {provide: 'ActionsServiceProvider', useValue: that._helperService.getActionsServiceProvider(data)},\n                        {provide: 'LegendProvider', useValue: that._helperService.getLegendProvider(data)},\n                        {provide: 'Provider', useValue: that._helperService.getDataBoxProvider(data)},\n                        {provide: 'ParentDataService', useValue: this._dataService}\n                    ],\n                    dependencyIndex = 0;\n\n                switch (dependency) {\n                    case 'settlement':\n                        dependencyIndex = 0;\n                        // Popups provider\n                        providers = providers.concat([\n                            {provide: 'Popups', useValue: {\n                                add: {\n                                    module: ClientDocumentSettlementAddFormPopupExtModule,\n                                    component: 'FormPopupComponent',\n                                    providers: [\n                                        FormService,\n                                        {provide: 'Provider', useValue: this._helperService.getFormProvider(data)},\n                                        {provide: 'ParentFormService', useValue: that._formService},\n                                        NavManagerService,\n                                        WizardManagerService\n                                    ]\n                                },\n                                edit: {\n                                    module: ClientDocumentSettlementEditFormPopupExtModule,\n                                    component: 'FormPopupComponent',\n                                    providers: [\n                                        FormService,\n                                        {provide: 'Provider', useValue: that._helperService.getFormProvider(data)}\n                                    ]\n                                }\n                            }}\n                        ]);\n                        break;\n                    default:\n                        dependencyIndex = 1;\n                        // Popups provider\n                        providers = providers.concat([{provide: 'Popups', useValue: that.getPaymentDependencyPopupsProvider(data)}]);\n                }\n\n                let injector = ReflectiveInjector.fromResolvedProviders(\n                    ReflectiveInjector.resolve(providers),\n                    that._injector\n                );\n\n                that._dependencyDataServiceArr[dependencyIndex] = injector.get('DataService');\n                that._onDependencyObjectsChangeSubscription[dependencyIndex]\n                    = that._dependencyDataServiceArr[dependencyIndex].getOnObjectsChangeEmitter()\n                        .subscribe(data => { that.refreshDiffControl() });\n\n                that._dynamicComponentLoaderService.load(\n                    module,\n                    'MainComponent',\n                    viewContainerRef,\n                    injector\n                ).then(\n                    componentRef => {\n                        that.refreshDiffControl();\n                        return true;\n                    },\n                    errors => { console.log(errors); return null; }\n                );\n            },\n            errors => { console.log(errors); return false; }\n        );\n\n        return this;\n    }\n\n    /**\n     * Get payment dependency popups provider\n     * Using this method, each child component can redefine the payment popups\n     * @param data\n     * @returns {Popups}\n     */\n    protected getPaymentDependencyPopupsProvider(data): Popups | Popup\n    {\n        // Not returned directly to avoid the IDE error (method override error)\n        let popup: Popup = {\n            module: ClientDocumentPaymentEditFormPopupExtModule,\n            component: 'FormPopupComponent',\n            providers: [\n                FormService,\n                {provide: 'Provider', useValue: this._helperService.getFormProvider(data)}\n            ]\n        };\n\n        return popup;\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngAfterViewInit()\n    {\n        super.ngAfterViewInit();\n\n        // Get array of ViewContainerRef\n        this._llViewContainerRefArr = this.lazyLoadViewContainerRefQL.toArray();\n        // Diff control\n        this._$diffControl = $(this._elementRef.nativeElement).find('.js_diffControl');\n\n        this.loadDependency('settlement',\n            ClientDocumentSettlementIndexMainExtModule,\n            this._llViewContainerRefArr[0]\n        );\n\n        this.loadDependency('payment',\n            ClientDocumentPaymentIndexExtModule,\n            this._llViewContainerRefArr[1]\n        );\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnDestroy()\n    {\n        // Check subscription (if component load fail, subscription may not exist)\n        if (this._onDependencyObjectsChangeSubscription[0]) {\n            this._onDependencyObjectsChangeSubscription[0].unsubscribe();\n        }\n        // Check subscription (if component load fail, subscription may not exist)\n        if (this._onDependencyObjectsChangeSubscription[1]) {\n            this._onDependencyObjectsChangeSubscription[1].unsubscribe();\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/ts/base-receipt-document-form-popup.ext-component.ts","import {Component, ElementRef, Inject, Optional, Injector, ReflectiveInjector, Renderer, ViewChild, ViewContainerRef} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {BaseFormPopupExtComponent, FormProvider} from '../../base-document/ts/base-form-popup.ext-component';\nimport {DataService} from '../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {ActionsService} from '../../../../../../AppBundle/Resources/public/ts/actions/actions.service';\nimport {FormService} from '../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {DynamicComponentLoaderService} from '../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\nimport {PostService} from '../../../../../../AppBundle/Resources/public/ts/post.service';\nimport {NavManagerService} from '../../../../../../AppBundle/Resources/public/ts/nav-manager/nav-manager.service';\nimport {WizardManagerService} from '../../../../../../AppBundle/Resources/public/wizard/ts/src/wizard-manager.service';\n\n\n/* Import dependencies */\nimport {MainExtModule as ClientDocumentPaymentIndexMainExtModule} from '../../client-document-payment/index/ts/src/main.ext-module';\nimport {FormPopupExtModule as ClientDocumentPaymentEditFormPopupExtModule} from \"../../client-document-payment/edit/ts/src/form-popup.ext-module\";\nimport {FormPopupExtModule as ClientDocumentPaymentAddFormPopupExtModule} from \"../../client-document-payment/add/ts/src/form-popup.ext-module\";\n/* /Import dependencies */\n\n\n@Component({\n    selector: '.js_formPopup',\n    template: ''\n})\nexport class BaseReceiptPaymentDocumentFormPopupExtComponent extends BaseFormPopupExtComponent\n{\n    // To load document detail\n    @ViewChild('js_lazyLoadContainer', {read: ViewContainerRef}) lazyLoadViewContainerRef: ViewContainerRef;\n    // Data service of dependency to calc the \"diffControl\"\n    protected _dependencyDataService: any = null;\n    // To handle with dependency objects change to refresh the diffControl\n    protected _onDependencyObjectsChangeSubscription: any = null;\n\n    // Constructor vars\n    protected _parentDataService: any;\n    protected _helperService: any;\n    protected _dynamicComponentLoaderService: DynamicComponentLoaderService;\n    protected _postService: PostService;\n\n    // To check if object has changed to refresh parent\n    //protected _object: any;\n    protected _$diffControl: any;\n\n    constructor() { super(); }\n\n    public initBaseReceiptPaymentDocumentFormPopupExtComponent(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        provider: FormProvider,\n        formService: FormService,\n        dataService: any,\n        injector: Injector,\n        parentDataService: any,\n        helperService: any,\n        dynamicComponentLoaderService: DynamicComponentLoaderService,\n        postService: PostService\n    ) {\n        super.initBaseFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            injector\n        );\n\n        // Constructor vars\n        this._parentDataService = parentDataService;\n        this._helperService = helperService;\n        this._dynamicComponentLoaderService = dynamicComponentLoaderService;\n        this._postService = postService;\n\n        // Save initial object to detect changes\n        //this._object = this._dataService.getObject(); // DISABLED BECAUSE PARENT OBJECT IS NOT UPDATED, CHECK BELOW\n    }\n\n    /**\n     * Overrides the parent method\n     * @returns {Promise}\n     */\n    public save(): Promise<any>\n    {\n        let that = this,\n            route = this._dataService.getRoute('edit-payment');\n\n        return new Promise(function(resolve, reject) {\n            that._formService.save(route).then(\n                data => { return resolve(data); },\n                errors => { return reject(errors); }\n            );\n        });\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngAfterViewInit()\n    {\n        super.ngAfterViewInit();\n\n        let that = this,\n            dependencyUrlProvider = (\n                this._helperService.getAppVar('route')\n                + 'bck/accounting/client-document-receipt-payment/data/'\n                + this._formService.getObject()['id']\n            );\n\n        // Load dependency\n        this._postService.post(dependencyUrlProvider, null).then(\n            data => {\n                let providers = [\n                    {provide: 'DataService', useClass: DataService},\n                    ActionsService,\n                    {provide: 'DataServiceProvider', useValue: that._helperService.getDataServiceProvider(data)},\n                    {provide: 'ActionsServiceProvider', useValue: that._helperService.getActionsServiceProvider(data)},\n                    {provide: 'LegendProvider', useValue: that._helperService.getLegendProvider(data)},\n                    {provide: 'Provider', useValue: that._helperService.getDataBoxProvider(data)},\n                    {provide: 'Popups', useValue: {\n                        add: {\n                            module: ClientDocumentPaymentAddFormPopupExtModule,\n                            component: 'FormPopupComponent',\n                            providers: [\n                                FormService,\n                                {provide: 'FormServiceProvider', useValue: {}},\n                                {provide: 'Provider', useValue: this._helperService.getFormProvider(data)},\n                                {provide: 'ParentFormService', useValue: this._formService},\n                                NavManagerService,\n                                WizardManagerService,\n\n                            ]\n                        },\n                        edit: {\n                            module: ClientDocumentPaymentEditFormPopupExtModule,\n                            component: 'FormPopupComponent',\n                            providers: [\n                                FormService,\n                                {provide: 'FormServiceProvider', useValue: {}},\n                                {provide: 'Provider', useValue: this._helperService.getFormProvider(data)}\n                            ]\n                        }\n                    }},\n                    {provide: 'ParentDataService', useValue: that._dataService}\n                ];\n\n                let injector = ReflectiveInjector.fromResolvedProviders(\n                    ReflectiveInjector.resolve(providers),\n                    that._injector\n                );\n\n                that._dependencyDataService = injector.get('DataService');\n                that._onDependencyObjectsChangeSubscription\n                    = that._dependencyDataService.getOnObjectsChangeEmitter()\n                    .subscribe(data => {\n                        // Update local object\n                        that._dataService.refreshObject();\n                    });\n\n                that._dynamicComponentLoaderService.load(\n                    ClientDocumentPaymentIndexMainExtModule,\n                    'MainComponent',\n                    that.lazyLoadViewContainerRef,\n                    injector\n                ).then(\n                    componentRef => { return true; },\n                    errors => { console.log(errors); return null; }\n                );\n            },\n            errors => { console.log(errors); return false; }\n        );\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnDestroy()\n    {\n        // Check subscription (if component load fail, subscription may not exist)\n        if (this._onDependencyObjectsChangeSubscription) {\n            this._onDependencyObjectsChangeSubscription.unsubscribe();\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/ts/base-receipt-payment-document-form-popup.ext-component.ts","import {Component, ElementRef, Inject, Optional, Injector, ReflectiveInjector, Renderer, ViewChild, ViewContainerRef} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {BaseFormPopupExtComponent, FormProvider} from '../../base-document/ts/base-form-popup.ext-component';\nimport {DataService} from '../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {ActionsService} from '../../../../../../AppBundle/Resources/public/ts/actions/actions.service';\nimport {FormService} from '../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {NavManagerService} from '../../../../../../AppBundle/Resources/public/ts/nav-manager/nav-manager.service';\nimport {WizardManagerService} from '../../../../../../AppBundle/Resources/public/wizard/ts/src/wizard-manager.service';\nimport {DynamicComponentLoaderService} from '../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\nimport {PostService} from '../../../../../../AppBundle/Resources/public/ts/post.service';\n\n\n/* Import dependencies */\nimport {MainExtModule as ClientDocumentSettlementIndexMainExtModule} from '../../client-document-settlement/index/ts/src/main.ext-module';\nimport {FormPopupExtModule as ClientDocumentSettlementEditFormPopupExtModule} from \"../../client-document-settlement/edit/ts/src/form-popup.ext-module\";\nimport {FormPopupExtModule as ClientDocumentSettlementAddFormPopupExtModule} from \"../../client-document-settlement/add/ts/src/form-popup.ext-module\";\n/* /Import dependencies */\n\n\n@Component({\n    selector: '.js_baseClientDocumentFormPopup',\n    template: ''\n})\nexport class BaseReceiptSettlementDocumentFormPopupExtComponent extends BaseFormPopupExtComponent\n{\n    // To load document detail\n    @ViewChild('js_lazyLoadContainer', {read: ViewContainerRef}) lazyLoadViewContainerRef: ViewContainerRef;\n    // Data service of dependency to calc the \"diffControl\"\n    protected _dependencyDataService: any = null;\n    // To handle with dependency objects change to refresh the diffControl\n    protected _onDependencyObjectsChangeSubscription: any = null;\n\n    // Constructor vars\n    protected _parentDataService: any;\n    protected _helperService: any;\n    protected _dynamicComponentLoaderService: DynamicComponentLoaderService;\n    protected _postService: PostService;\n\n    // To check if object has changed to refresh parent\n    //protected _object: any;\n    protected _$diffControl: any;\n\n    constructor() { super(); }\n\n    public initBaseReceiptSettlementDocumentFormPopupExtComponent(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        provider: FormProvider,\n        formService: FormService,\n        dataService: any,\n        injector: Injector,\n        parentDataService: any,\n        helperService: any,\n        dynamicComponentLoaderService: DynamicComponentLoaderService,\n        postService: PostService\n    ) {\n        super.initBaseFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            injector\n        );\n\n        // Constructor vars\n        this._parentDataService = parentDataService;\n        this._helperService = helperService;\n        this._dynamicComponentLoaderService = dynamicComponentLoaderService;\n        this._postService = postService;\n\n        // Save initial object to detect changes\n        //this._object = this._dataService.getObject(); // DISABLED BECAUSE PARENT OBJECT IS NOT UPDATED, CHECK BELOW\n    }\n\n    /**\n     * Refresh diff control\n     * @returns {BaseReceiptSettlementDocumentFormPopupExtComponent}\n     */\n    protected refreshDiffControl()\n    {\n        if (!this._dependencyDataService) {\n            // Dependencies has not been loaded yet\n            return this;\n        }\n\n        // [DEBIT, CREDIT]\n        let totals = {'DEBIT': 0, 'CREDIT': 0};\n\n        let objects = this._dependencyDataService.getProviderAttr('objects');\n        for (let object of objects) {\n            totals[object['documentType_operation']] += parseFloat(object['value'] || '0');\n        }\n\n        this._$diffControl.val((Math.round((totals.DEBIT - totals.CREDIT) * 100) / 100).toFixed(2));\n\n        return this;\n    }\n\n    /**\n     * Overrides the parent method\n     * @returns {Promise}\n     */\n    public save(): Promise<any>\n    {\n        let that = this,\n            route = this._dataService.getRoute('edit-receipt');\n\n        return new Promise(function(resolve, reject) {\n            that._formService.save(route).then(\n                data => { return resolve(data); },\n                errors => { return reject(errors); }\n            );\n        });\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngAfterViewInit()\n    {\n        super.ngAfterViewInit();\n\n        let that = this,\n            dependencyUrlProvider = (\n                this._helperService.getAppVar('route')\n                + 'bck/accounting/client-document-receipt-settlement/data/'\n                + this._formService.getObject()['id']\n            );\n\n        // Diff control\n        this._$diffControl = $(this._elementRef.nativeElement).find('.js_diffControl');\n\n        // Load dependency\n        this._postService.post(dependencyUrlProvider, null).then(\n            data => {\n                let providers = [\n                        {provide: 'DataService', useClass: DataService},\n                        ActionsService,\n                        {provide: 'DataServiceProvider', useValue: that._helperService.getDataServiceProvider(data)},\n                        {provide: 'ActionsServiceProvider', useValue: that._helperService.getActionsServiceProvider(data)},\n                        {provide: 'LegendProvider', useValue: that._helperService.getLegendProvider(data)},\n                        {provide: 'Provider', useValue: that._helperService.getDataBoxProvider(data)},\n                        {provide: 'Popups', useValue: {\n                            add: {\n                                module: ClientDocumentSettlementAddFormPopupExtModule,\n                                component: 'FormPopupComponent',\n                                providers: [\n                                    FormService,\n                                    {provide: 'Provider', useValue: this._helperService.getFormProvider(data)},\n                                    {provide: 'ParentFormService', useValue: that._formService},\n                                    {provide: 'ParentDataService', useValue: null}, // It's not needed in this context\n                                    NavManagerService,\n                                    WizardManagerService\n                                ]\n                            },\n                            edit: {\n                                module: ClientDocumentSettlementEditFormPopupExtModule,\n                                component: 'FormPopupComponent',\n                                providers: [\n                                    FormService,\n                                    {provide: 'Provider', useValue: that._helperService.getFormProvider(data)}\n                                ]\n                            }\n                        }},\n                        {provide: 'ParentDataService', useValue: that._dataService}\n                    ],\n                    injector = ReflectiveInjector.fromResolvedProviders(\n                        ReflectiveInjector.resolve(providers),\n                        that._injector\n                    );\n\n                that._dependencyDataService = injector.get('DataService');\n                that._onDependencyObjectsChangeSubscription\n                    = that._dependencyDataService.getOnObjectsChangeEmitter()\n                    .subscribe(data => {that.refreshDiffControl()});\n\n                that._dynamicComponentLoaderService.load(\n                    ClientDocumentSettlementIndexMainExtModule,\n                    'MainComponent',\n                    that.lazyLoadViewContainerRef,\n                    injector\n                ).then(\n                    componentRef => {\n                        that.refreshDiffControl();\n                        return true;\n                    },\n                    errors => { console.log(errors); return null; }\n                );\n            },\n            errors => { console.log(errors); return false; }\n        );\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnDestroy()\n    {\n        // Check subscription (if component load fail, subscription may not exist)\n        if (this._onDependencyObjectsChangeSubscription) {\n            this._onDependencyObjectsChangeSubscription.unsubscribe();\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/client-document/ts/base-receipt-settlement-document-form-popup.ext-component.ts","import {Component, ElementRef, Inject, Injector, Renderer, QueryList, Optional, ViewChildren, ViewContainerRef, ViewChild} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {Helper} from '../../../../../../../../AppBundle/Resources/public/ts/helper';\nimport {DataService} from \"../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service\";\nimport {WizardPopupProvider, LazyLoadData} from '../../../../../../../../AppBundle/Resources/public/wizard/ts/src/wizard-form-popup.ext-component';\nimport {WizardManagerService} from '../../../../../../../../AppBundle/Resources/public/wizard/ts/src/wizard-manager.service';\nimport {FormPopupExtComponent} from '../../../../base-document-invoice/add/ts/form-popup.ext-component';\n\n\n/* Import dependencies */\n\n// Booking Parent, used when the document is aggregated to one booking\n// (this code is putted here to avoid to repeat this module in the booking bundle, so we can reuse the same modules)\nvar bookingContext = ((Helper.getAppVar('conf')['localData']['data']['bookingContext'])\n            ? Helper.getAppVar('conf')['localData']['data']['bookingContext'] :\n            null\n    ),\n    bookingId = (bookingContext ? Helper.getAppVar('conf')['object']['id'] : null);\n\n// BOOKING SERVICE PRICE CHOICES\nimport {TreeViewExtModule} from '../../../../../../../../AppBundle/Resources/public/tree-view/default/ts/src/tree-view.ext-module';\n// Form edit\nimport {Step2ExtModule as SupplierDocumentInvoiceDetailAddStep2ExtModule} from './step2.ext-module';\n\n/* /Import dependencies */\n\n\n@Component({\n    selector: '.js_addFormPopup',\n    templateUrl: '../templates/form-popup.component.html'\n})\nexport class FormPopupComponent extends FormPopupExtComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: WizardPopupProvider,\n        wizardManagerService: WizardManagerService,\n        formService: FormService,\n        @Inject('HelperService') helperService: any,\n        @Inject('DataService') dataService: any,\n        @Inject('ParentFormService') parentFormService: any, // To get parent object\n        injector: Injector\n    ) {\n        // Call parent\n        super();\n        super.initBaseDocumentInvoiceAddFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            wizardManagerService,\n            formService,\n            helperService,\n            dataService,\n            parentFormService,\n            injector\n        );\n    }\n\n    /**\n     * Get navigation data (needed data to lazy load container)\n     * @param index (index to load)\n     * @returns NavData\n     */\n    public getNavData(index: number): LazyLoadData\n    {\n        switch (index) {\n            case 0:\n                return {\n                    module: TreeViewExtModule,\n                    component: 'TreeViewComponent',\n                    urlProvider: (this._helperService.getAppVar('route') + 'bck/booking/booking-service-price/data-for-invoice-supplier/' + this._parentFormService.getObject()['supplierObj'] + (bookingContext ? ('/' + bookingId) : ''))\n                };\n            case 1:\n                return {\n                    module: SupplierDocumentInvoiceDetailAddStep2ExtModule,\n                    component: 'Step2Component'\n                };\n        }\n\n        return null;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-invoice/add/ts/src/form-popup.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {FormPopupComponent} from './form-popup.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        FormPopupComponent\n    ],\n    exports: [FormPopupComponent]\n})\nexport class FormPopupExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-invoice/add/ts/src/form-popup.ext-module.ts","import {Component, ElementRef, Inject, Optional, Injector, Renderer} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {FormPopupComponent as SupplierDocumentInvoiceEditFormPopupComponent} from '../../../edit/ts/src/form-popup.component';\n\n\n@Component({\n    selector: '#js_addStep2',\n    templateUrl: '../templates/step2.component.html'\n})\nexport class Step2Component extends SupplierDocumentInvoiceEditFormPopupComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any,\n        @Inject('HelperService') helperService: any\n    ) {\n        super(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            helperService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-invoice/add/ts/src/step2.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {Step2Component} from './step2.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        Step2Component\n    ],\n    exports: [Step2Component]\n})\nexport class Step2ExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-invoice/add/ts/src/step2.ext-module.ts","module.exports = \"<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">    \\n                        <ul class=\\\"row mb-3 no-gutters wizard-nav\\\">\\n                                    <li class=\\\"col-auto wizard-step\\\"\\n                        [class.step-active]=\\\"0 == _wizardManagerService.getIndex()\\\">\\n                        <span class=\\\"step-number\\\">1</span>\\n                        <span class=\\\"step-text\\\">Booking Service</span>\\n                    </li>\\n                                    <li class=\\\"col-auto wizard-step\\\"\\n                        [class.step-active]=\\\"1 == _wizardManagerService.getIndex()\\\">\\n                        <span class=\\\"step-number\\\">2</span>\\n                        <span class=\\\"step-text\\\">Preview</span>\\n                    </li>\\n                            </ul>\\n\\n            \\n                <section [hidden]=\\\"_wizardManagerService.getIndex() != 0\\\"\\n         class=\\\"js_lazyLoadContainer_0\\\">\\n    <ng-template #js_lazyLoadContainer></ng-template>\\n</section>\\n    <section [hidden]=\\\"_wizardManagerService.getIndex() != 1\\\"\\n         class=\\\"js_lazyLoadContainer_1\\\">\\n    <ng-template #js_lazyLoadContainer></ng-template>\\n</section>\\n            \\n            \\n    </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-auto\\\">\\n            <button type=\\\"button\\\" class=\\\"btn-light btn\\\" (click)=\\\"_wizardManagerService.cancelAction($event)\\\">Cancel</button>\\n                <button type=\\\"button\\\" class=\\\"btn-primary btn\\\" (click)=\\\"_wizardManagerService.prevAction($event)\\\"\\n                    *ngIf=\\\"0 < _wizardManagerService.getIndex()\\\">Prev</button>\\n            <button type=\\\"button\\\" class=\\\"btn-primary btn\\\" (click)=\\\"_wizardManagerService.nextAction($event)\\\"\\n                    *ngIf=\\\"1 > _wizardManagerService.getIndex()\\\">Next</button>\\n            <button type=\\\"button\\\" class=\\\"btn-primary btn\\\" (click)=\\\"_wizardManagerService.finishAction($event)\\\"\\n                    *ngIf=\\\"1 == _wizardManagerService.getIndex()\\\">Finish</button>\\n        \\n    </div>\\n</div></div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-invoice/add/ts/templates/form-popup.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/supplier-document-invoice/add/ts/templates/form-popup.component.html\n// module chunks = main","module.exports = \"\\n\\n\\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n\\n    \\n\\n                        \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().document_code\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_document_code\\\">Doc. Code</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_document_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().document_code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().document_code\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().booking_code\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_booking_code\\\">Booking</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_booking_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().booking_code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().booking_code\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_serviceObj\\\">Service</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                                                        <div class=\\\"html-select\\\"\\n         [htmlSelect]=\\\"'serviceObj'\\\"\\n                      (onChange)=\\\"onServiceChange($event)\\\"         >\\n        <div class=\\\"input-group-control\\\"\\n             [class.error]=\\\"_formService.getErrors()['serviceObj'] && (_formService.getErrors()['serviceObj'].length > 0)\\\">\\n            <span class=\\\"js_label form-control\\\"></span>\\n            <a class=\\\"pull-right\\\"><i class=\\\"fa fa-angle-down\\\"></i></a>\\n        </div>\\n        <div class=\\\"choices js_choices\\\">\\n            <ul class=\\\"form-control-box\\\">        <ng-template ngFor let-choice [ngForOf]=\\\"_dataService.getFieldChoices('serviceObj')\\\">\\n            <li [attr.data-value]=\\\"choice['id']\\\" [innerHtml]=\\\"choice['label']\\\"></li>\\n        </ng-template>\\n    </ul>\\n        </div>\\n    </div>\\n    <input [(ngModel)]=\\\"_formService.getObject().serviceObj\\\"\\n           formControlName = serviceObj\\n           name=\\\"form[serviceObj]\\\"\\n           required=\\\"required\\\"           type=\\\"hidden\\\">\\n                                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().serviceObj\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_description\\\">Description</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_description\\\" name=\\\"form[description]\\\" required=\\\"required\\\" maxlength=\\\"256\\\" [(ngModel)]=\\\"_formService.getObject().description\\\" formControlName=\\\"description\\\" [class.error]=\\\"_formService.getErrors().description &amp;&amp; _formService.getErrors().description.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().description\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_quantity\\\">Quantity</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"number\\\" id=\\\"form_quantity\\\" name=\\\"form[quantity]\\\" required=\\\"required\\\" (input)=\\\"onQuantityEnterKey($event.target.value)\\\" (focusout)=\\\"onQuantityEnterKey($event.target.value)\\\" [(ngModel)]=\\\"_formService.getObject().quantity\\\" formControlName=\\\"quantity\\\" [class.error]=\\\"_formService.getErrors().quantity &amp;&amp; _formService.getErrors().quantity.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().quantity\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                                \\n\\n                                            <input type=\\\"hidden\\\" id=\\\"form_value\\\" name=\\\"form[value]\\\" [(ngModel)]=\\\"_formService.getObject().value\\\" formControlName=\\\"value\\\" [class.error]=\\\"_formService.getErrors().value &amp;&amp; _formService.getErrors().value.length &gt; 0\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().value\\\">{{error}}</label>\\n                                    <div class=\\\"row form-group\\\">\\n                            <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_user_value\\\">Value</label>\\n                    <div class=\\\"col-sm-10\\\"><div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-8\\\">\\n                                                    <input type=\\\"text\\\" id=\\\"form_user_value\\\" name=\\\"form[user_value]\\\" (input)=\\\"onValueEnterKey($event.target.value)\\\" (focusout)=\\\"onValueEnterKey($event.target.value)\\\" [(ngModel)]=\\\"_formService.getObject().user_value\\\" formControlName=\\\"user_value\\\" [class.error]=\\\"_formService.getErrors().user_value &amp;&amp; _formService.getErrors().user_value.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().user_value\\\">{{error}}</label>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                                                    <div class=\\\"checkbox\\\">                                        <label for=\\\"form_isVatIncluded\\\"><input type=\\\"checkbox\\\" id=\\\"form_isVatIncluded\\\" name=\\\"form[isVatIncluded]\\\" (change)=\\\"onIsVatIncludedChange($event.target.checked)\\\" [(ngModel)]=\\\"_formService.getObject().isVatIncluded\\\" formControlName=\\\"isVatIncluded\\\" [class.error]=\\\"_formService.getErrors().isVatIncluded &amp;&amp; _formService.getErrors().isVatIncluded.length &gt; 0\\\" value=\\\"1\\\" /> Is vat included</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isVatIncluded\\\">{{error}}</label>\\n                    </div>\\n                </div></div>\\n            </div>\\n                                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_subTotal\\\">Sub Total</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_subTotal\\\" name=\\\"form[subTotal]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().subTotal\\\" formControlName=\\\"subTotal\\\" [class.error]=\\\"_formService.getErrors().subTotal &amp;&amp; _formService.getErrors().subTotal.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().subTotal\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_totalVat\\\">TAX</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_totalVat\\\" name=\\\"form[totalVat]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().totalVat\\\" formControlName=\\\"totalVat\\\" [class.error]=\\\"_formService.getErrors().totalVat &amp;&amp; _formService.getErrors().totalVat.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().totalVat\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_total\\\">Total</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_total\\\" name=\\\"form[total]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().total\\\" formControlName=\\\"total\\\" [class.error]=\\\"_formService.getErrors().total &amp;&amp; _formService.getErrors().total.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().total\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" [innerHTML]=\\\"getLang('Enabled')\\\"></label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <div class=\\\"checkbox\\\">                                        <label for=\\\"form_isEnabled\\\"><input type=\\\"checkbox\\\" id=\\\"form_isEnabled\\\" name=\\\"form[isEnabled]\\\" [(ngModel)]=\\\"_formService.getObject().isEnabled\\\" formControlName=\\\"isEnabled\\\" [class.error]=\\\"_formService.getErrors().isEnabled &amp;&amp; _formService.getErrors().isEnabled.length &gt; 0\\\" value=\\\"1\\\" checked=\\\"checked\\\" /> Is enabled</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isEnabled\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n    \\n\\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-invoice/add/ts/templates/step2.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/supplier-document-invoice/add/ts/templates/step2.component.html\n// module chunks = main","import {Component, ElementRef, Inject, Optional, Injector, Renderer} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {FormPopupExtComponent as BaseDocumentInvoiceEditFormPopupExtComponent} from '../../../../base-document-invoice/edit/ts/form-popup.ext-component';\n\n\n@Component({\n    selector: '#js_supplierDocumentInvoiceDetailFormPopup',\n    templateUrl: '../templates/form-popup.component.html'\n})\nexport class FormPopupComponent extends BaseDocumentInvoiceEditFormPopupExtComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any,\n        @Inject('HelperService') helperService: any\n    ) {\n        super();\n        super.initBaseDocumentInvoiceEditFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            helperService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-invoice/edit/ts/src/form-popup.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {FormPopupComponent} from './form-popup.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        FormPopupComponent\n    ],\n    exports: [FormPopupComponent]\n})\nexport class FormPopupExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-invoice/edit/ts/src/form-popup.ext-module.ts","module.exports = \"    \\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">    \\n\\n                        \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().document_code\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_document_code\\\">Doc. Code</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_document_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().document_code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().document_code\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().booking_code\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_booking_code\\\">Booking</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_booking_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().booking_code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().booking_code\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_serviceObj\\\">Service</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                                                        <div class=\\\"html-select\\\"\\n         [htmlSelect]=\\\"'serviceObj'\\\"\\n                      (onChange)=\\\"onServiceChange($event)\\\"         >\\n        <div class=\\\"input-group-control\\\"\\n             [class.error]=\\\"_formService.getErrors()['serviceObj'] && (_formService.getErrors()['serviceObj'].length > 0)\\\">\\n            <span class=\\\"js_label form-control\\\"></span>\\n            <a class=\\\"pull-right\\\"><i class=\\\"fa fa-angle-down\\\"></i></a>\\n        </div>\\n        <div class=\\\"choices js_choices\\\">\\n            <ul class=\\\"form-control-box\\\">        <ng-template ngFor let-choice [ngForOf]=\\\"_dataService.getFieldChoices('serviceObj')\\\">\\n            <li [attr.data-value]=\\\"choice['id']\\\" [innerHtml]=\\\"choice['label']\\\"></li>\\n        </ng-template>\\n    </ul>\\n        </div>\\n    </div>\\n    <input [(ngModel)]=\\\"_formService.getObject().serviceObj\\\"\\n           formControlName = serviceObj\\n           name=\\\"form[serviceObj]\\\"\\n           required=\\\"required\\\"           type=\\\"hidden\\\">\\n                                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().serviceObj\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_description\\\">Description</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_description\\\" name=\\\"form[description]\\\" required=\\\"required\\\" maxlength=\\\"256\\\" [(ngModel)]=\\\"_formService.getObject().description\\\" formControlName=\\\"description\\\" [class.error]=\\\"_formService.getErrors().description &amp;&amp; _formService.getErrors().description.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().description\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_quantity\\\">Quantity</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"number\\\" id=\\\"form_quantity\\\" name=\\\"form[quantity]\\\" required=\\\"required\\\" (input)=\\\"onQuantityEnterKey($event.target.value)\\\" (focusout)=\\\"onQuantityEnterKey($event.target.value)\\\" [(ngModel)]=\\\"_formService.getObject().quantity\\\" formControlName=\\\"quantity\\\" [class.error]=\\\"_formService.getErrors().quantity &amp;&amp; _formService.getErrors().quantity.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().quantity\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                                \\n\\n                                            <input type=\\\"hidden\\\" id=\\\"form_value\\\" name=\\\"form[value]\\\" [(ngModel)]=\\\"_formService.getObject().value\\\" formControlName=\\\"value\\\" [class.error]=\\\"_formService.getErrors().value &amp;&amp; _formService.getErrors().value.length &gt; 0\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().value\\\">{{error}}</label>\\n                                    <div class=\\\"row form-group\\\">\\n                            <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_user_value\\\">Value</label>\\n                    <div class=\\\"col-sm-10\\\"><div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-8\\\">\\n                                                    <input type=\\\"text\\\" id=\\\"form_user_value\\\" name=\\\"form[user_value]\\\" (input)=\\\"onValueEnterKey($event.target.value)\\\" (focusout)=\\\"onValueEnterKey($event.target.value)\\\" [(ngModel)]=\\\"_formService.getObject().user_value\\\" formControlName=\\\"user_value\\\" [class.error]=\\\"_formService.getErrors().user_value &amp;&amp; _formService.getErrors().user_value.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().user_value\\\">{{error}}</label>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                                                    <div class=\\\"checkbox\\\">                                        <label for=\\\"form_isVatIncluded\\\"><input type=\\\"checkbox\\\" id=\\\"form_isVatIncluded\\\" name=\\\"form[isVatIncluded]\\\" (change)=\\\"onIsVatIncludedChange($event.target.checked)\\\" [(ngModel)]=\\\"_formService.getObject().isVatIncluded\\\" formControlName=\\\"isVatIncluded\\\" [class.error]=\\\"_formService.getErrors().isVatIncluded &amp;&amp; _formService.getErrors().isVatIncluded.length &gt; 0\\\" value=\\\"1\\\" /> Is vat included</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isVatIncluded\\\">{{error}}</label>\\n                    </div>\\n                </div></div>\\n            </div>\\n                                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_subTotal\\\">Sub Total</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_subTotal\\\" name=\\\"form[subTotal]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().subTotal\\\" formControlName=\\\"subTotal\\\" [class.error]=\\\"_formService.getErrors().subTotal &amp;&amp; _formService.getErrors().subTotal.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().subTotal\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_totalVat\\\">TAX</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_totalVat\\\" name=\\\"form[totalVat]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().totalVat\\\" formControlName=\\\"totalVat\\\" [class.error]=\\\"_formService.getErrors().totalVat &amp;&amp; _formService.getErrors().totalVat.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().totalVat\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_total\\\">Total</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_total\\\" name=\\\"form[total]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().total\\\" formControlName=\\\"total\\\" [class.error]=\\\"_formService.getErrors().total &amp;&amp; _formService.getErrors().total.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().total\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" [innerHTML]=\\\"getLang('Enabled')\\\"></label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <div class=\\\"checkbox\\\">                                        <label for=\\\"form_isEnabled\\\"><input type=\\\"checkbox\\\" id=\\\"form_isEnabled\\\" name=\\\"form[isEnabled]\\\" [(ngModel)]=\\\"_formService.getObject().isEnabled\\\" formControlName=\\\"isEnabled\\\" [class.error]=\\\"_formService.getErrors().isEnabled &amp;&amp; _formService.getErrors().isEnabled.length &gt; 0\\\" value=\\\"1\\\" checked=\\\"checked\\\" /> Is enabled</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isEnabled\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n        \\n                    <div class=\\\"row\\\">\\n            <div class=\\\"col-auto ml-auto\\\">\\n                                            <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"cancelAction($event)\\\"\\n                                        id=\\\"form_cancel\\\"\\n            name=\\\"form[cancel]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Cancel</button>\\n                                                <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"resetAction($event)\\\"\\n                                        id=\\\"form_reset\\\"\\n            name=\\\"form[reset]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-ban\\\"></i>&nbsp;Reset</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAction($event)\\\"\\n                                        id=\\\"form_save\\\"\\n            name=\\\"form[save]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-check\\\"></i>&nbsp;Save</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAndCloseAction($event)\\\"\\n                                        id=\\\"form_saveAndClose\\\"\\n            name=\\\"form[saveAndClose]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Save and Close</button>\\n                                </div>\\n        </div>\\n    </div>    \\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-invoice/edit/ts/templates/form-popup.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/supplier-document-invoice/edit/ts/templates/form-popup.component.html\n// module chunks = main","import {Component, Inject, Injector, ViewContainerRef, Renderer} from '@angular/core';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {ActionsService} from '../../../../../../../../AppBundle/Resources/public/ts/actions/actions.service';\nimport {DataBoxExtensionComponent, DataBoxProvider, Popups, Popup} from '../../../../../../../../AppBundle/Resources/public/data-box/ts/src/data-box.extension-component';\nimport {ModalService} from '../../../../../../../../AppBundle/Resources/public/modal/ts/modal.service';\nimport {TasksLoaderManagerService} from '../../../../../../../../AppBundle/Resources/public/tasks-loader-manager/ts/tasks-loader-manager.service';\n\n\n// Component\n@Component({\n    selector: '.js_supplierDocumentInvoiceDetail',\n    templateUrl: '../templates/main.component.html'\n})\nexport class MainComponent extends DataBoxExtensionComponent\n{\n    constructor(\n        viewContainerRef: ViewContainerRef,\n        renderer: Renderer,\n        @Inject('Provider') dataBoxProvider: DataBoxProvider,\n        @Inject('DataService') dataService: any,\n        tasksLoaderManagerService: TasksLoaderManagerService,\n        @Inject('HelperService') helperService: any,\n        actionsService: ActionsService,\n        modalService: ModalService,\n        @Inject('Popups') popups: Popups | Popup,\n        injector: Injector,\n        @Inject('ParentDataService') protected _parentDataService: any // Used in view\n    ) {\n        // Call parent\n        super();\n        super.initDataBoxExtensionComponent(\n            viewContainerRef,\n            renderer,\n            dataBoxProvider,\n            dataService,\n            tasksLoaderManagerService,\n            helperService,\n            actionsService,\n            modalService,\n            popups,\n            injector\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-invoice/index/ts/src/main.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n// This module doesn't use \"ReactiveFormsModule\", but it needs to import this class\n// to provide \"formBuilder\" when inject dependencies in child modules (like form)\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {SearchModule} from '../../../../../../../../AppBundle/Resources/public/ts/search/search.module';\nimport {ExpanderModule} from '../../../../../../../../AppBundle/Resources/public/ts/expander/expander.module';\nimport {SearchPaginationModule} from '../../../../../../../../AppBundle/Resources/public/ts/search/search-pagination.module';\nimport {LegendExtModule} from \"../../../../../../../../AppBundle/Resources/public/legend/ts/src/legend.ext-module\";\nimport {MainComponent} from './main.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        SearchModule,\n        SearchPaginationModule,\n        ExpanderModule,\n        LegendExtModule\n    ],\n    declarations: [\n        MainComponent\n    ],\n    exports: [MainComponent]\n})\nexport class MainExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-invoice/index/ts/src/main.ext-module.ts","module.exports = \"\\n\\n<div class=\\\"ibox\\\" >\\n                        <div class=\\\"ibox-title\\\" *ngIf=\\\"!getProviderExtraDataAttr('hasMergeHeader')\\\">\\n                <h5>\\n                    <ng-template [ngIf]=\\\"getProviderAttr('controls')['expander']['isEnabled']\\\"><js_expander\\n                        [isExpanded]=\\\"_isExpanded || null\\\"\\n                        [label]=\\\"getLang(getProviderAttr('label'))\\\"\\n                        [labelCount]=\\\"getProviderAttr('labelCount')\\\"\\n                        [labelIcon]=\\\"getProviderAttr('labelIcon')\\\"\\n                        (onChange)=\\\"expanderAction($event)\\\"></js_expander></ng-template>\\n                    <ng-template [ngIf]=\\\"!getProviderAttr('controls')['expander']['isEnabled']\\\">\\n                        <span [innerHTML]=\\\"getProviderAttr('label')\\\"></span>\\n                    </ng-template>\\n                </h5>\\n                <div *ngIf=\\\"_isExpanded\\\"\\n                     class=\\\"txt-align-r hide-on-empty\\\">    <div class=\\\"row align-items-center\\\">\\n        <div class=\\\"col ml-auto text-right actions no-user-select\\\">\\n            <ng-template [ngIf]=\\\"_actionsService.getActionAttr('search', 'isEnabled')\\\"><js_search class=\\\"search\\\"></js_search></ng-template>\\n            <div (click)=\\\"triggerAction($event)\\\">\\n                <ng-template ngFor let-action [ngForOf]=\\\"_actionsService.getHeadActions()\\\">\\n                    <a *ngIf=\\\"_actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                       [ngClass]=\\\"[_actionsService.getActionAttr(action, 'icon')]\\\"\\n                       class=\\\"-round fa\\\"\\n                       [attr.data-action]=\\\"action\\\"></a>\\n                </ng-template>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n            </div>\\n            \\n    <div [hidden]=\\\"!(_isExpanded)\\\" class=\\\"ibox-content hide-on-empty\\\">    <ng-template [ngIf]=\\\"(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">\\n            <div class=\\\"table-responsive m-t\\\">\\n        <form>\\n            <table class=\\\"table table-bordered\\\">\\n                <thead>\\n                <tr>\\n                    <th *ngFor=\\\"let field of ['description', 'quantity', 'totalUnit', 'vatCode_name', 'total']\\\">{{ _dataService.getFields('metadata')[field].label }}</th>\\n                    <th>&nbsp;</th>\\n                </tr>\\n                </thead>\\n                <tbody>\\n                <ng-template ngFor let-obj [ngForOf]=\\\"_dataService.getProviderAttr('objects')\\\" let-objIndex=\\\"index\\\"><tr\\n                          (dblclick)=\\\"editAction($event, objIndex)\\\">\\n                        <td class=\\\"txt-align-l\\\"><div><strong><span\\n                            [innerHTML]=\\\"obj['service_icon']\\\" class=\\\"mr-1\\\"></span><span class=\\\"mr-1\\\"\\n                            [innerHTML]=\\\"obj['service_name']\\\"></span><span *ngIf=\\\"obj['booking_code']\\\">(<span\\n                            [innerHTML]=\\\"obj['booking_code']\\\"></span>)</span></strong></div><small><span\\n                            [innerHTML]=\\\"obj['description']\\\"></span></small></td>\\n                        <td *ngFor=\\\"let field of ['quantity', 'totalUnit', 'vatCode_name', 'total']\\\"\\n                            [ngClass]=\\\"getColAlign(field)\\\"\\n                            [innerHTML]=\\\"obj[field]\\\"></td>\\n                        <td>\\n                            <span *ngIf=\\\"obj['_isNew']\\\" class=\\\"badge badge-info\\\">New</span>\\n                            <span *ngIf=\\\"obj['_isEdited']\\\" class=\\\"badge badge-info\\\">Edited</span>\\n                            <input *ngIf=\\\"_actionsService.getActionAttr('radioChoice', 'isEnabled')\\\"\\n                                   class=\\\"pull-right action\\\"\\n                                   type=\\\"radio\\\"\\n                                   name=\\\"index[]\\\"\\n                                   value=\\\"{{objIndex}}\\\"/>\\n                            <input *ngIf=\\\"_actionsService.getActionAttr('checkAll', 'isEnabled')\\\"\\n                                   class=\\\"pull-right action js_checkAll\\\"\\n                                   type=\\\"checkbox\\\"\\n                                   name=\\\"index[]\\\"\\n                                   value=\\\"{{objIndex}}\\\"\\n                                   [ngModel]=\\\"checkAll\\\"/>\\n                            <div class=\\\"pull-right actions no-user-select\\\" (click)=\\\"triggerAction($event)\\\">\\n                                <ng-template ngFor let-action [ngForOf]=\\\"_actionsService.getDetailActions()\\\">\\n                                    <a *ngIf=\\\"_actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                                       [ngClass]=\\\"[_actionsService.getActionAttr(action, 'icon')]\\\"\\n                                       class=\\\"fa\\\"\\n                                       [attr.data-action]=\\\"action\\\"\\n                                       [attr.data-value]=\\\"objIndex\\\"></a>\\n                                </ng-template>\\n                            </div>\\n                        </td>\\n                    </tr></ng-template>\\n                </tbody>\\n            </table>\\n        </form>\\n    </div>\\n    </ng-template><p\\n        class=\\\"text-center\\\"\\n        *ngIf=\\\"!(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">No results.</p>\\n</div>\\n        <div [hidden]=\\\"!(_isExpanded)\\\"\\n         class=\\\"ibox-footer\\\"\\n         *ngIf=\\\"_dataService.countObjects() > 0\\\"><js_searchPagination></js_searchPagination></div>\\n\\n</div>\\n\\n<js_legend></js_legend>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-invoice/index/ts/templates/main.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/supplier-document-invoice/index/ts/templates/main.component.html\n// module chunks = main","import {Component, ElementRef, Inject, Optional, Injector, Renderer} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormPopupExtensionComponent, FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\n\n\n@Component({\n    selector: '#js_supplierDocumentReceiptPaymentFormPopup',\n    templateUrl: '../templates/form-popup.component.html'\n})\nexport class FormPopupComponent extends FormPopupExtensionComponent {\n    constructor(elementRef: ElementRef,\n                renderer: Renderer,\n                @Inject('Provider') provider: FormProvider,\n                formService: FormService,\n                @Inject('DataService') dataService: any,\n                @Inject('HelperService') protected _helperService: any) {\n        super();\n        super.initFormPopupExtensionComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService\n        );\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnDestroy()\n    {\n        // If is a '_isSessionStorage' object, the object is ignored, so we need to update manually all objects\n        // (occurs in add mode)\n        if (this._dataService.getObject()['_isSessionStorage']\n            && this._formService.getObject()['id']\n        ) {\n            this._dataService.refresh();\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-payment/edit/ts/src/form-popup.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {FormPopupComponent} from './form-popup.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        FormPopupComponent\n    ],\n    exports: [FormPopupComponent]\n})\nexport class FormPopupExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-payment/edit/ts/src/form-popup.ext-module.ts","import {Component, ElementRef, Inject, Optional, Injector, Renderer} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormExtensionComponent, FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\n\n\n@Component({\n    selector: '#js_form',\n    templateUrl: '../templates/form.component.html'\n})\nexport class FormComponent extends FormExtensionComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any,\n        @Inject('HelperService') protected _helperService: any\n    ) {\n        super();\n        super.initFormExtensionComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-payment/edit/ts/src/form.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {FormComponent} from './form.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        FormComponent\n    ],\n    exports: [FormComponent]\n})\nexport class FormExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-payment/edit/ts/src/form.ext-module.ts","module.exports = \"    \\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">    \\n            \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_paymentMethodObj\\\">Payment Method</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                                                        <div class=\\\"html-select\\\"\\n         [htmlSelect]=\\\"'paymentMethodObj'\\\"\\n                               >\\n        <div class=\\\"input-group-control\\\"\\n             [class.error]=\\\"_formService.getErrors()['paymentMethodObj'] && (_formService.getErrors()['paymentMethodObj'].length > 0)\\\">\\n            <span class=\\\"js_label form-control\\\"></span>\\n            <a class=\\\"pull-right\\\"><i class=\\\"fa fa-angle-down\\\"></i></a>\\n        </div>\\n        <div class=\\\"choices js_choices\\\">\\n            <ul class=\\\"form-control-box\\\">        <ng-template ngFor let-choice [ngForOf]=\\\"_dataService.getFieldChoices('paymentMethodObj')\\\">\\n            <li [attr.data-value]=\\\"choice['id']\\\" [innerHtml]=\\\"choice['label']\\\"></li>\\n        </ng-template>\\n    </ul>\\n        </div>\\n    </div>\\n    <input [(ngModel)]=\\\"_formService.getObject().paymentMethodObj\\\"\\n           formControlName = paymentMethodObj\\n           name=\\\"form[paymentMethodObj]\\\"\\n           required=\\\"required\\\"           type=\\\"hidden\\\">\\n                                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().paymentMethodObj\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_reference\\\">Reference</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_reference\\\" name=\\\"form[reference]\\\" maxlength=\\\"64\\\" [(ngModel)]=\\\"_formService.getObject().reference\\\" formControlName=\\\"reference\\\" [class.error]=\\\"_formService.getErrors().reference &amp;&amp; _formService.getErrors().reference.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().reference\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_description\\\">Description</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_description\\\" name=\\\"form[description]\\\" maxlength=\\\"256\\\" [(ngModel)]=\\\"_formService.getObject().description\\\" formControlName=\\\"description\\\" [class.error]=\\\"_formService.getErrors().description &amp;&amp; _formService.getErrors().description.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().description\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_value\\\">Value</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_value\\\" name=\\\"form[value]\\\" required=\\\"required\\\" [(ngModel)]=\\\"_formService.getObject().value\\\" formControlName=\\\"value\\\" [class.error]=\\\"_formService.getErrors().value &amp;&amp; _formService.getErrors().value.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().value\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" [innerHTML]=\\\"getLang('Enabled')\\\"></label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <div class=\\\"checkbox\\\">                                        <label for=\\\"form_isEnabled\\\"><input type=\\\"checkbox\\\" id=\\\"form_isEnabled\\\" name=\\\"form[isEnabled]\\\" [(ngModel)]=\\\"_formService.getObject().isEnabled\\\" formControlName=\\\"isEnabled\\\" [class.error]=\\\"_formService.getErrors().isEnabled &amp;&amp; _formService.getErrors().isEnabled.length &gt; 0\\\" value=\\\"1\\\" checked=\\\"checked\\\" /> Is enabled</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isEnabled\\\">{{error}}</label>\\n            </div>\\n        </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n        \\n                    <div class=\\\"row\\\">\\n            <div class=\\\"col-auto ml-auto\\\">\\n                                            <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"cancelAction($event)\\\"\\n                                        id=\\\"form_cancel\\\"\\n            name=\\\"form[cancel]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Cancel</button>\\n                                                <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"resetAction($event)\\\"\\n                                        id=\\\"form_reset\\\"\\n            name=\\\"form[reset]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-ban\\\"></i>&nbsp;Reset</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAction($event)\\\"\\n                                        id=\\\"form_save\\\"\\n            name=\\\"form[save]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-check\\\"></i>&nbsp;Save</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAndCloseAction($event)\\\"\\n                                        id=\\\"form_saveAndClose\\\"\\n            name=\\\"form[saveAndClose]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Save and Close</button>\\n                                </div>\\n        </div>\\n    </div>    \\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-payment/edit/ts/templates/form-popup.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/supplier-document-payment/edit/ts/templates/form-popup.component.html\n// module chunks = main","module.exports = \"\\n\\n\\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n\\n    \\n            \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_paymentMethodObj\\\">Payment Method</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                                                        <div class=\\\"html-select\\\"\\n         [htmlSelect]=\\\"'paymentMethodObj'\\\"\\n                               >\\n        <div class=\\\"input-group-control\\\"\\n             [class.error]=\\\"_formService.getErrors()['paymentMethodObj'] && (_formService.getErrors()['paymentMethodObj'].length > 0)\\\">\\n            <span class=\\\"js_label form-control\\\"></span>\\n            <a class=\\\"pull-right\\\"><i class=\\\"fa fa-angle-down\\\"></i></a>\\n        </div>\\n        <div class=\\\"choices js_choices\\\">\\n            <ul class=\\\"form-control-box\\\">        <ng-template ngFor let-choice [ngForOf]=\\\"_dataService.getFieldChoices('paymentMethodObj')\\\">\\n            <li [attr.data-value]=\\\"choice['id']\\\" [innerHtml]=\\\"choice['label']\\\"></li>\\n        </ng-template>\\n    </ul>\\n        </div>\\n    </div>\\n    <input [(ngModel)]=\\\"_formService.getObject().paymentMethodObj\\\"\\n           formControlName = paymentMethodObj\\n           name=\\\"form[paymentMethodObj]\\\"\\n           required=\\\"required\\\"           type=\\\"hidden\\\">\\n                                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().paymentMethodObj\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_reference\\\">Reference</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_reference\\\" name=\\\"form[reference]\\\" maxlength=\\\"64\\\" [(ngModel)]=\\\"_formService.getObject().reference\\\" formControlName=\\\"reference\\\" [class.error]=\\\"_formService.getErrors().reference &amp;&amp; _formService.getErrors().reference.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().reference\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_description\\\">Description</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_description\\\" name=\\\"form[description]\\\" maxlength=\\\"256\\\" [(ngModel)]=\\\"_formService.getObject().description\\\" formControlName=\\\"description\\\" [class.error]=\\\"_formService.getErrors().description &amp;&amp; _formService.getErrors().description.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().description\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_value\\\">Value</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_value\\\" name=\\\"form[value]\\\" required=\\\"required\\\" [(ngModel)]=\\\"_formService.getObject().value\\\" formControlName=\\\"value\\\" [class.error]=\\\"_formService.getErrors().value &amp;&amp; _formService.getErrors().value.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().value\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" [innerHTML]=\\\"getLang('Enabled')\\\"></label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <div class=\\\"checkbox\\\">                                        <label for=\\\"form_isEnabled\\\"><input type=\\\"checkbox\\\" id=\\\"form_isEnabled\\\" name=\\\"form[isEnabled]\\\" [(ngModel)]=\\\"_formService.getObject().isEnabled\\\" formControlName=\\\"isEnabled\\\" [class.error]=\\\"_formService.getErrors().isEnabled &amp;&amp; _formService.getErrors().isEnabled.length &gt; 0\\\" value=\\\"1\\\" checked=\\\"checked\\\" /> Is enabled</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isEnabled\\\">{{error}}</label>\\n            </div>\\n        </div>\\n        \\n\\n    \\n\\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-payment/edit/ts/templates/form.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/supplier-document-payment/edit/ts/templates/form.component.html\n// module chunks = main","import {Component, Inject, Injector, ViewContainerRef, Renderer} from '@angular/core';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {ActionsService} from '../../../../../../../../AppBundle/Resources/public/ts/actions/actions.service';\nimport {DataBoxExtensionComponent, DataBoxProvider, Popups, Popup} from '../../../../../../../../AppBundle/Resources/public/data-box/ts/src/data-box.extension-component';\nimport {ModalService} from '../../../../../../../../AppBundle/Resources/public/modal/ts/modal.service';\nimport {TasksLoaderManagerService} from '../../../../../../../../AppBundle/Resources/public/tasks-loader-manager/ts/tasks-loader-manager.service';\n\n\n// Component\n@Component({\n    selector: '.js_supplierDocumentReceiptPayment',\n    templateUrl: '../templates/main.component.html'\n})\nexport class MainComponent extends DataBoxExtensionComponent\n{\n    constructor(\n        viewContainerRef: ViewContainerRef,\n        renderer: Renderer,\n        @Inject('Provider') dataBoxProvider: DataBoxProvider,\n        @Inject('DataService') dataService: any,\n        tasksLoaderManagerService: TasksLoaderManagerService,\n        @Inject('HelperService') helperService: any,\n        actionsService: ActionsService,\n        modalService: ModalService,\n        @Inject('Popups') popups: Popups | Popup,\n        injector: Injector,\n        @Inject('ParentDataService') protected _parentDataService: any // Used in view\n    ) {\n        // Call parent\n        super();\n        super.initDataBoxExtensionComponent(\n            viewContainerRef,\n            renderer,\n            dataBoxProvider,\n            dataService,\n            tasksLoaderManagerService,\n            helperService,\n            actionsService,\n            modalService,\n            popups,\n            injector\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-payment/index/ts/src/main.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n// This module doesn't use \"ReactiveFormsModule\", but it needs to import this class\n// to provide \"formBuilder\" when inject dependencies in child modules (like form)\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {SearchModule} from '../../../../../../../../AppBundle/Resources/public/ts/search/search.module';\nimport {ExpanderModule} from '../../../../../../../../AppBundle/Resources/public/ts/expander/expander.module';\nimport {SearchPaginationModule} from '../../../../../../../../AppBundle/Resources/public/ts/search/search-pagination.module';\nimport {MainComponent} from './main.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        SearchModule,\n        SearchPaginationModule,\n        ExpanderModule\n    ],\n    declarations: [\n        MainComponent\n    ],\n    exports: [MainComponent]\n})\nexport class MainExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-payment/index/ts/src/main.ext-module.ts","module.exports = \"\\n\\n<div class=\\\"ibox\\\" >\\n                        <div class=\\\"ibox-title\\\" *ngIf=\\\"!getProviderExtraDataAttr('hasMergeHeader')\\\">\\n                <h5>\\n                    <ng-template [ngIf]=\\\"getProviderAttr('controls')['expander']['isEnabled']\\\"><js_expander\\n                        [isExpanded]=\\\"_isExpanded || null\\\"\\n                        [label]=\\\"getLang(getProviderAttr('label'))\\\"\\n                        [labelCount]=\\\"getProviderAttr('labelCount')\\\"\\n                        [labelIcon]=\\\"getProviderAttr('labelIcon')\\\"\\n                        (onChange)=\\\"expanderAction($event)\\\"></js_expander></ng-template>\\n                    <ng-template [ngIf]=\\\"!getProviderAttr('controls')['expander']['isEnabled']\\\">\\n                        <span [innerHTML]=\\\"getProviderAttr('label')\\\"></span>\\n                    </ng-template>\\n                </h5>\\n                <div *ngIf=\\\"_isExpanded\\\"\\n                     class=\\\"txt-align-r hide-on-empty\\\">    <div class=\\\"row align-items-center\\\">\\n        <div class=\\\"col ml-auto text-right actions no-user-select\\\">\\n            <ng-template [ngIf]=\\\"_actionsService.getActionAttr('search', 'isEnabled')\\\"><js_search class=\\\"search\\\"></js_search></ng-template>\\n            <div (click)=\\\"triggerAction($event)\\\">\\n                <ng-template ngFor let-action [ngForOf]=\\\"_actionsService.getHeadActions()\\\">\\n                    <a *ngIf=\\\"_actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                       [ngClass]=\\\"[_actionsService.getActionAttr(action, 'icon')]\\\"\\n                       class=\\\"-round fa\\\"\\n                       [attr.data-action]=\\\"action\\\"></a>\\n                </ng-template>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n            </div>\\n            \\n    <div [hidden]=\\\"!(_isExpanded)\\\" class=\\\"ibox-content hide-on-empty\\\">    <ng-template [ngIf]=\\\"(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">\\n                \\n    <div class=\\\"table-responsive\\\">\\n    <form>    <table class=\\\"data-table table table-hover dataTables-example table-bordered\\\">\\n        <thead>\\n        <tr>\\n            <th *ngFor=\\\"let searchField of _dataService.getSearch('fields')\\\">{{ getLang(_dataService.getFields('metadata')[searchField].label) }}</th>\\n            <th>&nbsp;</th>\\n        </tr>\\n        </thead>        <tbody>\\n        <ng-template ngFor let-obj [ngForOf]=\\\"_dataService.getProviderAttr('objects')\\\" let-objIndex=\\\"index\\\">\\n        <tr (dblclick)=\\\"editAction($event, objIndex)\\\"            [ngClass]=\\\"getLegendClasses(obj, 'tr')\\\">                    <td *ngFor=\\\"let searchField of _dataService.getSearch('fields')\\\"\\n    [ngClass]=\\\"getColAlign(searchField)\\\"\\n    [innerHTML]=\\\"obj[searchField]\\\"></td>                        <td>\\n                <span *ngIf=\\\"obj['_isNew']\\\" class=\\\"badge badge-info\\\">New</span>\\n                <span *ngIf=\\\"obj['_isEdited']\\\" class=\\\"badge badge-info\\\">Edited</span>\\n                <input *ngIf=\\\"_actionsService.getActionAttr('radioChoice', 'isEnabled')\\\"\\n                       class=\\\"pull-right action\\\"\\n                       type=\\\"radio\\\"\\n                       name=\\\"index[]\\\"\\n                       value=\\\"{{objIndex}}\\\"/>\\n                <input *ngIf=\\\"_actionsService.getActionAttr('checkAll', 'isEnabled')\\\"\\n                       class=\\\"pull-right action js_checkAll\\\"\\n                       type=\\\"checkbox\\\"\\n                       name=\\\"index[]\\\"\\n                       value=\\\"{{objIndex}}\\\"\\n                       [ngModel]=\\\"checkAll\\\"/>\\n                <div class=\\\"pull-right actions no-user-select text-secondary\\\" (click)=\\\"triggerAction($event)\\\">\\n                    <ng-template ngFor let-action [ngForOf]=\\\"_actionsService.getDetailActions()\\\">\\n                        <a *ngIf=\\\"_actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                           [ngClass]=\\\"[_actionsService.getActionAttr(action, 'icon') + getActionsLegendClasses(obj, action)]\\\"\\n                           class=\\\"fa\\\"\\n                           [attr.data-action]=\\\"action\\\"\\n                           [attr.data-value]=\\\"objIndex\\\"></a>\\n                    </ng-template>\\n                </div>\\n            </td>        </tr>\\n        </ng-template>\\n        </tbody>\\n    </table>\\n    </form></div>    </ng-template><p\\n        class=\\\"text-center\\\"\\n        *ngIf=\\\"!(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">No results.</p>\\n</div>\\n        <div [hidden]=\\\"!(_isExpanded)\\\"\\n         class=\\\"ibox-footer\\\"\\n         *ngIf=\\\"_dataService.countObjects() > 0\\\"><js_searchPagination></js_searchPagination></div>\\n\\n</div>\\n\\n<js_legend></js_legend>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-payment/index/ts/templates/main.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/supplier-document-payment/index/ts/templates/main.component.html\n// module chunks = main","import {Component, ElementRef, Inject, Injector, Renderer, QueryList, Optional, ViewChildren, ViewContainerRef, ViewChild} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {Helper} from '../../../../../../../../AppBundle/Resources/public/ts/helper';\nimport {DataService} from \"../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service\";\nimport {WizardPopupProvider, LazyLoadData} from '../../../../../../../../AppBundle/Resources/public/wizard/ts/src/wizard-form-popup.ext-component';\nimport {WizardManagerService} from '../../../../../../../../AppBundle/Resources/public/wizard/ts/src/wizard-manager.service';\nimport {FormPopupExtComponent as BaseDocumentRectificationAddFormPopupExtComponent} from '../../../../base-document-rectification/add/ts/form-popup.ext-component';\n\n\n/* Import dependencies */\n\n// Booking Parent, used when the document is aggregated to one booking\n// (this code is putted here to avoid to repeat this module in the booking bundle, so we can reuse the same modules)\nvar bookingContext = ((Helper.getAppVar('conf')['localData']['data']['bookingContext'])\n            ? Helper.getAppVar('conf')['localData']['data']['bookingContext'] :\n            null\n    ),\n    bookingId = (bookingContext ? Helper.getAppVar('conf')['object']['id'] : null);\n\n// RECTIFICATION DOCUMENT CHOICES\nimport {TreeViewExtModule} from '../../../../../../../../AppBundle/Resources/public/tree-view/default/ts/src/tree-view.ext-module';\n// EDIT FORM\nimport {Step2FormPopupExtModule} from \"./step2-form-popup.ext-module\";\n\n/* /Import dependencies */\n\n\n@Component({\n    selector: '.js_addFormPopup',\n    templateUrl: '../templates/form-popup.component.html'\n})\nexport class FormPopupComponent extends BaseDocumentRectificationAddFormPopupExtComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: WizardPopupProvider,\n        wizardManagerService: WizardManagerService,\n        formService: FormService,\n        @Inject('HelperService') helperService: any,\n        @Inject('DataService') dataService: any,\n        @Inject('ParentFormService') parentFormService: any, // To get parent object\n        injector: Injector\n    ) {\n        // Call parent\n        super();\n        super.initBaseDocumentRectificationAddFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            wizardManagerService,\n            formService,\n            helperService,\n            dataService,\n            parentFormService,\n            injector\n        );\n    }\n\n    /**\n     * Get navigation data (needed data to lazy load container)\n     * @param index (index to load)\n     * @returns NavData\n     */\n    public getNavData(index: number): LazyLoadData\n    {\n        switch (index) {\n            case 0:\n                return {\n                    module: TreeViewExtModule,\n                    component: 'TreeViewComponent',\n                    urlProvider: (this._helperService.getAppVar('route') + 'bck/accounting/supplier-document-invoice-rectification/data-for-rectification/' + this._parentFormService.getObject()['id'] + (bookingContext ? ('/' + bookingId) : ''))\n                };\n            case 1:\n                return {\n                    module: Step2FormPopupExtModule,\n                    component: 'Step2FormPopupComponent'\n                };\n        }\n\n        return null;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-rectification/add/ts/src/form-popup.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {FormPopupComponent} from './form-popup.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        FormPopupComponent\n    ],\n    exports: [FormPopupComponent]\n})\nexport class FormPopupExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-rectification/add/ts/src/form-popup.ext-module.ts","import {Component, ElementRef, Inject, Optional, Injector, Renderer} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {Helper} from '../../../../../../../../AppBundle/Resources/public/ts/helper';\nimport {FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {FormPopupComponent as SupplierDocumentRectificationEditFormPopupComponent} from '../../../edit/ts/src/form-popup.component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\n\n\n/**\n * This class is necessary to redefine the template url for add step 2\n */\nvar templateUrl = Helper.getGlobalVar('templateUrl');\n@Component({\n    selector: '#js_supplierDocumentReceiptSettlementFormPopup',\n    templateUrl: '../templates/step2-form-popup.component.html'\n})\nexport class Step2FormPopupComponent extends SupplierDocumentRectificationEditFormPopupComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any,\n        @Inject('HelperService') helperService: any\n    ) {\n        super(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            helperService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-rectification/add/ts/src/step2-form-popup.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {Step2FormPopupComponent} from './step2-form-popup.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        Step2FormPopupComponent\n    ],\n    exports: [Step2FormPopupComponent]\n})\nexport class Step2FormPopupExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-rectification/add/ts/src/step2-form-popup.ext-module.ts","module.exports = \"<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">    \\n                        <ul class=\\\"row mb-3 no-gutters wizard-nav\\\">\\n                                    <li class=\\\"col-auto wizard-step\\\"\\n                        [class.step-active]=\\\"0 == _wizardManagerService.getIndex()\\\">\\n                        <span class=\\\"step-number\\\">1</span>\\n                        <span class=\\\"step-text\\\">Documents</span>\\n                    </li>\\n                                    <li class=\\\"col-auto wizard-step\\\"\\n                        [class.step-active]=\\\"1 == _wizardManagerService.getIndex()\\\">\\n                        <span class=\\\"step-number\\\">2</span>\\n                        <span class=\\\"step-text\\\">Preview</span>\\n                    </li>\\n                            </ul>\\n\\n            \\n                <section [hidden]=\\\"_wizardManagerService.getIndex() != 0\\\"\\n         class=\\\"js_lazyLoadContainer_0\\\">\\n    <ng-template #js_lazyLoadContainer></ng-template>\\n</section>\\n    <section [hidden]=\\\"_wizardManagerService.getIndex() != 1\\\"\\n         class=\\\"js_lazyLoadContainer_1\\\">\\n    <ng-template #js_lazyLoadContainer></ng-template>\\n</section>\\n            \\n            \\n    </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-auto\\\">\\n            <button type=\\\"button\\\" class=\\\"btn-light btn\\\" (click)=\\\"_wizardManagerService.cancelAction($event)\\\">Cancel</button>\\n                <button type=\\\"button\\\" class=\\\"btn-primary btn\\\" (click)=\\\"_wizardManagerService.prevAction($event)\\\"\\n                    *ngIf=\\\"0 < _wizardManagerService.getIndex()\\\">Prev</button>\\n            <button type=\\\"button\\\" class=\\\"btn-primary btn\\\" (click)=\\\"_wizardManagerService.nextAction($event)\\\"\\n                    *ngIf=\\\"1 > _wizardManagerService.getIndex()\\\">Next</button>\\n            <button type=\\\"button\\\" class=\\\"btn-primary btn\\\" (click)=\\\"_wizardManagerService.finishAction($event)\\\"\\n                    *ngIf=\\\"1 == _wizardManagerService.getIndex()\\\">Finish</button>\\n        \\n    </div>\\n</div></div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-rectification/add/ts/templates/form-popup.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/supplier-document-rectification/add/ts/templates/form-popup.component.html\n// module chunks = main","module.exports = \"\\n\\n\\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n\\n    \\n\\n                        <div class=\\\"row form-group -multiple-field\\\">\\n                            <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_originalDocument_code\\\">Original Doc.</label>\\n                    <div class=\\\"col-sm-10\\\">\\n                                            <p id=\\\"form_originalDocumentType_name\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().originalDocumentType_name\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().originalDocumentType_name\\\">{{error}}</label>\\n                                            <p id=\\\"form_originalDocument_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().originalDocument_code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().originalDocument_code\\\">{{error}}</label>\\n                </div>\\n            </div>\\n                                            \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().document_code\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_supplierDocumentInvoiceDetailObj_document_code\\\">Doc. Code</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_supplierDocumentInvoiceDetailObj_document_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().document_code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().document_code\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().booking_code\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_supplierDocumentInvoiceDetailObj_booking_code\\\">Booking</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_supplierDocumentInvoiceDetailObj_booking_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().booking_code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().booking_code\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_supplierDocumentInvoiceDetailObj_description\\\">Description</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_supplierDocumentInvoiceDetailObj_description\\\" name=\\\"form[supplierDocumentInvoiceDetailObj][description]\\\" required=\\\"required\\\" maxlength=\\\"256\\\" [(ngModel)]=\\\"_formService.getObject().description\\\" formControlName=\\\"description\\\" [class.error]=\\\"_formService.getErrors().description &amp;&amp; _formService.getErrors().description.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().description\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_supplierDocumentInvoiceDetailObj_quantity\\\">Quantity</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"number\\\" id=\\\"form_supplierDocumentInvoiceDetailObj_quantity\\\" name=\\\"form[supplierDocumentInvoiceDetailObj][quantity]\\\" required=\\\"required\\\" (input)=\\\"onQuantityEnterKey($event.target.value)\\\" (focusout)=\\\"onQuantityEnterKey($event.target.value)\\\" [(ngModel)]=\\\"_formService.getObject().quantity\\\" formControlName=\\\"quantity\\\" [class.error]=\\\"_formService.getErrors().quantity &amp;&amp; _formService.getErrors().quantity.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().quantity\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                                \\n\\n                                            <input type=\\\"hidden\\\" id=\\\"form_supplierDocumentInvoiceDetailObj_value\\\" name=\\\"form[supplierDocumentInvoiceDetailObj][value]\\\" [(ngModel)]=\\\"_formService.getObject().value\\\" formControlName=\\\"value\\\" [class.error]=\\\"_formService.getErrors().value &amp;&amp; _formService.getErrors().value.length &gt; 0\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().value\\\">{{error}}</label>\\n                                    <div class=\\\"row form-group\\\">\\n                            <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_supplierDocumentInvoiceDetailObj_user_value\\\">Value</label>\\n                    <div class=\\\"col-sm-10\\\"><div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-8\\\">\\n                                                        <input type=\\\"text\\\" id=\\\"form_supplierDocumentInvoiceDetailObj_user_value\\\" name=\\\"form[supplierDocumentInvoiceDetailObj][user_value]\\\" (input)=\\\"onValueEnterKey($event.target.value)\\\" (focusout)=\\\"onValueEnterKey($event.target.value)\\\" [(ngModel)]=\\\"_formService.getObject().user_value\\\" formControlName=\\\"user_value\\\" [class.error]=\\\"_formService.getErrors().user_value &amp;&amp; _formService.getErrors().user_value.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().user_value\\\">{{error}}</label>\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\">\\n                                                        <div class=\\\"checkbox\\\">                                        <label for=\\\"form_supplierDocumentInvoiceDetailObj_isVatIncluded\\\"><input type=\\\"checkbox\\\" id=\\\"form_supplierDocumentInvoiceDetailObj_isVatIncluded\\\" name=\\\"form[supplierDocumentInvoiceDetailObj][isVatIncluded]\\\" (change)=\\\"onIsVatIncludedChange($event.target.checked)\\\" [(ngModel)]=\\\"_formService.getObject().isVatIncluded\\\" formControlName=\\\"isVatIncluded\\\" [class.error]=\\\"_formService.getErrors().isVatIncluded &amp;&amp; _formService.getErrors().isVatIncluded.length &gt; 0\\\" value=\\\"1\\\" /> Is vat included</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isVatIncluded\\\">{{error}}</label>\\n                        </div>\\n                    </div></div>\\n            </div>\\n                                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_supplierDocumentInvoiceDetailObj_subTotal\\\">Sub Total</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_supplierDocumentInvoiceDetailObj_subTotal\\\" name=\\\"form[supplierDocumentInvoiceDetailObj][subTotal]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().subTotal\\\" formControlName=\\\"subTotal\\\" [class.error]=\\\"_formService.getErrors().subTotal &amp;&amp; _formService.getErrors().subTotal.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().subTotal\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_supplierDocumentInvoiceDetailObj_totalVat\\\">TAX</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_supplierDocumentInvoiceDetailObj_totalVat\\\" name=\\\"form[supplierDocumentInvoiceDetailObj][totalVat]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().totalVat\\\" formControlName=\\\"totalVat\\\" [class.error]=\\\"_formService.getErrors().totalVat &amp;&amp; _formService.getErrors().totalVat.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().totalVat\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_supplierDocumentInvoiceDetailObj_total\\\">Total</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_supplierDocumentInvoiceDetailObj_total\\\" name=\\\"form[supplierDocumentInvoiceDetailObj][total]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().total\\\" formControlName=\\\"total\\\" [class.error]=\\\"_formService.getErrors().total &amp;&amp; _formService.getErrors().total.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().total\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" [innerHTML]=\\\"getLang('Enabled')\\\"></label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <div class=\\\"checkbox\\\">                                        <label for=\\\"form_isEnabled\\\"><input type=\\\"checkbox\\\" id=\\\"form_isEnabled\\\" name=\\\"form[isEnabled]\\\" [(ngModel)]=\\\"_formService.getObject().isEnabled\\\" formControlName=\\\"isEnabled\\\" [class.error]=\\\"_formService.getErrors().isEnabled &amp;&amp; _formService.getErrors().isEnabled.length &gt; 0\\\" value=\\\"1\\\" checked=\\\"checked\\\" /> Is enabled</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isEnabled\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                                <div class=\\\"row form-group -multiple-field\\\">\\n                            <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_service_name\\\">Service</label>\\n                    <div class=\\\"col-sm-10\\\">\\n                                            <p id=\\\"form_service_icon\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().service_icon\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().service_icon\\\">{{error}}</label>\\n                                            <p id=\\\"form_service_name\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().service_name\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().service_name\\\">{{error}}</label>\\n                </div>\\n            </div>\\n            \\n\\n    \\n\\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-rectification/add/ts/templates/step2-form-popup.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/supplier-document-rectification/add/ts/templates/step2-form-popup.component.html\n// module chunks = main","import {Component, ElementRef, Inject, Optional, Injector, Renderer} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {FormPopupExtComponent as BaseDocumentRectificationEditFormPopupExtComponent} from '../../../../base-document-rectification/edit/ts/form-popup.ext-component';\n\n\n@Component({\n    selector: '#js_supplierDocumentInvoiceRectificationFormPopup',\n    templateUrl: '../templates/form-popup.component.html'\n})\nexport class FormPopupComponent extends BaseDocumentRectificationEditFormPopupExtComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any,\n        @Inject('HelperService') helperService: any\n    ) {\n        super();\n        super.initBaseDocumentRectificationEditFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            helperService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-rectification/edit/ts/src/form-popup.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {FormPopupComponent} from './form-popup.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        FormPopupComponent\n    ],\n    exports: [FormPopupComponent]\n})\nexport class FormPopupExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-rectification/edit/ts/src/form-popup.ext-module.ts","module.exports = \"    \\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">    \\n\\n                        <div class=\\\"row form-group -multiple-field\\\">\\n                            <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_originalDocument_code\\\">Original Doc.</label>\\n                    <div class=\\\"col-sm-10\\\">\\n                                            <p id=\\\"form_originalDocumentType_name\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().originalDocumentType_name\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().originalDocumentType_name\\\">{{error}}</label>\\n                                            <p id=\\\"form_originalDocument_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().originalDocument_code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().originalDocument_code\\\">{{error}}</label>\\n                </div>\\n            </div>\\n                                            \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().document_code\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_supplierDocumentInvoiceDetailObj_document_code\\\">Doc. Code</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_supplierDocumentInvoiceDetailObj_document_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().document_code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().document_code\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().booking_code\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_supplierDocumentInvoiceDetailObj_booking_code\\\">Booking</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_supplierDocumentInvoiceDetailObj_booking_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().booking_code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().booking_code\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_supplierDocumentInvoiceDetailObj_description\\\">Description</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_supplierDocumentInvoiceDetailObj_description\\\" name=\\\"form[supplierDocumentInvoiceDetailObj][description]\\\" required=\\\"required\\\" maxlength=\\\"256\\\" [(ngModel)]=\\\"_formService.getObject().description\\\" formControlName=\\\"description\\\" [class.error]=\\\"_formService.getErrors().description &amp;&amp; _formService.getErrors().description.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().description\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_supplierDocumentInvoiceDetailObj_quantity\\\">Quantity</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"number\\\" id=\\\"form_supplierDocumentInvoiceDetailObj_quantity\\\" name=\\\"form[supplierDocumentInvoiceDetailObj][quantity]\\\" required=\\\"required\\\" (input)=\\\"onQuantityEnterKey($event.target.value)\\\" (focusout)=\\\"onQuantityEnterKey($event.target.value)\\\" [(ngModel)]=\\\"_formService.getObject().quantity\\\" formControlName=\\\"quantity\\\" [class.error]=\\\"_formService.getErrors().quantity &amp;&amp; _formService.getErrors().quantity.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().quantity\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                                \\n\\n                                            <input type=\\\"hidden\\\" id=\\\"form_supplierDocumentInvoiceDetailObj_value\\\" name=\\\"form[supplierDocumentInvoiceDetailObj][value]\\\" [(ngModel)]=\\\"_formService.getObject().value\\\" formControlName=\\\"value\\\" [class.error]=\\\"_formService.getErrors().value &amp;&amp; _formService.getErrors().value.length &gt; 0\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().value\\\">{{error}}</label>\\n                                    <div class=\\\"row form-group\\\">\\n                            <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_supplierDocumentInvoiceDetailObj_user_value\\\">Value</label>\\n                    <div class=\\\"col-sm-10\\\"><div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-8\\\">\\n                                                        <input type=\\\"text\\\" id=\\\"form_supplierDocumentInvoiceDetailObj_user_value\\\" name=\\\"form[supplierDocumentInvoiceDetailObj][user_value]\\\" (input)=\\\"onValueEnterKey($event.target.value)\\\" (focusout)=\\\"onValueEnterKey($event.target.value)\\\" [(ngModel)]=\\\"_formService.getObject().user_value\\\" formControlName=\\\"user_value\\\" [class.error]=\\\"_formService.getErrors().user_value &amp;&amp; _formService.getErrors().user_value.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().user_value\\\">{{error}}</label>\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\">\\n                                                        <div class=\\\"checkbox\\\">                                        <label for=\\\"form_supplierDocumentInvoiceDetailObj_isVatIncluded\\\"><input type=\\\"checkbox\\\" id=\\\"form_supplierDocumentInvoiceDetailObj_isVatIncluded\\\" name=\\\"form[supplierDocumentInvoiceDetailObj][isVatIncluded]\\\" (change)=\\\"onIsVatIncludedChange($event.target.checked)\\\" [(ngModel)]=\\\"_formService.getObject().isVatIncluded\\\" formControlName=\\\"isVatIncluded\\\" [class.error]=\\\"_formService.getErrors().isVatIncluded &amp;&amp; _formService.getErrors().isVatIncluded.length &gt; 0\\\" value=\\\"1\\\" /> Is vat included</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isVatIncluded\\\">{{error}}</label>\\n                        </div>\\n                    </div></div>\\n            </div>\\n                                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_supplierDocumentInvoiceDetailObj_subTotal\\\">Sub Total</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_supplierDocumentInvoiceDetailObj_subTotal\\\" name=\\\"form[supplierDocumentInvoiceDetailObj][subTotal]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().subTotal\\\" formControlName=\\\"subTotal\\\" [class.error]=\\\"_formService.getErrors().subTotal &amp;&amp; _formService.getErrors().subTotal.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().subTotal\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_supplierDocumentInvoiceDetailObj_totalVat\\\">TAX</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_supplierDocumentInvoiceDetailObj_totalVat\\\" name=\\\"form[supplierDocumentInvoiceDetailObj][totalVat]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().totalVat\\\" formControlName=\\\"totalVat\\\" [class.error]=\\\"_formService.getErrors().totalVat &amp;&amp; _formService.getErrors().totalVat.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().totalVat\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_supplierDocumentInvoiceDetailObj_total\\\">Total</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_supplierDocumentInvoiceDetailObj_total\\\" name=\\\"form[supplierDocumentInvoiceDetailObj][total]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().total\\\" formControlName=\\\"total\\\" [class.error]=\\\"_formService.getErrors().total &amp;&amp; _formService.getErrors().total.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().total\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" [innerHTML]=\\\"getLang('Enabled')\\\"></label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <div class=\\\"checkbox\\\">                                        <label for=\\\"form_isEnabled\\\"><input type=\\\"checkbox\\\" id=\\\"form_isEnabled\\\" name=\\\"form[isEnabled]\\\" [(ngModel)]=\\\"_formService.getObject().isEnabled\\\" formControlName=\\\"isEnabled\\\" [class.error]=\\\"_formService.getErrors().isEnabled &amp;&amp; _formService.getErrors().isEnabled.length &gt; 0\\\" value=\\\"1\\\" checked=\\\"checked\\\" /> Is enabled</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isEnabled\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                                <div class=\\\"row form-group -multiple-field\\\">\\n                            <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_service_name\\\">Service</label>\\n                    <div class=\\\"col-sm-10\\\">\\n                                            <p id=\\\"form_service_icon\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().service_icon\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().service_icon\\\">{{error}}</label>\\n                                            <p id=\\\"form_service_name\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().service_name\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().service_name\\\">{{error}}</label>\\n                </div>\\n            </div>\\n            </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n        \\n                    <div class=\\\"row\\\">\\n            <div class=\\\"col-auto ml-auto\\\">\\n                                            <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"cancelAction($event)\\\"\\n                                        id=\\\"form_cancel\\\"\\n            name=\\\"form[cancel]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Cancel</button>\\n                                                <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"resetAction($event)\\\"\\n                                        id=\\\"form_reset\\\"\\n            name=\\\"form[reset]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-ban\\\"></i>&nbsp;Reset</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAction($event)\\\"\\n                                        id=\\\"form_save\\\"\\n            name=\\\"form[save]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-check\\\"></i>&nbsp;Save</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAndCloseAction($event)\\\"\\n                                        id=\\\"form_saveAndClose\\\"\\n            name=\\\"form[saveAndClose]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Save and Close</button>\\n                                </div>\\n        </div>\\n    </div>    \\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-rectification/edit/ts/templates/form-popup.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/supplier-document-rectification/edit/ts/templates/form-popup.component.html\n// module chunks = main","import {Component, Inject, Injector, ViewContainerRef, Renderer} from '@angular/core';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {ActionsService} from '../../../../../../../../AppBundle/Resources/public/ts/actions/actions.service';\nimport {DataBoxExtensionComponent, DataBoxProvider, Popups, Popup} from '../../../../../../../../AppBundle/Resources/public/data-box/ts/src/data-box.extension-component';\nimport {ModalService} from '../../../../../../../../AppBundle/Resources/public/modal/ts/modal.service';\nimport {TasksLoaderManagerService} from '../../../../../../../../AppBundle/Resources/public/tasks-loader-manager/ts/tasks-loader-manager.service';\n\n\n// Component\n@Component({\n    selector: '.js_supplierDocumentInvoiceRectification',\n    templateUrl: '../templates/main.component.html'\n})\nexport class MainComponent extends DataBoxExtensionComponent\n{\n    constructor(\n        viewContainerRef: ViewContainerRef,\n        renderer: Renderer,\n        @Inject('Provider') dataBoxProvider: DataBoxProvider,\n        @Inject('DataService') dataService: any,\n        tasksLoaderManagerService: TasksLoaderManagerService,\n        @Inject('HelperService') helperService: any,\n        actionsService: ActionsService,\n        modalService: ModalService,\n        @Inject('Popups') popups: Popups | Popup,\n        injector: Injector,\n        @Inject('ParentDataService') protected _parentDataService: any // Used in view\n    ) {\n        // Call parent\n        super();\n        super.initDataBoxExtensionComponent(\n            viewContainerRef,\n            renderer,\n            dataBoxProvider,\n            dataService,\n            tasksLoaderManagerService,\n            helperService,\n            actionsService,\n            modalService,\n            popups,\n            injector\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-rectification/index/ts/src/main.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n// This module doesn't use \"ReactiveFormsModule\", but it needs to import this class\n// to provide \"formBuilder\" when inject dependencies in child modules (like form)\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {SearchModule} from '../../../../../../../../AppBundle/Resources/public/ts/search/search.module';\nimport {ExpanderModule} from '../../../../../../../../AppBundle/Resources/public/ts/expander/expander.module';\nimport {SearchPaginationModule} from '../../../../../../../../AppBundle/Resources/public/ts/search/search-pagination.module';\nimport {MainComponent} from './main.component';\nimport {LegendExtModule} from \"../../../../../../../../AppBundle/Resources/public/legend/ts/src/legend.ext-module\";\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        SearchModule,\n        SearchPaginationModule,\n        ExpanderModule,\n        LegendExtModule\n    ],\n    declarations: [\n        MainComponent\n    ],\n    exports: [MainComponent]\n})\nexport class MainExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-rectification/index/ts/src/main.ext-module.ts","module.exports = \"\\n\\n<div class=\\\"ibox\\\" >\\n                        <div class=\\\"ibox-title\\\" *ngIf=\\\"!getProviderExtraDataAttr('hasMergeHeader')\\\">\\n                <h5>\\n                    <ng-template [ngIf]=\\\"getProviderAttr('controls')['expander']['isEnabled']\\\"><js_expander\\n                        [isExpanded]=\\\"_isExpanded || null\\\"\\n                        [label]=\\\"getLang(getProviderAttr('label'))\\\"\\n                        [labelCount]=\\\"getProviderAttr('labelCount')\\\"\\n                        [labelIcon]=\\\"getProviderAttr('labelIcon')\\\"\\n                        (onChange)=\\\"expanderAction($event)\\\"></js_expander></ng-template>\\n                    <ng-template [ngIf]=\\\"!getProviderAttr('controls')['expander']['isEnabled']\\\">\\n                        <span [innerHTML]=\\\"getProviderAttr('label')\\\"></span>\\n                    </ng-template>\\n                </h5>\\n                <div *ngIf=\\\"_isExpanded\\\"\\n                     class=\\\"txt-align-r hide-on-empty\\\">    <div class=\\\"row align-items-center\\\">\\n        <div class=\\\"col ml-auto text-right actions no-user-select\\\">\\n            <ng-template [ngIf]=\\\"_actionsService.getActionAttr('search', 'isEnabled')\\\"><js_search class=\\\"search\\\"></js_search></ng-template>\\n            <div (click)=\\\"triggerAction($event)\\\">\\n                <ng-template ngFor let-action [ngForOf]=\\\"_actionsService.getHeadActions()\\\">\\n                    <a *ngIf=\\\"_actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                       [ngClass]=\\\"[_actionsService.getActionAttr(action, 'icon')]\\\"\\n                       class=\\\"-round fa\\\"\\n                       [attr.data-action]=\\\"action\\\"></a>\\n                </ng-template>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n            </div>\\n            \\n    <div [hidden]=\\\"!(_isExpanded)\\\" class=\\\"ibox-content hide-on-empty\\\">    <ng-template [ngIf]=\\\"(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">\\n        <div class=\\\"table-responsive m-t\\\">\\n        <form>\\n            <table class=\\\"table table-bordered\\\">\\n                <thead>\\n                <tr>\\n                    <th *ngFor=\\\"let field of ['description', 'quantity', 'value', 'vatCode_name', 'total']\\\">{{ _dataService.getFields('metadata')[field].label }}</th>\\n                    <th>&nbsp;</th>\\n                </tr>\\n                </thead>\\n                <tbody>\\n                <ng-template ngFor let-obj [ngForOf]=\\\"_dataService.getProviderAttr('objects')\\\" let-objIndex=\\\"index\\\"><tr\\n                          (dblclick)=\\\"editAction($event, objIndex)\\\">\\n                        <td class=\\\"txt-align-l\\\"><small><span class=\\\"m-r-xs\\\">Original&nbsp;Doc:</span><span class=\\\"m-r-xs\\\"\\n                            [innerHTML]=\\\"obj['originalDocumentType_name']\\\"></span><span class=\\\"m-r-xs\\\"\\n                            [innerHTML]=\\\"obj['originalDocument_code']\\\"></span></small><div><strong><span\\n                            [innerHTML]=\\\"obj['service_icon']\\\" class=\\\"m-r-xs\\\"></span><span\\n                            [innerHTML]=\\\"obj['service_name']\\\"></span></strong></div><small><span\\n                            [innerHTML]=\\\"obj['description']\\\"></span></small></td>\\n                        <td *ngFor=\\\"let field of ['quantity', 'totalUnit', 'vatCode_name', 'total']\\\"\\n                            [ngClass]=\\\"getColAlign(field)\\\"\\n                            [innerHTML]=\\\"obj[field]\\\"></td>\\n                        <td>\\n                            <span *ngIf=\\\"obj['_isNew']\\\" class=\\\"badge badge-info\\\">New</span>\\n                            <span *ngIf=\\\"obj['_isEdited']\\\" class=\\\"badge badge-info\\\">Edited</span>\\n                            <input *ngIf=\\\"_actionsService.getActionAttr('checkAll', 'isEnabled')\\\"\\n                                   class=\\\"pull-right action js_checkAll\\\"\\n                                   type=\\\"checkbox\\\"\\n                                   name=\\\"index[]\\\"\\n                                   value=\\\"{{objIndex}}\\\"\\n                                   [ngModel]=\\\"checkAll\\\"/>\\n                            <div class=\\\"pull-right actions no-user-select\\\" (click)=\\\"triggerAction($event)\\\">\\n                                <ng-template ngFor let-action [ngForOf]=\\\"_actionsService.getDetailActions()\\\">\\n                                    <a *ngIf=\\\"_actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                                       [ngClass]=\\\"[_actionsService.getActionAttr(action, 'icon')]\\\"\\n                                       class=\\\"fa\\\"\\n                                       [attr.data-action]=\\\"action\\\"\\n                                       [attr.data-value]=\\\"objIndex\\\"></a>\\n                                </ng-template>\\n                            </div>\\n                        </td>\\n                    </tr></ng-template>\\n                </tbody>\\n            </table>\\n        </form>\\n    </div>\\n    </ng-template><p\\n        class=\\\"text-center\\\"\\n        *ngIf=\\\"!(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">No results.</p>\\n</div>\\n        <div [hidden]=\\\"!(_isExpanded)\\\"\\n         class=\\\"ibox-footer\\\"\\n         *ngIf=\\\"_dataService.countObjects() > 0\\\"><js_searchPagination></js_searchPagination></div>\\n\\n</div>\\n\\n<js_legend></js_legend>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-rectification/index/ts/templates/main.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/supplier-document-rectification/index/ts/templates/main.component.html\n// module chunks = main","import {Component, ElementRef, Inject, Injector, Renderer, QueryList, Optional, ViewChildren, ViewContainerRef, ViewChild} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {Helper} from '../../../../../../../../AppBundle/Resources/public/ts/helper';\nimport {DataService} from \"../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service\";\nimport {WizardPopupProvider, LazyLoadData} from '../../../../../../../../AppBundle/Resources/public/wizard/ts/src/wizard-form-popup.ext-component';\nimport {WizardManagerService} from '../../../../../../../../AppBundle/Resources/public/wizard/ts/src/wizard-manager.service';\nimport {FormPopupExtComponent as BaseDocumentSettlementAddFormPopupExtComponent} from '../../../../base-document-settlement/add/ts/form-popup.ext-component';\n\n/* Import dependencies */\n\n// Booking Parent, used when the document is aggregated to one booking\n// (this code is putted here to avoid to repeat this module in the booking bundle, so we can reuse the same modules)\nvar bookingContext = ((Helper.getAppVar('conf')['localData']['data']['bookingContext'])\n            ? Helper.getAppVar('conf')['localData']['data']['bookingContext'] :\n            null\n    ),\n    bookingId = (bookingContext ? Helper.getAppVar('conf')['object']['id'] : null);\n\n// SETTLEMENT DOCUMENT CHOICES\nimport {DataBoxExtensionModule as SupplierDocumentMainExtModule} from '../../../../../../../../AppBundle/Resources/public/data-box/ts/src/data-box.extension-module';\n// EDIT FORM\nimport {Step2FormPopupExtModule} from \"./step2-form-popup.ext-module\";\n\n/* /Import dependencies */\n\n\n@Component({\n    selector: '.js_addFormPopup',\n    templateUrl: '../templates/form-popup.component.html'\n})\nexport class FormPopupComponent extends BaseDocumentSettlementAddFormPopupExtComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: WizardPopupProvider,\n        wizardManagerService: WizardManagerService,\n        formService: FormService,\n        @Inject('HelperService') helperService: any,\n        @Inject('DataService') dataService: any,\n        @Inject('ParentFormService') parentFormService: any, // To get parent object\n        injector: Injector\n    ) {\n        // Call parent\n        super();\n        super.initBaseDocumentSettlementAddFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            wizardManagerService,\n            formService,\n            helperService,\n            dataService,\n            parentFormService,\n            injector\n        );\n    }\n\n    /**\n     * Get navigation data (needed data to lazy load container)\n     * @param index (index to load)\n     * @returns NavData\n     */\n    public getNavData(index: number): LazyLoadData\n    {\n        switch (index) {\n            case 0:\n                return {\n                    module: SupplierDocumentMainExtModule,\n                    component: 'DataBoxComponent',\n                    urlProvider: (this._helperService.getAppVar('route') + 'bck/accounting/supplier-document/data-for-settlement/' + this._parentFormService.getObject()['id'] + (bookingContext ? ('/' + bookingId) : ''))\n                };\n            case 1:\n                return {\n                    module: Step2FormPopupExtModule,\n                    component: 'Step2FormPopupComponent'\n                };\n        }\n\n        return null;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-settlement/add/ts/src/form-popup.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {FormPopupComponent} from './form-popup.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        FormPopupComponent\n    ],\n    exports: [FormPopupComponent]\n})\nexport class FormPopupExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-settlement/add/ts/src/form-popup.ext-module.ts","import {Component, ElementRef, Inject, Optional, Injector, Renderer} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {FormPopupComponent as SupplierDocumentSettlementEditFormPopupComponent} from '../../../edit/ts/src/form-popup.component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\n\n\n/**\n * This class is necessary to redefine the template url for add step 2\n */\n@Component({\n    selector: '#js_supplierDocumentReceiptSettlementFormPopup',\n    templateUrl: '../templates/step2-form-popup.component.html'\n})\nexport class Step2FormPopupComponent extends SupplierDocumentSettlementEditFormPopupComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any\n    ) {\n        super(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-settlement/add/ts/src/step2-form-popup.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {Step2FormPopupComponent} from './step2-form-popup.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        Step2FormPopupComponent\n    ],\n    exports: [Step2FormPopupComponent]\n})\nexport class Step2FormPopupExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-settlement/add/ts/src/step2-form-popup.ext-module.ts","module.exports = \"<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">    \\n                        <ul class=\\\"row mb-3 no-gutters wizard-nav\\\">\\n                                    <li class=\\\"col-auto wizard-step\\\"\\n                        [class.step-active]=\\\"0 == _wizardManagerService.getIndex()\\\">\\n                        <span class=\\\"step-number\\\">1</span>\\n                        <span class=\\\"step-text\\\">Documents</span>\\n                    </li>\\n                                    <li class=\\\"col-auto wizard-step\\\"\\n                        [class.step-active]=\\\"1 == _wizardManagerService.getIndex()\\\">\\n                        <span class=\\\"step-number\\\">2</span>\\n                        <span class=\\\"step-text\\\">Preview</span>\\n                    </li>\\n                            </ul>\\n\\n            \\n                <section [hidden]=\\\"_wizardManagerService.getIndex() != 0\\\"\\n         class=\\\"js_lazyLoadContainer_0\\\">\\n    <ng-template #js_lazyLoadContainer></ng-template>\\n</section>\\n    <section [hidden]=\\\"_wizardManagerService.getIndex() != 1\\\"\\n         class=\\\"js_lazyLoadContainer_1\\\">\\n    <ng-template #js_lazyLoadContainer></ng-template>\\n</section>\\n            \\n            \\n    </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-auto\\\">\\n            <button type=\\\"button\\\" class=\\\"btn-light btn\\\" (click)=\\\"_wizardManagerService.cancelAction($event)\\\">Cancel</button>\\n                <button type=\\\"button\\\" class=\\\"btn-primary btn\\\" (click)=\\\"_wizardManagerService.prevAction($event)\\\"\\n                    *ngIf=\\\"0 < _wizardManagerService.getIndex()\\\">Prev</button>\\n            <button type=\\\"button\\\" class=\\\"btn-primary btn\\\" (click)=\\\"_wizardManagerService.nextAction($event)\\\"\\n                    *ngIf=\\\"1 > _wizardManagerService.getIndex()\\\">Next</button>\\n            <button type=\\\"button\\\" class=\\\"btn-primary btn\\\" (click)=\\\"_wizardManagerService.finishAction($event)\\\"\\n                    *ngIf=\\\"1 == _wizardManagerService.getIndex()\\\">Finish</button>\\n        \\n    </div>\\n</div></div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-settlement/add/ts/templates/form-popup.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/supplier-document-settlement/add/ts/templates/form-popup.component.html\n// module chunks = main","module.exports = \"\\n\\n\\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n\\n    \\n\\n\\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n\\n    \\n            \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().code\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_code\\\">Code</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().code\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_value\\\">Value</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_value\\\" name=\\\"form[value]\\\" required=\\\"required\\\" [(ngModel)]=\\\"_formService.getObject().value\\\" formControlName=\\\"value\\\" [class.error]=\\\"_formService.getErrors().value &amp;&amp; _formService.getErrors().value.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().value\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" [innerHTML]=\\\"getLang('Enabled')\\\"></label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <div class=\\\"checkbox\\\">                                        <label for=\\\"form_isEnabled\\\"><input type=\\\"checkbox\\\" id=\\\"form_isEnabled\\\" name=\\\"form[isEnabled]\\\" [(ngModel)]=\\\"_formService.getObject().isEnabled\\\" formControlName=\\\"isEnabled\\\" [class.error]=\\\"_formService.getErrors().isEnabled &amp;&amp; _formService.getErrors().isEnabled.length &gt; 0\\\" value=\\\"1\\\" checked=\\\"checked\\\" /> Is enabled</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isEnabled\\\">{{error}}</label>\\n            </div>\\n        </div>\\n        \\n\\n    \\n\\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\\n\\n\\n    \\n\\n    </form>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-settlement/add/ts/templates/step2-form-popup.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/supplier-document-settlement/add/ts/templates/step2-form-popup.component.html\n// module chunks = main","import {Component, ElementRef, Inject, Optional, Injector, Renderer} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormPopupExtensionComponent, FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\n\n\n@Component({\n    selector: '#js_supplierDocumentReceiptSettlementFormPopup',\n    templateUrl: '../templates/form-popup.component.html'\n})\nexport class FormPopupComponent extends FormPopupExtensionComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any\n    ) {\n        super();\n        super.initFormPopupExtensionComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService\n        );\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnDestroy()\n    {\n        // If is a '_isSessionStorage' object, the object is ignored, so we need to update manually all objects\n        // (occurs in add mode)\n        if (this._dataService.getObject()['_isSessionStorage']\n            && this._formService.getObject()['id']\n        ) {\n            this._dataService.refresh();\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-settlement/edit/ts/src/form-popup.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {FormPopupComponent} from './form-popup.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        FormPopupComponent\n    ],\n    exports: [FormPopupComponent]\n})\nexport class FormPopupExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-settlement/edit/ts/src/form-popup.ext-module.ts","module.exports = \"    \\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">    \\n            \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().code\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_code\\\">Code</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().code\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_value\\\">Value</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_value\\\" name=\\\"form[value]\\\" required=\\\"required\\\" [(ngModel)]=\\\"_formService.getObject().value\\\" formControlName=\\\"value\\\" [class.error]=\\\"_formService.getErrors().value &amp;&amp; _formService.getErrors().value.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().value\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" [innerHTML]=\\\"getLang('Enabled')\\\"></label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <div class=\\\"checkbox\\\">                                        <label for=\\\"form_isEnabled\\\"><input type=\\\"checkbox\\\" id=\\\"form_isEnabled\\\" name=\\\"form[isEnabled]\\\" [(ngModel)]=\\\"_formService.getObject().isEnabled\\\" formControlName=\\\"isEnabled\\\" [class.error]=\\\"_formService.getErrors().isEnabled &amp;&amp; _formService.getErrors().isEnabled.length &gt; 0\\\" value=\\\"1\\\" checked=\\\"checked\\\" /> Is enabled</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isEnabled\\\">{{error}}</label>\\n            </div>\\n        </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n        \\n                    <div class=\\\"row\\\">\\n            <div class=\\\"col-auto ml-auto\\\">\\n                                            <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"cancelAction($event)\\\"\\n                                        id=\\\"form_cancel\\\"\\n            name=\\\"form[cancel]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Cancel</button>\\n                                                <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"resetAction($event)\\\"\\n                                        id=\\\"form_reset\\\"\\n            name=\\\"form[reset]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-ban\\\"></i>&nbsp;Reset</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAction($event)\\\"\\n                                        id=\\\"form_save\\\"\\n            name=\\\"form[save]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-check\\\"></i>&nbsp;Save</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAndCloseAction($event)\\\"\\n                                        id=\\\"form_saveAndClose\\\"\\n            name=\\\"form[saveAndClose]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Save and Close</button>\\n                                </div>\\n        </div>\\n    </div>    \\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-settlement/edit/ts/templates/form-popup.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/supplier-document-settlement/edit/ts/templates/form-popup.component.html\n// module chunks = main","import {Component, Inject, Injector, ViewContainerRef, Renderer} from '@angular/core';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {ActionsService} from '../../../../../../../../AppBundle/Resources/public/ts/actions/actions.service';\nimport {DataBoxExtensionComponent, DataBoxProvider, Popups, Popup} from '../../../../../../../../AppBundle/Resources/public/data-box/ts/src/data-box.extension-component';\nimport {ModalService} from '../../../../../../../../AppBundle/Resources/public/modal/ts/modal.service';\nimport {TasksLoaderManagerService} from '../../../../../../../../AppBundle/Resources/public/tasks-loader-manager/ts/tasks-loader-manager.service';\n\n\n// Component\n@Component({\n    selector: '.js_supplierDocumentReceiptSettlement',\n    templateUrl: '../templates/main.component.html'\n})\nexport class MainComponent extends DataBoxExtensionComponent\n{\n    constructor(\n        viewContainerRef: ViewContainerRef,\n        renderer: Renderer,\n        @Inject('Provider') dataBoxProvider: DataBoxProvider,\n        @Inject('DataService') dataService: any,\n        tasksLoaderManagerService: TasksLoaderManagerService,\n        @Inject('HelperService') helperService: any,\n        actionsService: ActionsService,\n        modalService: ModalService,\n        @Inject('Popups') popups: Popups | Popup,\n        injector: Injector,\n        @Inject('ParentDataService') protected _parentDataService: any // Used in view\n    ) {\n        // Call parent\n        super();\n        super.initDataBoxExtensionComponent(\n            viewContainerRef,\n            renderer,\n            dataBoxProvider,\n            dataService,\n            tasksLoaderManagerService,\n            helperService,\n            actionsService,\n            modalService,\n            popups,\n            injector\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-settlement/index/ts/src/main.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n// This module doesn't use \"ReactiveFormsModule\", but it needs to import this class\n// to provide \"formBuilder\" when inject dependencies in child modules (like form)\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {SearchModule} from '../../../../../../../../AppBundle/Resources/public/ts/search/search.module';\nimport {ExpanderModule} from '../../../../../../../../AppBundle/Resources/public/ts/expander/expander.module';\nimport {SearchPaginationModule} from '../../../../../../../../AppBundle/Resources/public/ts/search/search-pagination.module';\nimport {MainComponent} from './main.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        SearchModule,\n        SearchPaginationModule,\n        ExpanderModule\n    ],\n    declarations: [\n        MainComponent\n    ],\n    exports: [MainComponent]\n})\nexport class MainExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-settlement/index/ts/src/main.ext-module.ts","module.exports = \"\\n\\n<div class=\\\"ibox\\\" >\\n                        <div class=\\\"ibox-title\\\" *ngIf=\\\"!getProviderExtraDataAttr('hasMergeHeader')\\\">\\n                <h5>\\n                    <ng-template [ngIf]=\\\"getProviderAttr('controls')['expander']['isEnabled']\\\"><js_expander\\n                        [isExpanded]=\\\"_isExpanded || null\\\"\\n                        [label]=\\\"getLang(getProviderAttr('label'))\\\"\\n                        [labelCount]=\\\"getProviderAttr('labelCount')\\\"\\n                        [labelIcon]=\\\"getProviderAttr('labelIcon')\\\"\\n                        (onChange)=\\\"expanderAction($event)\\\"></js_expander></ng-template>\\n                    <ng-template [ngIf]=\\\"!getProviderAttr('controls')['expander']['isEnabled']\\\">\\n                        <span [innerHTML]=\\\"getProviderAttr('label')\\\"></span>\\n                    </ng-template>\\n                </h5>\\n                <div *ngIf=\\\"_isExpanded\\\"\\n                     class=\\\"txt-align-r hide-on-empty\\\">    <div class=\\\"row align-items-center\\\">\\n        <div class=\\\"col ml-auto text-right actions no-user-select\\\">\\n            <ng-template [ngIf]=\\\"_actionsService.getActionAttr('search', 'isEnabled')\\\"><js_search class=\\\"search\\\"></js_search></ng-template>\\n            <div (click)=\\\"triggerAction($event)\\\">\\n                <ng-template ngFor let-action [ngForOf]=\\\"_actionsService.getHeadActions()\\\">\\n                    <a *ngIf=\\\"_actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                       [ngClass]=\\\"[_actionsService.getActionAttr(action, 'icon')]\\\"\\n                       class=\\\"-round fa\\\"\\n                       [attr.data-action]=\\\"action\\\"></a>\\n                </ng-template>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n            </div>\\n            \\n    <div [hidden]=\\\"!(_isExpanded)\\\" class=\\\"ibox-content hide-on-empty\\\">    <ng-template [ngIf]=\\\"(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">\\n                \\n    <div class=\\\"table-responsive\\\">\\n    <form>    <table class=\\\"data-table table table-hover dataTables-example table-bordered\\\">\\n        <thead>\\n        <tr>\\n            <th *ngFor=\\\"let searchField of _dataService.getSearch('fields')\\\">{{ getLang(_dataService.getFields('metadata')[searchField].label) }}</th>\\n            <th>&nbsp;</th>\\n        </tr>\\n        </thead>        <tbody>\\n        <ng-template ngFor let-obj [ngForOf]=\\\"_dataService.getProviderAttr('objects')\\\" let-objIndex=\\\"index\\\">\\n        <tr (dblclick)=\\\"editAction($event, objIndex)\\\"            [ngClass]=\\\"getLegendClasses(obj, 'tr')\\\">                    <td *ngFor=\\\"let searchField of _dataService.getSearch('fields')\\\"\\n    [ngClass]=\\\"getColAlign(searchField)\\\"\\n    [innerHTML]=\\\"obj[searchField]\\\"></td>                        <td>\\n                <span *ngIf=\\\"obj['_isNew']\\\" class=\\\"badge badge-info\\\">New</span>\\n                <span *ngIf=\\\"obj['_isEdited']\\\" class=\\\"badge badge-info\\\">Edited</span>\\n                <input *ngIf=\\\"_actionsService.getActionAttr('radioChoice', 'isEnabled')\\\"\\n                       class=\\\"pull-right action\\\"\\n                       type=\\\"radio\\\"\\n                       name=\\\"index[]\\\"\\n                       value=\\\"{{objIndex}}\\\"/>\\n                <input *ngIf=\\\"_actionsService.getActionAttr('checkAll', 'isEnabled')\\\"\\n                       class=\\\"pull-right action js_checkAll\\\"\\n                       type=\\\"checkbox\\\"\\n                       name=\\\"index[]\\\"\\n                       value=\\\"{{objIndex}}\\\"\\n                       [ngModel]=\\\"checkAll\\\"/>\\n                <div class=\\\"pull-right actions no-user-select text-secondary\\\" (click)=\\\"triggerAction($event)\\\">\\n                    <ng-template ngFor let-action [ngForOf]=\\\"_actionsService.getDetailActions()\\\">\\n                        <a *ngIf=\\\"_actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                           [ngClass]=\\\"[_actionsService.getActionAttr(action, 'icon') + getActionsLegendClasses(obj, action)]\\\"\\n                           class=\\\"fa\\\"\\n                           [attr.data-action]=\\\"action\\\"\\n                           [attr.data-value]=\\\"objIndex\\\"></a>\\n                    </ng-template>\\n                </div>\\n            </td>        </tr>\\n        </ng-template>\\n        </tbody>\\n    </table>\\n    </form></div>    </ng-template><p\\n        class=\\\"text-center\\\"\\n        *ngIf=\\\"!(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">No results.</p>\\n</div>\\n        <div [hidden]=\\\"!(_isExpanded)\\\"\\n         class=\\\"ibox-footer\\\"\\n         *ngIf=\\\"_dataService.countObjects() > 0\\\"><js_searchPagination></js_searchPagination></div>\\n\\n</div>\\n\\n<js_legend></js_legend>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document-settlement/index/ts/templates/main.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/supplier-document-settlement/index/ts/templates/main.component.html\n// module chunks = main","import {Component, ElementRef, Inject, Injector, Renderer, QueryList, Optional, ViewChildren, ViewContainerRef, ViewChild} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {Helper} from '../../../../../../../../AppBundle/Resources/public/ts/helper';\nimport {DataService} from \"../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service\";\nimport {WizardPopupProvider, LazyLoadData} from '../../../../../../../../AppBundle/Resources/public/wizard/ts/src/wizard-form-popup.ext-component';\nimport {WizardManagerService} from '../../../../../../../../AppBundle/Resources/public/wizard/ts/src/wizard-manager.service';\nimport {FormPopupExtComponent as BaseDocumentAddFormPopupExtComponent} from '../../../../base-document/add/ts/form-popup.ext-component';\n\n\n/* Import dependencies */\n\n// Booking Parent, used when the document is aggregated to one booking\n// (this code is putted here to avoid to repeat this module in the booking bundle, so we can reuse the same modules)\nvar bookingContext = ((Helper.getAppVar('conf')['localData']['data']['bookingContext'])\n            ? Helper.getAppVar('conf')['localData']['data']['bookingContext'] :\n            null\n    ),\n    bookingId = (bookingContext ? Helper.getAppVar('conf')['object']['id'] : null);\n\n// STEP 2\n// INVOICE and RECTIFICATION\nimport {TreeViewExtModule} from '../../../../../../../../AppBundle/Resources/public/tree-view/default/ts/src/tree-view.ext-module';\n// RECEIPT and SETTLEMENT\nimport {DataBoxExtensionModule as SupplierDocumentExtensionModule} from '../../../../../../../../AppBundle/Resources/public/data-box/ts/src/data-box.extension-module';\n// PAYMENT (RECEIPT WITHOUT SETTLEMENT)\nimport {FormExtModule as SupplierDocumentPaymentEditFormExtModule} from '../../../../supplier-document-payment/edit/ts/src/form.ext-module';\n\n// STEP 3\n// INVOICE\nimport {Step3InvoiceExtModule} from './step3-invoice.ext-module';\n// RECTIFICATION\nimport {Step3RectificationExtModule} from './step3-rectification.ext-module';\n// RECEIPT\nimport {Step3ReceiptExtModule} from './step3-receipt.ext-module';\n// PAYMENT\nimport {Step3PaymentExtModule} from './step3-payment.ext-module';\n// SETTLEMENT\nimport {Step3SettlementExtModule} from './step3-settlement.ext-module';\n\n/* /Import dependencies */\n\n\n@Component({\n    selector: '.js_addFormPopup',\n    templateUrl: '../templates/form-popup.component.html'\n})\nexport class FormPopupComponent extends BaseDocumentAddFormPopupExtComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: WizardPopupProvider,\n        wizardManagerService: WizardManagerService,\n        formService: FormService,\n        @Inject('HelperService') helperService: any,\n        @Inject('DataService') dataService: any,\n        injector: Injector\n    ) {\n        // Call parent\n        super();\n        super.initBaseDocumentAddFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            wizardManagerService,\n            formService,\n            helperService,\n            dataService,\n            injector\n        );\n    }\n\n    /**\n     * Get navigation data (needed data to lazy load container)\n     * @param index (index to load)\n     * @returns NavData\n     */\n    public getNavData(index: number): LazyLoadData\n    {\n        switch (index) {\n            case 1:\n                switch (this._formService.getObject()['documentType_type']) {\n                    case 'RECTIFICATION':\n                        return {\n                            module: TreeViewExtModule,\n                            component: 'TreeViewComponent',\n                            urlProvider: (this._helperService.getAppVar('route') + 'bck/accounting/supplier-document-invoice-rectification/data-for-rectification/' + this._formService.getObject()['id'] + (bookingContext ? ('/' + bookingId) : ''))\n                        };\n                    case 'RECEIPT':\n                    case 'SETTLEMENT':\n                        return {\n                            module: SupplierDocumentExtensionModule,\n                            component: 'DataBoxComponent',\n                            urlProvider: (this._helperService.getAppVar('route') + 'bck/accounting/supplier-document/data-for-settlement/' + this._formService.getObject()['id'] + (bookingContext ? ('/' + bookingId) : ''))\n                        };\n                    case 'PAYMENT':\n                        return {\n                            module: SupplierDocumentPaymentEditFormExtModule,\n                            component: 'FormComponent',\n                            urlProvider: (this._helperService.getAppVar('route') + 'bck/accounting/supplier-document-receipt-payment/conf/' + this._formService.getObject()['id'])\n                        };\n                    default: // INVOICE\n                        return {\n                            module: TreeViewExtModule,\n                            component: 'TreeViewComponent',\n                            urlProvider: (this._helperService.getAppVar('route') + 'bck/booking/booking-service-price/data-for-invoice-supplier/' + this._formService.getObject()['supplierObj'] + (bookingContext ? ('/' + bookingId) : ''))\n                        };\n                }\n            case 2:\n                switch (this._formService.getObject()['documentType_type']) {\n                    case 'RECTIFICATION':\n                        return {\n                            module: Step3RectificationExtModule,\n                            component: 'Step3RectificationComponent',\n                        };\n                    case 'RECEIPT':\n                        return {\n                            module: Step3ReceiptExtModule,\n                            component: 'Step3ReceiptComponent',\n                        };\n                    case 'PAYMENT':\n                        return {\n                            module: Step3PaymentExtModule,\n                            component: 'Step3PaymentComponent',\n                        };\n                    case 'SETTLEMENT':\n                        return {\n                            module: Step3SettlementExtModule,\n                            component: 'Step3SettlementComponent',\n                        };\n                    default: // INVOICE\n                        return {\n                            module: Step3InvoiceExtModule,\n                            component: 'Step3InvoiceComponent',\n                        };\n                }\n        }\n\n        return null;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/src/form-popup.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {FormPopupComponent} from './form-popup.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        FormPopupComponent\n    ],\n    exports: [FormPopupComponent]\n})\nexport class FormPopupExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/src/form-popup.ext-module.ts","import {Component, ElementRef, Inject, Optional, Injector, ReflectiveInjector, Renderer, ViewChild, ViewContainerRef} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {DynamicComponentLoaderService} from '../../../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\nimport {PostService} from '../../../../../../../../AppBundle/Resources/public/ts/post.service';\nimport {BaseInvoiceDocumentFormPopupExtComponent} from '../../../ts/base-invoice-document-form-popup.ext-component';\n\n\n@Component({\n    selector: '.js_addInvoiceDetailFormPopup',\n    templateUrl: '../templates/step3-invoice.component.html'\n})\nexport class Step3InvoiceComponent extends BaseInvoiceDocumentFormPopupExtComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any,\n        injector: Injector,\n        @Inject('ParentDataService') parentDataService: any,\n        @Inject('HelperService') helperService: any,\n        dynamicComponentLoaderService: DynamicComponentLoaderService,\n        postService: PostService\n    ) {\n        super();\n        super.initBaseInvoiceDocumentFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            injector,\n            parentDataService,\n            helperService,\n            dynamicComponentLoaderService,\n            postService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/src/step3-invoice.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {Step3InvoiceComponent} from './step3-invoice.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        Step3InvoiceComponent\n    ],\n    exports: [Step3InvoiceComponent]\n})\nexport class Step3InvoiceExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/src/step3-invoice.ext-module.ts","import {Component, ElementRef, Inject, Optional, Injector, ReflectiveInjector, Renderer, ViewChild, ViewContainerRef} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {DynamicComponentLoaderService} from '../../../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\nimport {PostService} from '../../../../../../../../AppBundle/Resources/public/ts/post.service';\nimport {BaseReceiptPaymentDocumentFormPopupExtComponent} from '../../../ts/base-receipt-payment-document-form-popup.ext-component';\n\n\n@Component({\n    selector: '.js_addDetailFormPopup',\n    templateUrl: '../templates/step3-payment.component.html'\n})\nexport class Step3PaymentComponent extends BaseReceiptPaymentDocumentFormPopupExtComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any,\n        injector: Injector,\n        @Inject('ParentDataService') parentDataService: any,\n        @Inject('HelperService') helperService: any,\n        dynamicComponentLoaderService: DynamicComponentLoaderService,\n        postService: PostService\n    ) {\n        super();\n        super.initBaseReceiptPaymentDocumentFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            injector,\n            parentDataService,\n            helperService,\n            dynamicComponentLoaderService,\n            postService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/src/step3-payment.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {Step3PaymentComponent} from './step3-payment.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        Step3PaymentComponent\n    ],\n    exports: [Step3PaymentComponent]\n})\nexport class Step3PaymentExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/src/step3-payment.ext-module.ts","import {Component, ElementRef, Inject, Optional, Injector, ReflectiveInjector, Renderer, ViewChild, ViewContainerRef} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {DynamicComponentLoaderService} from '../../../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\nimport {PostService} from '../../../../../../../../AppBundle/Resources/public/ts/post.service';\nimport {BaseReceiptDocumentFormPopupExtComponent} from '../../../ts/base-receipt-document-form-popup.ext-component';\n\n\n@Component({\n    selector: '.js_addDetailFormPopup',\n    templateUrl: '../templates/step3-receipt.component.html'\n})\nexport class Step3ReceiptComponent extends BaseReceiptDocumentFormPopupExtComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any,\n        injector: Injector,\n        @Inject('ParentDataService') parentDataService: any,\n        @Inject('HelperService') helperService: any,\n        dynamicComponentLoaderService: DynamicComponentLoaderService,\n        postService: PostService\n    ) {\n        super();\n        super.initBaseReceiptDocumentFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            injector,\n            parentDataService,\n            helperService,\n            dynamicComponentLoaderService,\n            postService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/src/step3-receipt.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {Step3ReceiptComponent} from './step3-receipt.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        Step3ReceiptComponent\n    ],\n    exports: [Step3ReceiptComponent]\n})\nexport class Step3ReceiptExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/src/step3-receipt.ext-module.ts","import {Component, ElementRef, Inject, Optional, Injector, ReflectiveInjector, Renderer, ViewChild, ViewContainerRef} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {DynamicComponentLoaderService} from '../../../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\nimport {PostService} from '../../../../../../../../AppBundle/Resources/public/ts/post.service';\nimport {BaseInvoiceRectificationDocumentFormPopupExtComponent} from '../../../ts/base-invoice-rectification-document-form-popup.ext-component';\n\n\n@Component({\n    selector: '.js_documentAddInvoiceRectificationFormPopup',\n    templateUrl: '../templates/step3-rectification.component.html'\n})\nexport class Step3RectificationComponent extends BaseInvoiceRectificationDocumentFormPopupExtComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any,\n        injector: Injector,\n        @Inject('ParentDataService') parentDataService: any,\n        @Inject('HelperService') helperService: any,\n        dynamicComponentLoaderService: DynamicComponentLoaderService,\n        postService: PostService\n    ) {\n        super();\n        super.initBaseInvoiceRectificationDocumentFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            injector,\n            parentDataService,\n            helperService,\n            dynamicComponentLoaderService,\n            postService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/src/step3-rectification.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {Step3RectificationComponent} from './step3-rectification.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        Step3RectificationComponent\n    ],\n    exports: [Step3RectificationComponent]\n})\nexport class Step3RectificationExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/src/step3-rectification.ext-module.ts","import {Component, ElementRef, Inject, Optional, Injector, ReflectiveInjector, Renderer, ViewChild, ViewContainerRef} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {DynamicComponentLoaderService} from '../../../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\nimport {PostService} from '../../../../../../../../AppBundle/Resources/public/ts/post.service';\nimport {BaseReceiptSettlementDocumentFormPopupExtComponent} from '../../../ts/base-receipt-settlement-document-form-popup.ext-component';\n\n\n@Component({\n    selector: '.js_addDetailFormPopup',\n    templateUrl: '../templates/step3-settlement.component.html'\n})\nexport class Step3SettlementComponent extends BaseReceiptSettlementDocumentFormPopupExtComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any,\n        injector: Injector,\n        @Inject('ParentDataService') parentDataService: any,\n        @Inject('HelperService') helperService: any,\n        dynamicComponentLoaderService: DynamicComponentLoaderService,\n        postService: PostService\n    ) {\n        super();\n        super.initBaseReceiptSettlementDocumentFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            injector,\n            parentDataService,\n            helperService,\n            dynamicComponentLoaderService,\n            postService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/src/step3-settlement.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {Step3SettlementComponent} from './step3-settlement.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        Step3SettlementComponent\n    ],\n    exports: [Step3SettlementComponent]\n})\nexport class Step3SettlementExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/src/step3-settlement.ext-module.ts","module.exports = \"<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">    \\n                        <ul class=\\\"row mb-3 no-gutters wizard-nav\\\">\\n                                    <li class=\\\"col-auto wizard-step\\\"\\n                        [class.step-active]=\\\"0 == _wizardManagerService.getIndex()\\\">\\n                        <span class=\\\"step-number\\\">1</span>\\n                        <span class=\\\"step-text\\\">Document Type</span>\\n                    </li>\\n                                    <li class=\\\"col-auto wizard-step\\\"\\n                        [class.step-active]=\\\"1 == _wizardManagerService.getIndex()\\\">\\n                        <span class=\\\"step-number\\\">2</span>\\n                        <span class=\\\"step-text\\\">Detail</span>\\n                    </li>\\n                                    <li class=\\\"col-auto wizard-step\\\"\\n                        [class.step-active]=\\\"2 == _wizardManagerService.getIndex()\\\">\\n                        <span class=\\\"step-number\\\">3</span>\\n                        <span class=\\\"step-text\\\">Preview</span>\\n                    </li>\\n                            </ul>\\n\\n            \\n                                                                        <section [hidden]=\\\"_wizardManagerService.getIndex() != 0\\\">                    \\n\\n\\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n\\n    \\n            \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_supplierDocumentTypeObj\\\">Document Type</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                                                            <select [(ngModel)]=\\\"_formService.getObject().supplierDocumentTypeObj\\\"\\n            formControlName = supplierDocumentTypeObj\\n            class=\\\"form-control\\\"\\n            [class.error]=\\\"_formService.getErrors().supplierDocumentTypeObj && (_formService.getErrors().supplierDocumentTypeObj.length > 0)\\\"\\n            id=\\\"form_supplierDocumentTypeObj\\\"\\n            name=\\\"form[supplierDocumentTypeObj]\\\"\\n            required=\\\"required\\\">\\n        <option value=\\\"\\\"></option>\\n                    <option *ngFor=\\\"let choice of _dataService.getFieldChoices('supplierDocumentTypeObj')\\\"\\n                    value=\\\"{{choice['id']}}\\\">{{choice['label']}}</option>\\n            </select>\\n                                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().supplierDocumentTypeObj\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_supplierObj\\\">Supplier</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input [(ngModel)]=\\\"_formService.getObject().supplierObj\\\"\\n           formControlName = supplierObj\\n           name=\\\"form[supplierObj]\\\"\\n           required=\\\"required\\\"           type=\\\"hidden\\\">\\n    <js_autoComplete [field]=\\\"'supplierObj'\\\"\\n                     [hasSelfReference]=\\\"_dataService.getFieldChoicesAttr('supplierObj', 'hasSelfReference')\\\"\\n                                                                       ></js_autoComplete>\\n                    <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().supplierObj\\\">{{error}}</label>\\n            </div>\\n        </div>\\n        \\n\\n    \\n\\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\\n                </section>                                            <section [hidden]=\\\"_wizardManagerService.getIndex() != 1\\\"\\n         class=\\\"js_lazyLoadContainer_1\\\">\\n    <ng-template #js_lazyLoadContainer></ng-template>\\n</section>                                <section [hidden]=\\\"_wizardManagerService.getIndex() != 2\\\"\\n         class=\\\"js_lazyLoadContainer_2\\\">\\n    <ng-template #js_lazyLoadContainer></ng-template>\\n</section>            \\n            \\n            \\n    </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-auto\\\">\\n            <button type=\\\"button\\\" class=\\\"btn-light btn\\\" (click)=\\\"_wizardManagerService.cancelAction($event)\\\">Cancel</button>\\n                <button type=\\\"button\\\" class=\\\"btn-primary btn\\\" (click)=\\\"_wizardManagerService.prevAction($event)\\\"\\n                    *ngIf=\\\"0 < _wizardManagerService.getIndex()\\\">Prev</button>\\n            <button type=\\\"button\\\" class=\\\"btn-primary btn\\\" (click)=\\\"_wizardManagerService.nextAction($event)\\\"\\n                    *ngIf=\\\"2 > _wizardManagerService.getIndex()\\\">Next</button>\\n            <button type=\\\"button\\\" class=\\\"btn-primary btn\\\" (click)=\\\"_wizardManagerService.finishAction($event)\\\"\\n                    *ngIf=\\\"2 == _wizardManagerService.getIndex()\\\">Finish</button>\\n        \\n    </div>\\n</div></div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/templates/form-popup.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/templates/form-popup.component.html\n// module chunks = main","module.exports = \"\\n\\n\\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n\\n\\n    \\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-6\\\">\\n            <img *ngIf=\\\"_dataService.getLocalDataAttr('storeLogo')\\\"\\n                 height=\\\"96\\\"\\n                 alt=\\\"logo\\\"\\n                 class=\\\"m-b-md\\\"\\n                 [src]=\\\"_helperService.getUploadWebPath(_dataService.getLocalDataAttr('storeLogo'), 'resize_96')\\\">\\n            <address>\\n                <strong>{{_formService.getObject().storeLegalName}}</strong><br>\\n                <ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet1\\\"\\n                    ><span>{{_formService.getObject().storeStreet1}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet2\\\"\\n                    ><span>{{_formService.getObject().storeStreet2}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storePostCode\\\"\\n                    ><span>{{_formService.getObject().storePostCode}} {{_formService.getObject().storeCity}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeRegion\\\"\\n                    ><span>{{_formService.getObject().storeRegion}}</span><br></ng-template>            </address>\\n            <ng-template ngFor let-field [ngForOf]=\\\"_dataService.getLocalDataAttr('storeInfo')\\\"><span\\n                    [innerHtml]=\\\"field\\\"></span><br></ng-template>\\n            <p class=\\\"m-t-sm\\\">Tax Number: {{_formService.getObject().storeTaxNumber}}</p>\\n        </div>\\n        <div class=\\\"col-sm-6\\\">\\n            <h3 *ngIf=\\\"_formService.getObject().code\\\" class=\\\"document-number text-right\\\"><span>{{_formService.getObject().documentType_name}}:&nbsp;</span>                        <p id=\\\"form_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().code\\\">{{error}}</label>\\n</h3>\\n            <table class=\\\"table document-dates\\\">\\n                <tbody>\\n                <tr>\\n                    <td><strong>Date:</strong></td>\\n                    <td>                        \\n    <div class=\\\"input-group js_dataPicker\\\"\\n         [datePicker]=\\\"'date'\\\"\\n         #dpk_date=\\\"\\\" [control]=\\\"dpk_date\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"yyyy-mm-dd\\\"\\n               [(ngModel)]=\\\"_formService.getObject().date\\\"\\n               formControlName = date\\n               name=\\\"form[date]\\\"\\n               required=\\\"required\\\"               [class.error]=\\\"_formService.getErrors()['date'] && (_formService.getErrors()['date'].length > 0)\\\"\\n               ngbDatepicker #dpk_date=\\\"ngbDatepicker\\\">\\n        <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn\\\" type=\\\"button\\\"><a class=\\\"fa fa-calendar\\\"></a></button>\\n        </div>\\n    </div>\\n    \\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().date\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                <tr>\\n                    <td><strong>Due Date:</strong></td>\\n                    <td>                        \\n    <div class=\\\"input-group js_dataPicker\\\"\\n         [datePicker]=\\\"'dueDate'\\\"\\n         #dpk_dueDate=\\\"\\\" [control]=\\\"dpk_dueDate\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"yyyy-mm-dd\\\"\\n               [(ngModel)]=\\\"_formService.getObject().dueDate\\\"\\n               formControlName = dueDate\\n               name=\\\"form[dueDate]\\\"\\n               required=\\\"required\\\"               [class.error]=\\\"_formService.getErrors()['dueDate'] && (_formService.getErrors()['dueDate'].length > 0)\\\"\\n               ngbDatepicker #dpk_dueDate=\\\"ngbDatepicker\\\">\\n        <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn\\\" type=\\\"button\\\"><a class=\\\"fa fa-calendar\\\"></a></button>\\n        </div>\\n    </div>\\n    \\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().dueDate\\\">{{error}}</label>\\n</td>\\n                </tr>                </tbody>\\n            </table>\\n\\n            <div class=\\\"\\\">\\n                <span class=\\\"\\\">To:</span>\\n                <div class=\\\"document-entity mt-1\\\">\\n                    <span *ngIf=\\\"_formService.getObject().entity_avatar\\\"\\n                          [innerHTML]=\\\"_formService.getViewObject().entity_avatar\\\" class=\\\"pr-1\\\"></span>\\n                    <address>\\n                        <strong>{{_formService.getObject().entityLegalName}}</strong><br>\\n                        <div class=\\\"m-t-xs m-b-xs\\\">\\n                                                        <input [(ngModel)]=\\\"_formService.getObject().entityAddressObj\\\"\\n           formControlName = entityAddressObj\\n           name=\\\"form[entityAddressObj]\\\"\\n                      type=\\\"hidden\\\">\\n    <js_autoComplete [field]=\\\"'entityAddressObj'\\\"\\n                     [hasSelfReference]=\\\"_dataService.getFieldChoicesAttr('entityAddressObj', 'hasSelfReference')\\\"\\n                                              (onChange)=\\\"onEntityAddressChange($event)\\\"[placeholder]=\\\"&#039;Address&#039;\\\"                         ></js_autoComplete>\\n                    <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().entityAddressObj\\\">{{error}}</label>\\n                        </div>\\n                        <ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet1\\\"\\n                            ><span>{{_formService.getObject().entityStreet1}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet2\\\"\\n                            ><span>{{_formService.getObject().entityStreet2}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityPostCode\\\"\\n                            ><span>{{_formService.getObject().entityPostCode}} {{_formService.getObject().entityCity}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityRegion\\\"\\n                            ><span>{{_formService.getObject().entityRegion}}</span><br></ng-template>                    </address>\\n                </div>\\n            </div>\\n            <p class=\\\"mt-2\\\">Tax Number: {{_formService.getObject().entityTaxNumber}}</p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"mt-2 mb-4\\\">\\n        <span>Comments</span>\\n        <div class=\\\"border rounded document-comments\\\">                            <textarea id=\\\"form_comments\\\" name=\\\"form[comments]\\\" rows=\\\"3\\\" [(ngModel)]=\\\"_formService.getObject().comments\\\" formControlName=\\\"comments\\\" [class.error]=\\\"_formService.getErrors().comments &amp;&amp; _formService.getErrors().comments.length &gt; 0\\\" class=\\\"form-control\\\"></textarea>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().comments\\\">{{error}}</label>\\n</div>\\n    </div>\\n\\n            <section><ng-template #js_lazyLoadContainer></ng-template></section>\\n    \\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-8\\\">\\n            <ng-template [ngIf]=\\\"_dataService.getLocalDataAttr('totalVatSplitByCode')\\\">\\n            <span>TAX Resume</span>\\n            <div class=\\\"border rounded document-tax-resume\\\">\\n                <table class=\\\"table\\\">\\n                    <tbody>\\n                    <tr>\\n                        <th>Code</th>\\n                        <th>Description</th>\\n                        <th>Percentage</th>\\n                        <th>Net</th>\\n                        <th>TAX</th>\\n                        <th>Total</th>\\n                    </tr>\\n                    <tr *ngFor=\\\"let obj of _dataService.getLocalDataAttr('totalVatSplitByCode')\\\">\\n                        <td>{{ obj['name'] }}</td>\\n                        <td>{{ obj['description'] }}</td>\\n                        <td class=\\\"text-right\\\">{{ obj['percentage'] }}%</td>\\n                        <td class=\\\"text-right\\\">{{ obj['subTotal'] }}</td>\\n                        <td class=\\\"text-right\\\">{{ obj['totalVat'] }}</td>\\n                        <td class=\\\"text-right\\\">{{ obj['total'] }}</td>\\n                    </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n            </ng-template>\\n        </div>\\n        <div class=\\\"col-sm-4\\\">\\n            <table class=\\\"table document-total\\\">\\n                <tbody>\\n                <tr>\\n                    <td><strong>Sub Total:</strong></td>\\n                    <td>                            <input type=\\\"text\\\" id=\\\"form_subTotal\\\" name=\\\"form[subTotal]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().subTotal\\\" formControlName=\\\"subTotal\\\" [class.error]=\\\"_formService.getErrors().subTotal &amp;&amp; _formService.getErrors().subTotal.length &gt; 0\\\" class=\\\"form-control\\\" value=\\\"0\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().subTotal\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                <tr>\\n                    <td><strong>TAX:</strong></td>\\n                    <td>                            <input type=\\\"text\\\" id=\\\"form_totalVat\\\" name=\\\"form[totalVat]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().totalVat\\\" formControlName=\\\"totalVat\\\" [class.error]=\\\"_formService.getErrors().totalVat &amp;&amp; _formService.getErrors().totalVat.length &gt; 0\\\" class=\\\"form-control\\\" value=\\\"0\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().totalVat\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                <tr>\\n                    <td><strong>Total:</strong></td>\\n                    <td>                            <input type=\\\"text\\\" id=\\\"form_total\\\" name=\\\"form[total]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().total\\\" formControlName=\\\"total\\\" [class.error]=\\\"_formService.getErrors().total &amp;&amp; _formService.getErrors().total.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().total\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n    <div *ngIf=\\\"_dataService.getLocalDataAttr('documentInfo') && _dataService.getLocalDataAttr('documentInfo')['footer']\\\"\\n         class=\\\"mt-2 bg-light p-3\\\"\\n         [innerHTML]=\\\"_dataService.getLocalDataAttr('documentInfo')['footer']\\\"></div>\\n\\n\\n    \\n\\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/templates/step3-invoice.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/templates/step3-invoice.component.html\n// module chunks = main","module.exports = \"\\n\\n\\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n\\n\\n    \\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-6\\\">\\n            <img *ngIf=\\\"_dataService.getLocalDataAttr('storeLogo')\\\"\\n                 height=\\\"96\\\"\\n                 alt=\\\"logo\\\"\\n                 class=\\\"m-b-md\\\"\\n                 [src]=\\\"_helperService.getUploadWebPath(_dataService.getLocalDataAttr('storeLogo'), 'resize_96')\\\">\\n            <address>\\n                <strong>{{_formService.getObject().storeLegalName}}</strong><br>\\n                <ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet1\\\"\\n                    ><span>{{_formService.getObject().storeStreet1}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet2\\\"\\n                    ><span>{{_formService.getObject().storeStreet2}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storePostCode\\\"\\n                    ><span>{{_formService.getObject().storePostCode}} {{_formService.getObject().storeCity}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeRegion\\\"\\n                    ><span>{{_formService.getObject().storeRegion}}</span><br></ng-template>            </address>\\n            <ng-template ngFor let-field [ngForOf]=\\\"_dataService.getLocalDataAttr('storeInfo')\\\"><span\\n                    [innerHtml]=\\\"field\\\"></span><br></ng-template>\\n            <p class=\\\"m-t-sm\\\">Tax Number: {{_formService.getObject().storeTaxNumber}}</p>\\n        </div>\\n        <div class=\\\"col-sm-6\\\">\\n            <h3 *ngIf=\\\"_formService.getObject().code\\\" class=\\\"document-number text-right\\\"><span>{{_formService.getObject().documentType_name}}:&nbsp;</span>                        <p id=\\\"form_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().code\\\">{{error}}</label>\\n</h3>\\n            <table class=\\\"table document-dates\\\">\\n                <tbody>\\n                <tr>\\n                    <td><strong>Date:</strong></td>\\n                    <td>                        \\n    <div class=\\\"input-group js_dataPicker\\\"\\n         [datePicker]=\\\"'date'\\\"\\n         #dpk_date=\\\"\\\" [control]=\\\"dpk_date\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"yyyy-mm-dd\\\"\\n               [(ngModel)]=\\\"_formService.getObject().date\\\"\\n               formControlName = date\\n               name=\\\"form[date]\\\"\\n               required=\\\"required\\\"               [class.error]=\\\"_formService.getErrors()['date'] && (_formService.getErrors()['date'].length > 0)\\\"\\n               ngbDatepicker #dpk_date=\\\"ngbDatepicker\\\">\\n        <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn\\\" type=\\\"button\\\"><a class=\\\"fa fa-calendar\\\"></a></button>\\n        </div>\\n    </div>\\n    \\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().date\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                                </tbody>\\n            </table>\\n\\n            <div class=\\\"\\\">\\n                <span class=\\\"\\\">To:</span>\\n                <div class=\\\"document-entity mt-1\\\">\\n                    <span *ngIf=\\\"_formService.getObject().entity_avatar\\\"\\n                          [innerHTML]=\\\"_formService.getViewObject().entity_avatar\\\" class=\\\"pr-1\\\"></span>\\n                    <address>\\n                        <strong>{{_formService.getObject().entityLegalName}}</strong><br>\\n                        <div class=\\\"m-t-xs m-b-xs\\\">\\n                                                        <input [(ngModel)]=\\\"_formService.getObject().entityAddressObj\\\"\\n           formControlName = entityAddressObj\\n           name=\\\"form[entityAddressObj]\\\"\\n                      type=\\\"hidden\\\">\\n    <js_autoComplete [field]=\\\"'entityAddressObj'\\\"\\n                     [hasSelfReference]=\\\"_dataService.getFieldChoicesAttr('entityAddressObj', 'hasSelfReference')\\\"\\n                                              (onChange)=\\\"onEntityAddressChange($event)\\\"[placeholder]=\\\"&#039;Address&#039;\\\"                         ></js_autoComplete>\\n                    <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().entityAddressObj\\\">{{error}}</label>\\n                        </div>\\n                        <ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet1\\\"\\n                            ><span>{{_formService.getObject().entityStreet1}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet2\\\"\\n                            ><span>{{_formService.getObject().entityStreet2}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityPostCode\\\"\\n                            ><span>{{_formService.getObject().entityPostCode}} {{_formService.getObject().entityCity}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityRegion\\\"\\n                            ><span>{{_formService.getObject().entityRegion}}</span><br></ng-template>                    </address>\\n                </div>\\n            </div>\\n            <p class=\\\"mt-2\\\">Tax Number: {{_formService.getObject().entityTaxNumber}}</p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"mt-2 mb-4\\\">\\n        <span>Comments</span>\\n        <div class=\\\"border rounded document-comments\\\">                            <textarea id=\\\"form_comments\\\" name=\\\"form[comments]\\\" rows=\\\"3\\\" [(ngModel)]=\\\"_formService.getObject().comments\\\" formControlName=\\\"comments\\\" [class.error]=\\\"_formService.getErrors().comments &amp;&amp; _formService.getErrors().comments.length &gt; 0\\\" class=\\\"form-control\\\"></textarea>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().comments\\\">{{error}}</label>\\n</div>\\n    </div>\\n\\n    <section><ng-template #js_lazyLoadContainer></ng-template></section>\\n    <div class=\\\"row\\\"><div class=\\\"col-md-4 offset-md-8\\\">\\n    <table class=\\\"table document-total\\\">\\n        <tbody>\\n        <tr>\\n    <td><strong>Total:</strong></td>\\n    <td>                            <input type=\\\"text\\\" id=\\\"form_total\\\" name=\\\"form[total]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().total\\\" formControlName=\\\"total\\\" [class.error]=\\\"_formService.getErrors().total &amp;&amp; _formService.getErrors().total.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().total\\\">{{error}}</label>\\n</td>\\n</tr>        </tbody>\\n    </table>\\n</div></div>\\n    <div *ngIf=\\\"_dataService.getLocalDataAttr('documentInfo') && _dataService.getLocalDataAttr('documentInfo')['footer']\\\"\\n         class=\\\"mt-2 bg-light p-3\\\"\\n         [innerHTML]=\\\"_dataService.getLocalDataAttr('documentInfo')['footer']\\\"></div>\\n\\n\\n    \\n\\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/templates/step3-payment.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/templates/step3-payment.component.html\n// module chunks = main","module.exports = \"\\n\\n\\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n\\n\\n    \\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-6\\\">\\n            <img *ngIf=\\\"_dataService.getLocalDataAttr('storeLogo')\\\"\\n                 height=\\\"96\\\"\\n                 alt=\\\"logo\\\"\\n                 class=\\\"m-b-md\\\"\\n                 [src]=\\\"_helperService.getUploadWebPath(_dataService.getLocalDataAttr('storeLogo'), 'resize_96')\\\">\\n            <address>\\n                <strong>{{_formService.getObject().storeLegalName}}</strong><br>\\n                <ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet1\\\"\\n                    ><span>{{_formService.getObject().storeStreet1}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet2\\\"\\n                    ><span>{{_formService.getObject().storeStreet2}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storePostCode\\\"\\n                    ><span>{{_formService.getObject().storePostCode}} {{_formService.getObject().storeCity}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeRegion\\\"\\n                    ><span>{{_formService.getObject().storeRegion}}</span><br></ng-template>            </address>\\n            <ng-template ngFor let-field [ngForOf]=\\\"_dataService.getLocalDataAttr('storeInfo')\\\"><span\\n                    [innerHtml]=\\\"field\\\"></span><br></ng-template>\\n            <p class=\\\"m-t-sm\\\">Tax Number: {{_formService.getObject().storeTaxNumber}}</p>\\n        </div>\\n        <div class=\\\"col-sm-6\\\">\\n            <h3 *ngIf=\\\"_formService.getObject().code\\\" class=\\\"document-number text-right\\\"><span>{{_formService.getObject().documentType_name}}:&nbsp;</span>                        <p id=\\\"form_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().code\\\">{{error}}</label>\\n</h3>\\n            <table class=\\\"table document-dates\\\">\\n                <tbody>\\n                <tr>\\n                    <td><strong>Date:</strong></td>\\n                    <td>                        \\n    <div class=\\\"input-group js_dataPicker\\\"\\n         [datePicker]=\\\"'date'\\\"\\n         #dpk_date=\\\"\\\" [control]=\\\"dpk_date\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"yyyy-mm-dd\\\"\\n               [(ngModel)]=\\\"_formService.getObject().date\\\"\\n               formControlName = date\\n               name=\\\"form[date]\\\"\\n               required=\\\"required\\\"               [class.error]=\\\"_formService.getErrors()['date'] && (_formService.getErrors()['date'].length > 0)\\\"\\n               ngbDatepicker #dpk_date=\\\"ngbDatepicker\\\">\\n        <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn\\\" type=\\\"button\\\"><a class=\\\"fa fa-calendar\\\"></a></button>\\n        </div>\\n    </div>\\n    \\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().date\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                                </tbody>\\n            </table>\\n\\n            <div class=\\\"\\\">\\n                <span class=\\\"\\\">To:</span>\\n                <div class=\\\"document-entity mt-1\\\">\\n                    <span *ngIf=\\\"_formService.getObject().entity_avatar\\\"\\n                          [innerHTML]=\\\"_formService.getViewObject().entity_avatar\\\" class=\\\"pr-1\\\"></span>\\n                    <address>\\n                        <strong>{{_formService.getObject().entityLegalName}}</strong><br>\\n                        <div class=\\\"m-t-xs m-b-xs\\\">\\n                                                        <input [(ngModel)]=\\\"_formService.getObject().entityAddressObj\\\"\\n           formControlName = entityAddressObj\\n           name=\\\"form[entityAddressObj]\\\"\\n                      type=\\\"hidden\\\">\\n    <js_autoComplete [field]=\\\"'entityAddressObj'\\\"\\n                     [hasSelfReference]=\\\"_dataService.getFieldChoicesAttr('entityAddressObj', 'hasSelfReference')\\\"\\n                                              (onChange)=\\\"onEntityAddressChange($event)\\\"[placeholder]=\\\"&#039;Address&#039;\\\"                         ></js_autoComplete>\\n                    <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().entityAddressObj\\\">{{error}}</label>\\n                        </div>\\n                        <ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet1\\\"\\n                            ><span>{{_formService.getObject().entityStreet1}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet2\\\"\\n                            ><span>{{_formService.getObject().entityStreet2}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityPostCode\\\"\\n                            ><span>{{_formService.getObject().entityPostCode}} {{_formService.getObject().entityCity}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityRegion\\\"\\n                            ><span>{{_formService.getObject().entityRegion}}</span><br></ng-template>                    </address>\\n                </div>\\n            </div>\\n            <p class=\\\"mt-2\\\">Tax Number: {{_formService.getObject().entityTaxNumber}}</p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"mt-2 mb-4\\\">\\n        <span>Comments</span>\\n        <div class=\\\"border rounded document-comments\\\">                            <textarea id=\\\"form_comments\\\" name=\\\"form[comments]\\\" rows=\\\"3\\\" [(ngModel)]=\\\"_formService.getObject().comments\\\" formControlName=\\\"comments\\\" [class.error]=\\\"_formService.getErrors().comments &amp;&amp; _formService.getErrors().comments.length &gt; 0\\\" class=\\\"form-control\\\"></textarea>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().comments\\\">{{error}}</label>\\n</div>\\n    </div>\\n\\n    <section>\\n    <ng-template #js_lazyLoadContainer></ng-template>\\n    <ng-template #js_lazyLoadContainer></ng-template>\\n</section>\\n    <div class=\\\"row\\\"><div class=\\\"col-md-4 offset-md-8\\\">\\n    <table class=\\\"table document-total\\\">\\n        <tbody>\\n        <tr>\\n            <td><strong>DIFF:</strong></td>\\n            <td><input class=\\\"form-control js_diffControl\\\"\\n                       readonly=\\\"readonly\\\"\\n                       type=\\\"text\\\"\\n                       value=\\\"0\\\"></td>\\n        </tr>        </tbody>\\n    </table>\\n</div></div>\\n    <div *ngIf=\\\"_dataService.getLocalDataAttr('documentInfo') && _dataService.getLocalDataAttr('documentInfo')['footer']\\\"\\n         class=\\\"mt-2 bg-light p-3\\\"\\n         [innerHTML]=\\\"_dataService.getLocalDataAttr('documentInfo')['footer']\\\"></div>\\n\\n\\n    \\n\\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/templates/step3-receipt.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/templates/step3-receipt.component.html\n// module chunks = main","module.exports = \"\\n\\n\\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n\\n\\n    \\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-6\\\">\\n            <img *ngIf=\\\"_dataService.getLocalDataAttr('storeLogo')\\\"\\n                 height=\\\"96\\\"\\n                 alt=\\\"logo\\\"\\n                 class=\\\"m-b-md\\\"\\n                 [src]=\\\"_helperService.getUploadWebPath(_dataService.getLocalDataAttr('storeLogo'), 'resize_96')\\\">\\n            <address>\\n                <strong>{{_formService.getObject().storeLegalName}}</strong><br>\\n                <ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet1\\\"\\n                    ><span>{{_formService.getObject().storeStreet1}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet2\\\"\\n                    ><span>{{_formService.getObject().storeStreet2}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storePostCode\\\"\\n                    ><span>{{_formService.getObject().storePostCode}} {{_formService.getObject().storeCity}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeRegion\\\"\\n                    ><span>{{_formService.getObject().storeRegion}}</span><br></ng-template>            </address>\\n            <ng-template ngFor let-field [ngForOf]=\\\"_dataService.getLocalDataAttr('storeInfo')\\\"><span\\n                    [innerHtml]=\\\"field\\\"></span><br></ng-template>\\n            <p class=\\\"m-t-sm\\\">Tax Number: {{_formService.getObject().storeTaxNumber}}</p>\\n        </div>\\n        <div class=\\\"col-sm-6\\\">\\n            <h3 *ngIf=\\\"_formService.getObject().code\\\" class=\\\"document-number text-right\\\"><span>{{_formService.getObject().documentType_name}}:&nbsp;</span>                        <p id=\\\"form_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().code\\\">{{error}}</label>\\n</h3>\\n            <table class=\\\"table document-dates\\\">\\n                <tbody>\\n                <tr>\\n                    <td><strong>Date:</strong></td>\\n                    <td>                        \\n    <div class=\\\"input-group js_dataPicker\\\"\\n         [datePicker]=\\\"'date'\\\"\\n         #dpk_date=\\\"\\\" [control]=\\\"dpk_date\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"yyyy-mm-dd\\\"\\n               [(ngModel)]=\\\"_formService.getObject().date\\\"\\n               formControlName = date\\n               name=\\\"form[date]\\\"\\n               required=\\\"required\\\"               [class.error]=\\\"_formService.getErrors()['date'] && (_formService.getErrors()['date'].length > 0)\\\"\\n               ngbDatepicker #dpk_date=\\\"ngbDatepicker\\\">\\n        <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn\\\" type=\\\"button\\\"><a class=\\\"fa fa-calendar\\\"></a></button>\\n        </div>\\n    </div>\\n    \\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().date\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                <tr>\\n                    <td><strong>Due Date:</strong></td>\\n                    <td>                        \\n    <div class=\\\"input-group js_dataPicker\\\"\\n         [datePicker]=\\\"'dueDate'\\\"\\n         #dpk_dueDate=\\\"\\\" [control]=\\\"dpk_dueDate\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"yyyy-mm-dd\\\"\\n               [(ngModel)]=\\\"_formService.getObject().dueDate\\\"\\n               formControlName = dueDate\\n               name=\\\"form[dueDate]\\\"\\n               required=\\\"required\\\"               [class.error]=\\\"_formService.getErrors()['dueDate'] && (_formService.getErrors()['dueDate'].length > 0)\\\"\\n               ngbDatepicker #dpk_dueDate=\\\"ngbDatepicker\\\">\\n        <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn\\\" type=\\\"button\\\"><a class=\\\"fa fa-calendar\\\"></a></button>\\n        </div>\\n    </div>\\n    \\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().dueDate\\\">{{error}}</label>\\n</td>\\n                </tr>                </tbody>\\n            </table>\\n\\n            <div class=\\\"\\\">\\n                <span class=\\\"\\\">To:</span>\\n                <div class=\\\"document-entity mt-1\\\">\\n                    <span *ngIf=\\\"_formService.getObject().entity_avatar\\\"\\n                          [innerHTML]=\\\"_formService.getViewObject().entity_avatar\\\" class=\\\"pr-1\\\"></span>\\n                    <address>\\n                        <strong>{{_formService.getObject().entityLegalName}}</strong><br>\\n                        <div class=\\\"m-t-xs m-b-xs\\\">\\n                                                        <input [(ngModel)]=\\\"_formService.getObject().entityAddressObj\\\"\\n           formControlName = entityAddressObj\\n           name=\\\"form[entityAddressObj]\\\"\\n                      type=\\\"hidden\\\">\\n    <js_autoComplete [field]=\\\"'entityAddressObj'\\\"\\n                     [hasSelfReference]=\\\"_dataService.getFieldChoicesAttr('entityAddressObj', 'hasSelfReference')\\\"\\n                                              (onChange)=\\\"onEntityAddressChange($event)\\\"[placeholder]=\\\"&#039;Address&#039;\\\"                         ></js_autoComplete>\\n                    <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().entityAddressObj\\\">{{error}}</label>\\n                        </div>\\n                        <ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet1\\\"\\n                            ><span>{{_formService.getObject().entityStreet1}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet2\\\"\\n                            ><span>{{_formService.getObject().entityStreet2}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityPostCode\\\"\\n                            ><span>{{_formService.getObject().entityPostCode}} {{_formService.getObject().entityCity}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityRegion\\\"\\n                            ><span>{{_formService.getObject().entityRegion}}</span><br></ng-template>                    </address>\\n                </div>\\n            </div>\\n            <p class=\\\"mt-2\\\">Tax Number: {{_formService.getObject().entityTaxNumber}}</p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"mt-2 mb-4\\\">\\n        <span>Comments</span>\\n        <div class=\\\"border rounded document-comments\\\">                            <textarea id=\\\"form_comments\\\" name=\\\"form[comments]\\\" rows=\\\"3\\\" [(ngModel)]=\\\"_formService.getObject().comments\\\" formControlName=\\\"comments\\\" [class.error]=\\\"_formService.getErrors().comments &amp;&amp; _formService.getErrors().comments.length &gt; 0\\\" class=\\\"form-control\\\"></textarea>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().comments\\\">{{error}}</label>\\n</div>\\n    </div>\\n\\n            <section><ng-template #js_lazyLoadContainer></ng-template></section>\\n    \\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-8\\\">\\n            <ng-template [ngIf]=\\\"_dataService.getLocalDataAttr('totalVatSplitByCode')\\\">\\n            <span>TAX Resume</span>\\n            <div class=\\\"border rounded document-tax-resume\\\">\\n                <table class=\\\"table\\\">\\n                    <tbody>\\n                    <tr>\\n                        <th>Code</th>\\n                        <th>Description</th>\\n                        <th>Percentage</th>\\n                        <th>Net</th>\\n                        <th>TAX</th>\\n                        <th>Total</th>\\n                    </tr>\\n                    <tr *ngFor=\\\"let obj of _dataService.getLocalDataAttr('totalVatSplitByCode')\\\">\\n                        <td>{{ obj['name'] }}</td>\\n                        <td>{{ obj['description'] }}</td>\\n                        <td class=\\\"text-right\\\">{{ obj['percentage'] }}%</td>\\n                        <td class=\\\"text-right\\\">{{ obj['subTotal'] }}</td>\\n                        <td class=\\\"text-right\\\">{{ obj['totalVat'] }}</td>\\n                        <td class=\\\"text-right\\\">{{ obj['total'] }}</td>\\n                    </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n            </ng-template>\\n        </div>\\n        <div class=\\\"col-sm-4\\\">\\n            <table class=\\\"table document-total\\\">\\n                <tbody>\\n                <tr>\\n                    <td><strong>Sub Total:</strong></td>\\n                    <td>                            <input type=\\\"text\\\" id=\\\"form_subTotal\\\" name=\\\"form[subTotal]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().subTotal\\\" formControlName=\\\"subTotal\\\" [class.error]=\\\"_formService.getErrors().subTotal &amp;&amp; _formService.getErrors().subTotal.length &gt; 0\\\" class=\\\"form-control\\\" value=\\\"0\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().subTotal\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                <tr>\\n                    <td><strong>TAX:</strong></td>\\n                    <td>                            <input type=\\\"text\\\" id=\\\"form_totalVat\\\" name=\\\"form[totalVat]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().totalVat\\\" formControlName=\\\"totalVat\\\" [class.error]=\\\"_formService.getErrors().totalVat &amp;&amp; _formService.getErrors().totalVat.length &gt; 0\\\" class=\\\"form-control\\\" value=\\\"0\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().totalVat\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                <tr>\\n                    <td><strong>Total:</strong></td>\\n                    <td>                            <input type=\\\"text\\\" id=\\\"form_total\\\" name=\\\"form[total]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().total\\\" formControlName=\\\"total\\\" [class.error]=\\\"_formService.getErrors().total &amp;&amp; _formService.getErrors().total.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().total\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n    <div *ngIf=\\\"_dataService.getLocalDataAttr('documentInfo') && _dataService.getLocalDataAttr('documentInfo')['footer']\\\"\\n         class=\\\"mt-2 bg-light p-3\\\"\\n         [innerHTML]=\\\"_dataService.getLocalDataAttr('documentInfo')['footer']\\\"></div>\\n\\n\\n    \\n\\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/templates/step3-rectification.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/templates/step3-rectification.component.html\n// module chunks = main","module.exports = \"\\n\\n\\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n\\n\\n    \\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-6\\\">\\n            <img *ngIf=\\\"_dataService.getLocalDataAttr('storeLogo')\\\"\\n                 height=\\\"96\\\"\\n                 alt=\\\"logo\\\"\\n                 class=\\\"m-b-md\\\"\\n                 [src]=\\\"_helperService.getUploadWebPath(_dataService.getLocalDataAttr('storeLogo'), 'resize_96')\\\">\\n            <address>\\n                <strong>{{_formService.getObject().storeLegalName}}</strong><br>\\n                <ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet1\\\"\\n                    ><span>{{_formService.getObject().storeStreet1}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet2\\\"\\n                    ><span>{{_formService.getObject().storeStreet2}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storePostCode\\\"\\n                    ><span>{{_formService.getObject().storePostCode}} {{_formService.getObject().storeCity}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeRegion\\\"\\n                    ><span>{{_formService.getObject().storeRegion}}</span><br></ng-template>            </address>\\n            <ng-template ngFor let-field [ngForOf]=\\\"_dataService.getLocalDataAttr('storeInfo')\\\"><span\\n                    [innerHtml]=\\\"field\\\"></span><br></ng-template>\\n            <p class=\\\"m-t-sm\\\">Tax Number: {{_formService.getObject().storeTaxNumber}}</p>\\n        </div>\\n        <div class=\\\"col-sm-6\\\">\\n            <h3 *ngIf=\\\"_formService.getObject().code\\\" class=\\\"document-number text-right\\\"><span>{{_formService.getObject().documentType_name}}:&nbsp;</span>                        <p id=\\\"form_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().code\\\">{{error}}</label>\\n</h3>\\n            <table class=\\\"table document-dates\\\">\\n                <tbody>\\n                <tr>\\n                    <td><strong>Date:</strong></td>\\n                    <td>                        \\n    <div class=\\\"input-group js_dataPicker\\\"\\n         [datePicker]=\\\"'date'\\\"\\n         #dpk_date=\\\"\\\" [control]=\\\"dpk_date\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"yyyy-mm-dd\\\"\\n               [(ngModel)]=\\\"_formService.getObject().date\\\"\\n               formControlName = date\\n               name=\\\"form[date]\\\"\\n               required=\\\"required\\\"               [class.error]=\\\"_formService.getErrors()['date'] && (_formService.getErrors()['date'].length > 0)\\\"\\n               ngbDatepicker #dpk_date=\\\"ngbDatepicker\\\">\\n        <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn\\\" type=\\\"button\\\"><a class=\\\"fa fa-calendar\\\"></a></button>\\n        </div>\\n    </div>\\n    \\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().date\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                                </tbody>\\n            </table>\\n\\n            <div class=\\\"\\\">\\n                <span class=\\\"\\\">To:</span>\\n                <div class=\\\"document-entity mt-1\\\">\\n                    <span *ngIf=\\\"_formService.getObject().entity_avatar\\\"\\n                          [innerHTML]=\\\"_formService.getViewObject().entity_avatar\\\" class=\\\"pr-1\\\"></span>\\n                    <address>\\n                        <strong>{{_formService.getObject().entityLegalName}}</strong><br>\\n                        <div class=\\\"m-t-xs m-b-xs\\\">\\n                                                        <input [(ngModel)]=\\\"_formService.getObject().entityAddressObj\\\"\\n           formControlName = entityAddressObj\\n           name=\\\"form[entityAddressObj]\\\"\\n                      type=\\\"hidden\\\">\\n    <js_autoComplete [field]=\\\"'entityAddressObj'\\\"\\n                     [hasSelfReference]=\\\"_dataService.getFieldChoicesAttr('entityAddressObj', 'hasSelfReference')\\\"\\n                                              (onChange)=\\\"onEntityAddressChange($event)\\\"[placeholder]=\\\"&#039;Address&#039;\\\"                         ></js_autoComplete>\\n                    <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().entityAddressObj\\\">{{error}}</label>\\n                        </div>\\n                        <ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet1\\\"\\n                            ><span>{{_formService.getObject().entityStreet1}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet2\\\"\\n                            ><span>{{_formService.getObject().entityStreet2}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityPostCode\\\"\\n                            ><span>{{_formService.getObject().entityPostCode}} {{_formService.getObject().entityCity}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityRegion\\\"\\n                            ><span>{{_formService.getObject().entityRegion}}</span><br></ng-template>                    </address>\\n                </div>\\n            </div>\\n            <p class=\\\"mt-2\\\">Tax Number: {{_formService.getObject().entityTaxNumber}}</p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"mt-2 mb-4\\\">\\n        <span>Comments</span>\\n        <div class=\\\"border rounded document-comments\\\">                            <textarea id=\\\"form_comments\\\" name=\\\"form[comments]\\\" rows=\\\"3\\\" [(ngModel)]=\\\"_formService.getObject().comments\\\" formControlName=\\\"comments\\\" [class.error]=\\\"_formService.getErrors().comments &amp;&amp; _formService.getErrors().comments.length &gt; 0\\\" class=\\\"form-control\\\"></textarea>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().comments\\\">{{error}}</label>\\n</div>\\n    </div>\\n\\n    <section><ng-template #js_lazyLoadContainer></ng-template></section>\\n    <div class=\\\"row\\\"><div class=\\\"col-md-4 offset-md-8\\\">\\n    <table class=\\\"table document-total\\\">\\n        <tbody>\\n        <tr>\\n            <td><strong>DIFF:</strong></td>\\n            <td><input class=\\\"form-control js_diffControl\\\"\\n                       readonly=\\\"readonly\\\"\\n                       type=\\\"text\\\"\\n                       value=\\\"0\\\"></td>\\n        </tr>        </tbody>\\n    </table>\\n</div></div>\\n    <div *ngIf=\\\"_dataService.getLocalDataAttr('documentInfo') && _dataService.getLocalDataAttr('documentInfo')['footer']\\\"\\n         class=\\\"mt-2 bg-light p-3\\\"\\n         [innerHTML]=\\\"_dataService.getLocalDataAttr('documentInfo')['footer']\\\"></div>\\n\\n\\n    \\n\\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/templates/step3-settlement.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/supplier-document/add/ts/templates/step3-settlement.component.html\n// module chunks = main","import {Component, ElementRef, Inject, Optional, Injector, ReflectiveInjector, Renderer, ViewChild, ViewContainerRef, EventEmitter} from '@angular/core';\nimport {BaseModalPopup} from '../../../../../../../../AppBundle/Resources/public/modal/ts/base-modal-popup';\nimport {DynamicComponentLoaderService} from '../../../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\n\n\n/* Import dependencies */\n// INVOICE\nimport {InvoiceFormPopupExtModule as SupplierDocumentEditInvoiceFormPopupExtModule} from './invoice-form-popup.ext-module';\n// RECTIFICATION\nimport {InvoiceRectificationFormPopupExtModule as SupplierDocumentEditInvoiceRectificationFormPopupExtModule} from './invoice-rectification-form-popup.ext-module';\n// RECEIPT\nimport {ReceiptFormPopupExtModule as SupplierDocumentEditReceiptFormPopupExtModule} from './receipt-form-popup.ext-module';\n// PAYMENT\nimport {ReceiptPaymentFormPopupExtModule as SupplierDocumentEditReceiptPaymentFormPopupExtModule} from './receipt-payment-form-popup.ext-module';\n// SETTLEMENT\nimport {ReceiptSettlementFormPopupExtModule as SupplierDocumentEditReceiptSettlementFormPopupExtModule} from './receipt-settlement-form-popup.ext-module';\n/* /Import dependencies */\n\n\n@Component({\n    selector: '.js_documentEditFormPopup',\n    template: `<ng-template #js_lazyLoadContainer></ng-template>`\n})\nexport class FormPopupComponent extends BaseModalPopup\n{\n    // To load the edit module according with the document type\n    @ViewChild('js_lazyLoadContainer', {read: ViewContainerRef}) lazyLoadViewContainerRef: ViewContainerRef;\n    // To dependency close popup\n    protected _onDependencyDismissSubscription: any;\n\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        protected _dynamicComponentLoaderService: DynamicComponentLoaderService,\n        protected _injector: Injector,\n        @Inject('DataService') protected _dataService: any\n    ) {\n        super(\n            elementRef,\n            renderer,\n            null\n        );\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngAfterViewInit() {\n        let that = this,\n            documentType = (this._dataService.getObject()['documentType_type'] || null),\n            module = null,\n            component = null;\n\n        // Determine context\n        switch (documentType) {\n            case 'RECTIFICATION':\n                module = SupplierDocumentEditInvoiceRectificationFormPopupExtModule;\n                component = 'InvoiceRectificationFormPopupComponent';\n                break;\n            case 'RECEIPT':\n                module = SupplierDocumentEditReceiptFormPopupExtModule;\n                component = 'ReceiptFormPopupComponent';\n                break;\n            case 'PAYMENT':\n                module = SupplierDocumentEditReceiptPaymentFormPopupExtModule;\n                component = 'ReceiptPaymentFormPopupComponent';\n                break;\n            case 'SETTLEMENT':\n                module = SupplierDocumentEditReceiptSettlementFormPopupExtModule;\n                component = 'ReceiptSettlementFormPopupComponent';\n                break;\n            default: // INVOICE\n                module = SupplierDocumentEditInvoiceFormPopupExtModule;\n                component = 'InvoiceFormPopupComponent';\n        }\n\n        // Load dependency\n        this._dynamicComponentLoaderService.load(\n            module,\n            component,\n            this.lazyLoadViewContainerRef,\n            this._injector\n        ).then(\n            componentRef => {\n                that._onDependencyDismissSubscription = componentRef.instance.onDismissEmitter.subscribe(\n                    data => {\n                        // Close popup\n                        that.closeAction();\n                    }\n                );\n                return true;\n            },\n            errors => {\n                console.log(errors);\n                return null;\n            }\n        );\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnDestroy()\n    {\n        // At this time, the component subscription is already destroyed, so does not need to unsubscribe.\n        if (this._onDependencyDismissSubscription) {\n            this._onDependencyDismissSubscription.unsubscribe();\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/src/form-popup.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {FormPopupComponent} from './form-popup.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        FormPopupComponent\n    ],\n    exports: [FormPopupComponent]\n})\nexport class FormPopupExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/src/form-popup.ext-module.ts","import {Component, ElementRef, Inject, Optional, Injector, ReflectiveInjector, Renderer, ViewChild, ViewContainerRef} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {DynamicComponentLoaderService} from '../../../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\nimport {PostService} from '../../../../../../../../AppBundle/Resources/public/ts/post.service';\nimport {BaseInvoiceDocumentFormPopupExtComponent} from '../../../ts/base-invoice-document-form-popup.ext-component';\n\n\n@Component({\n    selector: '.js_documentEditFormPopup',\n    templateUrl: '../templates/invoice-form-popup.component.html'\n})\nexport class InvoiceFormPopupComponent extends BaseInvoiceDocumentFormPopupExtComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any,\n        injector: Injector,\n        @Inject('ParentDataService') parentDataService: any,\n        @Inject('HelperService') helperService: any,\n        dynamicComponentLoaderService: DynamicComponentLoaderService,\n        postService: PostService\n    ) {\n        super();\n        super.initBaseInvoiceDocumentFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            injector,\n            parentDataService,\n            helperService,\n            dynamicComponentLoaderService,\n            postService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/src/invoice-form-popup.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {InvoiceFormPopupComponent} from './invoice-form-popup.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        InvoiceFormPopupComponent\n    ],\n    exports: [InvoiceFormPopupComponent]\n})\nexport class InvoiceFormPopupExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/src/invoice-form-popup.ext-module.ts","import {Component, ElementRef, Inject, Optional, Injector, ReflectiveInjector, Renderer, ViewChild, ViewContainerRef} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {DynamicComponentLoaderService} from '../../../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\nimport {PostService} from '../../../../../../../../AppBundle/Resources/public/ts/post.service';\nimport {BaseInvoiceRectificationDocumentFormPopupExtComponent} from '../../../ts/base-invoice-rectification-document-form-popup.ext-component';\n\n\n@Component({\n    selector: '.js_documentEditFormPopup',\n    templateUrl: '../templates/invoice-rectification-form-popup.component.html'\n})\nexport class InvoiceRectificationFormPopupComponent extends BaseInvoiceRectificationDocumentFormPopupExtComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any,\n        injector: Injector,\n        @Inject('ParentDataService') parentDataService: any,\n        @Inject('HelperService') helperService: any,\n        dynamicComponentLoaderService: DynamicComponentLoaderService,\n        postService: PostService\n    ) {\n        super();\n        super.initBaseInvoiceRectificationDocumentFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            injector,\n            parentDataService,\n            helperService,\n            dynamicComponentLoaderService,\n            postService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/src/invoice-rectification-form-popup.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {InvoiceRectificationFormPopupComponent} from './invoice-rectification-form-popup.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        InvoiceRectificationFormPopupComponent\n    ],\n    exports: [InvoiceRectificationFormPopupComponent]\n})\nexport class InvoiceRectificationFormPopupExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/src/invoice-rectification-form-popup.ext-module.ts","import {Component, ElementRef, Inject, Optional, Injector, ReflectiveInjector, Renderer, ViewChild, ViewContainerRef} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {DynamicComponentLoaderService} from '../../../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\nimport {PostService} from '../../../../../../../../AppBundle/Resources/public/ts/post.service';\nimport {BaseReceiptDocumentFormPopupExtComponent} from '../../../ts/base-receipt-document-form-popup.ext-component';\n\n\n@Component({\n    selector: '.js_documentEditFormPopup',\n    templateUrl: '../templates/receipt-form-popup.component.html'\n})\nexport class ReceiptFormPopupComponent extends BaseReceiptDocumentFormPopupExtComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any,\n        injector: Injector,\n        @Inject('ParentDataService') parentDataService: any,\n        @Inject('HelperService') helperService: any,\n        dynamicComponentLoaderService: DynamicComponentLoaderService,\n        postService: PostService\n    ) {\n        super();\n        super.initBaseReceiptDocumentFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            injector,\n            parentDataService,\n            helperService,\n            dynamicComponentLoaderService,\n            postService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/src/receipt-form-popup.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {ReceiptFormPopupComponent} from './receipt-form-popup.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        ReceiptFormPopupComponent\n    ],\n    exports: [ReceiptFormPopupComponent]\n})\nexport class ReceiptFormPopupExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/src/receipt-form-popup.ext-module.ts","import {Component, ElementRef, Inject, Optional, Injector, ReflectiveInjector, Renderer, ViewChild, ViewContainerRef} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {DynamicComponentLoaderService} from '../../../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\nimport {PostService} from '../../../../../../../../AppBundle/Resources/public/ts/post.service';\nimport {BaseReceiptPaymentDocumentFormPopupExtComponent} from '../../../../supplier-document/ts/base-receipt-payment-document-form-popup.ext-component';\n\n\n@Component({\n    selector: '.js_documentEditFormPopup',\n    templateUrl: '../templates/receipt-payment-form-popup.component.html'\n})\nexport class ReceiptPaymentFormPopupComponent extends BaseReceiptPaymentDocumentFormPopupExtComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any,\n        injector: Injector,\n        @Inject('ParentDataService') parentDataService: any,\n        @Inject('HelperService') helperService: any,\n        dynamicComponentLoaderService: DynamicComponentLoaderService,\n        postService: PostService\n    ) {\n        super();\n        super.initBaseReceiptPaymentDocumentFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            injector,\n            parentDataService,\n            helperService,\n            dynamicComponentLoaderService,\n            postService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/src/receipt-payment-form-popup.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {ReceiptPaymentFormPopupComponent} from './receipt-payment-form-popup.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        ReceiptPaymentFormPopupComponent\n    ],\n    exports: [ReceiptPaymentFormPopupComponent]\n})\nexport class ReceiptPaymentFormPopupExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/src/receipt-payment-form-popup.ext-module.ts","import {Component, ElementRef, Inject, Optional, Injector, ReflectiveInjector, Renderer, ViewChild, ViewContainerRef} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {DynamicComponentLoaderService} from '../../../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\nimport {PostService} from '../../../../../../../../AppBundle/Resources/public/ts/post.service';\nimport {BaseReceiptSettlementDocumentFormPopupExtComponent} from '../../../../supplier-document/ts/base-receipt-settlement-document-form-popup.ext-component';\n\n\n@Component({\n    selector: '.js_documentEditFormPopup',\n    templateUrl: '../templates/receipt-settlement-form-popup.component.html'\n})\nexport class ReceiptSettlementFormPopupComponent extends BaseReceiptSettlementDocumentFormPopupExtComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any,\n        injector: Injector,\n        @Inject('ParentDataService') parentDataService: any,\n        @Inject('HelperService') helperService: any,\n        dynamicComponentLoaderService: DynamicComponentLoaderService,\n        postService: PostService\n    ) {\n        super();\n        super.initBaseReceiptSettlementDocumentFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            injector,\n            parentDataService,\n            helperService,\n            dynamicComponentLoaderService,\n            postService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/src/receipt-settlement-form-popup.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {ReceiptSettlementFormPopupComponent} from './receipt-settlement-form-popup.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        ReceiptSettlementFormPopupComponent\n    ],\n    exports: [ReceiptSettlementFormPopupComponent]\n})\nexport class ReceiptSettlementFormPopupExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/src/receipt-settlement-form-popup.ext-module.ts","module.exports = \"    \\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n    \\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-6\\\">\\n            <img *ngIf=\\\"_dataService.getLocalDataAttr('storeLogo')\\\"\\n                 height=\\\"96\\\"\\n                 alt=\\\"logo\\\"\\n                 class=\\\"m-b-md\\\"\\n                 [src]=\\\"_helperService.getUploadWebPath(_dataService.getLocalDataAttr('storeLogo'), 'resize_96')\\\">\\n            <address>\\n                <strong>{{_formService.getObject().storeLegalName}}</strong><br>\\n                <ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet1\\\"\\n                    ><span>{{_formService.getObject().storeStreet1}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet2\\\"\\n                    ><span>{{_formService.getObject().storeStreet2}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storePostCode\\\"\\n                    ><span>{{_formService.getObject().storePostCode}} {{_formService.getObject().storeCity}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeRegion\\\"\\n                    ><span>{{_formService.getObject().storeRegion}}</span><br></ng-template>            </address>\\n            <ng-template ngFor let-field [ngForOf]=\\\"_dataService.getLocalDataAttr('storeInfo')\\\"><span\\n                    [innerHtml]=\\\"field\\\"></span><br></ng-template>\\n            <p class=\\\"m-t-sm\\\">Tax Number: {{_formService.getObject().storeTaxNumber}}</p>\\n        </div>\\n        <div class=\\\"col-sm-6\\\">\\n            <h3 *ngIf=\\\"_formService.getObject().code\\\" class=\\\"document-number text-right\\\"><span>{{_formService.getObject().documentType_name}}:&nbsp;</span>                        <p id=\\\"form_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().code\\\">{{error}}</label>\\n</h3>\\n            <table class=\\\"table document-dates\\\">\\n                <tbody>\\n                <tr>\\n                    <td><strong>Date:</strong></td>\\n                    <td>                        \\n    <div class=\\\"input-group js_dataPicker\\\"\\n         [datePicker]=\\\"'date'\\\"\\n         #dpk_date=\\\"\\\" [control]=\\\"dpk_date\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"yyyy-mm-dd\\\"\\n               [(ngModel)]=\\\"_formService.getObject().date\\\"\\n               formControlName = date\\n               name=\\\"form[date]\\\"\\n               required=\\\"required\\\"               [class.error]=\\\"_formService.getErrors()['date'] && (_formService.getErrors()['date'].length > 0)\\\"\\n               ngbDatepicker #dpk_date=\\\"ngbDatepicker\\\">\\n        <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn\\\" type=\\\"button\\\"><a class=\\\"fa fa-calendar\\\"></a></button>\\n        </div>\\n    </div>\\n    \\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().date\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                <tr>\\n                    <td><strong>Due Date:</strong></td>\\n                    <td>                        \\n    <div class=\\\"input-group js_dataPicker\\\"\\n         [datePicker]=\\\"'dueDate'\\\"\\n         #dpk_dueDate=\\\"\\\" [control]=\\\"dpk_dueDate\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"yyyy-mm-dd\\\"\\n               [(ngModel)]=\\\"_formService.getObject().dueDate\\\"\\n               formControlName = dueDate\\n               name=\\\"form[dueDate]\\\"\\n               required=\\\"required\\\"               [class.error]=\\\"_formService.getErrors()['dueDate'] && (_formService.getErrors()['dueDate'].length > 0)\\\"\\n               ngbDatepicker #dpk_dueDate=\\\"ngbDatepicker\\\">\\n        <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn\\\" type=\\\"button\\\"><a class=\\\"fa fa-calendar\\\"></a></button>\\n        </div>\\n    </div>\\n    \\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().dueDate\\\">{{error}}</label>\\n</td>\\n                </tr>                </tbody>\\n            </table>\\n\\n            <div class=\\\"\\\">\\n                <span class=\\\"\\\">To:</span>\\n                <div class=\\\"document-entity mt-1\\\">\\n                    <span *ngIf=\\\"_formService.getObject().entity_avatar\\\"\\n                          [innerHTML]=\\\"_formService.getViewObject().entity_avatar\\\" class=\\\"pr-1\\\"></span>\\n                    <address>\\n                        <strong>{{_formService.getObject().entityLegalName}}</strong><br>\\n                        <div class=\\\"m-t-xs m-b-xs\\\">\\n                                                        <input [(ngModel)]=\\\"_formService.getObject().entityAddressObj\\\"\\n           formControlName = entityAddressObj\\n           name=\\\"form[entityAddressObj]\\\"\\n                      type=\\\"hidden\\\">\\n    <js_autoComplete [field]=\\\"'entityAddressObj'\\\"\\n                     [hasSelfReference]=\\\"_dataService.getFieldChoicesAttr('entityAddressObj', 'hasSelfReference')\\\"\\n                                              (onChange)=\\\"onEntityAddressChange($event)\\\"[placeholder]=\\\"&#039;Address&#039;\\\"                         ></js_autoComplete>\\n                    <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().entityAddressObj\\\">{{error}}</label>\\n                        </div>\\n                        <ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet1\\\"\\n                            ><span>{{_formService.getObject().entityStreet1}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet2\\\"\\n                            ><span>{{_formService.getObject().entityStreet2}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityPostCode\\\"\\n                            ><span>{{_formService.getObject().entityPostCode}} {{_formService.getObject().entityCity}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityRegion\\\"\\n                            ><span>{{_formService.getObject().entityRegion}}</span><br></ng-template>                    </address>\\n                </div>\\n            </div>\\n            <p class=\\\"mt-2\\\">Tax Number: {{_formService.getObject().entityTaxNumber}}</p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"mt-2 mb-4\\\">\\n        <span>Comments</span>\\n        <div class=\\\"border rounded document-comments\\\">                            <textarea id=\\\"form_comments\\\" name=\\\"form[comments]\\\" rows=\\\"3\\\" [(ngModel)]=\\\"_formService.getObject().comments\\\" formControlName=\\\"comments\\\" [class.error]=\\\"_formService.getErrors().comments &amp;&amp; _formService.getErrors().comments.length &gt; 0\\\" class=\\\"form-control\\\"></textarea>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().comments\\\">{{error}}</label>\\n</div>\\n    </div>\\n\\n            <section><ng-template #js_lazyLoadContainer></ng-template></section>\\n    \\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-8\\\">\\n            <ng-template [ngIf]=\\\"_dataService.getLocalDataAttr('totalVatSplitByCode')\\\">\\n            <span>TAX Resume</span>\\n            <div class=\\\"border rounded document-tax-resume\\\">\\n                <table class=\\\"table\\\">\\n                    <tbody>\\n                    <tr>\\n                        <th>Code</th>\\n                        <th>Description</th>\\n                        <th>Percentage</th>\\n                        <th>Net</th>\\n                        <th>TAX</th>\\n                        <th>Total</th>\\n                    </tr>\\n                    <tr *ngFor=\\\"let obj of _dataService.getLocalDataAttr('totalVatSplitByCode')\\\">\\n                        <td>{{ obj['name'] }}</td>\\n                        <td>{{ obj['description'] }}</td>\\n                        <td class=\\\"text-right\\\">{{ obj['percentage'] }}%</td>\\n                        <td class=\\\"text-right\\\">{{ obj['subTotal'] }}</td>\\n                        <td class=\\\"text-right\\\">{{ obj['totalVat'] }}</td>\\n                        <td class=\\\"text-right\\\">{{ obj['total'] }}</td>\\n                    </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n            </ng-template>\\n        </div>\\n        <div class=\\\"col-sm-4\\\">\\n            <table class=\\\"table document-total\\\">\\n                <tbody>\\n                <tr>\\n                    <td><strong>Sub Total:</strong></td>\\n                    <td>                            <input type=\\\"text\\\" id=\\\"form_subTotal\\\" name=\\\"form[subTotal]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().subTotal\\\" formControlName=\\\"subTotal\\\" [class.error]=\\\"_formService.getErrors().subTotal &amp;&amp; _formService.getErrors().subTotal.length &gt; 0\\\" class=\\\"form-control\\\" value=\\\"0\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().subTotal\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                <tr>\\n                    <td><strong>TAX:</strong></td>\\n                    <td>                            <input type=\\\"text\\\" id=\\\"form_totalVat\\\" name=\\\"form[totalVat]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().totalVat\\\" formControlName=\\\"totalVat\\\" [class.error]=\\\"_formService.getErrors().totalVat &amp;&amp; _formService.getErrors().totalVat.length &gt; 0\\\" class=\\\"form-control\\\" value=\\\"0\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().totalVat\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                <tr>\\n                    <td><strong>Total:</strong></td>\\n                    <td>                            <input type=\\\"text\\\" id=\\\"form_total\\\" name=\\\"form[total]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().total\\\" formControlName=\\\"total\\\" [class.error]=\\\"_formService.getErrors().total &amp;&amp; _formService.getErrors().total.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().total\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n    <div *ngIf=\\\"_dataService.getLocalDataAttr('documentInfo') && _dataService.getLocalDataAttr('documentInfo')['footer']\\\"\\n         class=\\\"mt-2 bg-light p-3\\\"\\n         [innerHTML]=\\\"_dataService.getLocalDataAttr('documentInfo')['footer']\\\"></div>\\n</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n        \\n                    <div class=\\\"row\\\">\\n            <div class=\\\"col-auto ml-auto\\\">\\n                                            <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"cancelAction($event)\\\"\\n                                        id=\\\"form_cancel\\\"\\n            name=\\\"form[cancel]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Cancel</button>\\n                                                <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"resetAction($event)\\\"\\n                                        id=\\\"form_reset\\\"\\n            name=\\\"form[reset]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-ban\\\"></i>&nbsp;Reset</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAction($event)\\\"\\n                                        id=\\\"form_save\\\"\\n            name=\\\"form[save]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-check\\\"></i>&nbsp;Save</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAndCloseAction($event)\\\"\\n                                        id=\\\"form_saveAndClose\\\"\\n            name=\\\"form[saveAndClose]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Save and Close</button>\\n                                </div>\\n        </div>\\n    </div>    \\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/templates/invoice-form-popup.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/templates/invoice-form-popup.component.html\n// module chunks = main","module.exports = \"    \\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n    \\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-6\\\">\\n            <img *ngIf=\\\"_dataService.getLocalDataAttr('storeLogo')\\\"\\n                 height=\\\"96\\\"\\n                 alt=\\\"logo\\\"\\n                 class=\\\"m-b-md\\\"\\n                 [src]=\\\"_helperService.getUploadWebPath(_dataService.getLocalDataAttr('storeLogo'), 'resize_96')\\\">\\n            <address>\\n                <strong>{{_formService.getObject().storeLegalName}}</strong><br>\\n                <ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet1\\\"\\n                    ><span>{{_formService.getObject().storeStreet1}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet2\\\"\\n                    ><span>{{_formService.getObject().storeStreet2}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storePostCode\\\"\\n                    ><span>{{_formService.getObject().storePostCode}} {{_formService.getObject().storeCity}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeRegion\\\"\\n                    ><span>{{_formService.getObject().storeRegion}}</span><br></ng-template>            </address>\\n            <ng-template ngFor let-field [ngForOf]=\\\"_dataService.getLocalDataAttr('storeInfo')\\\"><span\\n                    [innerHtml]=\\\"field\\\"></span><br></ng-template>\\n            <p class=\\\"m-t-sm\\\">Tax Number: {{_formService.getObject().storeTaxNumber}}</p>\\n        </div>\\n        <div class=\\\"col-sm-6\\\">\\n            <h3 *ngIf=\\\"_formService.getObject().code\\\" class=\\\"document-number text-right\\\"><span>{{_formService.getObject().documentType_name}}:&nbsp;</span>                        <p id=\\\"form_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().code\\\">{{error}}</label>\\n</h3>\\n            <table class=\\\"table document-dates\\\">\\n                <tbody>\\n                <tr>\\n                    <td><strong>Date:</strong></td>\\n                    <td>                        \\n    <div class=\\\"input-group js_dataPicker\\\"\\n         [datePicker]=\\\"'date'\\\"\\n         #dpk_date=\\\"\\\" [control]=\\\"dpk_date\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"yyyy-mm-dd\\\"\\n               [(ngModel)]=\\\"_formService.getObject().date\\\"\\n               formControlName = date\\n               name=\\\"form[date]\\\"\\n               required=\\\"required\\\"               [class.error]=\\\"_formService.getErrors()['date'] && (_formService.getErrors()['date'].length > 0)\\\"\\n               ngbDatepicker #dpk_date=\\\"ngbDatepicker\\\">\\n        <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn\\\" type=\\\"button\\\"><a class=\\\"fa fa-calendar\\\"></a></button>\\n        </div>\\n    </div>\\n    \\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().date\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                <tr>\\n                    <td><strong>Due Date:</strong></td>\\n                    <td>                        \\n    <div class=\\\"input-group js_dataPicker\\\"\\n         [datePicker]=\\\"'dueDate'\\\"\\n         #dpk_dueDate=\\\"\\\" [control]=\\\"dpk_dueDate\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"yyyy-mm-dd\\\"\\n               [(ngModel)]=\\\"_formService.getObject().dueDate\\\"\\n               formControlName = dueDate\\n               name=\\\"form[dueDate]\\\"\\n               required=\\\"required\\\"               [class.error]=\\\"_formService.getErrors()['dueDate'] && (_formService.getErrors()['dueDate'].length > 0)\\\"\\n               ngbDatepicker #dpk_dueDate=\\\"ngbDatepicker\\\">\\n        <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn\\\" type=\\\"button\\\"><a class=\\\"fa fa-calendar\\\"></a></button>\\n        </div>\\n    </div>\\n    \\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().dueDate\\\">{{error}}</label>\\n</td>\\n                </tr>                </tbody>\\n            </table>\\n\\n            <div class=\\\"\\\">\\n                <span class=\\\"\\\">To:</span>\\n                <div class=\\\"document-entity mt-1\\\">\\n                    <span *ngIf=\\\"_formService.getObject().entity_avatar\\\"\\n                          [innerHTML]=\\\"_formService.getViewObject().entity_avatar\\\" class=\\\"pr-1\\\"></span>\\n                    <address>\\n                        <strong>{{_formService.getObject().entityLegalName}}</strong><br>\\n                        <div class=\\\"m-t-xs m-b-xs\\\">\\n                                                        <input [(ngModel)]=\\\"_formService.getObject().entityAddressObj\\\"\\n           formControlName = entityAddressObj\\n           name=\\\"form[entityAddressObj]\\\"\\n                      type=\\\"hidden\\\">\\n    <js_autoComplete [field]=\\\"'entityAddressObj'\\\"\\n                     [hasSelfReference]=\\\"_dataService.getFieldChoicesAttr('entityAddressObj', 'hasSelfReference')\\\"\\n                                              (onChange)=\\\"onEntityAddressChange($event)\\\"[placeholder]=\\\"&#039;Address&#039;\\\"                         ></js_autoComplete>\\n                    <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().entityAddressObj\\\">{{error}}</label>\\n                        </div>\\n                        <ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet1\\\"\\n                            ><span>{{_formService.getObject().entityStreet1}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet2\\\"\\n                            ><span>{{_formService.getObject().entityStreet2}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityPostCode\\\"\\n                            ><span>{{_formService.getObject().entityPostCode}} {{_formService.getObject().entityCity}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityRegion\\\"\\n                            ><span>{{_formService.getObject().entityRegion}}</span><br></ng-template>                    </address>\\n                </div>\\n            </div>\\n            <p class=\\\"mt-2\\\">Tax Number: {{_formService.getObject().entityTaxNumber}}</p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"mt-2 mb-4\\\">\\n        <span>Comments</span>\\n        <div class=\\\"border rounded document-comments\\\">                            <textarea id=\\\"form_comments\\\" name=\\\"form[comments]\\\" rows=\\\"3\\\" [(ngModel)]=\\\"_formService.getObject().comments\\\" formControlName=\\\"comments\\\" [class.error]=\\\"_formService.getErrors().comments &amp;&amp; _formService.getErrors().comments.length &gt; 0\\\" class=\\\"form-control\\\"></textarea>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().comments\\\">{{error}}</label>\\n</div>\\n    </div>\\n\\n            <section><ng-template #js_lazyLoadContainer></ng-template></section>\\n    \\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-8\\\">\\n            <ng-template [ngIf]=\\\"_dataService.getLocalDataAttr('totalVatSplitByCode')\\\">\\n            <span>TAX Resume</span>\\n            <div class=\\\"border rounded document-tax-resume\\\">\\n                <table class=\\\"table\\\">\\n                    <tbody>\\n                    <tr>\\n                        <th>Code</th>\\n                        <th>Description</th>\\n                        <th>Percentage</th>\\n                        <th>Net</th>\\n                        <th>TAX</th>\\n                        <th>Total</th>\\n                    </tr>\\n                    <tr *ngFor=\\\"let obj of _dataService.getLocalDataAttr('totalVatSplitByCode')\\\">\\n                        <td>{{ obj['name'] }}</td>\\n                        <td>{{ obj['description'] }}</td>\\n                        <td class=\\\"text-right\\\">{{ obj['percentage'] }}%</td>\\n                        <td class=\\\"text-right\\\">{{ obj['subTotal'] }}</td>\\n                        <td class=\\\"text-right\\\">{{ obj['totalVat'] }}</td>\\n                        <td class=\\\"text-right\\\">{{ obj['total'] }}</td>\\n                    </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n            </ng-template>\\n        </div>\\n        <div class=\\\"col-sm-4\\\">\\n            <table class=\\\"table document-total\\\">\\n                <tbody>\\n                <tr>\\n                    <td><strong>Sub Total:</strong></td>\\n                    <td>                            <input type=\\\"text\\\" id=\\\"form_subTotal\\\" name=\\\"form[subTotal]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().subTotal\\\" formControlName=\\\"subTotal\\\" [class.error]=\\\"_formService.getErrors().subTotal &amp;&amp; _formService.getErrors().subTotal.length &gt; 0\\\" class=\\\"form-control\\\" value=\\\"0\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().subTotal\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                <tr>\\n                    <td><strong>TAX:</strong></td>\\n                    <td>                            <input type=\\\"text\\\" id=\\\"form_totalVat\\\" name=\\\"form[totalVat]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().totalVat\\\" formControlName=\\\"totalVat\\\" [class.error]=\\\"_formService.getErrors().totalVat &amp;&amp; _formService.getErrors().totalVat.length &gt; 0\\\" class=\\\"form-control\\\" value=\\\"0\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().totalVat\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                <tr>\\n                    <td><strong>Total:</strong></td>\\n                    <td>                            <input type=\\\"text\\\" id=\\\"form_total\\\" name=\\\"form[total]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().total\\\" formControlName=\\\"total\\\" [class.error]=\\\"_formService.getErrors().total &amp;&amp; _formService.getErrors().total.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().total\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n    <div *ngIf=\\\"_dataService.getLocalDataAttr('documentInfo') && _dataService.getLocalDataAttr('documentInfo')['footer']\\\"\\n         class=\\\"mt-2 bg-light p-3\\\"\\n         [innerHTML]=\\\"_dataService.getLocalDataAttr('documentInfo')['footer']\\\"></div>\\n</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n        \\n                    <div class=\\\"row\\\">\\n            <div class=\\\"col-auto ml-auto\\\">\\n                                            <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"cancelAction($event)\\\"\\n                                        id=\\\"form_cancel\\\"\\n            name=\\\"form[cancel]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Cancel</button>\\n                                                <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"resetAction($event)\\\"\\n                                        id=\\\"form_reset\\\"\\n            name=\\\"form[reset]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-ban\\\"></i>&nbsp;Reset</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAction($event)\\\"\\n                                        id=\\\"form_save\\\"\\n            name=\\\"form[save]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-check\\\"></i>&nbsp;Save</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAndCloseAction($event)\\\"\\n                                        id=\\\"form_saveAndClose\\\"\\n            name=\\\"form[saveAndClose]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Save and Close</button>\\n                                </div>\\n        </div>\\n    </div>    \\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/templates/invoice-rectification-form-popup.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/templates/invoice-rectification-form-popup.component.html\n// module chunks = main","module.exports = \"    \\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n    \\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-6\\\">\\n            <img *ngIf=\\\"_dataService.getLocalDataAttr('storeLogo')\\\"\\n                 height=\\\"96\\\"\\n                 alt=\\\"logo\\\"\\n                 class=\\\"m-b-md\\\"\\n                 [src]=\\\"_helperService.getUploadWebPath(_dataService.getLocalDataAttr('storeLogo'), 'resize_96')\\\">\\n            <address>\\n                <strong>{{_formService.getObject().storeLegalName}}</strong><br>\\n                <ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet1\\\"\\n                    ><span>{{_formService.getObject().storeStreet1}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet2\\\"\\n                    ><span>{{_formService.getObject().storeStreet2}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storePostCode\\\"\\n                    ><span>{{_formService.getObject().storePostCode}} {{_formService.getObject().storeCity}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeRegion\\\"\\n                    ><span>{{_formService.getObject().storeRegion}}</span><br></ng-template>            </address>\\n            <ng-template ngFor let-field [ngForOf]=\\\"_dataService.getLocalDataAttr('storeInfo')\\\"><span\\n                    [innerHtml]=\\\"field\\\"></span><br></ng-template>\\n            <p class=\\\"m-t-sm\\\">Tax Number: {{_formService.getObject().storeTaxNumber}}</p>\\n        </div>\\n        <div class=\\\"col-sm-6\\\">\\n            <h3 *ngIf=\\\"_formService.getObject().code\\\" class=\\\"document-number text-right\\\"><span>{{_formService.getObject().documentType_name}}:&nbsp;</span>                        <p id=\\\"form_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().code\\\">{{error}}</label>\\n</h3>\\n            <table class=\\\"table document-dates\\\">\\n                <tbody>\\n                <tr>\\n                    <td><strong>Date:</strong></td>\\n                    <td>                        \\n    <div class=\\\"input-group js_dataPicker\\\"\\n         [datePicker]=\\\"'date'\\\"\\n         #dpk_date=\\\"\\\" [control]=\\\"dpk_date\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"yyyy-mm-dd\\\"\\n               [(ngModel)]=\\\"_formService.getObject().date\\\"\\n               formControlName = date\\n               name=\\\"form[date]\\\"\\n               required=\\\"required\\\"               [class.error]=\\\"_formService.getErrors()['date'] && (_formService.getErrors()['date'].length > 0)\\\"\\n               ngbDatepicker #dpk_date=\\\"ngbDatepicker\\\">\\n        <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn\\\" type=\\\"button\\\"><a class=\\\"fa fa-calendar\\\"></a></button>\\n        </div>\\n    </div>\\n    \\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().date\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                                </tbody>\\n            </table>\\n\\n            <div class=\\\"\\\">\\n                <span class=\\\"\\\">To:</span>\\n                <div class=\\\"document-entity mt-1\\\">\\n                    <span *ngIf=\\\"_formService.getObject().entity_avatar\\\"\\n                          [innerHTML]=\\\"_formService.getViewObject().entity_avatar\\\" class=\\\"pr-1\\\"></span>\\n                    <address>\\n                        <strong>{{_formService.getObject().entityLegalName}}</strong><br>\\n                        <div class=\\\"m-t-xs m-b-xs\\\">\\n                                                        <input [(ngModel)]=\\\"_formService.getObject().entityAddressObj\\\"\\n           formControlName = entityAddressObj\\n           name=\\\"form[entityAddressObj]\\\"\\n                      type=\\\"hidden\\\">\\n    <js_autoComplete [field]=\\\"'entityAddressObj'\\\"\\n                     [hasSelfReference]=\\\"_dataService.getFieldChoicesAttr('entityAddressObj', 'hasSelfReference')\\\"\\n                                              (onChange)=\\\"onEntityAddressChange($event)\\\"[placeholder]=\\\"&#039;Address&#039;\\\"                         ></js_autoComplete>\\n                    <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().entityAddressObj\\\">{{error}}</label>\\n                        </div>\\n                        <ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet1\\\"\\n                            ><span>{{_formService.getObject().entityStreet1}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet2\\\"\\n                            ><span>{{_formService.getObject().entityStreet2}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityPostCode\\\"\\n                            ><span>{{_formService.getObject().entityPostCode}} {{_formService.getObject().entityCity}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityRegion\\\"\\n                            ><span>{{_formService.getObject().entityRegion}}</span><br></ng-template>                    </address>\\n                </div>\\n            </div>\\n            <p class=\\\"mt-2\\\">Tax Number: {{_formService.getObject().entityTaxNumber}}</p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"mt-2 mb-4\\\">\\n        <span>Comments</span>\\n        <div class=\\\"border rounded document-comments\\\">                            <textarea id=\\\"form_comments\\\" name=\\\"form[comments]\\\" rows=\\\"3\\\" [(ngModel)]=\\\"_formService.getObject().comments\\\" formControlName=\\\"comments\\\" [class.error]=\\\"_formService.getErrors().comments &amp;&amp; _formService.getErrors().comments.length &gt; 0\\\" class=\\\"form-control\\\"></textarea>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().comments\\\">{{error}}</label>\\n</div>\\n    </div>\\n\\n    <section>\\n    <ng-template #js_lazyLoadContainer></ng-template>\\n    <ng-template #js_lazyLoadContainer></ng-template>\\n</section>\\n    <div class=\\\"row\\\"><div class=\\\"col-md-4 offset-md-8\\\">\\n    <table class=\\\"table document-total\\\">\\n        <tbody>\\n        <tr>\\n            <td><strong>DIFF:</strong></td>\\n            <td><input class=\\\"form-control js_diffControl\\\"\\n                       readonly=\\\"readonly\\\"\\n                       type=\\\"text\\\"\\n                       value=\\\"0\\\"></td>\\n        </tr>        </tbody>\\n    </table>\\n</div></div>\\n    <div *ngIf=\\\"_dataService.getLocalDataAttr('documentInfo') && _dataService.getLocalDataAttr('documentInfo')['footer']\\\"\\n         class=\\\"mt-2 bg-light p-3\\\"\\n         [innerHTML]=\\\"_dataService.getLocalDataAttr('documentInfo')['footer']\\\"></div>\\n</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n        \\n                    <div class=\\\"row\\\">\\n            <div class=\\\"col-auto ml-auto\\\">\\n                                            <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"cancelAction($event)\\\"\\n                                        id=\\\"form_cancel\\\"\\n            name=\\\"form[cancel]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Cancel</button>\\n                                                <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"resetAction($event)\\\"\\n                                        id=\\\"form_reset\\\"\\n            name=\\\"form[reset]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-ban\\\"></i>&nbsp;Reset</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAction($event)\\\"\\n                                        id=\\\"form_save\\\"\\n            name=\\\"form[save]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-check\\\"></i>&nbsp;Save</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAndCloseAction($event)\\\"\\n                                        id=\\\"form_saveAndClose\\\"\\n            name=\\\"form[saveAndClose]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Save and Close</button>\\n                                </div>\\n        </div>\\n    </div>    \\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/templates/receipt-form-popup.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/templates/receipt-form-popup.component.html\n// module chunks = main","module.exports = \"    \\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n    \\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-6\\\">\\n            <img *ngIf=\\\"_dataService.getLocalDataAttr('storeLogo')\\\"\\n                 height=\\\"96\\\"\\n                 alt=\\\"logo\\\"\\n                 class=\\\"m-b-md\\\"\\n                 [src]=\\\"_helperService.getUploadWebPath(_dataService.getLocalDataAttr('storeLogo'), 'resize_96')\\\">\\n            <address>\\n                <strong>{{_formService.getObject().storeLegalName}}</strong><br>\\n                <ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet1\\\"\\n                    ><span>{{_formService.getObject().storeStreet1}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet2\\\"\\n                    ><span>{{_formService.getObject().storeStreet2}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storePostCode\\\"\\n                    ><span>{{_formService.getObject().storePostCode}} {{_formService.getObject().storeCity}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeRegion\\\"\\n                    ><span>{{_formService.getObject().storeRegion}}</span><br></ng-template>            </address>\\n            <ng-template ngFor let-field [ngForOf]=\\\"_dataService.getLocalDataAttr('storeInfo')\\\"><span\\n                    [innerHtml]=\\\"field\\\"></span><br></ng-template>\\n            <p class=\\\"m-t-sm\\\">Tax Number: {{_formService.getObject().storeTaxNumber}}</p>\\n        </div>\\n        <div class=\\\"col-sm-6\\\">\\n            <h3 *ngIf=\\\"_formService.getObject().code\\\" class=\\\"document-number text-right\\\"><span>{{_formService.getObject().documentType_name}}:&nbsp;</span>                        <p id=\\\"form_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().code\\\">{{error}}</label>\\n</h3>\\n            <table class=\\\"table document-dates\\\">\\n                <tbody>\\n                <tr>\\n                    <td><strong>Date:</strong></td>\\n                    <td>                        \\n    <div class=\\\"input-group js_dataPicker\\\"\\n         [datePicker]=\\\"'date'\\\"\\n         #dpk_date=\\\"\\\" [control]=\\\"dpk_date\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"yyyy-mm-dd\\\"\\n               [(ngModel)]=\\\"_formService.getObject().date\\\"\\n               formControlName = date\\n               name=\\\"form[date]\\\"\\n               required=\\\"required\\\"               [class.error]=\\\"_formService.getErrors()['date'] && (_formService.getErrors()['date'].length > 0)\\\"\\n               ngbDatepicker #dpk_date=\\\"ngbDatepicker\\\">\\n        <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn\\\" type=\\\"button\\\"><a class=\\\"fa fa-calendar\\\"></a></button>\\n        </div>\\n    </div>\\n    \\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().date\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                                </tbody>\\n            </table>\\n\\n            <div class=\\\"\\\">\\n                <span class=\\\"\\\">To:</span>\\n                <div class=\\\"document-entity mt-1\\\">\\n                    <span *ngIf=\\\"_formService.getObject().entity_avatar\\\"\\n                          [innerHTML]=\\\"_formService.getViewObject().entity_avatar\\\" class=\\\"pr-1\\\"></span>\\n                    <address>\\n                        <strong>{{_formService.getObject().entityLegalName}}</strong><br>\\n                        <div class=\\\"m-t-xs m-b-xs\\\">\\n                                                        <input [(ngModel)]=\\\"_formService.getObject().entityAddressObj\\\"\\n           formControlName = entityAddressObj\\n           name=\\\"form[entityAddressObj]\\\"\\n                      type=\\\"hidden\\\">\\n    <js_autoComplete [field]=\\\"'entityAddressObj'\\\"\\n                     [hasSelfReference]=\\\"_dataService.getFieldChoicesAttr('entityAddressObj', 'hasSelfReference')\\\"\\n                                              (onChange)=\\\"onEntityAddressChange($event)\\\"[placeholder]=\\\"&#039;Address&#039;\\\"                         ></js_autoComplete>\\n                    <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().entityAddressObj\\\">{{error}}</label>\\n                        </div>\\n                        <ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet1\\\"\\n                            ><span>{{_formService.getObject().entityStreet1}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet2\\\"\\n                            ><span>{{_formService.getObject().entityStreet2}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityPostCode\\\"\\n                            ><span>{{_formService.getObject().entityPostCode}} {{_formService.getObject().entityCity}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityRegion\\\"\\n                            ><span>{{_formService.getObject().entityRegion}}</span><br></ng-template>                    </address>\\n                </div>\\n            </div>\\n            <p class=\\\"mt-2\\\">Tax Number: {{_formService.getObject().entityTaxNumber}}</p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"mt-2 mb-4\\\">\\n        <span>Comments</span>\\n        <div class=\\\"border rounded document-comments\\\">                            <textarea id=\\\"form_comments\\\" name=\\\"form[comments]\\\" rows=\\\"3\\\" [(ngModel)]=\\\"_formService.getObject().comments\\\" formControlName=\\\"comments\\\" [class.error]=\\\"_formService.getErrors().comments &amp;&amp; _formService.getErrors().comments.length &gt; 0\\\" class=\\\"form-control\\\"></textarea>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().comments\\\">{{error}}</label>\\n</div>\\n    </div>\\n\\n    <section><ng-template #js_lazyLoadContainer></ng-template></section>\\n    <div class=\\\"row\\\"><div class=\\\"col-md-4 offset-md-8\\\">\\n    <table class=\\\"table document-total\\\">\\n        <tbody>\\n        <tr>\\n    <td><strong>Total:</strong></td>\\n    <td>                            <input type=\\\"text\\\" id=\\\"form_total\\\" name=\\\"form[total]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().total\\\" formControlName=\\\"total\\\" [class.error]=\\\"_formService.getErrors().total &amp;&amp; _formService.getErrors().total.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().total\\\">{{error}}</label>\\n</td>\\n</tr>        </tbody>\\n    </table>\\n</div></div>\\n    <div *ngIf=\\\"_dataService.getLocalDataAttr('documentInfo') && _dataService.getLocalDataAttr('documentInfo')['footer']\\\"\\n         class=\\\"mt-2 bg-light p-3\\\"\\n         [innerHTML]=\\\"_dataService.getLocalDataAttr('documentInfo')['footer']\\\"></div>\\n</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n        \\n                    <div class=\\\"row\\\">\\n            <div class=\\\"col-auto ml-auto\\\">\\n                                            <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"cancelAction($event)\\\"\\n                                        id=\\\"form_cancel\\\"\\n            name=\\\"form[cancel]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Cancel</button>\\n                                                <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"resetAction($event)\\\"\\n                                        id=\\\"form_reset\\\"\\n            name=\\\"form[reset]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-ban\\\"></i>&nbsp;Reset</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAction($event)\\\"\\n                                        id=\\\"form_save\\\"\\n            name=\\\"form[save]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-check\\\"></i>&nbsp;Save</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAndCloseAction($event)\\\"\\n                                        id=\\\"form_saveAndClose\\\"\\n            name=\\\"form[saveAndClose]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Save and Close</button>\\n                                </div>\\n        </div>\\n    </div>    \\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/templates/receipt-payment-form-popup.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/templates/receipt-payment-form-popup.component.html\n// module chunks = main","module.exports = \"    \\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n    \\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-6\\\">\\n            <img *ngIf=\\\"_dataService.getLocalDataAttr('storeLogo')\\\"\\n                 height=\\\"96\\\"\\n                 alt=\\\"logo\\\"\\n                 class=\\\"m-b-md\\\"\\n                 [src]=\\\"_helperService.getUploadWebPath(_dataService.getLocalDataAttr('storeLogo'), 'resize_96')\\\">\\n            <address>\\n                <strong>{{_formService.getObject().storeLegalName}}</strong><br>\\n                <ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet1\\\"\\n                    ><span>{{_formService.getObject().storeStreet1}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeStreet2\\\"\\n                    ><span>{{_formService.getObject().storeStreet2}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storePostCode\\\"\\n                    ><span>{{_formService.getObject().storePostCode}} {{_formService.getObject().storeCity}}</span><br></ng-template><ng-template\\n                    [ngIf]=\\\"_formService.getObject().storeRegion\\\"\\n                    ><span>{{_formService.getObject().storeRegion}}</span><br></ng-template>            </address>\\n            <ng-template ngFor let-field [ngForOf]=\\\"_dataService.getLocalDataAttr('storeInfo')\\\"><span\\n                    [innerHtml]=\\\"field\\\"></span><br></ng-template>\\n            <p class=\\\"m-t-sm\\\">Tax Number: {{_formService.getObject().storeTaxNumber}}</p>\\n        </div>\\n        <div class=\\\"col-sm-6\\\">\\n            <h3 *ngIf=\\\"_formService.getObject().code\\\" class=\\\"document-number text-right\\\"><span>{{_formService.getObject().documentType_name}}:&nbsp;</span>                        <p id=\\\"form_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().code\\\">{{error}}</label>\\n</h3>\\n            <table class=\\\"table document-dates\\\">\\n                <tbody>\\n                <tr>\\n                    <td><strong>Date:</strong></td>\\n                    <td>                        \\n    <div class=\\\"input-group js_dataPicker\\\"\\n         [datePicker]=\\\"'date'\\\"\\n         #dpk_date=\\\"\\\" [control]=\\\"dpk_date\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"yyyy-mm-dd\\\"\\n               [(ngModel)]=\\\"_formService.getObject().date\\\"\\n               formControlName = date\\n               name=\\\"form[date]\\\"\\n               required=\\\"required\\\"               [class.error]=\\\"_formService.getErrors()['date'] && (_formService.getErrors()['date'].length > 0)\\\"\\n               ngbDatepicker #dpk_date=\\\"ngbDatepicker\\\">\\n        <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn\\\" type=\\\"button\\\"><a class=\\\"fa fa-calendar\\\"></a></button>\\n        </div>\\n    </div>\\n    \\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().date\\\">{{error}}</label>\\n</td>\\n                </tr>\\n                                </tbody>\\n            </table>\\n\\n            <div class=\\\"\\\">\\n                <span class=\\\"\\\">To:</span>\\n                <div class=\\\"document-entity mt-1\\\">\\n                    <span *ngIf=\\\"_formService.getObject().entity_avatar\\\"\\n                          [innerHTML]=\\\"_formService.getViewObject().entity_avatar\\\" class=\\\"pr-1\\\"></span>\\n                    <address>\\n                        <strong>{{_formService.getObject().entityLegalName}}</strong><br>\\n                        <div class=\\\"m-t-xs m-b-xs\\\">\\n                                                        <input [(ngModel)]=\\\"_formService.getObject().entityAddressObj\\\"\\n           formControlName = entityAddressObj\\n           name=\\\"form[entityAddressObj]\\\"\\n                      type=\\\"hidden\\\">\\n    <js_autoComplete [field]=\\\"'entityAddressObj'\\\"\\n                     [hasSelfReference]=\\\"_dataService.getFieldChoicesAttr('entityAddressObj', 'hasSelfReference')\\\"\\n                                              (onChange)=\\\"onEntityAddressChange($event)\\\"[placeholder]=\\\"&#039;Address&#039;\\\"                         ></js_autoComplete>\\n                    <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().entityAddressObj\\\">{{error}}</label>\\n                        </div>\\n                        <ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet1\\\"\\n                            ><span>{{_formService.getObject().entityStreet1}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityStreet2\\\"\\n                            ><span>{{_formService.getObject().entityStreet2}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityPostCode\\\"\\n                            ><span>{{_formService.getObject().entityPostCode}} {{_formService.getObject().entityCity}}</span><br></ng-template><ng-template\\n                            [ngIf]=\\\"_formService.getObject().entityRegion\\\"\\n                            ><span>{{_formService.getObject().entityRegion}}</span><br></ng-template>                    </address>\\n                </div>\\n            </div>\\n            <p class=\\\"mt-2\\\">Tax Number: {{_formService.getObject().entityTaxNumber}}</p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"mt-2 mb-4\\\">\\n        <span>Comments</span>\\n        <div class=\\\"border rounded document-comments\\\">                            <textarea id=\\\"form_comments\\\" name=\\\"form[comments]\\\" rows=\\\"3\\\" [(ngModel)]=\\\"_formService.getObject().comments\\\" formControlName=\\\"comments\\\" [class.error]=\\\"_formService.getErrors().comments &amp;&amp; _formService.getErrors().comments.length &gt; 0\\\" class=\\\"form-control\\\"></textarea>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().comments\\\">{{error}}</label>\\n</div>\\n    </div>\\n\\n    <section><ng-template #js_lazyLoadContainer></ng-template></section>\\n    <div class=\\\"row\\\"><div class=\\\"col-md-4 offset-md-8\\\">\\n    <table class=\\\"table document-total\\\">\\n        <tbody>\\n        <tr>\\n            <td><strong>DIFF:</strong></td>\\n            <td><input class=\\\"form-control js_diffControl\\\"\\n                       readonly=\\\"readonly\\\"\\n                       type=\\\"text\\\"\\n                       value=\\\"0\\\"></td>\\n        </tr>        </tbody>\\n    </table>\\n</div></div>\\n    <div *ngIf=\\\"_dataService.getLocalDataAttr('documentInfo') && _dataService.getLocalDataAttr('documentInfo')['footer']\\\"\\n         class=\\\"mt-2 bg-light p-3\\\"\\n         [innerHTML]=\\\"_dataService.getLocalDataAttr('documentInfo')['footer']\\\"></div>\\n</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n        \\n                    <div class=\\\"row\\\">\\n            <div class=\\\"col-auto ml-auto\\\">\\n                                            <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"cancelAction($event)\\\"\\n                                        id=\\\"form_cancel\\\"\\n            name=\\\"form[cancel]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Cancel</button>\\n                                                <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"resetAction($event)\\\"\\n                                        id=\\\"form_reset\\\"\\n            name=\\\"form[reset]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-ban\\\"></i>&nbsp;Reset</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAction($event)\\\"\\n                                        id=\\\"form_save\\\"\\n            name=\\\"form[save]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-check\\\"></i>&nbsp;Save</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAndCloseAction($event)\\\"\\n                                        id=\\\"form_saveAndClose\\\"\\n            name=\\\"form[saveAndClose]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Save and Close</button>\\n                                </div>\\n        </div>\\n    </div>    \\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/templates/receipt-settlement-form-popup.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/supplier-document/edit/ts/templates/receipt-settlement-form-popup.component.html\n// module chunks = main","import {Component, Inject, Injector, ViewContainerRef, Renderer} from '@angular/core';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {ActionsService} from '../../../../../../../../AppBundle/Resources/public/ts/actions/actions.service';\nimport {DataBoxProvider, Popups, Popup} from '../../../../../../../../AppBundle/Resources/public/data-box/ts/src/data-box.extension-component';\nimport {ModalService} from '../../../../../../../../AppBundle/Resources/public/modal/ts/modal.service';\nimport {MainExtComponent as BaseDocumentIndexMainExtComponent} from '../../../../base-document/index/ts/main.ext-component';\nimport {TasksLoaderManagerService} from '../../../../../../../../AppBundle/Resources/public/tasks-loader-manager/ts/tasks-loader-manager.service';\n\n\n// Component\n@Component({\n    selector: '.js_dataBox',\n    templateUrl: '../templates/main.component.html'\n})\nexport class MainComponent extends BaseDocumentIndexMainExtComponent\n{\n    constructor(\n        viewContainerRef: ViewContainerRef,\n        renderer: Renderer,\n        @Inject('Provider') dataBoxProvider: DataBoxProvider,\n        @Inject('DataService') dataService: any,\n        tasksLoaderManagerService: TasksLoaderManagerService,\n        @Inject('HelperService') helperService: any,\n        actionsService: ActionsService,\n        modalService: ModalService,\n        @Inject('Popups') popups: Popups | Popup,\n        injector: Injector\n    ) {\n        // Call parent\n        super();\n        super.initBaseDocumentIndexMainExtComponent(\n            viewContainerRef,\n            renderer,\n            dataBoxProvider,\n            dataService,\n            tasksLoaderManagerService,\n            helperService,\n            actionsService,\n            modalService,\n            popups,\n            injector\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/index/ts/src/main.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n// This module doesn't use \"ReactiveFormsModule\", but it needs to import this class\n// to provide \"formBuilder\" when inject dependencies in child modules (like form)\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {SearchModule} from '../../../../../../../../AppBundle/Resources/public/ts/search/search.module';\nimport {ExpanderModule} from '../../../../../../../../AppBundle/Resources/public/ts/expander/expander.module';\nimport {LegendExtModule} from '../../../../../../../../AppBundle/Resources/public/legend/ts/src/legend.ext-module';\nimport {SearchPaginationModule} from '../../../../../../../../AppBundle/Resources/public/ts/search/search-pagination.module';\nimport {MainComponent} from './main.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        SearchModule,\n        SearchPaginationModule,\n        ExpanderModule,\n        LegendExtModule\n    ],\n    declarations: [\n        MainComponent\n    ],\n    exports: [MainComponent]\n})\nexport class MainExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/index/ts/src/main.extension-module.ts","module.exports = \"\\n\\n<div class=\\\"ibox\\\" >\\n                        <div class=\\\"ibox-title\\\" *ngIf=\\\"!getProviderExtraDataAttr('hasMergeHeader')\\\">\\n                <h5>\\n                    <ng-template [ngIf]=\\\"getProviderAttr('controls')['expander']['isEnabled']\\\"><js_expander\\n                        [isExpanded]=\\\"_isExpanded || null\\\"\\n                        [label]=\\\"getLang(getProviderAttr('label'))\\\"\\n                        [labelCount]=\\\"getProviderAttr('labelCount')\\\"\\n                        [labelIcon]=\\\"getProviderAttr('labelIcon')\\\"\\n                        (onChange)=\\\"expanderAction($event)\\\"></js_expander></ng-template>\\n                    <ng-template [ngIf]=\\\"!getProviderAttr('controls')['expander']['isEnabled']\\\">\\n                        <span [innerHTML]=\\\"getProviderAttr('label')\\\"></span>\\n                    </ng-template>\\n                </h5>\\n                <div *ngIf=\\\"_isExpanded\\\"\\n                     class=\\\"txt-align-r hide-on-empty\\\">    <div class=\\\"row align-items-center\\\">\\n        <div class=\\\"col ml-auto text-right actions no-user-select\\\">\\n            <ng-template [ngIf]=\\\"_actionsService.getActionAttr('search', 'isEnabled')\\\"><js_search class=\\\"search\\\"></js_search></ng-template>\\n            <div (click)=\\\"triggerAction($event)\\\">\\n                <ng-template ngFor let-action [ngForOf]=\\\"_actionsService.getHeadActions()\\\">\\n                    <a *ngIf=\\\"_actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                       [ngClass]=\\\"[_actionsService.getActionAttr(action, 'icon')]\\\"\\n                       class=\\\"-round fa\\\"\\n                       [attr.data-action]=\\\"action\\\"></a>\\n                </ng-template>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n            </div>\\n            \\n    <div [hidden]=\\\"!(_isExpanded)\\\" class=\\\"ibox-content hide-on-empty\\\">    <ng-template [ngIf]=\\\"(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">\\n                \\n    <div class=\\\"table-responsive\\\">\\n    <form>    <table class=\\\"data-table table table-hover dataTables-example table-bordered\\\">\\n        <thead>\\n        <tr>\\n            <th *ngFor=\\\"let searchField of _dataService.getSearch('fields')\\\">{{ getLang(_dataService.getFields('metadata')[searchField].label) }}</th>\\n            <th>&nbsp;</th>\\n        </tr>\\n        </thead>        <tbody>\\n        <ng-template ngFor let-obj [ngForOf]=\\\"_dataService.getProviderAttr('objects')\\\" let-objIndex=\\\"index\\\">\\n        <tr (dblclick)=\\\"editAction($event, objIndex)\\\"            [ngClass]=\\\"getLegendClasses(obj, 'tr')\\\">                    <td *ngFor=\\\"let searchField of _dataService.getSearch('fields')\\\"\\n    [ngClass]=\\\"getColAlign(searchField)\\\"\\n    [innerHTML]=\\\"obj[searchField]\\\"></td>                        <td>\\n                <span *ngIf=\\\"obj['_isNew']\\\" class=\\\"badge badge-info\\\">New</span>\\n                <span *ngIf=\\\"obj['_isEdited']\\\" class=\\\"badge badge-info\\\">Edited</span>\\n                <input *ngIf=\\\"_actionsService.getActionAttr('radioChoice', 'isEnabled')\\\"\\n                       class=\\\"pull-right action\\\"\\n                       type=\\\"radio\\\"\\n                       name=\\\"index[]\\\"\\n                       value=\\\"{{objIndex}}\\\"/>\\n                <input *ngIf=\\\"_actionsService.getActionAttr('checkAll', 'isEnabled')\\\"\\n                       class=\\\"pull-right action js_checkAll\\\"\\n                       type=\\\"checkbox\\\"\\n                       name=\\\"index[]\\\"\\n                       value=\\\"{{objIndex}}\\\"\\n                       [ngModel]=\\\"checkAll\\\"/>\\n                <div class=\\\"pull-right actions no-user-select text-secondary\\\" (click)=\\\"triggerAction($event)\\\">\\n                    <ng-template ngFor let-action [ngForOf]=\\\"_actionsService.getDetailActions()\\\">\\n                        <a *ngIf=\\\"_actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                           [ngClass]=\\\"[_actionsService.getActionAttr(action, 'icon') + getActionsLegendClasses(obj, action)]\\\"\\n                           class=\\\"fa\\\"\\n                           [attr.data-action]=\\\"action\\\"\\n                           [attr.data-value]=\\\"objIndex\\\"></a>\\n                    </ng-template>\\n                </div>\\n            </td>        </tr>\\n        </ng-template>\\n        </tbody>\\n    </table>\\n    </form></div>    </ng-template><p\\n        class=\\\"text-center\\\"\\n        *ngIf=\\\"!(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">No results.</p>\\n</div>\\n        <div [hidden]=\\\"!(_isExpanded)\\\"\\n         class=\\\"ibox-footer\\\"\\n         *ngIf=\\\"_dataService.countObjects() > 0\\\"><js_searchPagination></js_searchPagination></div>\\n\\n</div>\\n\\n<js_legend></js_legend>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/index/ts/templates/main.component.html\n// module id = ../../../../../src/Bck/AccountingBundle/Resources/public/supplier-document/index/ts/templates/main.component.html\n// module chunks = main","import {Component, ElementRef, Inject, Optional, Injector, ReflectiveInjector, Renderer, ViewChild, ViewContainerRef} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {BaseFormPopupExtComponent, FormProvider} from '../../base-document/ts/base-form-popup.ext-component';\nimport {DataService} from '../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {ActionsService} from '../../../../../../AppBundle/Resources/public/ts/actions/actions.service';\nimport {FormService} from '../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {NavManagerService} from '../../../../../../AppBundle/Resources/public/ts/nav-manager/nav-manager.service';\nimport {WizardManagerService} from '../../../../../../AppBundle/Resources/public/wizard/ts/src/wizard-manager.service';\nimport {DynamicComponentLoaderService} from '../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\nimport {PostService} from '../../../../../../AppBundle/Resources/public/ts/post.service';\n\n\n/* Import dependencies */\n\nimport {MainExtModule as SupplierDocumentInvoiceIndexMainExtModule} from '../../supplier-document-invoice/index/ts/src/main.ext-module';\nimport {FormPopupExtModule as SupplierDocumentInvoiceEditFormPopupExtModule} from \"../../supplier-document-invoice/edit/ts/src/form-popup.ext-module\";\nimport {FormPopupExtModule as SupplierDocumentInvoiceAddFormPopupExtModule} from \"../../supplier-document-invoice/add/ts/src/form-popup.ext-module\";\n\n/* /Import dependencies */\n\n\n@Component({\n    selector: '.js_baseSupplierDocumentFormPopup',\n    template: ''\n})\nexport class BaseInvoiceDocumentFormPopupExtComponent extends BaseFormPopupExtComponent\n{\n    // To load DocumentInvoiceDetailExtModule\n    @ViewChild('js_lazyLoadContainer', {read: ViewContainerRef}) lazyLoadViewContainerRef: ViewContainerRef;\n    // To handle with dependency objects changes to refresh the local object\n    protected onObjectsChangeSubscription_documentInvoiceDetail: any;\n\n    // Constructor vars\n    protected _parentDataService: any;\n    protected _helperService: any;\n    protected _dynamicComponentLoaderService: DynamicComponentLoaderService;\n    protected _postService: PostService;\n\n    // To check if object has changed to refresh parent\n    protected _object: any;\n\n    constructor() { super(); }\n\n    public initBaseInvoiceDocumentFormPopupExtComponent(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        provider: FormProvider,\n        formService: FormService,\n        dataService: any,\n        injector: Injector,\n        parentDataService: any,\n        helperService: any,\n        dynamicComponentLoaderService: DynamicComponentLoaderService,\n        postService: PostService\n    ) {\n        super.initBaseFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            injector\n        );\n\n        // Constructor vars\n        this._parentDataService = parentDataService;\n        this._helperService = helperService;\n        this._dynamicComponentLoaderService = dynamicComponentLoaderService;\n        this._postService = postService;\n\n        // Save initial object to detect changes\n        this._object = this._dataService.getObject();\n    }\n\n    /**\n     * Overrides the parent method\n     * @returns {Promise}\n     */\n    public save(): Promise<any>\n    {\n        let that = this,\n            route = this._dataService.getRoute('edit-invoice');\n\n        return new Promise(function(resolve, reject) {\n            that._formService.save(route).then(\n                data => { return resolve(data); },\n                errors => { return reject(errors); }\n            );\n        });\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngAfterViewInit()\n    {\n        super.ngAfterViewInit();\n\n        // Load dependency\n        let that = this,\n            dependencyUrlProvider = (\n                this._helperService.getAppVar('route')\n                + 'bck/accounting/supplier-document-invoice-detail/data/'\n                + this._formService.getObject()['id']\n            );\n\n        this._postService.post(dependencyUrlProvider, null).then(\n            data => {\n                let providers = [\n                        {provide: 'DataService', useClass: DataService},\n                        ActionsService,\n                        {provide: 'DataServiceProvider', useValue: that._helperService.getDataServiceProvider(data)},\n                        {provide: 'ActionsServiceProvider', useValue: that._helperService.getActionsServiceProvider(data)},\n                        {provide: 'LegendProvider', useValue: that._helperService.getLegendProvider(data)},\n                        {provide: 'Provider', useValue: that._helperService.getDataBoxProvider(data)},\n                        {provide: 'Popups', useValue: {\n                            add: {\n                                module: SupplierDocumentInvoiceAddFormPopupExtModule,\n                                component: 'FormPopupComponent',\n                                providers: [\n                                    FormService,\n                                    {provide: 'Provider', useValue: this._helperService.getFormProvider(data)},\n                                    {provide: 'ParentFormService', useValue: that._formService},\n                                    NavManagerService,\n                                    WizardManagerService\n                                ]\n                            },\n                            edit: {\n                                module: SupplierDocumentInvoiceEditFormPopupExtModule,\n                                component: 'FormPopupComponent',\n                                providers: [\n                                    FormService,\n                                    {provide: 'Provider', useValue: this._helperService.getFormProvider(data)}\n                                ]\n                            }\n                        }},\n                        {provide: 'ParentDataService', useValue: this._dataService}\n                    ],\n                    injector = ReflectiveInjector.fromResolvedProviders(\n                        ReflectiveInjector.resolve(providers),\n                        that._injector\n                    );\n\n                let dependencyDataService = injector.get('DataService');\n                that.onObjectsChangeSubscription_documentInvoiceDetail\n                    = dependencyDataService.getOnObjectsChangeEmitter()\n                        .subscribe(data => {\n                            // Update local object\n                            that._dataService.refreshObject();\n                        });\n\n                that._dynamicComponentLoaderService.load(\n                    SupplierDocumentInvoiceIndexMainExtModule,\n                    'MainComponent',\n                    that.lazyLoadViewContainerRef,\n                    injector\n                ).then(\n                    componentRef => {\n                        return true;\n                    },\n                    errors => { console.log(errors); return null; }\n                );\n            },\n            errors => { console.log(errors); return false; }\n        );\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnDestroy()\n    {\n        // Check subscription (if component load fail, subscription may not exist)\n        if (this.onObjectsChangeSubscription_documentInvoiceDetail) {\n            this.onObjectsChangeSubscription_documentInvoiceDetail.unsubscribe();\n        }\n\n        // If object has no changes or \"id\" is not defined, popup was open and closed without save the object,\n        // and if the flag '_isSessionStorage' is defined, the object was not saved in database,\n        // so doesn't make sense refresh the objects\n        if ((this._object != this._dataService.getObject())\n            && (this._dataService.getObject()['id'])\n            && (!this._dataService.getObject()['_isSessionStorage'])\n            && this._parentDataService\n        ) {\n            // Update object and parent object\n            this._parentDataService.refreshObject();\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/ts/base-invoice-document-form-popup.ext-component.ts","import {Component, ElementRef, Inject, Optional, Injector, ReflectiveInjector, Renderer, ViewChild, ViewContainerRef} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {BaseFormPopupExtComponent, FormProvider} from '../../base-document/ts/base-form-popup.ext-component';\nimport {DataService} from '../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {ActionsService} from '../../../../../../AppBundle/Resources/public/ts/actions/actions.service';\nimport {FormService} from '../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {NavManagerService} from '../../../../../../AppBundle/Resources/public/ts/nav-manager/nav-manager.service';\nimport {WizardManagerService} from '../../../../../../AppBundle/Resources/public/wizard/ts/src/wizard-manager.service';\nimport {DynamicComponentLoaderService} from '../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\nimport {PostService} from '../../../../../../AppBundle/Resources/public/ts/post.service';\n\n\n/* Import dependencies */\n\nimport {MainExtModule as SupplierDocumentRectificationIndexMainExtModule} from '../../supplier-document-rectification/index/ts/src/main.ext-module';\nimport {FormPopupExtModule as SupplierDocumentRectificationEditFormPopupExtModule} from \"../../supplier-document-rectification/edit/ts/src/form-popup.ext-module\";\nimport {FormPopupExtModule as SupplierDocumentRectificationAddFormPopupExtModule} from \"../../supplier-document-rectification/add/ts/src/form-popup.ext-module\";\n\n/* /Import dependencies */\n\n\n@Component({\n    selector: '.js_baseSupplierInvoiceRectificationDocumentFormPopup',\n    template: ''\n})\nexport class BaseInvoiceRectificationDocumentFormPopupExtComponent extends BaseFormPopupExtComponent\n{\n    // To load SupplierDocumentInvoiceRectificationExtModule\n    @ViewChild('js_lazyLoadContainer', {read: ViewContainerRef}) lazyLoadViewContainerRef: ViewContainerRef;\n    // To handle with dependency objects changes to refresh the local object\n    protected _onDependencyObjectsChangeSubscription: any;\n\n    // Constructor vars\n    protected _parentDataService: any;\n    protected _helperService: any;\n    protected _dynamicComponentLoaderService: DynamicComponentLoaderService;\n    protected _postService: PostService;\n\n    // To check if object has changed to refresh parent\n    protected _object: any;\n\n    constructor() { super(); }\n\n    public initBaseInvoiceRectificationDocumentFormPopupExtComponent(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        provider: FormProvider,\n        formService: FormService,\n        dataService: any,\n        injector: Injector,\n        parentDataService: any,\n        helperService: any,\n        dynamicComponentLoaderService: DynamicComponentLoaderService,\n        postService: PostService\n    ) {\n        super.initBaseFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            injector\n        );\n\n        // Constructor vars\n        this._parentDataService = parentDataService;\n        this._helperService = helperService;\n        this._dynamicComponentLoaderService = dynamicComponentLoaderService;\n        this._postService = postService;\n\n        // Save initial object to detect changes\n        this._object = this._dataService.getObject();\n    }\n\n    /**\n     * Overrides the parent method\n     * @returns {Promise}\n     */\n    public save(): Promise<any>\n    {\n        let that = this,\n            route = this._dataService.getRoute('edit-invoice');\n\n        return new Promise(function(resolve, reject) {\n            that._formService.save(route).then(\n                data => { return resolve(data); },\n                errors => { return reject(errors); }\n            );\n        });\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngAfterViewInit()\n    {\n        super.ngAfterViewInit();\n\n        // Load dependency\n        let that = this,\n            dependencyUrlProvider = (\n                this._helperService.getAppVar('route')\n                + 'bck/accounting/supplier-document-invoice-rectification/data/'\n                + this._formService.getObject()['id']\n            );\n\n        this._postService.post(dependencyUrlProvider, null).then(\n            data => {\n                let providers = [\n                        {provide: 'DataService', useClass: DataService},\n                        ActionsService,\n                        {provide: 'DataServiceProvider', useValue: that._helperService.getDataServiceProvider(data)},\n                        {provide: 'ActionsServiceProvider', useValue: that._helperService.getActionsServiceProvider(data)},\n                        {provide: 'LegendProvider', useValue: that._helperService.getLegendProvider(data)},\n                        {provide: 'Provider', useValue: that._helperService.getDataBoxProvider(data)},\n                        {provide: 'Popups', useValue: {\n                            add: {\n                                module: SupplierDocumentRectificationAddFormPopupExtModule,\n                                component: 'FormPopupComponent',\n                                providers: [\n                                    FormService,\n                                    {provide: 'Provider', useValue: this._helperService.getFormProvider(data)},\n                                    {provide: 'ParentFormService', useValue: that._formService},\n                                    NavManagerService,\n                                    WizardManagerService\n                                ]\n                            },\n                            edit: {\n                                module: SupplierDocumentRectificationEditFormPopupExtModule,\n                                component: 'FormPopupComponent',\n                                providers: [\n                                    FormService,\n                                    {provide: 'Provider', useValue: that._helperService.getFormProvider(data)}\n                                ]\n                            }\n                        }},\n                        {provide: 'ParentDataService', useValue: that._dataService}\n                    ],\n                    injector = ReflectiveInjector.fromResolvedProviders(\n                        ReflectiveInjector.resolve(providers),\n                        that._injector\n                    );\n\n                let dependencyDataService = injector.get('DataService');\n                that._onDependencyObjectsChangeSubscription\n                    = dependencyDataService.getOnObjectsChangeEmitter()\n                        .subscribe(data => {\n                            // Update local object\n                            that._dataService.refreshObject();\n                        });\n\n                that._dynamicComponentLoaderService.load(\n                    SupplierDocumentRectificationIndexMainExtModule,\n                    'MainComponent',\n                    that.lazyLoadViewContainerRef,\n                    injector\n                ).then(\n                    componentRef => { return true; },\n                    errors => { console.log(errors); return null; }\n                );\n            },\n            errors => { console.log(errors); return false; }\n        );\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnDestroy()\n    {\n        // Check subscription (if component load fail, subscription may not exist)\n        if (this._onDependencyObjectsChangeSubscription) {\n            this._onDependencyObjectsChangeSubscription.unsubscribe();\n        }\n\n        // If object has no changes or \"id\" is not defined, popup was open and closed without save the object,\n        // and if the flag '_isSessionStorage' is defined, the object was not saved in database,\n        // so doesn't make sense refresh the objects\n        if ((this._object != this._dataService.getObject())\n            && (this._dataService.getObject()['id'])\n            && (!this._dataService.getObject()['_isSessionStorage'])\n            && this._parentDataService\n        ) {\n            // Update object and parent object\n            this._parentDataService.refreshObject();\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/ts/base-invoice-rectification-document-form-popup.ext-component.ts","import {Component, ElementRef, Inject, Optional, Injector, ReflectiveInjector, Renderer, ViewChildren, QueryList, ViewContainerRef} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {BaseFormPopupExtComponent, FormProvider} from '../../base-document/ts/base-form-popup.ext-component';\nimport {DataService} from '../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {ActionsService} from '../../../../../../AppBundle/Resources/public/ts/actions/actions.service';\nimport {FormService} from '../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {NavManagerService} from '../../../../../../AppBundle/Resources/public/ts/nav-manager/nav-manager.service';\nimport {WizardManagerService} from '../../../../../../AppBundle/Resources/public/wizard/ts/src/wizard-manager.service';\nimport {DynamicComponentLoaderService} from '../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\nimport {PostService} from '../../../../../../AppBundle/Resources/public/ts/post.service';\n\n\n/* Import dependencies */\n\n// SupplierDocumentReceiptSettlement\nimport {MainExtModule as SupplierDocumentSettlementIndexMainExtModule} from '../../supplier-document-settlement/index/ts/src/main.ext-module';\nimport {FormPopupExtModule as SupplierDocumentSettlementEditFormPopupExtModule} from \"../../supplier-document-settlement/edit/ts/src/form-popup.ext-module\";\nimport {FormPopupExtModule as SupplierDocumentSettlementAddFormPopupExtModule} from \"../../supplier-document-settlement/add/ts/src/form-popup.ext-module\";\n// SupplierDocumentReceiptPayment\nimport {MainExtModule as SupplierDocumentPaymentIndexExtModule} from '../../supplier-document-payment/index/ts/src/main.ext-module';\nimport {FormPopupExtModule as SupplierDocumentPaymentEditFormPopupExtModule} from \"../../supplier-document-payment/edit/ts/src/form-popup.ext-module\";\n\n/* /Import dependencies */\n\n\n@Component({\n    selector: '.js_baseSupplierDocumentReceiptFormPopup',\n    template: ''\n})\nexport class BaseReceiptDocumentFormPopupExtComponent extends BaseFormPopupExtComponent\n{\n    // To load document detail\n    @ViewChildren('js_lazyLoadContainer', {read: ViewContainerRef}) lazyLoadViewContainerRefQL: QueryList<ViewContainerRef>;\n    protected _llViewContainerRefArr: ViewContainerRef[] = [];\n    // Data service of dependencies to calc the \"diffControl\" [settlement, payment]\n    protected _dependencyDataServiceArr: any[] = [null, null];\n    // To handle with dependencies objects changes to refresh the diffControl\n    protected _onDependencyObjectsChangeSubscription: any[] = [null, null];\n\n    // Constructor vars\n    protected _parentDataService: any;\n    protected _helperService: any;\n    protected _dynamicComponentLoaderService: DynamicComponentLoaderService;\n    protected _postService: PostService;\n\n    // To check if object has changed to refresh parent\n    //protected _object: any;\n    protected _$diffControl: any;\n\n    constructor() { super(); }\n\n    public initBaseReceiptDocumentFormPopupExtComponent(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        provider: FormProvider,\n        formService: FormService,\n        dataService: any,\n        injector: Injector,\n        parentDataService: any,\n        helperService: any,\n        dynamicComponentLoaderService: DynamicComponentLoaderService,\n        postService: PostService\n    ) {\n        super.initBaseFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            injector\n        );\n\n        // Constructor vars\n        this._parentDataService = parentDataService;\n        this._helperService = helperService;\n        this._dynamicComponentLoaderService = dynamicComponentLoaderService;\n        this._postService = postService;\n\n        // Save initial object to detect changes\n        //this._object = this._dataService.getObject(); // DISABLED BECAUSE PARENT OBJECT IS NOT UPDATED, CHECK BELOW\n    }\n\n    /**\n     * Refresh diff control\n     * @returns {BaseReceiptDocumentFormPopupExtComponent}\n     */\n    protected refreshDiffControl()\n    {\n        if (!this._dependencyDataServiceArr[0] || !this._dependencyDataServiceArr[1]) {\n            // Dependencies has not been loaded yet\n            return this;\n        }\n\n        // [settlement, payment]\n        let totals = [0, 0];\n\n        for (let index in this._dependencyDataServiceArr) {\n            let objects = this._dependencyDataServiceArr[index].getProviderAttr('objects');\n            for (let object of objects) {\n                totals[index] += parseFloat(object['value'] || '0');\n            }\n        }\n\n        this._$diffControl.val((Math.round((totals[0] - totals[1]) * 100) / 100).toFixed(2));\n\n        return this;\n    }\n\n    /**\n     * Overrides the parent method\n     * @returns {Promise}\n     */\n    public save(): Promise<any>\n    {\n        let that = this,\n            route = this._dataService.getRoute('edit-receipt');\n\n        return new Promise(function(resolve, reject) {\n            that._formService.save(route).then(\n                data => { return resolve(data); },\n                errors => { return reject(errors); }\n            );\n        });\n    }\n\n    /**\n     * Load dependency\n     * @param dependency\n     * @param module\n     * @param viewContainerRef\n     * @returns {Object}\n     */\n    protected loadDependency(dependency, module, viewContainerRef: ViewContainerRef)\n    {\n        // Load dependency\n        let that = this,\n            dependencyUrlProvider = (\n                this._helperService.getAppVar('route')\n                + 'bck/accounting/supplier-document-receipt-' + dependency + '/data/'\n                + this._formService.getObject()['id']\n            );\n\n        this._postService.post(dependencyUrlProvider, null).then(\n            data => {\n                let providers = [\n                        {provide: 'DataService', useClass: DataService},\n                        ActionsService,\n                        {provide: 'DataServiceProvider', useValue: that._helperService.getDataServiceProvider(data)},\n                        {provide: 'ActionsServiceProvider', useValue: that._helperService.getActionsServiceProvider(data)},\n                        {provide: 'LegendProvider', useValue: that._helperService.getLegendProvider(data)},\n                        {provide: 'Provider', useValue: that._helperService.getDataBoxProvider(data)},\n                        {provide: 'ParentDataService', useValue: this._dataService}\n                    ],\n                    dependencyIndex = 0;\n\n                switch (dependency) {\n                    case 'settlement':\n                        dependencyIndex = 0;\n                        // Popups provider\n                        providers = providers.concat([\n                            {provide: 'Popups', useValue: {\n                                add: {\n                                    module: SupplierDocumentSettlementAddFormPopupExtModule,\n                                    component: 'FormPopupComponent',\n                                    providers: [\n                                        FormService,\n                                        {provide: 'Provider', useValue: this._helperService.getFormProvider(data)},\n                                        {provide: 'ParentFormService', useValue: that._formService},\n                                        NavManagerService,\n                                        WizardManagerService\n                                    ]\n                                },\n                                edit: {\n                                    module: SupplierDocumentSettlementEditFormPopupExtModule,\n                                    component: 'FormPopupComponent',\n                                    providers: [\n                                        FormService,\n                                        {provide: 'Provider', useValue: that._helperService.getFormProvider(data)}\n                                    ]\n                                }\n                            }}\n                        ]);\n                        break;\n                    default:\n                        dependencyIndex = 1;\n                        // Popups provider\n                        providers = providers.concat([\n                            {provide: 'Popups', useValue: {\n                                module: SupplierDocumentPaymentEditFormPopupExtModule,\n                                component: 'FormPopupComponent',\n                                providers: [\n                                    FormService,\n                                    {provide: 'Provider', useValue: this._helperService.getFormProvider(data)}\n                                ]\n                            }}\n                        ]);\n                }\n\n                let injector = ReflectiveInjector.fromResolvedProviders(\n                    ReflectiveInjector.resolve(providers),\n                    that._injector\n                );\n\n                that._dependencyDataServiceArr[dependencyIndex] = injector.get('DataService');\n                that._onDependencyObjectsChangeSubscription[dependencyIndex]\n                    = that._dependencyDataServiceArr[dependencyIndex].getOnObjectsChangeEmitter()\n                        .subscribe(data => { that.refreshDiffControl() });\n\n                that._dynamicComponentLoaderService.load(\n                    module,\n                    'MainComponent',\n                    viewContainerRef,\n                    injector\n                ).then(\n                    componentRef => {\n                        that.refreshDiffControl();\n                        return true;\n                    },\n                    errors => { console.log(errors); return null; }\n                );\n            },\n            errors => { console.log(errors); return false; }\n        );\n\n        return this;\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngAfterViewInit()\n    {\n        super.ngAfterViewInit();\n\n        // Get array of ViewContainerRef\n        this._llViewContainerRefArr = this.lazyLoadViewContainerRefQL.toArray();\n        // Diff control\n        this._$diffControl = $(this._elementRef.nativeElement).find('.js_diffControl');\n\n        this.loadDependency('settlement',\n            SupplierDocumentSettlementIndexMainExtModule,\n            this._llViewContainerRefArr[0]\n        );\n\n        this.loadDependency('payment',\n            SupplierDocumentPaymentIndexExtModule,\n            this._llViewContainerRefArr[1]\n        );\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnDestroy()\n    {\n        // Check subscription (if component load fail, subscription may not exist)\n        if (this._onDependencyObjectsChangeSubscription[0]) {\n            this._onDependencyObjectsChangeSubscription[0].unsubscribe();\n        }\n        // Check subscription (if component load fail, subscription may not exist)\n        if (this._onDependencyObjectsChangeSubscription[1]) {\n            this._onDependencyObjectsChangeSubscription[1].unsubscribe();\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/ts/base-receipt-document-form-popup.ext-component.ts","import {Component, ElementRef, Inject, Optional, Injector, ReflectiveInjector, Renderer, ViewChild, ViewContainerRef} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {BaseFormPopupExtComponent, FormProvider} from '../../base-document/ts/base-form-popup.ext-component';\nimport {DataService} from '../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {ActionsService} from '../../../../../../AppBundle/Resources/public/ts/actions/actions.service';\nimport {FormService} from '../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {DynamicComponentLoaderService} from '../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\nimport {PostService} from '../../../../../../AppBundle/Resources/public/ts/post.service';\n\n\n/* Import dependencies */\n\n// SupplierDocumentReceiptPayment\nimport {MainExtModule as SupplierDocumentPaymentIndexMainExtModule} from '../../supplier-document-payment/index/ts/src/main.ext-module';\nimport {FormPopupExtModule as SupplierDocumentPaymentEditFormPopupExtModule} from \"../../supplier-document-payment/edit/ts/src/form-popup.ext-module\";\n\n/* /Import dependencies */\n\n\n@Component({\n    selector: '.js_formPopup',\n    template: ''\n})\nexport class BaseReceiptPaymentDocumentFormPopupExtComponent extends BaseFormPopupExtComponent\n{\n    // To load document detail\n    @ViewChild('js_lazyLoadContainer', {read: ViewContainerRef}) lazyLoadViewContainerRef: ViewContainerRef;\n    // Data service of dependency to calc the \"diffControl\"\n    protected _dependencyDataService: any = null;\n    // To handle with dependency objects change to refresh the diffControl\n    protected _onDependencyObjectsChangeSubscription: any = null;\n\n    // Constructor vars\n    protected _parentDataService: any;\n    protected _helperService: any;\n    protected _dynamicComponentLoaderService: DynamicComponentLoaderService;\n    protected _postService: PostService;\n\n    // To check if object has changed to refresh parent\n    //protected _object: any;\n    protected _$diffControl: any;\n\n    constructor() { super(); }\n\n    public initBaseReceiptPaymentDocumentFormPopupExtComponent(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        provider: FormProvider,\n        formService: FormService,\n        dataService: any,\n        injector: Injector,\n        parentDataService: any,\n        helperService: any,\n        dynamicComponentLoaderService: DynamicComponentLoaderService,\n        postService: PostService\n    ) {\n        super.initBaseFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            injector\n        );\n\n        // Constructor vars\n        this._parentDataService = parentDataService;\n        this._helperService = helperService;\n        this._dynamicComponentLoaderService = dynamicComponentLoaderService;\n        this._postService = postService;\n\n        // Save initial object to detect changes\n        //this._object = this._dataService.getObject(); // DISABLED BECAUSE PARENT OBJECT IS NOT UPDATED, CHECK BELOW\n    }\n\n    /**\n     * Overrides the parent method\n     * @returns {Promise}\n     */\n    public save(): Promise<any>\n    {\n        let that = this,\n            route = this._dataService.getRoute('edit-payment');\n\n        return new Promise(function(resolve, reject) {\n            that._formService.save(route).then(\n                data => { return resolve(data); },\n                errors => { return reject(errors); }\n            );\n        });\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngAfterViewInit()\n    {\n        super.ngAfterViewInit();\n\n        let that = this,\n            dependencyUrlProvider = (\n                this._helperService.getAppVar('route')\n                + 'bck/accounting/supplier-document-receipt-payment/data/'\n                + this._formService.getObject()['id']\n            );\n\n        // Load dependency\n        this._postService.post(dependencyUrlProvider, null).then(\n            data => {\n                let providers = [\n                    {provide: 'DataService', useClass: DataService},\n                    ActionsService,\n                    {provide: 'DataServiceProvider', useValue: that._helperService.getDataServiceProvider(data)},\n                    {provide: 'ActionsServiceProvider', useValue: that._helperService.getActionsServiceProvider(data)},\n                    {provide: 'LegendProvider', useValue: that._helperService.getLegendProvider(data)},\n                    {provide: 'Provider', useValue: that._helperService.getDataBoxProvider(data)},\n                    {provide: 'Popups', useValue: {\n                        module: SupplierDocumentPaymentEditFormPopupExtModule,\n                        component: 'FormPopupComponent',\n                        providers: [\n                            FormService,\n                            {provide: 'Provider', useValue: that._helperService.getFormProvider(data)}\n                        ]\n                    }},\n                    {provide: 'ParentDataService', useValue: that._dataService}\n                ];\n\n                let injector = ReflectiveInjector.fromResolvedProviders(\n                    ReflectiveInjector.resolve(providers),\n                    that._injector\n                );\n\n                that._dependencyDataService = injector.get('DataService');\n                that._onDependencyObjectsChangeSubscription\n                    = that._dependencyDataService.getOnObjectsChangeEmitter()\n                    .subscribe(data => {\n                        // Update local object\n                        that._dataService.refreshObject();\n                    });\n\n                that._dynamicComponentLoaderService.load(\n                    SupplierDocumentPaymentIndexMainExtModule,\n                    'MainComponent',\n                    that.lazyLoadViewContainerRef,\n                    injector\n                ).then(\n                    componentRef => { return true; },\n                    errors => { console.log(errors); return null; }\n                );\n            },\n            errors => { console.log(errors); return false; }\n        );\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnDestroy()\n    {\n        // Check subscription (if component load fail, subscription may not exist)\n        if (this._onDependencyObjectsChangeSubscription) {\n            this._onDependencyObjectsChangeSubscription.unsubscribe();\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/ts/base-receipt-payment-document-form-popup.ext-component.ts","import {Component, ElementRef, Inject, Optional, Injector, ReflectiveInjector, Renderer, ViewChild, ViewContainerRef} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {BaseFormPopupExtComponent, FormProvider} from '../../base-document/ts/base-form-popup.ext-component';\nimport {DataService} from '../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {ActionsService} from '../../../../../../AppBundle/Resources/public/ts/actions/actions.service';\nimport {FormService} from '../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {NavManagerService} from '../../../../../../AppBundle/Resources/public/ts/nav-manager/nav-manager.service';\nimport {WizardManagerService} from '../../../../../../AppBundle/Resources/public/wizard/ts/src/wizard-manager.service';\nimport {DynamicComponentLoaderService} from '../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\nimport {PostService} from '../../../../../../AppBundle/Resources/public/ts/post.service';\n\n\n/* Import dependencies */\n\n// SupplierDocumentReceiptSettlement\nimport {MainExtModule as SupplierDocumentSettlementIndexMainExtModule} from '../../supplier-document-settlement/index/ts/src/main.ext-module';\nimport {FormPopupExtModule as SupplierDocumentSettlementEditFormPopupExtModule} from \"../../supplier-document-settlement/edit/ts/src/form-popup.ext-module\";\nimport {FormPopupExtModule as SupplierDocumentSettlementAddFormPopupExtModule} from \"../../supplier-document-settlement/add/ts/src/form-popup.ext-module\";\n\n/* /Import dependencies */\n\n\n@Component({\n    selector: '.js_baseSupplierDocumentFormPopup',\n    template: ''\n})\nexport class BaseReceiptSettlementDocumentFormPopupExtComponent extends BaseFormPopupExtComponent\n{\n    // To load document detail\n    @ViewChild('js_lazyLoadContainer', {read: ViewContainerRef}) lazyLoadViewContainerRef: ViewContainerRef;\n    // Data service of dependency to calc the \"diffControl\"\n    protected _dependencyDataService: any = null;\n    // To handle with dependency objects change to refresh the diffControl\n    protected _onDependencyObjectsChangeSubscription: any = null;\n\n    // Constructor vars\n    protected _parentDataService: any;\n    protected _helperService: any;\n    protected _dynamicComponentLoaderService: DynamicComponentLoaderService;\n    protected _postService: PostService;\n\n    // To check if object has changed to refresh parent\n    //protected _object: any;\n    protected _$diffControl: any;\n\n    constructor() { super(); }\n\n    public initBaseReceiptSettlementDocumentFormPopupExtComponent(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        provider: FormProvider,\n        formService: FormService,\n        dataService: any,\n        injector: Injector,\n        parentDataService: any,\n        helperService: any,\n        dynamicComponentLoaderService: DynamicComponentLoaderService,\n        postService: PostService\n    ) {\n        super.initBaseFormPopupExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            injector\n        );\n\n        // Constructor vars\n        this._parentDataService = parentDataService;\n        this._helperService = helperService;\n        this._dynamicComponentLoaderService = dynamicComponentLoaderService;\n        this._postService = postService;\n\n        // Save initial object to detect changes\n        //this._object = this._dataService.getObject(); // DISABLED BECAUSE PARENT OBJECT IS NOT UPDATED, CHECK BELOW\n    }\n\n    /**\n     * Refresh diff control\n     * @returns {BaseReceiptSettlementDocumentFormPopupExtComponent}\n     */\n    protected refreshDiffControl()\n    {\n        if (!this._dependencyDataService) {\n            // Dependencies has not been loaded yet\n            return this;\n        }\n\n        // [DEBIT, CREDIT]\n        let totals = {'DEBIT': 0, 'CREDIT': 0};\n\n        let objects = this._dependencyDataService.getProviderAttr('objects');\n        for (let object of objects) {\n            totals[object['documentType_operation']] += parseFloat(object['value'] || '0');\n        }\n\n        this._$diffControl.val((Math.round((totals.DEBIT - totals.CREDIT) * 100) / 100).toFixed(2));\n\n        return this;\n    }\n\n    /**\n     * Overrides the parent method\n     * @returns {Promise}\n     */\n    public save(): Promise<any>\n    {\n        let that = this,\n            route = this._dataService.getRoute('edit-receipt');\n\n        return new Promise(function(resolve, reject) {\n            that._formService.save(route).then(\n                data => { return resolve(data); },\n                errors => { return reject(errors); }\n            );\n        });\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngAfterViewInit()\n    {\n        super.ngAfterViewInit();\n\n        let that = this,\n            dependencyUrlProvider = (\n                this._helperService.getAppVar('route')\n                + 'bck/accounting/supplier-document-receipt-settlement/data/'\n                + this._formService.getObject()['id']\n            );\n\n        // Diff control\n        this._$diffControl = $(this._elementRef.nativeElement).find('.js_diffControl');\n\n        // Load dependency\n        this._postService.post(dependencyUrlProvider, null).then(\n            data => {\n                let providers = [\n                        {provide: 'DataService', useClass: DataService},\n                        ActionsService,\n                        {provide: 'DataServiceProvider', useValue: that._helperService.getDataServiceProvider(data)},\n                        {provide: 'ActionsServiceProvider', useValue: that._helperService.getActionsServiceProvider(data)},\n                        {provide: 'LegendProvider', useValue: that._helperService.getLegendProvider(data)},\n                        {provide: 'Provider', useValue: that._helperService.getDataBoxProvider(data)},\n                        {provide: 'Popups', useValue: {\n                            add: {\n                                module: SupplierDocumentSettlementAddFormPopupExtModule,\n                                component: 'FormPopupComponent',\n                                providers: [\n                                    FormService,\n                                    {provide: 'Provider', useValue: this._helperService.getFormProvider(data)},\n                                    {provide: 'ParentFormService', useValue: that._formService},\n                                    {provide: 'ParentDataService', useValue: null}, // It's not needed in this context\n                                    NavManagerService,\n                                    WizardManagerService\n                                ]\n                            },\n                            edit: {\n                                module: SupplierDocumentSettlementEditFormPopupExtModule,\n                                component: 'FormPopupComponent',\n                                providers: [\n                                    FormService,\n                                    {provide: 'Provider', useValue: that._helperService.getFormProvider(data)}\n                                ]\n                            }\n                        }},\n                        {provide: 'ParentDataService', useValue: that._dataService}\n                    ],\n                    injector = ReflectiveInjector.fromResolvedProviders(\n                        ReflectiveInjector.resolve(providers),\n                        that._injector\n                    );\n\n                that._dependencyDataService = injector.get('DataService');\n                that._onDependencyObjectsChangeSubscription\n                    = that._dependencyDataService.getOnObjectsChangeEmitter()\n                    .subscribe(data => {that.refreshDiffControl()});\n\n                that._dynamicComponentLoaderService.load(\n                    SupplierDocumentSettlementIndexMainExtModule,\n                    'MainComponent',\n                    that.lazyLoadViewContainerRef,\n                    injector\n                ).then(\n                    componentRef => {\n                        that.refreshDiffControl();\n                        return true;\n                    },\n                    errors => { console.log(errors); return null; }\n                );\n            },\n            errors => { console.log(errors); return false; }\n        );\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnDestroy()\n    {\n        // Check subscription (if component load fail, subscription may not exist)\n        if (this._onDependencyObjectsChangeSubscription) {\n            this._onDependencyObjectsChangeSubscription.unsubscribe();\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/AccountingBundle/Resources/public/supplier-document/ts/base-receipt-settlement-document-form-popup.ext-component.ts","import {Component, Inject, Injector, ViewContainerRef, Renderer} from '@angular/core';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {ActionsService} from '../../../../../../../../AppBundle/Resources/public/ts/actions/actions.service';\nimport {DataBoxExtensionComponent, DataBoxProvider, Popups, Popup} from '../../../../../../../../AppBundle/Resources/public/data-box/ts/src/data-box.extension-component';\nimport {ModalService} from '../../../../../../../../AppBundle/Resources/public/modal/ts/modal.service';\nimport {TasksLoaderManagerService} from '../../../../../../../../AppBundle/Resources/public/tasks-loader-manager/ts/tasks-loader-manager.service';\n\n\n// Component\n@Component({\n    selector: '.js_bookingPax',\n    templateUrl: '../templates/booking-pax.component.html'\n})\nexport class BookingPaxComponent extends DataBoxExtensionComponent\n{\n    // To get notify about changes on parent object,\n    // so we can refresh the objects and keep them updated (feature \"clientIsPax\" in parent can change booking pax data)\n    protected _onParentObjectChangeSubscription: any;\n\n    // Copy of client pax fields to controls when this property change in parent object\n    protected _clientPax: {clientIsPax: boolean; bookingPaxObj: any};\n\n    constructor(\n        viewContainerRef: ViewContainerRef,\n        renderer: Renderer,\n        @Inject('Provider') dataBoxProvider: DataBoxProvider,\n        @Inject('DataService') dataService: any,\n        tasksLoaderManagerService: TasksLoaderManagerService,\n        @Inject('HelperService') helperService: any,\n        actionsService: ActionsService,\n        modalService: ModalService,\n        @Inject('Popups') popups: Popups | Popup,\n        injector: Injector,\n        @Inject('ParentDataService') protected _parentDataService: any\n    ) {\n        // Call parent\n        super();\n        super.initDataBoxExtensionComponent(\n            viewContainerRef,\n            renderer,\n            dataBoxProvider,\n            dataService,\n            tasksLoaderManagerService,\n            helperService,\n            actionsService,\n            modalService,\n            popups,\n            injector\n        );\n\n        // Save initial value\n        this._clientPax = {\n            clientIsPax: this._parentDataService.getObject()['clientIsPax'],\n            bookingPaxObj: this._parentDataService.getObject()['bookingPaxObj']\n        };\n        this._onParentObjectChangeSubscription = this._parentDataService.getOnObjectChangeEmitter()\n            .subscribe(object => this.onParentObjectChange(object));\n    }\n\n\n    /**\n     * On parent object change\n     * @param object\n     */\n    protected onParentObjectChange(object): void\n    {\n        // Check if \"clientIsPax\" change\n        if (this._clientPax.clientIsPax != object['clientIsPax']) {\n            // Update fields\n            this._clientPax.clientIsPax = object['clientIsPax'];\n            this._clientPax.bookingPaxObj = object['bookingPaxObj'];\n\n            // Refresh objects, because parent change pax\n            this._dataService.refresh();\n        }\n    }\n\n    /**\n     * Post (after) delete object event. Use this function to handle event.\n     * @param object\n     * @return any\n     */\n    protected postDeleteObject(object)\n    {\n        // Only make sense if clientIsPax is active and is the client pax object\n        if (this._clientPax.clientIsPax &&\n            (this._clientPax.bookingPaxObj == object['bookingPaxObj'])) {\n            this._parentDataService.refreshObject();\n        }\n\n        return this;\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnDestroy()\n    {\n        this._onParentObjectChangeSubscription.unsubscribe();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking-pax/index/ts/src/booking-pax.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n// This module doesn't use \"ReactiveFormsModule\", but it needs to import this class\n// to provide \"formBuilder\" when inject dependencies in child modules (like form)\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {SearchModule} from '../../../../../../../../AppBundle/Resources/public/ts/search/search.module';\nimport {ExpanderModule} from '../../../../../../../../AppBundle/Resources/public/ts/expander/expander.module';\nimport {LegendExtModule} from '../../../../../../../../AppBundle/Resources/public/legend/ts/src/legend.ext-module';\nimport {SearchPaginationModule} from '../../../../../../../../AppBundle/Resources/public/ts/search/search-pagination.module';\nimport {BookingPaxComponent} from './booking-pax.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        SearchModule,\n        SearchPaginationModule,\n        ExpanderModule,\n        LegendExtModule\n    ],\n    declarations: [\n        BookingPaxComponent\n    ],\n    exports: [BookingPaxComponent]\n})\nexport class BookingPaxExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking-pax/index/ts/src/booking-pax.ext-module.ts","module.exports = \"\\n\\n<div class=\\\"ibox\\\" >\\n                        <div class=\\\"ibox-title\\\" *ngIf=\\\"!getProviderExtraDataAttr('hasMergeHeader')\\\">\\n                <h5>\\n                    <ng-template [ngIf]=\\\"getProviderAttr('controls')['expander']['isEnabled']\\\"><js_expander\\n                        [isExpanded]=\\\"_isExpanded || null\\\"\\n                        [label]=\\\"getLang(getProviderAttr('label'))\\\"\\n                        [labelCount]=\\\"getProviderAttr('labelCount')\\\"\\n                        [labelIcon]=\\\"getProviderAttr('labelIcon')\\\"\\n                        (onChange)=\\\"expanderAction($event)\\\"></js_expander></ng-template>\\n                    <ng-template [ngIf]=\\\"!getProviderAttr('controls')['expander']['isEnabled']\\\">\\n                        <span [innerHTML]=\\\"getProviderAttr('label')\\\"></span>\\n                    </ng-template>\\n                </h5>\\n                <div *ngIf=\\\"_isExpanded\\\"\\n                     class=\\\"txt-align-r hide-on-empty\\\">    <div class=\\\"row align-items-center\\\">\\n        <div class=\\\"col ml-auto text-right actions no-user-select\\\">\\n            <ng-template [ngIf]=\\\"_actionsService.getActionAttr('search', 'isEnabled')\\\"><js_search class=\\\"search\\\"></js_search></ng-template>\\n            <div (click)=\\\"triggerAction($event)\\\">\\n                <ng-template ngFor let-action [ngForOf]=\\\"_actionsService.getHeadActions()\\\">\\n                    <a *ngIf=\\\"_actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                       [ngClass]=\\\"[_actionsService.getActionAttr(action, 'icon')]\\\"\\n                       class=\\\"-round fa\\\"\\n                       [attr.data-action]=\\\"action\\\"></a>\\n                </ng-template>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n            </div>\\n            \\n    <div [hidden]=\\\"!(_isExpanded)\\\" class=\\\"ibox-content hide-on-empty\\\">    <ng-template [ngIf]=\\\"(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">\\n                \\n    <div class=\\\"table-responsive\\\">\\n    <form>    <table class=\\\"data-table table table-hover dataTables-example table-bordered\\\">\\n        <thead>\\n        <tr>\\n            <th *ngFor=\\\"let searchField of _dataService.getSearch('fields')\\\">{{ getLang(_dataService.getFields('metadata')[searchField].label) }}</th>\\n            <th>&nbsp;</th>\\n        </tr>\\n        </thead>        <tbody>\\n        <ng-template ngFor let-obj [ngForOf]=\\\"_dataService.getProviderAttr('objects')\\\" let-objIndex=\\\"index\\\">\\n        <tr (dblclick)=\\\"editAction($event, objIndex)\\\"            [ngClass]=\\\"getLegendClasses(obj, 'tr')\\\">                    <td *ngFor=\\\"let searchField of _dataService.getSearch('fields')\\\"\\n    [ngClass]=\\\"getColAlign(searchField)\\\"\\n    [innerHTML]=\\\"obj[searchField]\\\"></td>                        <td>\\n                <span *ngIf=\\\"obj['_isNew']\\\" class=\\\"badge badge-info\\\">New</span>\\n                <span *ngIf=\\\"obj['_isEdited']\\\" class=\\\"badge badge-info\\\">Edited</span>\\n                <input *ngIf=\\\"_actionsService.getActionAttr('radioChoice', 'isEnabled')\\\"\\n                       class=\\\"pull-right action\\\"\\n                       type=\\\"radio\\\"\\n                       name=\\\"index[]\\\"\\n                       value=\\\"{{objIndex}}\\\"/>\\n                <input *ngIf=\\\"_actionsService.getActionAttr('checkAll', 'isEnabled')\\\"\\n                       class=\\\"pull-right action js_checkAll\\\"\\n                       type=\\\"checkbox\\\"\\n                       name=\\\"index[]\\\"\\n                       value=\\\"{{objIndex}}\\\"\\n                       [ngModel]=\\\"checkAll\\\"/>\\n                <div class=\\\"pull-right actions no-user-select text-secondary\\\" (click)=\\\"triggerAction($event)\\\">\\n                    <ng-template ngFor let-action [ngForOf]=\\\"_actionsService.getDetailActions()\\\">\\n                        <a *ngIf=\\\"_actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                           [ngClass]=\\\"[_actionsService.getActionAttr(action, 'icon') + getActionsLegendClasses(obj, action)]\\\"\\n                           class=\\\"fa\\\"\\n                           [attr.data-action]=\\\"action\\\"\\n                           [attr.data-value]=\\\"objIndex\\\"></a>\\n                    </ng-template>\\n                </div>\\n            </td>        </tr>\\n        </ng-template>\\n        </tbody>\\n    </table>\\n    </form></div>    </ng-template><p\\n        class=\\\"text-center\\\"\\n        *ngIf=\\\"!(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">No results.</p>\\n</div>\\n        <div [hidden]=\\\"!(_isExpanded)\\\"\\n         class=\\\"ibox-footer\\\"\\n         *ngIf=\\\"_dataService.countObjects() > 0\\\"><js_searchPagination></js_searchPagination></div>\\n\\n</div>\\n\\n<js_legend></js_legend>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking-pax/index/ts/templates/booking-pax.component.html\n// module id = ../../../../../src/Bck/BookingBundle/Resources/public/base-booking-pax/index/ts/templates/booking-pax.component.html\n// module chunks = main","import {Component, Inject, Injector, ViewContainerRef, Renderer} from '@angular/core';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {ActionsService} from '../../../../../../../../AppBundle/Resources/public/ts/actions/actions.service';\nimport {DataBoxExtensionComponent, DataBoxProvider, Popups, Popup} from '../../../../../../../../AppBundle/Resources/public/data-box/ts/src/data-box.extension-component';\nimport {ModalService} from '../../../../../../../../AppBundle/Resources/public/modal/ts/modal.service';\nimport {TasksLoaderManagerService} from '../../../../../../../../AppBundle/Resources/public/tasks-loader-manager/ts/tasks-loader-manager.service';\nimport {FormService} from \"../../../../../../../../AppBundle/Resources/public/form/ts/form.service\";\n\n\n// Component\n@Component({\n    selector: '.js_addStep1Service',\n    templateUrl: '../templates/step1-service.component.html'\n})\nexport class Step1ServiceComponent extends DataBoxExtensionComponent\n{\n    constructor(\n        viewContainerRef: ViewContainerRef,\n        renderer: Renderer,\n        @Inject('Provider') dataBoxProvider: DataBoxProvider,\n        @Inject('DataService') dataService: any,\n        tasksLoaderManagerService: TasksLoaderManagerService,\n        @Inject('HelperService') helperService: any,\n        actionsService: ActionsService,\n        modalService: ModalService,\n        @Inject('Popups') popups: Popups | Popup,\n        injector: Injector,\n        protected _formService: FormService,  // Parent FormService used in view\n        @Inject('HelperService') protected _helperService: any // Used in view\n    ) {\n        // Call parent\n        super();\n        super.initDataBoxExtensionComponent(\n            viewContainerRef,\n            renderer,\n            dataBoxProvider,\n            dataService,\n            tasksLoaderManagerService,\n            helperService,\n            actionsService,\n            modalService,\n            popups,\n            injector\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking-service/add/ts/src/step1-service.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n// This module doesn't use \"ReactiveFormsModule\", but it needs to import this class\n// to provide \"formBuilder\" when inject dependencies in child modules (like form)\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {SearchModule} from '../../../../../../../../AppBundle/Resources/public/ts/search/search.module';\nimport {ExpanderModule} from '../../../../../../../../AppBundle/Resources/public/ts/expander/expander.module';\nimport {SearchPaginationModule} from '../../../../../../../../AppBundle/Resources/public/ts/search/search-pagination.module';\nimport {Step1ServiceComponent} from './step1-service.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        SearchModule,\n        SearchPaginationModule,\n        ExpanderModule\n    ],\n    declarations: [\n        Step1ServiceComponent\n    ],\n    exports: [Step1ServiceComponent]\n})\nexport class Step1ServiceExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking-service/add/ts/src/step1-service.ext-module.ts","import {Component, ElementRef, Inject, Injector, ReflectiveInjector, Renderer, QueryList, Optional, ViewChildren, ViewContainerRef, ViewChild} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {Helper} from '../../../../../../../../AppBundle/Resources/public/ts/helper';\nimport {DataService} from \"../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service\";\nimport {ActionsService} from '../../../../../../../../AppBundle/Resources/public/ts/actions/actions.service';\nimport {WizardFormPopupComponent, WizardPopupProvider, IWizard, LazyLoadData} from '../../../../../../../../AppBundle/Resources/public/wizard/ts/src/wizard-form-popup.component';\nimport {WizardManagerService} from '../../../../../../../../AppBundle/Resources/public/wizard/ts/src/wizard-manager.service';\nimport {DynamicComponentLoaderService} from '../../../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\nimport {PostService} from '../../../../../../../../AppBundle/Resources/public/ts/post.service';\n\n\n// Interface provider\nexport interface BaseBookingServiceAddProvider extends WizardPopupProvider {\n    servicesUrlProvider: string,\n    modules: { // Put here modules dependencies\n        step2: {module: any, component: string},\n        step3: {module: any, component: string},\n        bookingServicePriceEdit: {module: any, component: string}\n    }\n}\n\n\n/* Import dependencies */\n// Parent id for dependencies\nvar bookingContext = Helper.getAppVar('conf')['localData']['data']['bookingContext']; // Determines the type of booking\n\n// Step1 Service\nimport {Step1ServiceExtModule} from './step1-service.ext-module';\n\n// ServicePrice\nimport {Step4ExtModule} from './step4.ext-module';\n/* /Import dependencies */\n\n\n@Component({\n    selector: '.js_add',\n    template: '' // Define template in child component\n})\nexport class Step1Component extends WizardFormPopupComponent implements IWizard\n{\n    // For NavManagerService\n    @ViewChildren('js_lazyLoadContainer', {read: ViewContainerRef}) lazyLoadViewContainerRefQL: QueryList<ViewContainerRef>;\n\n    // For dependency (\"Step1ServiceExtModule\")\n    @ViewChild('js_step1Service', {read: ViewContainerRef}) lazyLoadViewContainerRefDependency: ViewContainerRef;\n\n\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: BaseBookingServiceAddProvider,\n        wizardManagerService: WizardManagerService,\n        formService: FormService,\n        protected _dynamicComponentLoaderService: DynamicComponentLoaderService,\n        protected _postService: PostService,\n        protected _injector: Injector,\n        @Inject('HelperService') protected _helperService: any,\n        @Inject('DataService') protected _dataService: any,\n        @Inject('ParentDataService') protected _parentDataService: any\n    ) {\n        // Call parent\n        super(\n            elementRef,\n            renderer,\n            provider,\n            wizardManagerService,\n            formService // Form service is shared between all steps\n        );\n    }\n\n    /**\n     * Submit navigation (when leave one container to navigate in other one)\n     * @param index (index to validate)\n     * @returns {Promise<boolean>}\n     */\n    public submitNav(index: number): Promise<boolean>\n    {\n        let that = this,\n            route = null,\n            componentRef = null;\n\n        return new Promise(function(resolve, reject) {\n            switch (index) {\n                case 0:\n                    // Check service selection\n                    // It's a hidden field, so does not can be checked by angular control\n                    if (!that._formService.getObject()['serviceObj']) {\n                        let errors = {};\n                        errors['serviceObj'] = ['Please select an option'];\n                        that._formService.setErrors(errors);\n                        return reject(false);\n                    }\n\n                    // Save form\n                    route = (that._dataService.getRoute('addStep1'));\n                    return that._formService.save(route).then(\n                        data => { return resolve(true); },\n                        errors => { return reject(false); }\n                    );\n                case 1:\n                    componentRef = that._wizardManagerService.getComponentRef(index);\n\n                    // Validate pax\n                    if (!componentRef.instance.validatePax()) {\n                        return reject(false);\n                    }\n\n                    // Save form\n                    route = (that._dataService.getRoute('addStep2'));\n                    return componentRef.instance._formService.save(route).then(\n                        data => { return resolve(true); },\n                        errors => { return reject(false); }\n                    );\n                case 2:\n                    // Save form\n                    componentRef = that._wizardManagerService.getComponentRef(index);\n                    route = (that._dataService.getRoute('addStep3'));\n                    return componentRef.instance._formService.save(route).then(\n                        data => {\n                            // Refresh the next component to refresh price objects\n                            if (that._dataService.getObject()['isEnabledPrice']) {\n                                componentRef = that._wizardManagerService.getComponentRef(index + 1);\n                                if (componentRef) {\n                                    componentRef.instance._dataService.refresh();\n                                }\n                            }\n\n                            return resolve(true);\n                        },\n                        errors => { return reject(false); }\n                    );\n                case 3:\n                    // Confirm all data to save from session storage to database\n                    route = (\n                        that._dataService.getRoute('addStep4')\n                        + '/' + that._formService.getObject()['id']\n                    );\n                    return that._dataService.runAction(route, null, true).then(\n                        data => { return resolve(true); },\n                        errors => { return reject(false); }\n                    );\n            }\n\n            // Nothing to do\n            return resolve(true);\n        });\n    }\n\n    /**\n     * Get navigation data (needed data to lazy load container)\n     * @param index (index to load)\n     * @returns NavData\n     */\n    public getNavData(index: number): LazyLoadData\n    {\n        switch (index) {\n            case 1:\n                return {\n                    module: this._provider['modules']['step2']['module'],\n                    component: this._provider['modules']['step2']['component']\n                };\n            case 2:\n                return {\n                    module: this._provider['modules']['step3']['module'],\n                    component: this._provider['modules']['step3']['component']\n                };\n            case 3:\n                let bookingServiceId = this._dataService.getObject()['bookingServiceObj'];\n                return {\n                    module: Step4ExtModule,\n                    component: 'Step4Component',\n                    urlProvider: (this._helperService.getAppVar('route')\n                        + 'bck/booking/booking-service-price/data/'\n                        + bookingServiceId\n                    )\n                };\n        }\n\n        return null;\n    }\n\n    /**\n     * Get nav providers (to lazy load components in container with dependency injection)\n     * @param index (index to load)\n     * @param data (data to resolve all providers)\n     * @returns {Array}\n     */\n    public getNavProviders(index: number, data = null): any\n    {\n        switch (index) {\n            case 1:\n            case 2:\n                return [\n                    FormService,\n                    // Reset FormServiceProvider to use DataServiceProvider as default values\n                    {provide: 'FormServiceProvider', useValue: {}}\n                ];\n            case 3:\n                return [\n                    {provide: 'DataService', useClass: DataService},\n                    ActionsService,\n                    {provide: 'DataServiceProvider', useValue: this._helperService.getDataServiceProvider(data)},\n                    {provide: 'ActionsServiceProvider', useValue: this._helperService.getActionsServiceProvider(data)},\n                    {provide: 'Provider', useValue: this._helperService.getDataBoxProvider(data)},\n                    {provide: 'Popups', useValue: {\n                        module: this._provider['modules']['bookingServicePriceEdit']['module'],\n                        component: this._provider['modules']['bookingServicePriceEdit']['component'],\n                        providers: [\n                            FormService,\n                            // Reset FormServiceProvider to use DataServiceProvider as default values\n                            {provide: 'FormServiceProvider', useValue: {}},\n                            {provide: 'Provider', useValue: this._helperService.getFormProvider(data)}\n                        ]\n                    }},\n                    {provide: 'ParentDataService', useValue: this._dataService}\n                ];\n        }\n\n        return null;\n    }\n\n    /**\n     * Get Selected Service Attribute\n     * Used by view\n     * @param attribute\n     * @returns {any|string}\n     */\n    public getSelectedServiceAttr(attribute: string)\n    {\n        return (this._formService.getViewObject()[attribute] || null);\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngAfterViewInit()\n    {\n        super.ngAfterViewInit();\n\n        // Load dependency\n        let that = this;\n\n        this._postService.post(this._provider['servicesUrlProvider']).then(\n            data => {\n                let providers = [\n                        {provide: 'DataService', useClass: DataService},\n                        ActionsService,\n                        {provide: 'DataServiceProvider', useValue: that._helperService.getDataServiceProvider(data)},\n                        {provide: 'ActionsServiceProvider', useValue: that._helperService.getActionsServiceProvider(data)},\n                        {provide: 'Provider', useValue: that._helperService.getDataBoxProvider(data)}\n                    ],\n                    injector = ReflectiveInjector.fromResolvedProviders(\n                        ReflectiveInjector.resolve(providers),\n                        that._injector\n                    );\n\n                that._dynamicComponentLoaderService.load(\n                    Step1ServiceExtModule,\n                    'Step1ServiceComponent',\n                    that.lazyLoadViewContainerRefDependency,\n                    injector\n                ).then(\n                    componentRef => { return true; },\n                    errors => { console.log(errors); return null; }\n                );\n            },\n            errors => { console.log(errors); return false; }\n        );\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnDestroy()\n    {\n        super.ngOnDestroy();\n\n        // Reset debug (auto add price, dates and allot)\n        this._dataService.setProviderAttr('localData', {});\n\n        // If no \"id\", popup was open and closed without save the object, so doesn't make sense refresh the objects\n        if (this._dataService.getObject()['id'] && !this._dataService.getObject()['_isSessionStorage']) {\n            this._parentDataService.refreshObject();\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking-service/add/ts/src/step1.component.ts","import {Component, ElementRef, Inject, Optional, Injector, Renderer, EventEmitter} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {AccordionComponent, IAccordion, LazyLoadData} from '../../../../../../../../AppBundle/Resources/public/accordion/ts/src/accordion.component';\nimport {NavManagerService} from '../../../../../../../../AppBundle/Resources/public/ts/nav-manager/nav-manager.service';\nimport {BaseProvider, IModalPopup} from '../../../../../../../../AppBundle/Resources/public/modal/ts/modal.service';\n\n\n// Interface provider\nexport interface Step2FieldDebugProvider extends BaseProvider {\n    modules: { // Put here modules dependencies\n        label: string,\n        data: {\n            availability?: any,\n            allot?: any,\n            price?: any\n        }\n    }\n}\n\n\n@Component({\n    selector: '#js_addStep2FieldDebug',\n    templateUrl: '../templates/step2-field-debug.component.html'\n})\nexport class Step2FieldDebugComponent extends AccordionComponent implements IAccordion, IModalPopup\n{\n    // Modal parameters\n    onDismissEmitter: EventEmitter<any> = new EventEmitter();\n\n    // USed by template\n    protected _statusMap: any;\n\n\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Optional() @Inject('Provider') provider: any,\n        @Inject('HelperService') helperService: any,\n        navManagerService: NavManagerService\n    ) {\n        super(\n            elementRef,\n            renderer,\n            provider || null,\n            helperService,\n            navManagerService\n        );\n\n        this._statusMap = this._helperService.getStatusMap();\n    }\n\n    /**\n     * Get navigation data (needed data to lazy load container)\n     * @param index (index to load)\n     * @returns NavData\n     */\n    public getNavData(index: number): LazyLoadData\n    {\n        return null;\n    }\n\n    /**\n     * Get nav providers (to lazy load components in container with dependency injection)\n     * @param index (index to load)\n     * @param data (data to resolve all providers)\n     * @returns {Array}\n     */\n    public getNavProviders(index: number, data = null): any\n    {\n        return [];\n    }\n\n    /**\n     * Close action.\n     * @param $event\n     */\n    public closeAction($event: any = null): void\n    {\n        if ($event) { $event.preventDefault(); }\n        this.onDismissEmitter.emit(null);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking-service/add/ts/src/step2-field-debug.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {Step2FieldDebugComponent} from './step2-field-debug.component';\n\n\n/**\n * Note: This file is never used. It's only here as example to check injection dependencies\n */\n@NgModule({\n    imports: [CommonModule, FormsModule],\n    declarations: [\n        Step2FieldDebugComponent\n    ],\n    exports: [Step2FieldDebugComponent]\n})\nexport class Step2FieldDebugExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking-service/add/ts/src/step2-field-debug.ext-module.ts","import {Component, ElementRef, ViewChild, ReflectiveInjector, ViewContainerRef, Inject, Optional, Injector, Renderer} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormExtensionComponent, FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.extension-component';\nimport {NavManagerService} from '../../../../../../../../AppBundle/Resources/public/ts/nav-manager/nav-manager.service';\nimport {ModalService, Popup} from '../../../../../../../../AppBundle/Resources/public/modal/ts/modal.service';\nimport {ActionsService} from '../../../../../../../../AppBundle/Resources/public/ts/actions/actions.service';\nimport {DynamicComponentLoaderService} from '../../../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\nimport {PostService} from '../../../../../../../../AppBundle/Resources/public/ts/post.service';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\n\n// Re-exports\nexport {FormProvider}\n\n/* Import dependencies */\nimport {Step2FieldDebugExtModule} from './step2-field-debug.ext-module';\n/* /Import dependencies */\n\n\n@Component({\n    selector: '#js_addStep2',\n    template: '' // Define template in child component\n})\nexport abstract class Step2Component extends FormExtensionComponent\n{\n    // For dependency (\"Step2PaxExtModule\")\n    @ViewChild('js_paxDataBox', {read: ViewContainerRef}) lazyLoadViewContainerRefDependency: ViewContainerRef;\n\n    // USed by template\n    protected _statusMap: any;\n\n    // Pax component ref for validation\n    protected _paxComponentRef: any = null;\n\n\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any,\n        protected _modalService: ModalService,\n        protected _dynamicComponentLoaderService: DynamicComponentLoaderService,\n        protected _postService: PostService,\n        protected _injector: Injector,\n        @Inject('HelperService') protected _helperService: any\n    ) {\n        super();\n        super.initFormExtensionComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService\n        );\n\n        this._statusMap = this._helperService.getStatusMap();\n    }\n\n    /**\n     * Mandatory implementation by children classes to get the PaxDataBoxExtModule\n     */\n    protected abstract getPaxDataBoxExtModule(): any\n\n    /**\n     * Mandatory implementation by children classes to get the PaxEditFormExtModule\n     */\n    protected abstract getPaxEditFormExtModule(): any\n\n    /**\n     * Mandatory implementation by children classes to get the url provider for PaxDataBoxExtModule\n     */\n    protected abstract getPaxDataBoxUrlProvider(): any\n\n    /**\n     * Change action (change the submitted data).\n     * This method should be called from view/template to change the submitted data.\n     * @param $event\n     */\n    public changeAction($event: any = null): void\n    {\n        if ($event) { $event.preventDefault(); }\n\n        let route = this._dataService.getRoute('addStep2');\n\n        this._formService.save(route).then(\n            data => { return; },\n            errors => { return; }\n        );\n    }\n\n    /**\n     * Show field debug action (change the submitted data).\n     * @param $event\n     */\n    public debugAction($event: any = null): void\n    {\n        if ($event) { $event.preventDefault(); }\n\n        let popup: Popup = {\n            module: Step2FieldDebugExtModule,\n            component: 'Step2FieldDebugComponent',\n            providers: [\n                NavManagerService,\n                {provide: 'Provider', useValue: {\n                    label: this._formService.getObject()['name'],\n                    data: {\n                        availability: (this._formService.getObject()['isAutoAvailability']\n                                ? this.getControlDebug('availabilityDebug')\n                                : null\n                        ),\n                        allot: (this._formService.getObject()['isAutoAllot']\n                                ? this.getControlDebug('allotDebug')\n                                : null\n                        ),\n                        price: (this._formService.getObject()['isAutoPrice']\n                                ? this.getControlDebug('priceDebug')\n                                : null\n                        )\n                    }\n                }}\n            ]\n        };\n\n        // Open popup\n        this._modalService.popup(popup, this._injector).then(\n            data => { return; },\n            errors => { console.log(errors); return; }\n        );\n    }\n\n    /**\n     * Get control debug\n     * @param control\n     * @returns {Array}\n     */\n    public getControlDebug(control: string)\n    {\n        let bookingServiceId = (this._formService.getObject()['bookingServiceObj'] || null);\n        if (!bookingServiceId) { return []; }\n\n        return this._dataService.getLocalDataAttr(bookingServiceId)[control];\n    }\n\n    /**\n     * Validate pax\n     * @returns {boolean}\n     */\n    public validatePax()\n    {\n        let errors = {},\n            quantity = this._formService.getObject()['quantity'],\n            paxCount = this._paxComponentRef.instance._dataService.getProviderAttr('objects').length;\n\n        this._formService.setErrors(errors);\n\n        if (quantity != paxCount) {\n            errors['pax'] = ['Quantity ('+quantity+') does not match with the number of pax ('+paxCount+').'];\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Refresh pax\n     * @returns {boolean}\n     */\n    public refreshPax()\n    {\n        if (this._paxComponentRef) {\n            this._paxComponentRef.instance._dataService.refresh();\n        }\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngAfterViewInit()\n    {\n        super.ngAfterViewInit();\n\n        // Load dependency\n        let that = this,\n            dependencyUrlProvider = this.getPaxDataBoxUrlProvider();\n\n        this._postService.post(dependencyUrlProvider).then(\n            data => {\n                let providers = [\n                        {provide: 'DataService', useClass: DataService},\n                        ActionsService,\n                        {provide: 'DataServiceProvider', useValue: that._helperService.getDataServiceProvider(data)},\n                        {provide: 'ActionsServiceProvider', useValue: that._helperService.getActionsServiceProvider(data)},\n                        {provide: 'LegendProvider', useValue: that._helperService.getLegendProvider(data)},\n                        {provide: 'Provider', useValue: that._helperService.getDataBoxProvider(data)},\n                        {provide: 'Popups', useValue: {\n                            module: that.getPaxEditFormExtModule(),\n                            component: 'BookingPaxEditComponent',\n                            providers: [\n                                FormService,\n                                {provide: 'Provider', useValue: that._helperService.getFormProvider(data)},\n                                // Reset FormServiceProvider to use DataServiceProvider as default values\n                                {provide: 'FormServiceProvider', useValue: {}}\n                            ]\n                        }}\n                    ],\n                    injector = ReflectiveInjector.fromResolvedProviders(\n                        ReflectiveInjector.resolve(providers),\n                        that._injector\n                    );\n\n                that._dynamicComponentLoaderService.load(\n                    that.getPaxDataBoxExtModule(),\n                    'Step2PaxComponent',\n                    that.lazyLoadViewContainerRefDependency,\n                    injector\n                ).then(\n                    componentRef => {\n                        that._paxComponentRef = componentRef;\n                        return true;\n                    },\n                    errors => { console.log(errors); return null; }\n                );\n            },\n            errors => { console.log(errors); return false; }\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking-service/add/ts/src/step2.component.ts","import {Component, ElementRef, Inject, Optional, Injector, Renderer} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormExtensionComponent, FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\n\n// Re-exports\nexport {FormProvider}\n\n\n@Component({\n    selector: '#js_addStep3',\n    template: '' // Define template in child component\n})\nexport class Step3Component extends FormExtensionComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any\n    ) {\n        super();\n        super.initFormExtensionComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking-service/add/ts/src/step3.component.ts","import {Component, Inject, Injector, ViewContainerRef, Renderer} from '@angular/core';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {ActionsService} from '../../../../../../../../AppBundle/Resources/public/ts/actions/actions.service';\nimport {DataBoxExtensionComponent, DataBoxProvider, Popups, Popup} from '../../../../../../../../AppBundle/Resources/public/data-box/ts/src/data-box.extension-component';\nimport {ModalService} from '../../../../../../../../AppBundle/Resources/public/modal/ts/modal.service';\nimport {TasksLoaderManagerService} from '../../../../../../../../AppBundle/Resources/public/tasks-loader-manager/ts/tasks-loader-manager.service';\n\n\n// Component\n@Component({\n    selector: '.js_addStep4',\n    templateUrl: '../templates/step4.component.html'\n})\nexport class Step4Component extends DataBoxExtensionComponent\n{\n    constructor(\n        viewContainerRef: ViewContainerRef,\n        renderer: Renderer,\n        @Inject('Provider') dataBoxProvider: DataBoxProvider,\n        @Inject('DataService') dataService: any,\n        tasksLoaderManagerService: TasksLoaderManagerService,\n        @Inject('HelperService') helperService: any,\n        actionsService: ActionsService,\n        modalService: ModalService,\n        @Inject('Popups') popups: Popups | Popup,\n        injector: Injector,\n        @Inject('ParentDataService') protected _parentDataService: any // Used in view\n    ) {\n        // Call parent\n        super();\n        super.initDataBoxExtensionComponent(\n            viewContainerRef,\n            renderer,\n            dataBoxProvider,\n            dataService,\n            tasksLoaderManagerService,\n            helperService,\n            actionsService,\n            modalService,\n            popups,\n            injector\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking-service/add/ts/src/step4.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n// This module doesn't use \"ReactiveFormsModule\", but it needs to import this class\n// to provide \"formBuilder\" when inject dependencies in child modules (like form)\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {SearchModule} from '../../../../../../../../AppBundle/Resources/public/ts/search/search.module';\nimport {ExpanderModule} from '../../../../../../../../AppBundle/Resources/public/ts/expander/expander.module';\nimport {SearchPaginationModule} from '../../../../../../../../AppBundle/Resources/public/ts/search/search-pagination.module';\nimport {LegendExtModule} from '../../../../../../../../AppBundle/Resources/public/legend/ts/src/legend.ext-module';\nimport {Step4Component} from './step4.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        SearchModule,\n        SearchPaginationModule,\n        ExpanderModule,\n        LegendExtModule\n    ],\n    declarations: [\n        Step4Component\n    ],\n    exports: [Step4Component]\n})\nexport class Step4ExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking-service/add/ts/src/step4.ext-module.ts","module.exports = \"\\n\\n<div class=\\\"ibox form-control-box -embed-form\\\" [ngClass]=\\\"{&#039;error&#039;: _formService.getErrors()[&#039;serviceObj&#039;] &amp;&amp; (_formService.getErrors()[&#039;serviceObj&#039;].length &gt; 0)}\\\">\\n                        <div class=\\\"ibox-title\\\" *ngIf=\\\"!getProviderExtraDataAttr('hasMergeHeader')\\\">\\n                <h5>\\n                    <ng-template [ngIf]=\\\"getProviderAttr('controls')['expander']['isEnabled']\\\"><js_expander\\n                        [isExpanded]=\\\"_isExpanded || null\\\"\\n                        [label]=\\\"getLang(getProviderAttr('label'))\\\"\\n                        [labelCount]=\\\"getProviderAttr('labelCount')\\\"\\n                        [labelIcon]=\\\"getProviderAttr('labelIcon')\\\"\\n                        (onChange)=\\\"expanderAction($event)\\\"></js_expander></ng-template>\\n                    <ng-template [ngIf]=\\\"!getProviderAttr('controls')['expander']['isEnabled']\\\">\\n                        <span [innerHTML]=\\\"getProviderAttr('label')\\\"></span>\\n                    </ng-template>\\n                </h5>\\n                <div *ngIf=\\\"_isExpanded\\\"\\n                     class=\\\"txt-align-r hide-on-empty\\\">    <div class=\\\"row align-items-center\\\">\\n        <div class=\\\"col ml-auto text-right actions no-user-select\\\">\\n            <ng-template [ngIf]=\\\"_actionsService.getActionAttr('search', 'isEnabled')\\\"><js_search class=\\\"search\\\"></js_search></ng-template>\\n            <div (click)=\\\"triggerAction($event)\\\">\\n                <ng-template ngFor let-action [ngForOf]=\\\"_actionsService.getHeadActions()\\\">\\n                    <a *ngIf=\\\"_actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                       [ngClass]=\\\"[_actionsService.getActionAttr(action, 'icon')]\\\"\\n                       class=\\\"-round fa\\\"\\n                       [attr.data-action]=\\\"action\\\"></a>\\n                </ng-template>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n            </div>\\n            \\n    <div [hidden]=\\\"!(_isExpanded)\\\" class=\\\"ibox-content hide-on-empty\\\">    <ng-template [ngIf]=\\\"(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">\\n                \\n    <div class=\\\"table-responsive\\\">\\n        <table class=\\\"data-table table table-hover dataTables-example\\\">\\n                <tbody>\\n        <ng-template ngFor let-obj [ngForOf]=\\\"_dataService.getProviderAttr('objects')\\\" let-objIndex=\\\"index\\\">\\n        <tr             [ngClass]=\\\"getLegendClasses(obj, 'tr')\\\">                    <td [innerHTML]=\\\"obj['thumbnail']\\\"></td>\\n        <td>\\n            <div [innerHTML]=\\\"obj['name']\\\"></div>\\n            <div [innerHTML]=\\\"obj['description']\\\"></div>\\n        </td>\\n        <td (click)=\\\"_formService.setFormFieldValue('serviceObj', $event.target.value)\\\">\\n        <div class=\\\"radio\\\"><label><input type=\\\"radio\\\"\\n                 value=\\\"{{obj['serviceObj']}}\\\"\\n                 [checked]=\\\"_formService.getObject().serviceObj == obj['serviceObj']\\\"></label></div>\\n    </td>\\n                        </tr>\\n        </ng-template>\\n        </tbody>\\n    </table>\\n    </div>    </ng-template><p\\n        class=\\\"text-center\\\"\\n        *ngIf=\\\"!(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">No results.</p>\\n</div>\\n        <div [hidden]=\\\"!(_isExpanded)\\\"\\n         class=\\\"ibox-footer\\\"\\n         *ngIf=\\\"_dataService.countObjects() > 0\\\"><js_searchPagination></js_searchPagination></div>\\n\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking-service/add/ts/templates/step1-service.component.html\n// module id = ../../../../../src/Bck/BookingBundle/Resources/public/base-booking-service/add/ts/templates/step1-service.component.html\n// module chunks = main","module.exports = \"<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Debug&nbsp;<small>{{getProviderAttr('label')}}</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">    <div class=\\\"accordion\\\" id=\\\"accordion\\\">\\n        <ng-template ngFor let-panel [ngForOf]=\\\"[&#039;availability&#039;, &#039;allot&#039;, &#039;price&#039;]\\\" let-index=\\\"index\\\">\\n        <ng-template [ngIf]=\\\"getProviderAttr('data')[panel]\\\">        <div class=\\\"card\\\">\\n            <div class=\\\"card-header\\\"><div class=\\\"row align-items-center\\\">\\n                    <h5 class=\\\"col\\\"\\n                        (click)=\\\"_navManagerService.navToAction(index)\\\"><span class=\\\"status -{{ _statusMap[getProviderAttr('data')[panel]['status']] || 'danger' }}\\\"></span>&nbsp;{{_helperService.uCFirst(panel)}}</h5>\\n                </div></div>\\n            <div class=\\\"collapse\\\"\\n                 [class.show]=\\\"index === _navManagerService.getIndex()\\\">\\n                <div class=\\\"card-body\\\">\\n                                <ul class=\\\"no-bullets\\\"><li class=\\\"p-xxs\\\" *ngFor=\\\"let debugDetail of getProviderAttr('data')[panel]['detail'];\\\">\\n                    <span class=\\\"status -{{ _statusMap[debugDetail['status']] || 'danger' }}\\\"></span><span\\n                    >&nbsp;{{debugDetail['date']}}</span>\\n\\n                    <span *ngIf=\\\"panel == 'allot'\\\">&nbsp;({{debugDetail['free']}}/{{debugDetail['total']}} - <span [innerHTML]=\\\"debugDetail['type']\\\"></span>)</span>\\n                    <ul *ngIf=\\\"panel == 'price'\\\"><li *ngFor=\\\"let priceDetail of debugDetail['price'];\\\">\\n                            {{priceDetail['description']}}:&nbsp;\\n                            <strong>Cost:</strong>&nbsp;{{priceDetail['costValue']}}&nbsp;<strong>Sell:</strong>&nbsp;{{priceDetail['sellValue']}}\\n                        </li></ul>\\n                </li></ul>\\n                        </div>\\n            </div>\\n        </div>\\n        </ng-template>    </ng-template>\\n</div></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n            <div class=\\\"row\\\"><div class=\\\"col-auto ml-auto\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"closeAction($event, true)\\\">Ok</button>\\n        </div></div>\\n    </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking-service/add/ts/templates/step2-field-debug.component.html\n// module id = ../../../../../src/Bck/BookingBundle/Resources/public/base-booking-service/add/ts/templates/step2-field-debug.component.html\n// module chunks = main","module.exports = \"\\n\\n<div class=\\\"ibox\\\" >\\n                        <div class=\\\"ibox-title\\\" *ngIf=\\\"!getProviderExtraDataAttr('hasMergeHeader')\\\">\\n                <h5>\\n                    <ng-template [ngIf]=\\\"getProviderAttr('controls')['expander']['isEnabled']\\\"><js_expander\\n                        [isExpanded]=\\\"_isExpanded || null\\\"\\n                        [label]=\\\"getLang(getProviderAttr('label'))\\\"\\n                        [labelCount]=\\\"getProviderAttr('labelCount')\\\"\\n                        [labelIcon]=\\\"getProviderAttr('labelIcon')\\\"\\n                        (onChange)=\\\"expanderAction($event)\\\"></js_expander></ng-template>\\n                    <ng-template [ngIf]=\\\"!getProviderAttr('controls')['expander']['isEnabled']\\\">\\n                        <span [innerHTML]=\\\"getProviderAttr('label')\\\"></span>\\n                    </ng-template>\\n                </h5>\\n                <div *ngIf=\\\"_isExpanded\\\"\\n                     class=\\\"txt-align-r hide-on-empty\\\">    <div class=\\\"row align-items-center\\\">\\n        <div class=\\\"col ml-auto text-right actions no-user-select\\\">\\n            <ng-template [ngIf]=\\\"_actionsService.getActionAttr('search', 'isEnabled')\\\"><js_search class=\\\"search\\\"></js_search></ng-template>\\n            <div (click)=\\\"triggerAction($event)\\\">\\n                <ng-template ngFor let-action [ngForOf]=\\\"_actionsService.getHeadActions()\\\">\\n                    <a *ngIf=\\\"_actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                       [ngClass]=\\\"[_actionsService.getActionAttr(action, 'icon')]\\\"\\n                       class=\\\"-round fa\\\"\\n                       [attr.data-action]=\\\"action\\\"></a>\\n                </ng-template>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n            </div>\\n            \\n    <div [hidden]=\\\"!(_isExpanded)\\\" class=\\\"ibox-content hide-on-empty\\\">    <ng-template [ngIf]=\\\"(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">\\n                \\n    <div class=\\\"table-responsive\\\">\\n    <form>    <table class=\\\"data-table table table-hover dataTables-example table-bordered\\\">\\n        <thead>\\n        <tr>\\n            <th *ngFor=\\\"let searchField of _dataService.getSearch('fields')\\\">{{ getLang(_dataService.getFields('metadata')[searchField].label) }}</th>\\n            <th>&nbsp;</th>\\n        </tr>\\n        </thead>        <tbody>\\n        <ng-template ngFor let-obj [ngForOf]=\\\"_dataService.getProviderAttr('objects')\\\" let-objIndex=\\\"index\\\">\\n        <tr (dblclick)=\\\"editAction($event, objIndex)\\\"            [ngClass]=\\\"getLegendClasses(obj, 'tr')\\\">                    <td *ngFor=\\\"let searchField of _dataService.getSearch('fields')\\\"\\n    [ngClass]=\\\"getColAlign(searchField)\\\"\\n    [innerHTML]=\\\"obj[searchField]\\\"></td>                        <td>\\n                <span *ngIf=\\\"obj['_isNew']\\\" class=\\\"badge badge-info\\\">New</span>\\n                <span *ngIf=\\\"obj['_isEdited']\\\" class=\\\"badge badge-info\\\">Edited</span>\\n                <input *ngIf=\\\"_actionsService.getActionAttr('radioChoice', 'isEnabled')\\\"\\n                       class=\\\"pull-right action\\\"\\n                       type=\\\"radio\\\"\\n                       name=\\\"index[]\\\"\\n                       value=\\\"{{objIndex}}\\\"/>\\n                <input *ngIf=\\\"_actionsService.getActionAttr('checkAll', 'isEnabled')\\\"\\n                       class=\\\"pull-right action js_checkAll\\\"\\n                       type=\\\"checkbox\\\"\\n                       name=\\\"index[]\\\"\\n                       value=\\\"{{objIndex}}\\\"\\n                       [ngModel]=\\\"checkAll\\\"/>\\n                <div class=\\\"pull-right actions no-user-select text-secondary\\\" (click)=\\\"triggerAction($event)\\\">\\n                    <ng-template ngFor let-action [ngForOf]=\\\"_actionsService.getDetailActions()\\\">\\n                        <a *ngIf=\\\"_actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                           [ngClass]=\\\"[_actionsService.getActionAttr(action, 'icon') + getActionsLegendClasses(obj, action)]\\\"\\n                           class=\\\"fa\\\"\\n                           [attr.data-action]=\\\"action\\\"\\n                           [attr.data-value]=\\\"objIndex\\\"></a>\\n                    </ng-template>\\n                </div>\\n            </td>        </tr>\\n        </ng-template>\\n        </tbody>\\n    </table>\\n    </form></div>    </ng-template><p\\n        class=\\\"text-center\\\"\\n        *ngIf=\\\"!(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">No results.</p>\\n</div>\\n        <div [hidden]=\\\"!(_isExpanded)\\\"\\n         class=\\\"ibox-footer\\\"\\n         *ngIf=\\\"_dataService.countObjects() > 0\\\"><js_searchPagination></js_searchPagination></div>\\n\\n</div>\\n\\n<js_legend></js_legend>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking-service/add/ts/templates/step4.component.html\n// module id = ../../../../../src/Bck/BookingBundle/Resources/public/base-booking-service/add/ts/templates/step4.component.html\n// module chunks = main","import {Component, ElementRef, Inject, Optional, Injector, ReflectiveInjector, Renderer, ViewChild, ViewContainerRef} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {Helper} from '../../../../../../../../AppBundle/Resources/public/ts/helper';\nimport {FormPopupExtensionComponent, FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {ActionsService} from '../../../../../../../../AppBundle/Resources/public/ts/actions/actions.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {DynamicComponentLoaderService} from '../../../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\nimport {PostService} from '../../../../../../../../AppBundle/Resources/public/ts/post.service';\n\n\n// Interface provider\nexport interface BaseBookingServiceEditProvider extends FormProvider {\n    modules: { // Put here modules dependencies\n        bookingServicePriceEdit: {module: any, component: string}\n    }\n}\n\n\n/* Import dependencies */\n\n// Parent id for dependencies\nvar bookingContext = Helper.getAppVar('conf')['localData']['data']['bookingContext']; // Determines the type of booking\n// BookingServicePrice (reuse the add step4, for now is the same)\nimport {Step4ExtModule as PriceExtModule} from '../../../add/ts/src/step4.ext-module';\n\n/* /Import dependencies */\n\n\n@Component({\n    selector: '#js_bookingServiceEdit',\n    template: '' // Define template in child component\n})\nexport class BookingServiceEditComponent extends FormPopupExtensionComponent\n{\n    // For NavManagerService\n    @ViewChild('js_lazyLoadContainer', {read: ViewContainerRef}) lazyLoadViewContainerRef: ViewContainerRef;\n\n    // To check if object has changed to refresh parents\n    protected _object: any;\n    // To get notify about changes over the service price dependency\n    protected _onDependencyObjectsChangeSubscription: any;\n    // Control if there are changes to refresh parents\n    protected _hasObjectsChanges: boolean = false;\n\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: BaseBookingServiceEditProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any,\n        @Inject('ParentDataService') protected _parentDataService: any,\n        @Inject('HelperService') protected _helperService: any,\n        protected _dynamicComponentLoaderService: DynamicComponentLoaderService,\n        protected _postService: PostService,\n        protected _injector: Injector\n    ) {\n        super();\n        super.initFormPopupExtensionComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService\n        );\n\n        // Save initial object to detect changes\n        this._object = this._dataService.getObject();\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngAfterViewInit()\n    {\n        super.ngAfterViewInit();\n\n        // Load dependency\n        let that = this,\n            dependencyUrlProvider = (\n                this._helperService.getAppVar('route')\n                + 'bck/booking/booking-service-price/data/'\n                + this._formService.getObject()['bookingServiceObj']\n            );\n\n        this._postService.post(dependencyUrlProvider, null).then(\n            data => {\n                // Change main class to show label\n                data['extraData']['template']['class'] = '-stamp-view';\n\n                let providers = [\n                        {provide: 'DataService', useClass: DataService},\n                        ActionsService,\n                        {provide: 'DataServiceProvider', useValue: that._helperService.getDataServiceProvider(data)},\n                        {provide: 'ActionsServiceProvider', useValue: that._helperService.getActionsServiceProvider(data)},\n                        {provide: 'LegendProvider', useValue: that._helperService.getLegendProvider(data)},\n                        {provide: 'Provider', useValue: that._helperService.getDataBoxProvider(data)},\n                        {provide: 'Popups', useValue: {\n                            module: that._provider['modules']['bookingServicePriceEdit']['module'],\n                            component: that._provider['modules']['bookingServicePriceEdit']['component'],\n                            providers: [\n                                FormService,\n                                {provide: 'Provider', useValue: this._helperService.getFormProvider(data)}\n                            ]\n                        }},\n                        {provide: 'ParentDataService', useValue: this._dataService}\n                    ],\n                    injector = ReflectiveInjector.fromResolvedProviders(\n                        ReflectiveInjector.resolve(providers),\n                        that._injector\n                    );\n\n                // Objects changes subscription\n                let childDataService = injector.get('DataService');\n                that._onDependencyObjectsChangeSubscription = childDataService.getOnObjectsChangeEmitter()\n                    .subscribe(object => {that._hasObjectsChanges = true;});\n\n                that._dynamicComponentLoaderService.load(\n                    PriceExtModule,\n                    'Step4Component',\n                    that.lazyLoadViewContainerRef,\n                    injector\n                ).then(\n                    componentRef => {\n                        //that._llComponentRefArr[index] = componentRef;\n                        //that._currentIndex = index;\n                        return true;\n                    },\n                    errors => { console.log(errors); return null; }\n                );\n            },\n            errors => { console.log(errors); return false; }\n        );\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnDestroy()\n    {\n        this._onDependencyObjectsChangeSubscription.unsubscribe();\n\n        // If object has no changes, popup was open and closed without save the object,\n        // so doesn't make sense refresh the objects\n        if ((this._object != this._dataService.getObject()) || this._hasObjectsChanges) {\n            // Update object and parent object\n            if (this._formService.getObject()['grouperBookingServiceObj']) {\n                this._dataService.refresh(); // Refresh all object to refresh te own and the grouper object\n            } else {\n                this._dataService.refreshObject(); // Refresh only de own object\n            }\n            this._parentDataService.refreshObject();\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking-service/edit/ts/src/booking-service-edit.component.ts","import {Component, Inject, Injector, ViewContainerRef, Renderer} from '@angular/core';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {ActionsService} from '../../../../../../../../AppBundle/Resources/public/ts/actions/actions.service';\nimport {DataBoxExtensionComponent, DataBoxProvider, Popups, Popup} from '../../../../../../../../AppBundle/Resources/public/data-box/ts/src/data-box.extension-component';\nimport {ModalService} from '../../../../../../../../AppBundle/Resources/public/modal/ts/modal.service';\nimport {TasksLoaderManagerService} from '../../../../../../../../AppBundle/Resources/public/tasks-loader-manager/ts/tasks-loader-manager.service';\n\n\n// Component\n@Component({\n    selector: '.js_bookingService',\n    templateUrl: '../templates/booking-service.component.html'\n})\nexport class BookingServiceComponent extends DataBoxExtensionComponent\n{\n    constructor(\n        viewContainerRef: ViewContainerRef,\n        renderer: Renderer,\n        @Inject('Provider') dataBoxProvider: DataBoxProvider,\n        @Inject('DataService') dataService: any,\n        tasksLoaderManagerService: TasksLoaderManagerService,\n        @Inject('HelperService') helperService: any,\n        actionsService: ActionsService,\n        modalService: ModalService,\n        @Inject('Popups') popups: Popups | Popup,\n        injector: Injector,\n        @Inject('ParentDataService') protected _parentDataService: any\n    ) {\n        // Call parent\n        super();\n        super.initDataBoxExtensionComponent(\n            viewContainerRef,\n            renderer,\n            dataBoxProvider,\n            dataService,\n            tasksLoaderManagerService,\n            helperService,\n            actionsService,\n            modalService,\n            popups,\n            injector\n        );\n    }\n\n    /**\n     * Overrides parent method\n     * @param object\n     * @returns {DataBoxExtensionComponent}\n     */\n    protected postCancelObject(object)\n    {\n        return this.postDeleteObject(object);\n    }\n\n    /**\n     * Overrides parent method\n     * @param object\n     * @return any\n     */\n    protected postDeleteObject(object)\n    {\n        // Refresh parent values\n        this._parentDataService.refreshObject();\n\n        // If is a grouped service, so refresh all services to update the grouper service\n        if (object['grouperBookingServiceObj']) {\n            this._dataService.refresh();\n        }\n        return this;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking-service/index/ts/src/booking-service.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n// This module doesn't use \"ReactiveFormsModule\", but it needs to import this class\n// to provide \"formBuilder\" when inject dependencies in child modules (like form)\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {SearchModule} from '../../../../../../../../AppBundle/Resources/public/ts/search/search.module';\nimport {ExpanderModule} from '../../../../../../../../AppBundle/Resources/public/ts/expander/expander.module';\nimport {SearchPaginationModule} from '../../../../../../../../AppBundle/Resources/public/ts/search/search-pagination.module';\nimport {LegendExtModule} from '../../../../../../../../AppBundle/Resources/public/legend/ts/src/legend.ext-module';\nimport {BookingServiceComponent} from './booking-service.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        SearchModule,\n        SearchPaginationModule,\n        LegendExtModule,\n        ExpanderModule\n    ],\n    declarations: [\n        BookingServiceComponent\n    ],\n    exports: [BookingServiceComponent]\n})\nexport class BookingServiceExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking-service/index/ts/src/booking-service.ext-module.ts","module.exports = \"\\n\\n<div class=\\\"ibox\\\" >\\n                        <div class=\\\"ibox-title\\\" *ngIf=\\\"!getProviderExtraDataAttr('hasMergeHeader')\\\">\\n                <h5>\\n                    <ng-template [ngIf]=\\\"getProviderAttr('controls')['expander']['isEnabled']\\\"><js_expander\\n                        [isExpanded]=\\\"_isExpanded || null\\\"\\n                        [label]=\\\"getLang(getProviderAttr('label'))\\\"\\n                        [labelCount]=\\\"getProviderAttr('labelCount')\\\"\\n                        [labelIcon]=\\\"getProviderAttr('labelIcon')\\\"\\n                        (onChange)=\\\"expanderAction($event)\\\"></js_expander></ng-template>\\n                    <ng-template [ngIf]=\\\"!getProviderAttr('controls')['expander']['isEnabled']\\\">\\n                        <span [innerHTML]=\\\"getProviderAttr('label')\\\"></span>\\n                    </ng-template>\\n                </h5>\\n                <div *ngIf=\\\"_isExpanded\\\"\\n                     class=\\\"txt-align-r hide-on-empty\\\">    <div class=\\\"row align-items-center\\\">\\n        <div class=\\\"col ml-auto text-right actions no-user-select\\\">\\n            <ng-template [ngIf]=\\\"_actionsService.getActionAttr('search', 'isEnabled')\\\"><js_search class=\\\"search\\\"></js_search></ng-template>\\n            <div (click)=\\\"triggerAction($event)\\\">\\n                <ng-template ngFor let-action [ngForOf]=\\\"_actionsService.getHeadActions()\\\">\\n                    <a *ngIf=\\\"_actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                       [ngClass]=\\\"[_actionsService.getActionAttr(action, 'icon')]\\\"\\n                       class=\\\"-round fa\\\"\\n                       [attr.data-action]=\\\"action\\\"></a>\\n                </ng-template>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n            </div>\\n            \\n    <div [hidden]=\\\"!(_isExpanded)\\\" class=\\\"ibox-content hide-on-empty\\\">    <ng-template [ngIf]=\\\"(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">\\n                \\n    <div class=\\\"table-responsive\\\">\\n    <form>    <table class=\\\"data-table table table-hover dataTables-example table-bordered\\\">\\n        <thead>\\n        <tr>\\n            <th *ngFor=\\\"let searchField of _dataService.getSearch('fields')\\\">{{ getLang(_dataService.getFields('metadata')[searchField].label) }}</th>\\n            <th>&nbsp;</th>\\n        </tr>\\n        </thead>        <tbody>\\n        <ng-template ngFor let-obj [ngForOf]=\\\"_dataService.getProviderAttr('objects')\\\" let-objIndex=\\\"index\\\">\\n        <tr (dblclick)=\\\"editAction($event, objIndex)\\\"            [ngClass]=\\\"getLegendClasses(obj, 'tr')\\\">                    <td *ngFor=\\\"let searchField of _dataService.getSearch('fields')\\\"\\n    [ngClass]=\\\"getColAlign(searchField)\\\"\\n    [innerHTML]=\\\"obj[searchField]\\\"></td>                        <td>\\n                <span *ngIf=\\\"obj['_isNew']\\\" class=\\\"badge badge-info\\\">New</span>\\n                <span *ngIf=\\\"obj['_isEdited']\\\" class=\\\"badge badge-info\\\">Edited</span>\\n                <input *ngIf=\\\"_actionsService.getActionAttr('radioChoice', 'isEnabled')\\\"\\n                       class=\\\"pull-right action\\\"\\n                       type=\\\"radio\\\"\\n                       name=\\\"index[]\\\"\\n                       value=\\\"{{objIndex}}\\\"/>\\n                <input *ngIf=\\\"_actionsService.getActionAttr('checkAll', 'isEnabled')\\\"\\n                       class=\\\"pull-right action js_checkAll\\\"\\n                       type=\\\"checkbox\\\"\\n                       name=\\\"index[]\\\"\\n                       value=\\\"{{objIndex}}\\\"\\n                       [ngModel]=\\\"checkAll\\\"/>\\n                <div class=\\\"pull-right actions no-user-select text-secondary\\\" (click)=\\\"triggerAction($event)\\\">\\n                    <ng-template ngFor let-action [ngForOf]=\\\"_actionsService.getDetailActions()\\\">\\n                        <a *ngIf=\\\"_actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                           [ngClass]=\\\"[_actionsService.getActionAttr(action, 'icon') + getActionsLegendClasses(obj, action)]\\\"\\n                           class=\\\"fa\\\"\\n                           [attr.data-action]=\\\"action\\\"\\n                           [attr.data-value]=\\\"objIndex\\\"></a>\\n                    </ng-template>\\n                </div>\\n            </td>        </tr>\\n        </ng-template>\\n        </tbody>\\n    </table>\\n    </form></div>    </ng-template><p\\n        class=\\\"text-center\\\"\\n        *ngIf=\\\"!(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">No results.</p>\\n</div>\\n        <div [hidden]=\\\"!(_isExpanded)\\\"\\n         class=\\\"ibox-footer\\\"\\n         *ngIf=\\\"_dataService.countObjects() > 0\\\"><js_searchPagination></js_searchPagination></div>\\n\\n</div>\\n\\n<js_legend></js_legend>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking-service/index/ts/templates/booking-service.component.html\n// module id = ../../../../../src/Bck/BookingBundle/Resources/public/base-booking-service/index/ts/templates/booking-service.component.html\n// module chunks = main","import {Component, Optional, ElementRef, Inject, Injector, Renderer, QueryList, ViewContainerRef, ViewChildren} from '@angular/core';\nimport {Helper} from '../../../../../../../../AppBundle/Resources/public/ts/helper';\nimport {AccordionComponent, IAccordion, LazyLoadData} from '../../../../../../../../AppBundle/Resources/public/accordion/ts/src/accordion.component';\nimport {NavManagerService} from '../../../../../../../../AppBundle/Resources/public/ts/nav-manager/nav-manager.service';\nimport {WizardManagerService} from '../../../../../../../../AppBundle/Resources/public/wizard/ts/src/wizard-manager.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {ActionsService} from '../../../../../../../../AppBundle/Resources/public/ts/actions/actions.service';\n\n\n/* Import dependencies */\n\n// ClientDocument\nimport {MainExtModule as ClientDocumentMainExtModule} from '../../../../../../../AccountingBundle/Resources/public/client-document/index/ts/src/main.extension-module';\n// Form Popups\n// Add\nHelper.setGlobalVar('templateUrl', Helper.getAppVar('route') + 'bck/accounting/client-document/add-step1');\nimport {FormPopupExtModule as ClientDocumentAddFormPopupExtModule} from '../../../../../../../AccountingBundle/Resources/public/client-document/add/ts/src/form-popup.ext-module';\n// Edit\nimport {FormPopupExtModule as ClientDocumentEditFormPopupExtModule} from '../../../../../../../AccountingBundle/Resources/public/client-document/edit/ts/src/form-popup.ext-module';\n\n// SupplierDocument\nimport {MainExtModule as SupplierDocumentMainExtModule} from '../../../../../../../AccountingBundle/Resources/public/supplier-document/index/ts/src/main.extension-module';\n// Form Popups\n// Add\nHelper.setGlobalVar('templateUrl', Helper.getAppVar('route') + 'bck/accounting/supplier-document/add-step1');\nimport {FormPopupExtModule as SupplierDocumentAddFormPopupExtModule} from '../../../../../../../AccountingBundle/Resources/public/supplier-document/add/ts/src/form-popup.ext-module';\n// Edit\nimport {FormPopupExtModule as SupplierDocumentEditFormPopupExtModule} from '../../../../../../../AccountingBundle/Resources/public/supplier-document/edit/ts/src/form-popup.ext-module';\n\n// Auto-complete\nHelper.setGlobalVar('templateUrl', Helper.getAppVar('route') + 'bck/entities/entity-address/edit/0'); // No parent defined\nimport {EntityAddressEditExtModule} from '../../../../../../../EntitiesBundle/Resources/public/entity/detail/ts/src/entity-address-edit.ext-module';\n\n/* /Import dependencies */\n\n\n@Component({\n    selector: '.js_currentAccounts',\n    template: '' // Define template in child component\n})\nexport class CurrentAccountsComponent extends AccordionComponent implements IAccordion\n{\n    // For NavManagerService\n    @ViewChildren('js_lazyLoadContainer', {read: ViewContainerRef}) lazyLoadViewContainerRefQL: QueryList<ViewContainerRef>;\n    // To handle with dependency objects changes to refresh the local object\n    protected _onDependencyObjectsChangeSubscription: any;\n\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Optional() @Inject('Provider') provider: any,\n        @Inject('HelperService') helperService: any,\n        navManagerService: NavManagerService,\n        @Inject('DataService') protected _dataService: any,\n        protected _injector: Injector\n    ) {\n        super(\n            elementRef,\n            renderer,\n            provider || null,\n            helperService,\n            navManagerService\n        );\n    }\n\n    /**\n     * Get navigation data (needed data to lazy load container)\n     * @param index (index to load)\n     * @returns NavData\n     */\n    public getNavData(index: number): LazyLoadData\n    {\n        let booking = this._dataService.getObject()['bookingObj'];\n\n        switch (index) {\n            case 0:\n                return {\n                    module: ClientDocumentMainExtModule,\n                    component: 'MainComponent',\n                    urlProvider: (this._helperService.getAppVar('route') + 'bck/accounting/client-document/data-by-booking/' + booking)\n                };\n            case 1:\n                return {\n                    module: SupplierDocumentMainExtModule,\n                    component: 'MainComponent',\n                    urlProvider: (this._helperService.getAppVar('route') + 'bck/accounting/supplier-document/data-by-booking/' + booking)\n                };\n        }\n\n        return null;\n    }\n\n    /**\n     * Get nav providers (to lazy load components in container with dependency injection)\n     * @param index (index to load)\n     * @param data (data to resolve all providers)\n     * @returns {Array}\n     */\n    public getNavProviders(index: number, data = null): any\n    {\n        let popupModules = {},\n            popupAddFields = [];\n\n        switch (index) {\n            case 0:\n                popupModules = {\n                    add: ClientDocumentAddFormPopupExtModule,\n                    edit: ClientDocumentEditFormPopupExtModule\n                };\n                popupAddFields = ['clientDocumentTypeObj', 'clientObj'];\n                break;\n            case 1:\n                popupModules = {\n                    add: SupplierDocumentAddFormPopupExtModule,\n                    edit: SupplierDocumentEditFormPopupExtModule\n                };\n                popupAddFields = ['supplierDocumentTypeObj', 'supplierObj'];\n                break;\n        }\n\n        let autoCompleteProviders = this._injector.get('AutoCompleteProviders');\n        autoCompleteProviders.entityAddressObj = {\n            urlConf: (Helper.getAppVar('route') + 'bck/entities/entity-address/conf/0'),\n            control: 'edit',\n            popups: {\n                module: EntityAddressEditExtModule,\n                component: 'EntityAddressEditComponent',\n                providers: [\n                    {provide: 'Provider', useValue: Helper.getFormProvider({label: 'Address'})},\n                    FormService\n                ]\n            }\n        };\n\n        let formProvider = this._helperService.getFormProvider(data);\n        // To avoid conflicts between forms in steps of the wizard\n        // (form should override object without notify user)\n        formProvider['preventObjectOverride'] = false;\n\n        return [\n            {provide: 'DataService', useClass: DataService},\n            {provide: 'ParentDataService', useValue: this._dataService},\n            ActionsService,\n            {provide: 'DataServiceProvider', useValue: this._helperService.getDataServiceProvider(data)},\n            {provide: 'Provider', useValue: this._helperService.getDataBoxProvider(data)},\n            {provide: 'ActionsServiceProvider', useValue: this._helperService.getActionsServiceProvider(data)},\n            {provide: 'LegendProvider', useValue: this._helperService.getLegendProvider(data)},\n            {provide: 'AutoCompleteProviders', useValue: autoCompleteProviders},\n            // FormService needs to be here for AutoCompleteProviders, however it will be redefined in Popups\n            // (so we can reuse the same AutoCompleteProviders for all injectors)\n            FormService,\n            {provide: 'Popups', useValue: {\n                add: {\n                    module: popupModules['add'],\n                    component: 'FormPopupComponent',\n                    providers: [\n                        // Set field for wizard form first step\n                        {provide: 'FormServiceProvider', useValue: {fields: popupAddFields}},\n                        {provide: 'Provider', useValue: formProvider},\n                        NavManagerService,\n                        WizardManagerService,\n                        {provide: 'WizardManagerServiceProvider', useValue: {rebuildNextStepComponents: true}},\n                        // Each FormService has your own provider, so ween need different FormService for popup\n                        FormService\n                    ]\n                },\n                edit: {\n                    module: popupModules['edit'],\n                    component: 'FormPopupComponent',\n                    providers: [{provide: 'Provider', useValue: this._helperService.getFormProvider(data)}],\n                    FormService\n                }\n            }}\n        ];\n    }\n\n    /**\n     * Post (after) load callback\n     * @param index\n     * @param componentRef\n     * @param injector\n     */\n    public postLoad(index: number, componentRef: any, injector: Injector): void\n    {\n        switch (index) {\n            case 0:\n                // Update booking invoice status after client documents change\n                let dependencyDataService = injector.get('DataService');\n                this._onDependencyObjectsChangeSubscription\n                    = dependencyDataService.getOnObjectsChangeEmitter()\n                    .subscribe(data => {\n                        // Update local object\n                        this._dataService.refreshObject();\n                    });\n                break;\n        }\n\n        return;\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnDestroy()\n    {\n        // Check subscription (if component load fail, subscription may not exist)\n        if (this._onDependencyObjectsChangeSubscription) {\n            this._onDependencyObjectsChangeSubscription.unsubscribe();\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking/detail/ts/src/current-accounts.component.ts","import {Component, ElementRef, Injector, Inject, Renderer, QueryList, ViewContainerRef, ViewChildren} from '@angular/core';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {ActionsService} from '../../../../../../../../AppBundle/Resources/public/ts/actions/actions.service';\nimport {Helper} from '../../../../../../../../AppBundle/Resources/public/ts/helper';\nimport {ModalService} from '../../../../../../../../AppBundle/Resources/public/modal/ts/modal.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {NavManagerService} from '../../../../../../../../AppBundle/Resources/public/ts/nav-manager/nav-manager.service';\nimport {WizardManagerService} from '../../../../../../../../AppBundle/Resources/public/wizard/ts/src/wizard-manager.service';\nimport {TabsExtComponent, ITabs, LazyLoadData, BaseProvider} from '../../../../../../../../AppBundle/Resources/public/tabs/ts/src/tabs.ext-component';\n\n\n// Interface provider\nexport interface BaseBookingDetailProvider extends BaseProvider {\n    modules: { // Put here modules dependencies\n        bookingPaxEdit: {module: any, component: string},\n        bookingServiceAddStep1: {module: any, component: string},\n        bookingServiceEdit: {module: any, component: string},\n        currentAccounts: {module: any, component: string}\n    }\n}\n\n\n/* Import dependencies */\n\n// Parent id for dependencies\nvar bookingContext = Helper.getAppVar('conf')['localData']['data']['bookingContext']; // Determines the type of booking\n\n// BookingPax\nimport {BookingPaxExtModule} from '../../../../base-booking-pax/index/ts/src/booking-pax.ext-module';\n// BookingService\nimport {BookingServiceExtModule} from '../../../../base-booking-service/index/ts/src/booking-service.ext-module';\n// BookingObservation\nimport {ObservationExtModule} from '../../../../../../../../AppBundle/Resources/public/observation/ts/src/observation.ext-module';\nimport {EditExtModule as BookingObservationEditExtModule} from '../../../../booking-observation/index/ts/src/edit.ext-module';\n// BookingFile\nimport {FileExtModule} from '../../../../../../../../AppBundle/Resources/public/file/ts/src/file.ext-module';\nimport {EditExtModule as BookingFileEditExtModule} from '../../../../booking-file/index/ts/src/edit.ext-module';\n\n/* /Import dependencies */\n\n\n@Component({\n    selector: '.js_app',\n    template: '' // Define template in child component\n})\nexport class MainComponent extends TabsExtComponent implements ITabs\n{\n    protected _dependenciesData: any[];\n\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: BaseBookingDetailProvider,\n        @Inject('HelperService') helperService: any,\n        navManagerService: NavManagerService,\n        protected _modalService: ModalService,\n        protected viewContainerRef: ViewContainerRef,\n        @Inject('DataService') protected _dataService: any,\n        protected _injector: Injector\n    ) {\n        super();\n        super.initTabsExtComponent(\n            elementRef,\n            renderer,\n            provider,\n            helperService,\n            navManagerService\n        );\n\n        this._modalService.init(viewContainerRef);\n        this._dependenciesData = this._helperService.getAppVar('dependencies');\n    }\n\n    /**\n     * Get navigation data (needed data to lazy load container)\n     * @param index (index to load)\n     * @returns NavData\n     */\n    public getNavData(index: number): LazyLoadData\n    {\n        let booking = this._dataService.getObject()['bookingObj'];\n\n        switch (index) {\n            case 0:\n                return {\n                    module: BookingPaxExtModule,\n                    component: 'BookingPaxComponent',\n                    dataProvider: this._dependenciesData['bookingPax']\n                };\n            case 1:\n                return {\n                    module: BookingServiceExtModule,\n                    component: 'BookingServiceComponent',\n                    urlProvider: (this._helperService.getAppVar('route') + 'bck/booking/' + bookingContext + '-booking-service/data/' + booking)\n                };\n            case 2:\n                return {\n                    module: this._provider['modules']['currentAccounts']['module'],\n                    component: this._provider['modules']['currentAccounts']['component'],\n                };\n            case 3:\n                return {\n                    module: ObservationExtModule,\n                    component: 'ObservationComponent',\n                    urlProvider: (this._helperService.getAppVar('route') + 'bck/booking/booking-observation/data/' + booking)\n                };\n            case 4:\n                return {\n                    module: FileExtModule,\n                    component: 'FileComponent',\n                    urlProvider: (this._helperService.getAppVar('route') + 'bck/booking/booking-file/data/' + booking)\n                };\n        }\n\n        return null;\n    }\n\n    /**\n     * Get nav providers (to lazy load components in container with dependency injection)\n     * @param index (index to load)\n     * @param data (data to resolve all providers)\n     * @returns {Array}\n     */\n    public getNavProviders(index: number, data = null): any\n    {\n        let providers = [];\n\n        switch (index) {\n            case 0:\n                providers = [\n                    {provide: 'Provider', useValue: this._helperService.getDataBoxProvider(data)},\n                    {provide: 'Popups', useValue: {\n                        module: this._provider['modules']['bookingPaxEdit']['module'],\n                        component: this._provider['modules']['bookingPaxEdit']['component'],\n                        providers: [\n                            FormService,\n                            {provide: 'Provider', useValue: this._helperService.getFormProvider(data)}\n                        ]\n                    }},\n                    {provide: 'LegendProvider', useValue: this._helperService.getLegendProvider(data)},\n                    {provide: 'ParentDataService', useValue: this._dataService}\n                ];\n                break;\n            case 1:\n                // Merge the providers to get the complete \"BaseBookingServiceEditProvider\"\n                let editProvider = this._helperService.getFormProvider(data),\n                    editProviderModules = this._injector.get('BaseBookingServiceEditProvider');\n                editProvider['modules'] = editProviderModules['modules'];\n\n                // Merge the providers to get the complete \"BaseBookingServiceAddProvider\"\n                let addProvider = this._helperService.getWizardPopupProvider(data),\n                    baseBookingServiceAddProvider = this._injector.get('BaseBookingServiceAddProvider');\n                addProvider = this._helperService.mergeObjects(addProvider, baseBookingServiceAddProvider);\n\n                providers = [\n                    {provide: 'Provider', useValue: this._helperService.getDataBoxProvider(data)},\n                    {provide: 'LegendProvider', useValue: this._helperService.getLegendProvider(data)},\n                    {provide: 'Popups', useValue: {\n                        'add': {\n                            module: this._provider['modules']['bookingServiceAddStep1']['module'],\n                            component: this._provider['modules']['bookingServiceAddStep1']['component'],\n                            providers: [\n                                // Set field for wizard form first step\n                                {provide: 'FormServiceProvider', useValue: {fields: ['serviceObj']}},\n                                {provide: 'Provider', useValue: addProvider},\n                                NavManagerService,\n                                WizardManagerService,\n                                FormService\n                            ]\n                        },\n                        'edit': {\n                            module: this._provider['modules']['bookingServiceEdit']['module'],\n                            component: this._provider['modules']['bookingServiceEdit']['component'],\n                            providers: [\n                                FormService,\n                                {provide: 'Provider', useValue: editProvider}\n                            ]\n                        }\n                    }},\n                    {provide: 'ParentDataService', useValue: this._dataService}\n                ];\n                break;\n            case 2:\n                return [\n                    NavManagerService\n                ];\n            case 3:\n                providers = [\n                    {provide: 'Provider', useValue: this._helperService.getDataBoxProvider(data)},\n                    {provide: 'LegendProvider', useValue: this._helperService.getLegendProvider(data)},\n                    {provide: 'Popups', useValue: {\n                        module: BookingObservationEditExtModule,\n                        component: 'EditComponent',\n                        providers: [\n                            FormService,\n                            {provide: 'Provider', useValue: this._helperService.getFormProvider(data)}\n                        ]\n                    }}\n                ];\n                break;\n            case 4:\n                providers = [\n                    {provide: 'Provider', useValue: this._helperService.getDataBoxProvider(data)},\n                    {provide: 'LegendProvider', useValue: this._helperService.getLegendProvider(data)},\n                    {provide: 'Popups', useValue: {\n                        module: BookingFileEditExtModule,\n                        component: 'EditComponent',\n                        providers: [\n                            {provide: 'FileFormProvider', useValue: {\n                                label: data['label'],\n                                url: data['route']['edit']['url']\n                            }}\n                        ]\n                    }}\n                ];\n                break;\n        }\n\n        providers = providers.concat([\n            {provide: 'DataService', useClass: DataService},\n            ActionsService,\n            {provide: 'DataServiceProvider', useValue: this._helperService.getDataServiceProvider(data)},\n            {provide: 'ActionsServiceProvider', useValue: this._helperService.getActionsServiceProvider(data)}\n        ]);\n\n        return providers;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/base-booking/detail/ts/src/main.component.ts","import {Component, Inject, Optional, Injector, ElementRef, Renderer} from '@angular/core';\nimport {FileFormProvider} from '../../../../../../../../AppBundle/Resources/public/file/ts/src/file-form.component';\nimport {FileFormPopupComponent} from '../../../../../../../../AppBundle/Resources/public/file/ts/src/file-form-popup.component';\n\n\n@Component({\n    selector: '#js_edit',\n    templateUrl: '../templates/edit.component.html'\n})\nexport class EditComponent extends FileFormPopupComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('FileFormProvider') provider: FileFormProvider,\n        @Inject('DataService') dataService: any,\n        @Inject('HelperService') helperService: any\n    ) {\n        // Call parent\n        super(\n            elementRef,\n            renderer,\n            provider,\n            dataService,\n            helperService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/booking-file/index/ts/src/edit.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {EditComponent} from './edit.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule],\n    declarations: [\n        EditComponent\n    ],\n    exports: [EditComponent]\n})\nexport class EditExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/booking-file/index/ts/src/edit.ext-module.ts","module.exports = \"<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">{{getProviderAttr('label')}}</h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">    \\n\\n\\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" class=\\\"dropzone form-horizontal\\\" ngNoForm=\\\"\\\">\\n\\n    \\n\\n\\n    \\n\\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\\n</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n    <div class=\\\"row\\\">\\n    <div class=\\\"col-auto ml-auto\\\">\\n        <button type=\\\"button\\\" class=\\\"btn-primary btn\\\" (click)=\\\"closeAction($event)\\\">Finish</button>\\n    </div>\\n</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/booking-file/index/ts/templates/edit.component.html\n// module id = ../../../../../src/Bck/BookingBundle/Resources/public/booking-file/index/ts/templates/edit.component.html\n// module chunks = main","import {Component, ElementRef, Inject, Optional, Injector, Renderer} from '@angular/core';\nimport {FormPopupExtensionComponent, FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\n\n\n@Component({\n    selector: '#js_edit',\n    templateUrl: '../templates/edit.component.html'\n})\nexport class EditComponent extends FormPopupExtensionComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any\n    ) {\n        super();\n        super.initFormPopupExtensionComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/booking-observation/index/ts/src/edit.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {EditComponent} from './edit.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule],\n    declarations: [\n        EditComponent\n    ],\n    exports: [EditComponent]\n})\nexport class EditExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/booking-observation/index/ts/src/edit.ext-module.ts","module.exports = \"    \\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">    \\n            \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().id\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_id\\\">Id</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_id\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().id\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().id\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_name\\\">Name/Title</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_name\\\" name=\\\"form[name]\\\" required=\\\"required\\\" maxlength=\\\"128\\\" [(ngModel)]=\\\"_formService.getObject().name\\\" formControlName=\\\"name\\\" [class.error]=\\\"_formService.getErrors().name &amp;&amp; _formService.getErrors().name.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().name\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_description\\\">Description</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_description\\\" name=\\\"form[description]\\\" maxlength=\\\"526\\\" [(ngModel)]=\\\"_formService.getObject().description\\\" formControlName=\\\"description\\\" [class.error]=\\\"_formService.getErrors().description &amp;&amp; _formService.getErrors().description.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().description\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\">Type</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                                                    \\n    <div class=\\\"form-control-box\\\"\\n         [ngClass]=\\\"{'error': _formService.getErrors().type && (_formService.getErrors().type.length > 0)}\\\"\\n         (click)=\\\"_formService.setFormFieldValue('type', $event.target.value)\\\">\\n                    <div class=\\\"radio\\\">                                                            <label for=\\\"form_type_0\\\" class=\\\"required\\\"><input type=\\\"radio\\\" id=\\\"form_type_0\\\" name=\\\"form[type]\\\" required=\\\"required\\\" [checked]=\\\"&#039;DEFAULT&#039; == _formService.getObject().type\\\" value=\\\"DEFAULT\\\" /> Default</label>\\n    </div>\\n                    <div class=\\\"radio\\\">                                                            <label for=\\\"form_type_1\\\" class=\\\"required\\\"><input type=\\\"radio\\\" id=\\\"form_type_1\\\" name=\\\"form[type]\\\" required=\\\"required\\\" [checked]=\\\"&#039;INFO&#039; == _formService.getObject().type\\\" value=\\\"INFO\\\" /> Info</label>\\n    </div>\\n                    <div class=\\\"radio\\\">                                                            <label for=\\\"form_type_2\\\" class=\\\"required\\\"><input type=\\\"radio\\\" id=\\\"form_type_2\\\" name=\\\"form[type]\\\" required=\\\"required\\\" [checked]=\\\"&#039;WARNING&#039; == _formService.getObject().type\\\" value=\\\"WARNING\\\" /> Warning</label>\\n    </div>\\n                    <div class=\\\"radio\\\">                                                            <label for=\\\"form_type_3\\\" class=\\\"required\\\"><input type=\\\"radio\\\" id=\\\"form_type_3\\\" name=\\\"form[type]\\\" required=\\\"required\\\" [checked]=\\\"&#039;DANGER&#039; == _formService.getObject().type\\\" value=\\\"DANGER\\\" /> Danger</label>\\n    </div>\\n            </div>\\n    <input [(ngModel)]=\\\"_formService.getObject().type\\\"\\n           formControlName = type\\n           required=\\\"required\\\"           type=\\\"hidden\\\">\\n\\n                            <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().type\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" [innerHTML]=\\\"getLang('Enabled')\\\"></label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <div class=\\\"checkbox\\\">                                        <label for=\\\"form_isEnabled\\\"><input type=\\\"checkbox\\\" id=\\\"form_isEnabled\\\" name=\\\"form[isEnabled]\\\" [(ngModel)]=\\\"_formService.getObject().isEnabled\\\" formControlName=\\\"isEnabled\\\" [class.error]=\\\"_formService.getErrors().isEnabled &amp;&amp; _formService.getErrors().isEnabled.length &gt; 0\\\" value=\\\"1\\\" checked=\\\"checked\\\" /> Is enabled</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isEnabled\\\">{{error}}</label>\\n            </div>\\n        </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n        \\n                    <div class=\\\"row\\\">\\n            <div class=\\\"col-auto ml-auto\\\">\\n                                            <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"cancelAction($event)\\\"\\n                                        id=\\\"form_cancel\\\"\\n            name=\\\"form[cancel]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Cancel</button>\\n                                                <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"resetAction($event)\\\"\\n                                        id=\\\"form_reset\\\"\\n            name=\\\"form[reset]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-ban\\\"></i>&nbsp;Reset</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAction($event)\\\"\\n                                        id=\\\"form_save\\\"\\n            name=\\\"form[save]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-check\\\"></i>&nbsp;Save</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAndCloseAction($event)\\\"\\n                                        id=\\\"form_saveAndClose\\\"\\n            name=\\\"form[saveAndClose]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Save and Close</button>\\n                                </div>\\n        </div>\\n    </div>    \\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/booking-observation/index/ts/templates/edit.component.html\n// module id = ../../../../../src/Bck/BookingBundle/Resources/public/booking-observation/index/ts/templates/edit.component.html\n// module chunks = main","import {Component, ElementRef, Inject, Optional, Injector, Renderer} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {PriceFormPopupComponent, FormProvider} from '../../../../../../../../AppBundle/Resources/public/price/ts/src/price-form-popup.component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\n\n// Re-exports\nexport {FormProvider}\n\n\n@Component({\n    selector: '#js_edit',\n    templateUrl: '../templates/edit.component.html'\n})\nexport class EditComponent extends PriceFormPopupComponent\n{\n    // To get notify about changes over the objects\n    protected _onObjectsChangeSubscription: any;\n    // Control if there are changes to refresh parents\n    protected _hasObjectsChanges: boolean = false;\n\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any,\n        @Inject('HelperService') helperService: any,\n        @Inject('ParentDataService') protected _parentDataService: any\n    ) {\n        super(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            helperService\n        );\n\n        // Set default values for new objects\n        let formObj = this._formService.getObject();\n        if (!formObj['id']) {\n            let parentObj = this._parentDataService.getObject();\n            formObj['vatCodeObj'] = parentObj['vatCodeObj'];\n            formObj['vatCode_name'] = parentObj['vatCode_name'];\n            formObj['vatCode_percentage'] = parentObj['vatCode_percentage'];\n            formObj['description'] = parentObj['description'];\n            formObj['postingType'] = 'DEBIT';\n            formObj['quantity'] = parentObj['quantity'];\n            formObj['marginMethod'] = 'MARKUP';\n        }\n\n        this._onObjectsChangeSubscription = this._dataService.getOnObjectsChangeEmitter()\n            .subscribe(object => {this._hasObjectsChanges = true;});\n    }\n\n    /**\n     * onSellValueEnterKey\n     * @param value\n     */\n    protected onQuantityEnterKey(value: any): void\n    {\n        this._formService.getObject()['quantity'] = value; // Value is not yet setted in object\n        this.setTotals();\n    }\n\n    /**\n     * Set totals\n     * @returns any\n     */\n    protected setTotals(): any\n    {\n        let obj = this._formService.getObject(),\n            quantity = parseFloat(obj['quantity'] || '0'),\n            isVatIncluded = obj['isVatIncluded'],\n            vatPercentage = parseFloat(obj['vatCode_percentage'] || '0'),\n            costValue = parseFloat(obj['costValue'] || '0'), // No VAT included\n            sellValue = parseFloat(obj['sellValue'] || '0'), // No VAT included\n            vatValueCost = 0,\n            vatValueSell = 0;\n\n        // VAT value\n        if (vatPercentage > 0) {\n            vatValueCost = parseFloat((Math.round(\n                        (costValue * (vatPercentage / 100))\n                        * this.decimalConf.unit.iterator) / this.decimalConf.unit.iterator\n                ).toFixed(this.decimalConf.unit.value)\n            );\n            vatValueSell = parseFloat((Math.round(\n                        (sellValue * (vatPercentage / 100))\n                        * this.decimalConf.unit.iterator) / this.decimalConf.unit.iterator\n                ).toFixed(this.decimalConf.unit.value)\n            );\n        }\n\n        // Total vat\n        obj['totalVatCost'] = (Math.round(\n                (vatValueCost * quantity)\n                * this.decimalConf.total.iterator) / this.decimalConf.total.iterator\n        ).toFixed(this.decimalConf.total.value);\n        obj['totalVatSell'] = (Math.round(\n                (vatValueSell * quantity)\n                * this.decimalConf.total.iterator) / this.decimalConf.total.iterator\n        ).toFixed(this.decimalConf.total.value);\n\n        /* Total unit (disabled for now)\n        obj['totalUnitSell'] = (Math.round(\n                (sellValue + vatValueSell)\n                * this.decimalConf.total.iterator) / this.decimalConf.total.iterator\n        ).toFixed(this.decimalConf.total.value);*/\n\n        let totalUnitCost = parseFloat((Math.round(\n                    (costValue + vatValueCost)\n                    * this.decimalConf.total.iterator) / this.decimalConf.total.iterator\n            ).toFixed(this.decimalConf.total.value)),\n            totalUnitSell = parseFloat((Math.round(\n                    (sellValue + vatValueSell)\n                    * this.decimalConf.total.iterator) / this.decimalConf.total.iterator\n            ).toFixed(this.decimalConf.total.value));\n\n        // Total\n        // Do not use \"subTotal\" nor \"totalVat\" to get the \"total\", because this values are already rounded,\n        // and in some cases the sum of 2 rounded values cause inquiries.\n        // Before multiply round the sum to get a coherent total unit value\n        obj['totalCost'] = (Math.round(\n                (totalUnitCost * quantity)\n                * this.decimalConf.total.iterator) / this.decimalConf.total.iterator\n        ).toFixed(this.decimalConf.total.value);\n        obj['totalSell'] = (Math.round(\n                (totalUnitSell * quantity)\n                * this.decimalConf.total.iterator) / this.decimalConf.total.iterator\n        ).toFixed(this.decimalConf.total.value);\n\n        // Sub total\n        // Sub total is determined in this way, because in some cases the sum of \"subTotal\" and \"totalVat\"\n        // rounded does not match with the correct total, given that this values are rounded to 2 decimals\n        // and lost precision, so in this way we keep the calculus with coherence giving preference to keep\n        // \"totalVat\" untouched (legal values).\n        obj['subTotalCost'] = (Math.round(\n                (parseFloat(obj['totalCost'] || '0') - parseFloat(obj['totalVatCost'] || '0'))\n                * this.decimalConf.total.iterator) / this.decimalConf.total.iterator\n        ).toFixed(this.decimalConf.total.value);\n        obj['subTotalSell'] = (Math.round(\n                (parseFloat(obj['totalSell'] || '0') - parseFloat(obj['totalVatSell'] || '0'))\n                * this.decimalConf.total.iterator) / this.decimalConf.total.iterator\n        ).toFixed(this.decimalConf.total.value);\n\n        return this;\n    }\n\n    /**\n     * Post (after) price update event. Use this function to handle event.\n     * @return any\n     */\n    protected postPriceUpdate()\n    {\n        this.setTotals();\n        return this;\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnDestroy()\n    {\n        this._onObjectsChangeSubscription.unsubscribe();\n\n        // If object has no changes, popup was open and closed without save the object,\n        // so doesn't make sense refresh the objects\n        if (this._hasObjectsChanges && this._parentDataService.getObject()['grouperBookingServicePriceObj']) {\n            // Refresh objects to keep grouper object updated\n            this._dataService.refresh();\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/booking-service-price/index/ts/src/edit.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {EditComponent} from './edit.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        EditComponent\n    ],\n    exports: [EditComponent]\n})\nexport class EditExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/booking-service-price/index/ts/src/edit.ext-module.ts","module.exports = \"    \\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">        \\n                                        \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().booking_code\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_booking_code\\\">Booking Code</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_booking_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().booking_code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().booking_code\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                                    \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().supplier_code\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_supplier_code\\\">Supplier Code</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_supplier_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().supplier_code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().supplier_code\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                                    \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().client_code\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_client_code\\\">Client Code</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_client_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().client_code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().client_code\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                                    \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().service_name\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_service_name\\\">Service</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_service_name\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().service_name\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().service_name\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                                    \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().vatCode_name\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_vatCode_name\\\">VAT Code</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_vatCode_name\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().vatCode_name\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().vatCode_name\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_description\\\">Description</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_description\\\" name=\\\"form[description]\\\" maxlength=\\\"256\\\" [(ngModel)]=\\\"_formService.getObject().description\\\" formControlName=\\\"description\\\" [class.error]=\\\"_formService.getErrors().description &amp;&amp; _formService.getErrors().description.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().description\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_postingType\\\">Operation</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                                                    \\n        <select id=\\\"form_postingType\\\" name=\\\"form[postingType]\\\" [(ngModel)]=\\\"_formService.getObject().postingType\\\" formControlName=\\\"postingType\\\" [class.error]=\\\"_formService.getErrors().postingType &amp;&amp; _formService.getErrors().postingType.length &gt; 0\\\" class=\\\"form-control\\\"><option value=\\\"DEBIT\\\">Debit</option><option value=\\\"CREDIT\\\">Credit</option></select>\\n    <input [(ngModel)]=\\\"_formService.getObject().postingType\\\"\\n           formControlName = postingType\\n           required=\\\"required\\\"           type=\\\"hidden\\\">\\n\\n                            <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().postingType\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" [innerHTML]=\\\"getLang('VAT included')\\\"></label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <div class=\\\"checkbox\\\">                                        <label for=\\\"form_isVatIncluded\\\"><input type=\\\"checkbox\\\" id=\\\"form_isVatIncluded\\\" name=\\\"form[isVatIncluded]\\\" (change)=\\\"onIsVatIncludedChange($event.target.checked)\\\" [(ngModel)]=\\\"_formService.getObject().isVatIncluded\\\" formControlName=\\\"isVatIncluded\\\" [class.error]=\\\"_formService.getErrors().isVatIncluded &amp;&amp; _formService.getErrors().isVatIncluded.length &gt; 0\\\" value=\\\"1\\\" /> Is vat included</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isVatIncluded\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                                    \\n\\n                                            <input type=\\\"hidden\\\" id=\\\"form_costValue\\\" name=\\\"form[costValue]\\\" [(ngModel)]=\\\"_formService.getObject().costValue\\\" formControlName=\\\"costValue\\\" [class.error]=\\\"_formService.getErrors().costValue &amp;&amp; _formService.getErrors().costValue.length &gt; 0\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().costValue\\\">{{error}}</label>\\n                                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_quantity\\\">Quantity</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"number\\\" id=\\\"form_quantity\\\" name=\\\"form[quantity]\\\" required=\\\"required\\\" (input)=\\\"onQuantityEnterKey($event.target.value)\\\" (focusout)=\\\"onQuantityEnterKey($event.target.value)\\\" [(ngModel)]=\\\"_formService.getObject().quantity\\\" formControlName=\\\"quantity\\\" [class.error]=\\\"_formService.getErrors().quantity &amp;&amp; _formService.getErrors().quantity.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().quantity\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_user_costValue\\\">Cost</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_user_costValue\\\" name=\\\"form[user_costValue]\\\" (input)=\\\"onCostValueEnterKey($event.target.value)\\\" (focusout)=\\\"onCostValueEnterKey($event.target.value)\\\" [(ngModel)]=\\\"_formService.getObject().user_costValue\\\" formControlName=\\\"user_costValue\\\" [class.error]=\\\"_formService.getErrors().user_costValue &amp;&amp; _formService.getErrors().user_costValue.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().user_costValue\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                                                    <div class=\\\"row form-group\\\">\\n                                <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_marginValue\\\">Margin</label>\\n                        <div class=\\\"col-sm-10\\\"><div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-6\\\">\\n                                                                                \\n        <select id=\\\"form_marginMethod\\\" name=\\\"form[marginMethod]\\\" (change)=\\\"onMarginMethodChange($event.target.value)\\\" [(ngModel)]=\\\"_formService.getObject().marginMethod\\\" formControlName=\\\"marginMethod\\\" [class.error]=\\\"_formService.getErrors().marginMethod &amp;&amp; _formService.getErrors().marginMethod.length &gt; 0\\\" class=\\\"form-control\\\"><option value=\\\"\\\"></option><option value=\\\"MARGIN\\\">Margin</option><option value=\\\"MARKUP\\\">Markup</option><option value=\\\"FIXED\\\">Fixed</option></select>\\n    <input [(ngModel)]=\\\"_formService.getObject().marginMethod\\\"\\n           formControlName = marginMethod\\n                      type=\\\"hidden\\\">\\n\\n                            <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().marginMethod\\\">{{error}}</label>\\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n                                                        <input type=\\\"text\\\" id=\\\"form_marginValue\\\" name=\\\"form[marginValue]\\\" (input)=\\\"onMarginValueEnterKey($event.target.value)\\\" (focusout)=\\\"onMarginValueEnterKey($event.target.value)\\\" [(ngModel)]=\\\"_formService.getObject().marginValue\\\" formControlName=\\\"marginValue\\\" [class.error]=\\\"_formService.getErrors().marginValue &amp;&amp; _formService.getErrors().marginValue.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().marginValue\\\">{{error}}</label>\\n                        </div>\\n                    </div></div>\\n                </div>\\n                                                                    \\n\\n                                            <input type=\\\"hidden\\\" id=\\\"form_sellValue\\\" name=\\\"form[sellValue]\\\" [(ngModel)]=\\\"_formService.getObject().sellValue\\\" formControlName=\\\"sellValue\\\" [class.error]=\\\"_formService.getErrors().sellValue &amp;&amp; _formService.getErrors().sellValue.length &gt; 0\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().sellValue\\\">{{error}}</label>\\n                                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_user_sellValue\\\">Sell</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_user_sellValue\\\" name=\\\"form[user_sellValue]\\\" (input)=\\\"onSellValueEnterKey($event.target.value)\\\" (focusout)=\\\"onSellValueEnterKey($event.target.value)\\\" [(ngModel)]=\\\"_formService.getObject().user_sellValue\\\" formControlName=\\\"user_sellValue\\\" [class.error]=\\\"_formService.getErrors().user_sellValue &amp;&amp; _formService.getErrors().user_sellValue.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().user_sellValue\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_subTotalSell\\\">Sub Total</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_subTotalSell\\\" name=\\\"form[subTotalSell]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().subTotalSell\\\" formControlName=\\\"subTotalSell\\\" [class.error]=\\\"_formService.getErrors().subTotalSell &amp;&amp; _formService.getErrors().subTotalSell.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().subTotalSell\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_totalVatSell\\\">Total VAT</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_totalVatSell\\\" name=\\\"form[totalVatSell]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().totalVatSell\\\" formControlName=\\\"totalVatSell\\\" [class.error]=\\\"_formService.getErrors().totalVatSell &amp;&amp; _formService.getErrors().totalVatSell.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().totalVatSell\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_totalSell\\\">Total</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_totalSell\\\" name=\\\"form[totalSell]\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"_formService.getObject().totalSell\\\" formControlName=\\\"totalSell\\\" [class.error]=\\\"_formService.getErrors().totalSell &amp;&amp; _formService.getErrors().totalSell.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().totalSell\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                                    \\n\\n                                            <input type=\\\"hidden\\\" id=\\\"form_userFieldTyped\\\" name=\\\"form[userFieldTyped]\\\" [(ngModel)]=\\\"_formService.getObject().userFieldTyped\\\" formControlName=\\\"userFieldTyped\\\" [class.error]=\\\"_formService.getErrors().userFieldTyped &amp;&amp; _formService.getErrors().userFieldTyped.length &gt; 0\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().userFieldTyped\\\">{{error}}</label>\\n                                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" [innerHTML]=\\\"getLang('Enabled')\\\"></label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <div class=\\\"checkbox\\\">                                        <label for=\\\"form_isEnabled\\\"><input type=\\\"checkbox\\\" id=\\\"form_isEnabled\\\" name=\\\"form[isEnabled]\\\" [(ngModel)]=\\\"_formService.getObject().isEnabled\\\" formControlName=\\\"isEnabled\\\" [class.error]=\\\"_formService.getErrors().isEnabled &amp;&amp; _formService.getErrors().isEnabled.length &gt; 0\\\" value=\\\"1\\\" checked=\\\"checked\\\" /> Is enabled</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isEnabled\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                            </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n        \\n                    <div class=\\\"row\\\">\\n            <div class=\\\"col-auto ml-auto\\\">\\n                                            <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"cancelAction($event)\\\"\\n                                        id=\\\"form_cancel\\\"\\n            name=\\\"form[cancel]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Cancel</button>\\n                                                <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"resetAction($event)\\\"\\n                                        id=\\\"form_reset\\\"\\n            name=\\\"form[reset]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-ban\\\"></i>&nbsp;Reset</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAction($event)\\\"\\n                                        id=\\\"form_save\\\"\\n            name=\\\"form[save]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-check\\\"></i>&nbsp;Save</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAndCloseAction($event)\\\"\\n                                        id=\\\"form_saveAndClose\\\"\\n            name=\\\"form[saveAndClose]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Save and Close</button>\\n                                </div>\\n        </div>\\n    </div>    \\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/booking-service-price/index/ts/templates/edit.component.html\n// module id = ../../../../../src/Bck/BookingBundle/Resources/public/booking-service-price/index/ts/templates/edit.component.html\n// module chunks = main","import {Component, ElementRef, Inject, Injector, Renderer, QueryList, Optional, ViewChildren, ViewContainerRef, ViewChild} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {DataService} from \"../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service\";\nimport {WizardManagerService} from '../../../../../../../../AppBundle/Resources/public/wizard/ts/src/wizard-manager.service';\nimport {Step1Component as BaseBookingServiceAddStep1Component, BaseBookingServiceAddProvider} from '../../../../base-booking-service/add/ts/src/step1.component';\nimport {DynamicComponentLoaderService} from '../../../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\nimport {PostService} from '../../../../../../../../AppBundle/Resources/public/ts/post.service';\n\n\n@Component({\n    selector: '.js_bookingServiceAddFormPopup',\n    templateUrl: '../templates/step1.component.html'\n})\nexport class Step1Component extends BaseBookingServiceAddStep1Component\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: BaseBookingServiceAddProvider,\n        wizardManagerService: WizardManagerService,\n        formService: FormService,\n        dynamicComponentLoaderService: DynamicComponentLoaderService,\n        postService: PostService,\n        injector: Injector,\n        @Inject('HelperService') helperService: any,\n        @Inject('DataService') dataService: any,\n        @Inject('ParentDataService') parentDataService: any\n    ) {\n        // Call parent\n        super(\n            elementRef,\n            renderer,\n            provider,\n            wizardManagerService,\n            formService,\n            dynamicComponentLoaderService,\n            postService,\n            injector,\n            helperService,\n            dataService,\n            parentDataService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking-service/add/ts/src/step1.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {Step1Component} from './step1.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        Step1Component\n    ],\n    exports: [Step1Component]\n})\nexport class Step1ExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking-service/add/ts/src/step1.ext-module.ts","import {Component, Inject, Injector, ViewContainerRef, Renderer} from '@angular/core';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {ActionsService} from '../../../../../../../../AppBundle/Resources/public/ts/actions/actions.service';\nimport {DataBoxExtensionComponent, DataBoxProvider, Popups, Popup} from '../../../../../../../../AppBundle/Resources/public/data-box/ts/src/data-box.extension-component';\nimport {ModalService} from '../../../../../../../../AppBundle/Resources/public/modal/ts/modal.service';\nimport {TasksLoaderManagerService} from '../../../../../../../../AppBundle/Resources/public/tasks-loader-manager/ts/tasks-loader-manager.service';\n\n\n// Component\n@Component({\n    selector: '.js_paxDataBox',\n    templateUrl: '../templates/step2-pax.component.html'\n})\nexport class Step2PaxComponent extends DataBoxExtensionComponent\n{\n    constructor(\n        viewContainerRef: ViewContainerRef,\n        renderer: Renderer,\n        @Inject('Provider') dataBoxProvider: DataBoxProvider,\n        @Inject('DataService') dataService: any,\n        tasksLoaderManagerService: TasksLoaderManagerService,\n        @Inject('HelperService') helperService: any,\n        actionsService: ActionsService,\n        modalService: ModalService,\n        @Inject('Popups') popups: Popups | Popup,\n        injector: Injector\n    ) {\n        // Call parent\n        super();\n        super.initDataBoxExtensionComponent(\n            viewContainerRef,\n            renderer,\n            dataBoxProvider,\n            dataService,\n            tasksLoaderManagerService,\n            helperService,\n            actionsService,\n            modalService,\n            popups,\n            injector\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking-service/add/ts/src/step2-pax.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n// This module doesn't use \"ReactiveFormsModule\", but it needs to import this class\n// to provide \"formBuilder\" when inject dependencies in child modules (like form)\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {SearchModule} from '../../../../../../../../AppBundle/Resources/public/ts/search/search.module';\nimport {ExpanderModule} from '../../../../../../../../AppBundle/Resources/public/ts/expander/expander.module';\nimport {SearchPaginationModule} from '../../../../../../../../AppBundle/Resources/public/ts/search/search-pagination.module';\nimport {LegendExtModule} from '../../../../../../../../AppBundle/Resources/public/legend/ts/src/legend.ext-module';\nimport {Step2PaxComponent} from './step2-pax.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        SearchModule,\n        SearchPaginationModule,\n        ExpanderModule,\n        LegendExtModule\n    ],\n    declarations: [\n        Step2PaxComponent\n    ],\n    exports: [Step2PaxComponent]\n})\nexport class Step2PaxExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking-service/add/ts/src/step2-pax.ext-module.ts","import {Component, ElementRef, Inject, Optional, Injector, Renderer} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {ModalService} from '../../../../../../../../AppBundle/Resources/public/modal/ts/modal.service';\nimport {DynamicComponentLoaderService} from '../../../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\nimport {PostService} from '../../../../../../../../AppBundle/Resources/public/ts/post.service';\nimport {Step2Component as BaseBookingServiceAddStep2Component, FormProvider} from '../../../../base-booking-service/add/ts/src/step2.component';\n\n\n/* Import dependencies */\nimport {Step2PaxExtModule} from './step2-pax.ext-module';\nimport {BookingPaxEditExtModule} from '../../../../regular-booking/detail/ts/src/booking-pax-edit.ext-module';\n/* /Import dependencies */\n\n\n@Component({\n    selector: '#js_bookingServiceAddDetailForm',\n    templateUrl: '../templates/step2.component.html'\n})\nexport class Step2Component extends BaseBookingServiceAddStep2Component\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any,\n        modalService: ModalService,\n        dynamicComponentLoaderService: DynamicComponentLoaderService,\n        postService: PostService,\n        injector: Injector,\n        @Inject('HelperService') helperService: any\n    ) {\n        super(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            modalService,\n            dynamicComponentLoaderService,\n            postService,\n            injector,\n            helperService\n        );\n    }\n\n    /**\n     * Method implementation\n     */\n    protected getPaxDataBoxExtModule()\n    {\n        return Step2PaxExtModule;\n    }\n\n    /**\n     * Method implementation\n     */\n    protected getPaxEditFormExtModule()\n    {\n        return BookingPaxEditExtModule;\n    }\n\n    /**\n     * Method implementation\n     */\n    protected getPaxDataBoxUrlProvider() {\n        return (this._helperService.getAppVar('route')\n            + 'bck/booking/regular-booking-pax/data-for-add-service/'\n            + this._formService.getObject()['bookingObj']\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking-service/add/ts/src/step2.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {PopoverExtModule} from '../../../../../../../../AppBundle/Resources/public/popover/ts/popover.ext-module';\nimport {Step2Component} from './step2.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule, PopoverExtModule],\n    declarations: [\n        Step2Component\n    ],\n    exports: [Step2Component]\n})\nexport class Step2ExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking-service/add/ts/src/step2.ext-module.ts","import {Component, ElementRef, Inject, Optional, Injector, Renderer} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {Step3Component as BaseBookingServiceAddStep3Component, FormProvider} from '../../../../base-booking-service/add/ts/src/step3.component';\n\n\n@Component({\n    selector: '#js_bookingServiceAddDatesForm',\n    templateUrl: '../templates/step3.component.html'\n})\nexport class Step3Component extends BaseBookingServiceAddStep3Component\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any\n    ) {\n        super(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking-service/add/ts/src/step3.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {Step3Component} from './step3.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        Step3Component\n    ],\n    exports: [Step3Component]\n})\nexport class Step3ExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking-service/add/ts/src/step3.ext-module.ts","module.exports = \"<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">    <div *ngIf=\\\"getSelectedServiceAttr('id')\\\" class=\\\"row mb-1\\\">\\n    <div class=\\\"col-sm-8\\\">\\n        <div class=\\\"row no-gutters widget gray-bg height104\\\">\\n            <div class=\\\"col-sm-3\\\">\\n                <div [innerHTML]=\\\"getSelectedServiceAttr('thumbnail')\\\"></div>\\n            </div>\\n            <div class=\\\"col-sm-9\\\">\\n                <div>\\n                    <span [innerHTML]=\\\"getSelectedServiceAttr('icon')\\\"></span>\\n                    <span class=\\\"font-bold\\\" [innerHTML]=\\\"getSelectedServiceAttr('name')\\\"></span>\\n                </div>\\n                <div class=\\\"height52\\\" [innerHTML]=\\\"getSelectedServiceAttr('description')\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-sm-4\\\">\\n        <div class=\\\"widget bg-primary text-white height104 text-center\\\">\\n            <h2 [innerHTML]=\\\"getSelectedServiceAttr('totalSell')\\\"></h2>\\n            <div><span [innerHTML]=\\\"getSelectedServiceAttr('quantity')\\\" class=\\\"font-bold\\\"></span>&nbsp;Pax</div>\\n            <div><span [innerHTML]=\\\"getSelectedServiceAttr('durationDays')\\\" class=\\\"font-bold\\\"></span>&nbsp;Days</div>\\n        </div>\\n    </div>\\n</div>\\n\\n                        <ul class=\\\"row mb-3 no-gutters wizard-nav\\\">\\n                                    <li class=\\\"col-auto wizard-step\\\"\\n                        [class.step-active]=\\\"0 == _wizardManagerService.getIndex()\\\">\\n                        <span class=\\\"step-number\\\">1</span>\\n                        <span class=\\\"step-text\\\">Service</span>\\n                    </li>\\n                                    <li class=\\\"col-auto wizard-step\\\"\\n                        [class.step-active]=\\\"1 == _wizardManagerService.getIndex()\\\">\\n                        <span class=\\\"step-number\\\">2</span>\\n                        <span class=\\\"step-text\\\">Dates</span>\\n                    </li>\\n                                    <li class=\\\"col-auto wizard-step\\\"\\n                        [class.step-active]=\\\"2 == _wizardManagerService.getIndex()\\\">\\n                        <span class=\\\"step-number\\\">3</span>\\n                        <span class=\\\"step-text\\\">Detail</span>\\n                    </li>\\n                                    <li class=\\\"col-auto wizard-step\\\"\\n                        [class.step-active]=\\\"3 == _wizardManagerService.getIndex()\\\">\\n                        <span class=\\\"step-number\\\">4</span>\\n                        <span class=\\\"step-text\\\">Preview</span>\\n                    </li>\\n                            </ul>\\n\\n            \\n                                            <section [hidden]=\\\"_wizardManagerService.getIndex() != 0\\\">        \\n            \\n\\n\\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n\\n\\n                                    \\n                        \\n                                                    <ng-template #js_step1Service></ng-template>\\n                            \\n\\n                                            <input [(ngModel)]=\\\"_formService.getObject().serviceObj\\\"\\n           formControlName = serviceObj\\n           id=\\\"form_bookingServiceObj_serviceObj\\\"\\n           name=\\\"form[bookingServiceObj][serviceObj]\\\"\\n           required=\\\"required\\\"           type=\\\"hidden\\\">\\n                    <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().serviceObj\\\">{{error}}</label>\\n                                                                \\n            \\n\\n    \\n\\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\\n        </section>                                <section [hidden]=\\\"_wizardManagerService.getIndex() != 1\\\"\\n         class=\\\"js_lazyLoadContainer_1\\\">\\n    <ng-template #js_lazyLoadContainer></ng-template>\\n</section>                                <section [hidden]=\\\"_wizardManagerService.getIndex() != 2\\\"\\n         class=\\\"js_lazyLoadContainer_2\\\">\\n    <ng-template #js_lazyLoadContainer></ng-template>\\n</section>                                <section [hidden]=\\\"_wizardManagerService.getIndex() != 3\\\"\\n         class=\\\"js_lazyLoadContainer_3\\\">\\n    <ng-template #js_lazyLoadContainer></ng-template>\\n</section>            \\n            \\n            \\n    </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-auto\\\">\\n            <button type=\\\"button\\\" class=\\\"btn-light btn\\\" (click)=\\\"_wizardManagerService.cancelAction($event)\\\">Cancel</button>\\n                <button type=\\\"button\\\" class=\\\"btn-primary btn\\\" (click)=\\\"_wizardManagerService.prevAction($event)\\\"\\n                    *ngIf=\\\"0 < _wizardManagerService.getIndex()\\\">Prev</button>\\n            <button type=\\\"button\\\" class=\\\"btn-primary btn\\\" (click)=\\\"_wizardManagerService.nextAction($event)\\\"\\n                    *ngIf=\\\"3 > _wizardManagerService.getIndex()\\\">Next</button>\\n            <button type=\\\"button\\\" class=\\\"btn-primary btn\\\" (click)=\\\"_wizardManagerService.finishAction($event)\\\"\\n                    *ngIf=\\\"3 == _wizardManagerService.getIndex()\\\">Finish</button>\\n        \\n    </div>\\n</div></div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking-service/add/ts/templates/step1.component.html\n// module id = ../../../../../src/Bck/BookingBundle/Resources/public/regular-booking-service/add/ts/templates/step1.component.html\n// module chunks = main","module.exports = \"\\n\\n<div class=\\\"ibox\\\" >\\n                        <div class=\\\"ibox-title\\\" *ngIf=\\\"!getProviderExtraDataAttr('hasMergeHeader')\\\">\\n                <h5>\\n                    <ng-template [ngIf]=\\\"getProviderAttr('controls')['expander']['isEnabled']\\\"><js_expander\\n                        [isExpanded]=\\\"_isExpanded || null\\\"\\n                        [label]=\\\"getLang(getProviderAttr('label'))\\\"\\n                        [labelCount]=\\\"getProviderAttr('labelCount')\\\"\\n                        [labelIcon]=\\\"getProviderAttr('labelIcon')\\\"\\n                        (onChange)=\\\"expanderAction($event)\\\"></js_expander></ng-template>\\n                    <ng-template [ngIf]=\\\"!getProviderAttr('controls')['expander']['isEnabled']\\\">\\n                        <span [innerHTML]=\\\"getProviderAttr('label')\\\"></span>\\n                    </ng-template>\\n                </h5>\\n                <div *ngIf=\\\"_isExpanded\\\"\\n                     class=\\\"txt-align-r hide-on-empty\\\">    <div class=\\\"row align-items-center\\\">\\n        <div class=\\\"col ml-auto text-right actions no-user-select\\\">\\n            <ng-template [ngIf]=\\\"_actionsService.getActionAttr('search', 'isEnabled')\\\"><js_search class=\\\"search\\\"></js_search></ng-template>\\n            <div (click)=\\\"triggerAction($event)\\\">\\n                <ng-template ngFor let-action [ngForOf]=\\\"_actionsService.getHeadActions()\\\">\\n                    <a *ngIf=\\\"_actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                       [ngClass]=\\\"[_actionsService.getActionAttr(action, 'icon')]\\\"\\n                       class=\\\"-round fa\\\"\\n                       [attr.data-action]=\\\"action\\\"></a>\\n                </ng-template>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n            </div>\\n            \\n    <div [hidden]=\\\"!(_isExpanded)\\\" class=\\\"ibox-content hide-on-empty\\\">    <ng-template [ngIf]=\\\"(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">\\n                \\n    <div class=\\\"table-responsive\\\">\\n    <form>    <table class=\\\"data-table table table-hover dataTables-example table-bordered\\\">\\n        <thead>\\n        <tr>\\n            <th *ngFor=\\\"let searchField of _dataService.getSearch('fields')\\\">{{ getLang(_dataService.getFields('metadata')[searchField].label) }}</th>\\n            <th>&nbsp;</th>\\n        </tr>\\n        </thead>        <tbody>\\n        <ng-template ngFor let-obj [ngForOf]=\\\"_dataService.getProviderAttr('objects')\\\" let-objIndex=\\\"index\\\">\\n        <tr (dblclick)=\\\"editAction($event, objIndex)\\\"            [ngClass]=\\\"getLegendClasses(obj, 'tr')\\\">                    <td *ngFor=\\\"let searchField of _dataService.getSearch('fields')\\\"\\n    [ngClass]=\\\"getColAlign(searchField)\\\"\\n    [innerHTML]=\\\"obj[searchField]\\\"></td>                        <td>\\n                <span *ngIf=\\\"obj['_isNew']\\\" class=\\\"badge badge-info\\\">New</span>\\n                <span *ngIf=\\\"obj['_isEdited']\\\" class=\\\"badge badge-info\\\">Edited</span>\\n                <input *ngIf=\\\"_actionsService.getActionAttr('radioChoice', 'isEnabled')\\\"\\n                       class=\\\"pull-right action\\\"\\n                       type=\\\"radio\\\"\\n                       name=\\\"index[]\\\"\\n                       value=\\\"{{objIndex}}\\\"/>\\n                <input *ngIf=\\\"_actionsService.getActionAttr('checkAll', 'isEnabled')\\\"\\n                       class=\\\"pull-right action js_checkAll\\\"\\n                       type=\\\"checkbox\\\"\\n                       name=\\\"index[]\\\"\\n                       value=\\\"{{objIndex}}\\\"\\n                       [ngModel]=\\\"checkAll\\\"/>\\n                <div class=\\\"pull-right actions no-user-select text-secondary\\\" (click)=\\\"triggerAction($event)\\\">\\n                    <ng-template ngFor let-action [ngForOf]=\\\"_actionsService.getDetailActions()\\\">\\n                        <a *ngIf=\\\"_actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                           [ngClass]=\\\"[_actionsService.getActionAttr(action, 'icon') + getActionsLegendClasses(obj, action)]\\\"\\n                           class=\\\"fa\\\"\\n                           [attr.data-action]=\\\"action\\\"\\n                           [attr.data-value]=\\\"objIndex\\\"></a>\\n                    </ng-template>\\n                </div>\\n            </td>        </tr>\\n        </ng-template>\\n        </tbody>\\n    </table>\\n    </form></div>    </ng-template><p\\n        class=\\\"text-center\\\"\\n        *ngIf=\\\"!(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">No results.</p>\\n</div>\\n        <div [hidden]=\\\"!(_isExpanded)\\\"\\n         class=\\\"ibox-footer\\\"\\n         *ngIf=\\\"_dataService.countObjects() > 0\\\"><js_searchPagination></js_searchPagination></div>\\n\\n</div>\\n\\n<js_legend></js_legend>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking-service/add/ts/templates/step2-pax.component.html\n// module id = ../../../../../src/Bck/BookingBundle/Resources/public/regular-booking-service/add/ts/templates/step2-pax.component.html\n// module chunks = main","module.exports = \"\\n\\n\\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n\\n            \\n                                        <div class=\\\"row form-group\\\">\\n                                <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_bookingServiceObj_startDateManual\\\">Start Date</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                                                \\n    <div class=\\\"input-group js_dataPicker\\\"\\n         [datePicker]=\\\"'startDateManual'\\\"\\n         #dpk_startDateManual=\\\"\\\" [control]=\\\"dpk_startDateManual\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"yyyy-mm-dd\\\"\\n               [(ngModel)]=\\\"_formService.getObject().startDateManual\\\"\\n               formControlName = startDateManual\\n               name=\\\"form[bookingServiceObj][startDateManual]\\\"\\n               required=\\\"required\\\"               [class.error]=\\\"_formService.getErrors()['startDateManual'] && (_formService.getErrors()['startDateManual'].length > 0)\\\"\\n               ngbDatepicker #dpk_startDateManual=\\\"ngbDatepicker\\\">\\n        <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn\\\" type=\\\"button\\\"><a class=\\\"fa fa-calendar\\\"></a></button>\\n        </div>\\n    </div>\\n    \\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().startDateManual\\\">{{error}}</label>\\n                        <ng-template [ngIf]=\\\"_formService.getObject()['isAutoAvailability']\\\">\\n                            \\n<span class=\\\"\\\" [popover]=\\\"'bottom'\\\" [align]=\\\"'left'\\\" [elementTarget]=\\\"'prev'\\\">\\n    <i class=\\\"fa fa-info-circle txt-lg text-info js_icon\\\"></i>\\n    <div class=\\\"popover bs-popover-bottom js_popover\\\">\\n        <div class=\\\"arrow arrow-left\\\"></div>\\n        <h3 class=\\\"popover-header\\\">Available dates</h3>\\n        <div class=\\\"popover-body\\\">                                    <ng-template [ngIf]=\\\"getControlDebug('availability')\\\">\\n                                        <div *ngFor=\\\"let dataRange of getControlDebug('availability');\\\">\\n                                            <strong>From</strong>&nbsp;{{dataRange['startDate']}}&nbsp;<strong>To</strong>&nbsp;{{dataRange['endDate']}}\\n                                        </div>\\n                                    </ng-template>\\n                                </div>\\n    </div>\\n</span>                        </ng-template>\\n                    </div>\\n                </div>\\n                                                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_bookingServiceObj_endDateManual\\\">End Date</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        \\n    <div class=\\\"input-group js_dataPicker\\\"\\n         [datePicker]=\\\"'endDateManual'\\\"\\n         #dpk_endDateManual=\\\"\\\" [control]=\\\"dpk_endDateManual\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"yyyy-mm-dd\\\"\\n               [(ngModel)]=\\\"_formService.getObject().endDateManual\\\"\\n               formControlName = endDateManual\\n               name=\\\"form[bookingServiceObj][endDateManual]\\\"\\n               required=\\\"required\\\"               [class.error]=\\\"_formService.getErrors()['endDateManual'] && (_formService.getErrors()['endDateManual'].length > 0)\\\"\\n               ngbDatepicker #dpk_endDateManual=\\\"ngbDatepicker\\\">\\n        <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn\\\" type=\\\"button\\\"><a class=\\\"fa fa-calendar\\\"></a></button>\\n        </div>\\n    </div>\\n    \\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().endDateManual\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                                                    <div class=\\\"row form-group\\\">\\n                                <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_bookingServiceObj_quantityManual\\\">Quantity</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                                                    <input type=\\\"text\\\" id=\\\"form_bookingServiceObj_quantityManual\\\" name=\\\"form[bookingServiceObj][quantityManual]\\\" [(ngModel)]=\\\"_formService.getObject().quantityManual\\\" formControlName=\\\"quantityManual\\\" [class.error]=\\\"_formService.getErrors().quantityManual &amp;&amp; _formService.getErrors().quantityManual.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().quantityManual\\\">{{error}}</label>\\n                        <ng-template [ngIf]=\\\"_formService.getObject()['isAutoAllot']\\n                                             && getControlDebug('allotDebug')['detail']\\n                                             && (getControlDebug('allotDebug')['status'] != 'YES')\\\">\\n                            \\n<span class=\\\"\\\" [popover]=\\\"'bottom'\\\" [align]=\\\"'left'\\\" [elementTarget]=\\\"'prev'\\\">\\n    <i class=\\\"fa fa-info-circle txt-lg text-info js_icon\\\"></i>\\n    <div class=\\\"popover bs-popover-bottom js_popover\\\">\\n        <div class=\\\"arrow arrow-left\\\"></div>\\n        <h3 class=\\\"popover-header\\\">Missing allot</h3>\\n        <div class=\\\"popover-body\\\">                                        <div *ngFor=\\\"let debugDetail of getControlDebug('allotDebug')['detail'];\\\">\\n                                            <ng-template [ngIf]=\\\"debugDetail['status'] != 'YES'\\\">\\n                                                <span class=\\\"status -{{ _statusMap[debugDetail['status']] || 'danger' }}\\\"></span><span\\n                                                >&nbsp;{{debugDetail['date']}}</span><span\\n                                                >&nbsp;({{debugDetail['free'] - _formService.getObject()['quantityManual']}})</span>\\n                                            </ng-template>\\n                                        </div>\\n                                </div>\\n    </div>\\n</span>                        </ng-template>\\n                    </div>\\n                </div>\\n                                                <div class=\\\"row form-group\\\">\\n                                <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_bookingServiceObj_confirmationStatus\\\">Confirmation</label>\\n                        <div class=\\\"col-sm-10\\\"\\n                         [hidden]=\\\"!_formService.getObject()['isEnabledAllot'] || !_formService.getObject()['isAutoAllot']\\\">\\n                                                <p id=\\\"form_bookingServiceObj_confirmationStatus\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().confirmationStatus\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().confirmationStatus\\\">{{error}}</label>\\n                    </div>\\n                    <div class=\\\"col-sm-10\\\"\\n                         [hidden]=\\\"_formService.getObject()['isEnabledAllot'] && _formService.getObject()['isAutoAllot']\\\">\\n                                                                                <div class=\\\"html-select\\\"\\n         [htmlSelect]=\\\"'confirmationStatusManual'\\\"\\n                               >\\n        <div class=\\\"input-group-control\\\"\\n             [class.error]=\\\"_formService.getErrors()['confirmationStatusManual'] && (_formService.getErrors()['confirmationStatusManual'].length > 0)\\\">\\n            <span class=\\\"js_label form-control\\\"></span>\\n            <a class=\\\"pull-right\\\"><i class=\\\"fa fa-angle-down\\\"></i></a>\\n        </div>\\n        <div class=\\\"choices js_choices\\\">\\n            <ul class=\\\"form-control-box\\\">                    <li data-value=\\\"NO\\\"><span class=\\\"status -danger\\\"></span></li>\\n                    <li data-value=\\\"PARTIAL\\\"><span class=\\\"status -warning\\\"></span></li>\\n                    <li data-value=\\\"YES\\\"><span class=\\\"status -primary\\\"></span></li>\\n            </ul>\\n        </div>\\n    </div>\\n    <input [(ngModel)]=\\\"_formService.getObject().confirmationStatusManual\\\"\\n           formControlName = confirmationStatusManual\\n           name=\\\"form[bookingServiceObj][confirmationStatusManual]\\\"\\n           required=\\\"required\\\"           type=\\\"hidden\\\">\\n                                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().confirmationStatusManual\\\">{{error}}</label>\\n                    </div>\\n                </div>\\n                                                                    <div class=\\\"row form-group\\\"\\n                     *ngIf=\\\"_formService.getObject()['isEnabledAvailability'] ||\\n                            _formService.getObject()['isEnabledAllot'] ||\\n                            _formService.getObject()['isEnabledPrice']\\\">\\n                    <div class=\\\"col-sm-3\\\">\\n                                <button                                     class=\\\"btn\\\"\\n                                    (click)=\\\"debugAction($event)\\\"\\n                                        id=\\\"form_bookingServiceObj_debug\\\"\\n            name=\\\"form[bookingServiceObj][debug]\\\"\\n            type=\\\"button\\\">Debug</button>\\n                        </div>\\n                    <div class=\\\"col-sm-3 chkStatus\\\" *ngIf=\\\"_formService.getObject()['isEnabledAvailability']\\\">\\n                                                    <div class=\\\"checkbox\\\">                                        <label for=\\\"form_bookingServiceObj_isAutoAvailability\\\"><input type=\\\"checkbox\\\" id=\\\"form_bookingServiceObj_isAutoAvailability\\\" name=\\\"form[bookingServiceObj][isAutoAvailability]\\\" [(ngModel)]=\\\"_formService.getObject().isAutoAvailability\\\" formControlName=\\\"isAutoAvailability\\\" [class.error]=\\\"_formService.getErrors().isAutoAvailability &amp;&amp; _formService.getErrors().isAutoAvailability.length &gt; 0\\\" value=\\\"1\\\" /> Is auto availability</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isAutoAvailability\\\">{{error}}</label>\\n                        &nbsp;<span\\n                            *ngIf=\\\"_formService.getObject()['isAutoAvailability']\\\"\\n                            class=\\\"status -{{ _statusMap[getControlDebug('availabilityDebug')['status']] || 'danger' }}\\\"></span>\\n                    </div>\\n                    <div class=\\\"col-sm-3 chkStatus\\\" *ngIf=\\\"_formService.getObject()['isEnabledAllot']\\\">\\n                                                    <div class=\\\"checkbox\\\">                                        <label for=\\\"form_bookingServiceObj_isAutoAllot\\\"><input type=\\\"checkbox\\\" id=\\\"form_bookingServiceObj_isAutoAllot\\\" name=\\\"form[bookingServiceObj][isAutoAllot]\\\" [(ngModel)]=\\\"_formService.getObject().isAutoAllot\\\" formControlName=\\\"isAutoAllot\\\" [class.error]=\\\"_formService.getErrors().isAutoAllot &amp;&amp; _formService.getErrors().isAutoAllot.length &gt; 0\\\" value=\\\"1\\\" /> Is auto allot</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isAutoAllot\\\">{{error}}</label>\\n                        &nbsp;<span\\n                            *ngIf=\\\"_formService.getObject()['isAutoAllot']\\\"\\n                            class=\\\"status -{{ _statusMap[getControlDebug('allotDebug')['status']] || 'danger' }}\\\"></span>\\n                    </div>\\n                    <div class=\\\"col-sm-3 chkStatus\\\" *ngIf=\\\"_formService.getObject()['isEnabledPrice']\\\">\\n                                                    <div class=\\\"checkbox\\\">                                        <label for=\\\"form_bookingServiceObj_isAutoPrice\\\"><input type=\\\"checkbox\\\" id=\\\"form_bookingServiceObj_isAutoPrice\\\" name=\\\"form[bookingServiceObj][isAutoPrice]\\\" [(ngModel)]=\\\"_formService.getObject().isAutoPrice\\\" formControlName=\\\"isAutoPrice\\\" [class.error]=\\\"_formService.getErrors().isAutoPrice &amp;&amp; _formService.getErrors().isAutoPrice.length &gt; 0\\\" value=\\\"1\\\" /> Is auto price</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isAutoPrice\\\">{{error}}</label>\\n                        &nbsp;<span\\n                            *ngIf=\\\"_formService.getObject()['isAutoPrice']\\\"\\n                            class=\\\"status -{{ _statusMap[getControlDebug('priceDebug')['status']] || 'danger' }}\\\"></span>\\n                    </div>\\n                </div>\\n                <div class=\\\"row form-group\\\">\\n                    <div class=\\\"col-sm-12\\\">\\n                                <button                                     class=\\\"btn btn-primary w-100\\\"\\n                                    (click)=\\\"changeAction($event)\\\"\\n                                        id=\\\"form_bookingServiceObj_change\\\"\\n            name=\\\"form[bookingServiceObj][change]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-check\\\"></i>&nbsp;Change</button>\\n                        </div>\\n                </div>\\n                                                                \\n\\n    \\n\\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\\n    <div class=\\\"form-control-error\\\"\\n         [class.error]=\\\"_formService.getErrors().pax && (_formService.getErrors().pax.length > 0)\\\">\\n        <ng-template #js_paxDataBox></ng-template>\\n    </div>\\n    <label class=\\\"col error\\\"\\n           *ngFor=\\\"let error of _formService.getErrors().pax\\\">{{error}}</label>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking-service/add/ts/templates/step2.component.html\n// module id = ../../../../../src/Bck/BookingBundle/Resources/public/regular-booking-service/add/ts/templates/step2.component.html\n// module chunks = main","module.exports = \"\\n\\n\\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n\\n        \\n                                        \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().name\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_bookingServiceObj_name\\\">Name</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_bookingServiceObj_name\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().name\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().name\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_bookingServiceObj_description\\\">Description</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_bookingServiceObj_description\\\" name=\\\"form[bookingServiceObj][description]\\\" required=\\\"required\\\" maxlength=\\\"256\\\" [(ngModel)]=\\\"_formService.getObject().description\\\" formControlName=\\\"description\\\" [class.error]=\\\"_formService.getErrors().description &amp;&amp; _formService.getErrors().description.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().description\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_bookingServiceObj_supplierObj\\\">Supplier</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input [(ngModel)]=\\\"_formService.getObject().supplierObj\\\"\\n           formControlName = supplierObj\\n           name=\\\"form[bookingServiceObj][supplierObj]\\\"\\n                      type=\\\"hidden\\\">\\n    <js_autoComplete [field]=\\\"'supplierObj'\\\"\\n                     [hasSelfReference]=\\\"_dataService.getFieldChoicesAttr('supplierObj', 'hasSelfReference')\\\"\\n                                                                       ></js_autoComplete>\\n                    <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().supplierObj\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_bookingServiceObj_reference\\\">Reference</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_bookingServiceObj_reference\\\" name=\\\"form[bookingServiceObj][reference]\\\" maxlength=\\\"32\\\" [(ngModel)]=\\\"_formService.getObject().reference\\\" formControlName=\\\"reference\\\" [class.error]=\\\"_formService.getErrors().reference &amp;&amp; _formService.getErrors().reference.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().reference\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                                    <ng-template [ngIf]=\\\"_formService.getObject()['type'] == 'TRAVEL'\\\">\\n                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_bookingServiceObj_placeObj\\\">From</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input [(ngModel)]=\\\"_formService.getObject().placeObj\\\"\\n           formControlName = placeObj\\n           name=\\\"form[bookingServiceObj][placeObj]\\\"\\n                      type=\\\"hidden\\\">\\n    <js_autoComplete [field]=\\\"'placeObj'\\\"\\n                     [hasSelfReference]=\\\"_dataService.getFieldChoicesAttr('placeObj', 'hasSelfReference')\\\"\\n                                                                       ></js_autoComplete>\\n                    <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().placeObj\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                        \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_bookingServiceObj_placeToObj\\\">To</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input [(ngModel)]=\\\"_formService.getObject().placeToObj\\\"\\n           formControlName = placeToObj\\n           name=\\\"form[bookingServiceObj][placeToObj]\\\"\\n                      type=\\\"hidden\\\">\\n    <js_autoComplete [field]=\\\"'placeToObj'\\\"\\n                     [hasSelfReference]=\\\"_dataService.getFieldChoicesAttr('placeToObj', 'hasSelfReference')\\\"\\n                                                                       ></js_autoComplete>\\n                    <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().placeToObj\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                    </ng-template>\\n                                            \\n\\n    \\n\\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking-service/add/ts/templates/step3.component.html\n// module id = ../../../../../src/Bck/BookingBundle/Resources/public/regular-booking-service/add/ts/templates/step3.component.html\n// module chunks = main","import {Component, ElementRef, Inject, Optional, Injector, ReflectiveInjector, Renderer, ViewChild, ViewContainerRef} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {DynamicComponentLoaderService} from '../../../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\nimport {PostService} from '../../../../../../../../AppBundle/Resources/public/ts/post.service';\nimport {BookingServiceEditComponent as BaseBookingServiceEditComponent, BaseBookingServiceEditProvider} from '../../../../base-booking-service/edit/ts/src/booking-service-edit.component';\n\n\n@Component({\n    selector: '#js_bookingServiceEdit',\n    templateUrl: '../templates/booking-service-edit.component.html'\n})\nexport class BookingServiceEditComponent extends BaseBookingServiceEditComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: BaseBookingServiceEditProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any,\n        @Inject('ParentDataService') parentDataService: any,\n        @Inject('HelperService') helperService: any,\n        dynamicComponentLoaderService: DynamicComponentLoaderService,\n        postService: PostService,\n        injector: Injector\n    ) {\n        super(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService,\n            parentDataService,\n            helperService,\n            dynamicComponentLoaderService,\n            postService,\n            injector\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking-service/edit/ts/src/booking-service-edit.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {BookingServiceEditComponent} from './booking-service-edit.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        BookingServiceEditComponent\n    ],\n    exports: [BookingServiceEditComponent]\n})\nexport class BookingServiceEditExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking-service/edit/ts/src/booking-service-edit.ext-module.ts","module.exports = \"    \\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">        \\n    <section>\\n                                        \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().name\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_bookingServiceObj_name\\\">Name</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_bookingServiceObj_name\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().name\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().name\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_bookingServiceObj_description\\\">Description</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_bookingServiceObj_description\\\" name=\\\"form[bookingServiceObj][description]\\\" required=\\\"required\\\" maxlength=\\\"256\\\" [(ngModel)]=\\\"_formService.getObject().description\\\" formControlName=\\\"description\\\" [class.error]=\\\"_formService.getErrors().description &amp;&amp; _formService.getErrors().description.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().description\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_bookingServiceObj_supplierObj\\\">Supplier</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input [(ngModel)]=\\\"_formService.getObject().supplierObj\\\"\\n           formControlName = supplierObj\\n           name=\\\"form[bookingServiceObj][supplierObj]\\\"\\n                      type=\\\"hidden\\\">\\n    <js_autoComplete [field]=\\\"'supplierObj'\\\"\\n                     [hasSelfReference]=\\\"_dataService.getFieldChoicesAttr('supplierObj', 'hasSelfReference')\\\"\\n                                                                       ></js_autoComplete>\\n                    <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().supplierObj\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_bookingServiceObj_reference\\\">Reference</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_bookingServiceObj_reference\\\" name=\\\"form[bookingServiceObj][reference]\\\" maxlength=\\\"32\\\" [(ngModel)]=\\\"_formService.getObject().reference\\\" formControlName=\\\"reference\\\" [class.error]=\\\"_formService.getErrors().reference &amp;&amp; _formService.getErrors().reference.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().reference\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                                                    <ng-template [ngIf]=\\\"_formService.getObject()['type'] == 'TRAVEL'\\\">\\n                    \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_bookingServiceObj_placeObj\\\">From</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input [(ngModel)]=\\\"_formService.getObject().placeObj\\\"\\n           formControlName = placeObj\\n           name=\\\"form[bookingServiceObj][placeObj]\\\"\\n                      type=\\\"hidden\\\">\\n    <js_autoComplete [field]=\\\"'placeObj'\\\"\\n                     [hasSelfReference]=\\\"_dataService.getFieldChoicesAttr('placeObj', 'hasSelfReference')\\\"\\n                                                                       ></js_autoComplete>\\n                    <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().placeObj\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                        \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_bookingServiceObj_placeToObj\\\">To</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input [(ngModel)]=\\\"_formService.getObject().placeToObj\\\"\\n           formControlName = placeToObj\\n           name=\\\"form[bookingServiceObj][placeToObj]\\\"\\n                      type=\\\"hidden\\\">\\n    <js_autoComplete [field]=\\\"'placeToObj'\\\"\\n                     [hasSelfReference]=\\\"_dataService.getFieldChoicesAttr('placeToObj', 'hasSelfReference')\\\"\\n                                                                       ></js_autoComplete>\\n                    <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().placeToObj\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                    </ng-template>\\n                                                                    <div class=\\\"row form-group\\\">\\n                                <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_bookingServiceObj_startDate\\\">Start Date</label>\\n                        <div class=\\\"col-sm-10\\\"\\n                         *ngIf=\\\"_formService.getObject()['isAutoAvailability'] || _formService.getObject()['isAutoAllot']\\\">\\n                                                <p id=\\\"form_bookingServiceObj_startDate\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().startDate\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().startDate\\\">{{error}}</label>\\n                    </div>\\n                    <div class=\\\"col-sm-10\\\"\\n                         *ngIf=\\\"!_formService.getObject()['isAutoAvailability'] && !_formService.getObject()['isAutoAllot']\\\">\\n                                                \\n    <div class=\\\"input-group js_dataPicker\\\"\\n         [datePicker]=\\\"'startDateManual'\\\"\\n         #dpk_startDateManual=\\\"\\\" [control]=\\\"dpk_startDateManual\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"yyyy-mm-dd\\\"\\n               [(ngModel)]=\\\"_formService.getObject().startDateManual\\\"\\n               formControlName = startDateManual\\n               name=\\\"form[bookingServiceObj][startDateManual]\\\"\\n               required=\\\"required\\\"               [class.error]=\\\"_formService.getErrors()['startDateManual'] && (_formService.getErrors()['startDateManual'].length > 0)\\\"\\n               ngbDatepicker #dpk_startDateManual=\\\"ngbDatepicker\\\">\\n        <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn\\\" type=\\\"button\\\"><a class=\\\"fa fa-calendar\\\"></a></button>\\n        </div>\\n    </div>\\n    \\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().startDateManual\\\">{{error}}</label>\\n                    </div>\\n                </div>\\n                                                <div class=\\\"row form-group\\\">\\n                                <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_bookingServiceObj_endDate\\\">End Date</label>\\n                        <div class=\\\"col-sm-10\\\"\\n                         *ngIf=\\\"_formService.getObject()['isAutoAvailability'] || _formService.getObject()['isAutoAllot']\\\">\\n                                                <p id=\\\"form_bookingServiceObj_endDate\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().endDate\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().endDate\\\">{{error}}</label>\\n                    </div>\\n                    <div class=\\\"col-sm-10\\\"\\n                         *ngIf=\\\"!_formService.getObject()['isAutoAvailability'] && !_formService.getObject()['isAutoAllot']\\\">\\n                                                \\n    <div class=\\\"input-group js_dataPicker\\\"\\n         [datePicker]=\\\"'endDateManual'\\\"\\n         #dpk_endDateManual=\\\"\\\" [control]=\\\"dpk_endDateManual\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"yyyy-mm-dd\\\"\\n               [(ngModel)]=\\\"_formService.getObject().endDateManual\\\"\\n               formControlName = endDateManual\\n               name=\\\"form[bookingServiceObj][endDateManual]\\\"\\n               required=\\\"required\\\"               [class.error]=\\\"_formService.getErrors()['endDateManual'] && (_formService.getErrors()['endDateManual'].length > 0)\\\"\\n               ngbDatepicker #dpk_endDateManual=\\\"ngbDatepicker\\\">\\n        <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn\\\" type=\\\"button\\\"><a class=\\\"fa fa-calendar\\\"></a></button>\\n        </div>\\n    </div>\\n    \\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().endDateManual\\\">{{error}}</label>\\n                    </div>\\n                </div>\\n                                                <div class=\\\"row form-group\\\">\\n                                <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_bookingServiceObj_quantity\\\">Quantity</label>\\n                        <div class=\\\"col-sm-10\\\"\\n                         *ngIf=\\\"_formService.getObject()['isAutoAllot']\\\">\\n                                                <p id=\\\"form_bookingServiceObj_quantity\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().quantity\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().quantity\\\">{{error}}</label>\\n                    </div>\\n                    <div class=\\\"col-sm-10\\\"\\n                         *ngIf=\\\"!_formService.getObject()['isAutoAllot']\\\">\\n                                                    <input type=\\\"text\\\" id=\\\"form_bookingServiceObj_quantityManual\\\" name=\\\"form[bookingServiceObj][quantityManual]\\\" [(ngModel)]=\\\"_formService.getObject().quantityManual\\\" formControlName=\\\"quantityManual\\\" [class.error]=\\\"_formService.getErrors().quantityManual &amp;&amp; _formService.getErrors().quantityManual.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().quantityManual\\\">{{error}}</label>\\n                    </div>\\n                </div>\\n                                                <div class=\\\"row form-group\\\">\\n                                <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_bookingServiceObj_confirmationStatus\\\">Confirmation</label>\\n                        <div class=\\\"col-sm-10\\\"\\n                         *ngIf=\\\"_formService.getObject()['isAutoAllot']\\\">\\n                                                <p id=\\\"form_bookingServiceObj_confirmationStatus\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().confirmationStatus\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().confirmationStatus\\\">{{error}}</label>\\n                    </div>\\n                    <div class=\\\"col-sm-10\\\"\\n                         *ngIf=\\\"!_formService.getObject()['isAutoAllot']\\\">\\n                                                                                <div class=\\\"html-select\\\"\\n         [htmlSelect]=\\\"'confirmationStatusManual'\\\"\\n                               >\\n        <div class=\\\"input-group-control\\\"\\n             [class.error]=\\\"_formService.getErrors()['confirmationStatusManual'] && (_formService.getErrors()['confirmationStatusManual'].length > 0)\\\">\\n            <span class=\\\"js_label form-control\\\"></span>\\n            <a class=\\\"pull-right\\\"><i class=\\\"fa fa-angle-down\\\"></i></a>\\n        </div>\\n        <div class=\\\"choices js_choices\\\">\\n            <ul class=\\\"form-control-box\\\">                    <li data-value=\\\"NO\\\"><span class=\\\"status -danger\\\"></span></li>\\n                    <li data-value=\\\"PARTIAL\\\"><span class=\\\"status -warning\\\"></span></li>\\n                    <li data-value=\\\"YES\\\"><span class=\\\"status -primary\\\"></span></li>\\n            </ul>\\n        </div>\\n    </div>\\n    <input [(ngModel)]=\\\"_formService.getObject().confirmationStatusManual\\\"\\n           formControlName = confirmationStatusManual\\n           name=\\\"form[bookingServiceObj][confirmationStatusManual]\\\"\\n           required=\\\"required\\\"           type=\\\"hidden\\\">\\n                                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().confirmationStatusManual\\\">{{error}}</label>\\n                    </div>\\n                </div>\\n                                                                                                            </section>\\n\\n    <section><ng-template #js_lazyLoadContainer></ng-template></section>\\n</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n        \\n                    <div class=\\\"row\\\">\\n            <div class=\\\"col-auto ml-auto\\\">\\n                                            <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"cancelAction($event)\\\"\\n                                        id=\\\"form_cancel\\\"\\n            name=\\\"form[cancel]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Cancel</button>\\n                                                <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"resetAction($event)\\\"\\n                                        id=\\\"form_reset\\\"\\n            name=\\\"form[reset]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-ban\\\"></i>&nbsp;Reset</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAction($event)\\\"\\n                                        id=\\\"form_save\\\"\\n            name=\\\"form[save]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-check\\\"></i>&nbsp;Save</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAndCloseAction($event)\\\"\\n                                        id=\\\"form_saveAndClose\\\"\\n            name=\\\"form[saveAndClose]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Save and Close</button>\\n                                </div>\\n        </div>\\n    </div>    \\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking-service/edit/ts/templates/booking-service-edit.component.html\n// module id = ../../../../../src/Bck/BookingBundle/Resources/public/regular-booking-service/edit/ts/templates/booking-service-edit.component.html\n// module chunks = main","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/Bck/BookingBundle/Resources/public/regular-booking/detail/ts/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking/detail/ts/$$_lazy_route_resource lazy\n// module id = ../../../../../src/Bck/BookingBundle/Resources/public/regular-booking/detail/ts/$$_lazy_route_resource lazy recursive\n// module chunks = main","import {Component, ElementRef, Inject, Optional, Injector, Renderer} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormPopupExtensionComponent, FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\n\n\n@Component({\n    selector: '#js_bookingPaxFormPopup',\n    templateUrl: '../templates/booking-pax-edit.component.html'\n})\nexport class BookingPaxEditComponent extends FormPopupExtensionComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any\n    ) {\n        super();\n        super.initFormPopupExtensionComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking/detail/ts/src/booking-pax-edit.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {BookingPaxEditComponent} from './booking-pax-edit.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        BookingPaxEditComponent\n    ],\n    exports: [BookingPaxEditComponent]\n})\nexport class BookingPaxEditExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking/detail/ts/src/booking-pax-edit.ext-module.ts","import {Component, Optional, ElementRef, Inject, Injector, Renderer, QueryList, ViewContainerRef, ViewChildren} from '@angular/core';\nimport {NavManagerService} from '../../../../../../../../AppBundle/Resources/public/ts/nav-manager/nav-manager.service';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {CurrentAccountsComponent as BaseBookingDetailCurrentAccountsComponent} from '../../../../base-booking/detail/ts/src/current-accounts.component';\n\n\n@Component({\n    selector: '.js_currentAccounts',\n    templateUrl: '../templates/current-accounts.component.html'\n})\nexport class CurrentAccountsComponent extends BaseBookingDetailCurrentAccountsComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Optional() @Inject('Provider') provider: any,\n        @Inject('HelperService') helperService: any,\n        navManagerService: NavManagerService,\n        @Inject('DataService') dataService: any,\n        injector: Injector\n    ) {\n        super(\n            elementRef,\n            renderer,\n            provider || null,\n            helperService,\n            navManagerService,\n            dataService,\n            injector\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking/detail/ts/src/current-accounts.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {SearchModule} from '../../../../../../../../AppBundle/Resources/public/ts/search/search.module';\nimport {CurrentAccountsComponent} from './current-accounts.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, SearchModule],\n    declarations: [\n        CurrentAccountsComponent\n    ],\n    exports: [CurrentAccountsComponent]\n})\nexport class CurrentAccountsExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking/detail/ts/src/current-accounts.ext-module.ts","import {Component, ElementRef, Injector, Inject, Renderer, QueryList, ViewContainerRef, ViewChildren} from '@angular/core';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {ModalService} from '../../../../../../../../AppBundle/Resources/public/modal/ts/modal.service';\nimport {NavManagerService} from '../../../../../../../../AppBundle/Resources/public/ts/nav-manager/nav-manager.service';\nimport {MainComponent as BaseBookingDetailComponent, BaseBookingDetailProvider} from '../../../../base-booking/detail/ts/src/main.component';\n\n\n@Component({\n    selector: '.js_app',\n    templateUrl: '../templates/main.component.html'\n})\nexport class MainComponent extends BaseBookingDetailComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: BaseBookingDetailProvider,\n        @Inject('HelperService') helperService: any,\n        navManagerService: NavManagerService,\n        modalService: ModalService,\n        viewContainerRef: ViewContainerRef,\n        @Inject('DataService') dataService: any,\n        injector: Injector\n    ) {\n        super(\n            elementRef,\n            renderer,\n            provider,\n            helperService,\n            navManagerService,\n            modalService,\n            viewContainerRef,\n            dataService,\n            injector\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking/detail/ts/src/main.component.ts","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n// This module doesn't use \"ReactiveFormsModule\", but it needs to import this class\n// to provide \"formBuilder\" when inject dependencies in child modules (like form)\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {Helper} from '../../../../../../../../AppBundle/Resources/public/ts/helper';\nimport {TasksLoaderManagerService} from '../../../../../../../../AppBundle/Resources/public/tasks-loader-manager/ts/tasks-loader-manager.service';\nimport {PostService} from '../../../../../../../../AppBundle/Resources/public/ts/post.service';\nimport {ModalService} from '../../../../../../../../AppBundle/Resources/public/modal/ts/modal.service';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {ActionsService} from '../../../../../../../../AppBundle/Resources/public/ts/actions/actions.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {FlashMessageService} from '../../../../../../../../AppBundle/Resources/public/ts/flash-message.service';\nimport {DynamicComponentLoaderService} from '../../../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\nimport {NavManagerService} from '../../../../../../../../AppBundle/Resources/public/ts/nav-manager/nav-manager.service';\nimport {MainExtModule as AppBasicsExtModule} from '../../../../../../../../AppBundle/Resources/public/app-basics/default/ts/src/main.ext-module';\nimport {MainComponent as AppBasicsComponent} from '../../../../../../../../AppBundle/Resources/public/app-basics/default/ts/src/main.component';\nimport {MainComponent} from './main.component';\nimport {AutoCompleteProviders} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-type-auto-complete.component';\n\n\n// Dynamic entity detail\nimport {EntityDetailExtModule} from '../../../../../../../../AppBundle/Resources/public/entity-detail/ts/src/entity-detail.ext-module';\nimport {EditExtModule} from '../../../index/ts/src/edit.ext-module';\n\n\n// Auto-complete\nimport {EditExtModule as EntitiesClientEditExtModule} from '../../../../../../../EntitiesBundle/Resources/public/client/index/ts/src/edit.ext-module';\nimport {EditExtModule as EntitiesSupplierEditExtModule} from '../../../../../../../EntitiesBundle/Resources/public/supplier/index/ts/src/edit.ext-module';\nimport {EditExtModule as CommonPlaceEditExtModule} from '../../../../../../../CommonBundle/Resources/public/place/index/ts/src/edit.ext-module';\nimport {EditExtModule as CommonCountryEditExtModule} from '../../../../../../../SysadminBundle/Resources/public/country/index/ts/src/edit.ext-module';\nlet autoCompleteProviders = {\n    clientObj: {\n        urlConf: (Helper.getAppVar('route') + 'bck/entities/client/conf'),\n        control: 'edit',\n        popups: {\n            module: EntitiesClientEditExtModule,\n            component: 'EditComponent',\n            providers: [\n                {provide: 'Provider', useValue: Helper.getFormProvider({label: 'Client'})},\n                FormService,\n                // Reset FormServiceProvider to use DataServiceProvider as default values\n                {provide: 'FormServiceProvider', useValue: {}}\n            ]\n        }\n    },\n    supplierObj: {\n        urlConf: (Helper.getAppVar('route') + 'bck/entities/supplier/conf'),\n        control: 'edit',\n        popups: {\n            module: EntitiesSupplierEditExtModule,\n            component: 'EditComponent',\n            providers: [\n                {provide: 'Provider', useValue: Helper.getFormProvider({label: 'Supplier'})},\n                FormService,\n                // Reset FormServiceProvider to use DataServiceProvider as default values\n                {provide: 'FormServiceProvider', useValue: {}}\n            ]\n        }\n    },\n    selectEntityObj: {\n        urlConf: (Helper.getAppVar('route') + 'bck/entities/entity/conf'),\n        control: 'none'\n    },\n    placeObj: {\n        urlConf: (Helper.getAppVar('route') + 'bck/booking/place/conf'),\n        control: 'edit',\n        popups: {\n            module: CommonPlaceEditExtModule,\n            component: 'EditComponent',\n            providers: [\n                {provide: 'Provider', useValue: Helper.getFormProvider({label: 'Place'})},\n                FormService\n            ]\n        }\n    },\n    placeToObj: {\n        urlConf: (Helper.getAppVar('route') + 'bck/booking/place/conf'),\n        control: 'edit',\n        popups: {\n            module: CommonPlaceEditExtModule,\n            component: 'EditComponent',\n            providers: [\n                {provide: 'Provider', useValue: Helper.getFormProvider({label: 'Place'})},\n                FormService\n            ]\n        }\n    },\n    countryObj: {\n        urlConf: (Helper.getAppVar('route') + 'bck/booking/country/conf'),\n        control: 'edit',\n        popups: {\n            module: CommonCountryEditExtModule,\n            component: 'EditComponent',\n            providers: [\n                {provide: 'Provider', useValue: Helper.getFormProvider({label: 'Country'})},\n                FormService\n            ]\n        }\n    }\n};\n\n\n// Base Booking Service Add Provider\nimport {EditExtModule as BookingServicePriceEditExtModule} from '../../../../booking-service-price/index/ts/src/edit.ext-module';\nimport {Step2ExtModule as RegularBookingServiceAddStep2ExtModule} from '../../../../regular-booking-service/add/ts/src/step2.ext-module';\nimport {Step3ExtModule as RegularBookingServiceAddStep3ExtModule} from '../../../../regular-booking-service/add/ts/src/step3.ext-module';\nlet baseBookingServiceAddProvider = {\n    servicesUrlProvider: (Helper.getAppVar('route') + 'bck/services/regular-service/data-for-booking-service'),\n    modules: { // Put here modules dependencies\n        step2: {module: RegularBookingServiceAddStep2ExtModule, component: 'Step2Component'},\n        step3: {module: RegularBookingServiceAddStep3ExtModule, component: 'Step3Component'},\n        bookingServicePriceEdit: {module: BookingServicePriceEditExtModule, component: 'EditComponent'}\n    }\n};\n\n\n// Base Booking Service Edit Provider\nlet baseBookingServiceEditProvider = {modules: {\n    bookingServicePriceEdit: {module: BookingServicePriceEditExtModule, component: 'EditComponent'}\n}};\n\n\n// Base Booking Detail Provider (provider can be merged now, because it's a main provider)\nlet baseBookingDetailProvider = Helper.getBaseProvider(_app.conf);\nimport {BookingPaxEditExtModule as RegularBookingDetailBookingPaxEditExtModule} from '../../../../regular-booking/detail/ts/src/booking-pax-edit.ext-module';\nimport {Step1ExtModule as RegularBookingServiceAddStep1} from '../../../../regular-booking-service/add/ts/src/step1.ext-module';\nimport {BookingServiceEditExtModule as RegularBookingServiceEditExtModule} from '../../../../regular-booking-service/edit/ts/src/booking-service-edit.ext-module';\nimport {CurrentAccountsExtModule as RegularBookingDetailCurrentAccountsExtModule} from '../../../../regular-booking/detail/ts/src/current-accounts.ext-module';\nbaseBookingDetailProvider['modules'] = {\n    bookingPaxEdit: {module: RegularBookingDetailBookingPaxEditExtModule, component: 'BookingPaxEditComponent'},\n    bookingServiceAddStep1: {module: RegularBookingServiceAddStep1, component: 'Step1Component'},\n    bookingServiceEdit: {module: RegularBookingServiceEditExtModule, component: 'BookingServiceEditComponent'},\n    currentAccounts: {module: RegularBookingDetailCurrentAccountsExtModule, component: 'CurrentAccountsComponent'}\n};\n\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        FormsModule,\n        ReactiveFormsModule,\n        NgbModule.forRoot(),\n        AppBasicsExtModule,\n        EntityDetailExtModule\n    ],\n    declarations: [\n        MainComponent\n    ],\n    providers: [\n        PostService,\n        ModalService,\n        {provide: 'DataService', useClass: DataService},\n        ActionsService,\n        FlashMessageService,\n        DynamicComponentLoaderService,\n        NavManagerService,\n        {provide: 'HelperService', useValue: Helper},\n        TasksLoaderManagerService,\n        {provide: 'EntityDetailProvider', useValue: Helper.getEntityDetailProvider(_app.conf)},\n        {provide: 'Provider', useValue: baseBookingDetailProvider},\n        {provide: 'BaseBookingServiceAddProvider', useValue: baseBookingServiceAddProvider},\n        {provide: 'BaseBookingServiceEditProvider', useValue: baseBookingServiceEditProvider},\n        {provide: 'DataServiceProvider', useValue: Helper.getDataServiceProvider(_app.conf)},\n        {provide: 'ActionsServiceProvider', useValue: Helper.getActionsServiceProvider(_app.conf)},\n        // Used by \"booking\" edit, \"bookingService\" edit and \"currentAccounts\" edit\n        {provide: 'AutoCompleteProviders', useValue: autoCompleteProviders},\n        {provide: 'Popup', useValue: {\n            module: EditExtModule,\n            component: 'EditComponent',\n            providers: [\n                {provide: 'Provider', useValue: Helper.getFormProvider(_app.conf)},\n                FormService\n            ]\n        }}\n    ],\n    bootstrap: [AppBasicsComponent, MainComponent]\n})\nexport class MainModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking/detail/ts/src/main.module.ts","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic'; // The browser platform with a compiler\nimport {environment} from '../../../../../../../../../angular_cli_conf/environments/environment'; // Get environment\nimport {MainModule} from './main.module';\n\n// Enable production environment\nif (environment.production) {\n    enableProdMode();\n}\n\n// Compile and launch the module\nplatformBrowserDynamic().bootstrapModule(MainModule)\n    .catch(err => console.log(err));\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking/detail/ts/src/main.ts","module.exports = \"    \\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">    \\n            \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_bookingPaxObj_title\\\">Title</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                                                    \\n        <select id=\\\"form_bookingPaxObj_title\\\" name=\\\"form[bookingPaxObj][title]\\\" [(ngModel)]=\\\"_formService.getObject().title\\\" formControlName=\\\"title\\\" [class.error]=\\\"_formService.getErrors().title &amp;&amp; _formService.getErrors().title.length &gt; 0\\\" class=\\\"form-control\\\"><option value=\\\"Mr.\\\">Mr.</option><option value=\\\"Ms.\\\">Ms.</option></select>\\n    <input [(ngModel)]=\\\"_formService.getObject().title\\\"\\n           formControlName = title\\n           required=\\\"required\\\"           type=\\\"hidden\\\">\\n\\n                            <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().title\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_bookingPaxObj_name\\\">Name</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_bookingPaxObj_name\\\" name=\\\"form[bookingPaxObj][name]\\\" required=\\\"required\\\" maxlength=\\\"64\\\" [(ngModel)]=\\\"_formService.getObject().name\\\" formControlName=\\\"name\\\" [class.error]=\\\"_formService.getErrors().name &amp;&amp; _formService.getErrors().name.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().name\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_bookingPaxObj_surname\\\">Surname</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_bookingPaxObj_surname\\\" name=\\\"form[bookingPaxObj][surname]\\\" required=\\\"required\\\" maxlength=\\\"64\\\" [(ngModel)]=\\\"_formService.getObject().surname\\\" formControlName=\\\"surname\\\" [class.error]=\\\"_formService.getErrors().surname &amp;&amp; _formService.getErrors().surname.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().surname\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_bookingPaxObj_birthDate\\\">Birth Date</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        \\n    <div class=\\\"input-group js_dataPicker\\\"\\n         [datePicker]=\\\"'birthDate'\\\"\\n         #dpk_birthDate=\\\"\\\" [control]=\\\"dpk_birthDate\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"yyyy-mm-dd\\\"\\n               [(ngModel)]=\\\"_formService.getObject().birthDate\\\"\\n               formControlName = birthDate\\n               name=\\\"form[bookingPaxObj][birthDate]\\\"\\n                              [class.error]=\\\"_formService.getErrors()['birthDate'] && (_formService.getErrors()['birthDate'].length > 0)\\\"\\n               ngbDatepicker #dpk_birthDate=\\\"ngbDatepicker\\\">\\n        <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn\\\" type=\\\"button\\\"><a class=\\\"fa fa-calendar\\\"></a></button>\\n        </div>\\n    </div>\\n    \\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().birthDate\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_bookingPaxObj_identification\\\">Identification / Passport</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_bookingPaxObj_identification\\\" name=\\\"form[bookingPaxObj][identification]\\\" required=\\\"required\\\" maxlength=\\\"16\\\" [(ngModel)]=\\\"_formService.getObject().identification\\\" formControlName=\\\"identification\\\" [class.error]=\\\"_formService.getErrors().identification &amp;&amp; _formService.getErrors().identification.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().identification\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" [innerHTML]=\\\"getLang('Enabled')\\\"></label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <div class=\\\"checkbox\\\">                                        <label for=\\\"form_isEnabled\\\"><input type=\\\"checkbox\\\" id=\\\"form_isEnabled\\\" name=\\\"form[isEnabled]\\\" [(ngModel)]=\\\"_formService.getObject().isEnabled\\\" formControlName=\\\"isEnabled\\\" [class.error]=\\\"_formService.getErrors().isEnabled &amp;&amp; _formService.getErrors().isEnabled.length &gt; 0\\\" value=\\\"1\\\" checked=\\\"checked\\\" /> Is enabled</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isEnabled\\\">{{error}}</label>\\n            </div>\\n        </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n        \\n                    <div class=\\\"row\\\">\\n            <div class=\\\"col-auto ml-auto\\\">\\n                                            <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"cancelAction($event)\\\"\\n                                        id=\\\"form_cancel\\\"\\n            name=\\\"form[cancel]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Cancel</button>\\n                                                <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"resetAction($event)\\\"\\n                                        id=\\\"form_reset\\\"\\n            name=\\\"form[reset]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-ban\\\"></i>&nbsp;Reset</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAction($event)\\\"\\n                                        id=\\\"form_save\\\"\\n            name=\\\"form[save]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-check\\\"></i>&nbsp;Save</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAndCloseAction($event)\\\"\\n                                        id=\\\"form_saveAndClose\\\"\\n            name=\\\"form[saveAndClose]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Save and Close</button>\\n                                </div>\\n        </div>\\n    </div>    \\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking/detail/ts/templates/booking-pax-edit.component.html\n// module id = ../../../../../src/Bck/BookingBundle/Resources/public/regular-booking/detail/ts/templates/booking-pax-edit.component.html\n// module chunks = main","module.exports = \"<div class=\\\"accordion\\\" id=\\\"accordion-current-accounts\\\">\\n                                        <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\"><div class=\\\"row align-items-center\\\">\\n            <h5 class=\\\"col mr-auto\\\"\\n                (click)=\\\"_navManagerService.navToAction(0)\\\"\\n                [innerHTML]=\\\"getLang('Client Current Account')\\\"></h5>\\n                        <div *ngIf=\\\"_navManagerService.getComponentRef(0) && _navManagerService.getComponentRef(0).instance._actionsService\\\"\\n                 class=\\\"col-auto text-right actions no-user-select\\\">\\n                <ng-template [ngIf]=\\\"_navManagerService.getComponentRef(0).instance._actionsService.getActionAttr('search', 'isEnabled')\\\">\\n                    <js_search [injector]=\\\"_navManagerService.getComponentRef(0).instance._injector || null\\\" class=\\\"search\\\"></js_search>\\n                </ng-template>\\n                <div (click)=\\\"_navManagerService.getComponentRef(0).instance.triggerAction($event)\\\">\\n                    <ng-template ngFor let-action [ngForOf]=\\\"_navManagerService.getComponentRef(0).instance._actionsService.getHeadActions()\\\">\\n                        <a *ngIf=\\\"_navManagerService.getComponentRef(0).instance._actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                           [ngClass]=\\\"[_navManagerService.getComponentRef(0).instance._actionsService.getActionAttr(action, 'icon')]\\\"\\n                           class=\\\"-round fa\\\"\\n                           [attr.data-action]=\\\"action\\\"></a>\\n                    </ng-template>\\n                </div>\\n            </div>\\n                    </div></div>\\n        <div class=\\\"collapse\\\"\\n         [class.show]=\\\"0 === _navManagerService.getIndex()\\\">\\n        <div class=\\\"card-body js_lazyLoadContainer_0\\\">\\n            <ng-template #js_lazyLoadContainer></ng-template>\\n        </div>\\n    </div>\\n    </div>                            <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\"><div class=\\\"row align-items-center\\\">\\n            <h5 class=\\\"col mr-auto\\\"\\n                (click)=\\\"_navManagerService.navToAction(1)\\\"\\n                [innerHTML]=\\\"getLang('Supplier Current Account')\\\"></h5>\\n                        <div *ngIf=\\\"_navManagerService.getComponentRef(1) && _navManagerService.getComponentRef(1).instance._actionsService\\\"\\n                 class=\\\"col-auto text-right actions no-user-select\\\">\\n                <ng-template [ngIf]=\\\"_navManagerService.getComponentRef(1).instance._actionsService.getActionAttr('search', 'isEnabled')\\\">\\n                    <js_search [injector]=\\\"_navManagerService.getComponentRef(1).instance._injector || null\\\" class=\\\"search\\\"></js_search>\\n                </ng-template>\\n                <div (click)=\\\"_navManagerService.getComponentRef(1).instance.triggerAction($event)\\\">\\n                    <ng-template ngFor let-action [ngForOf]=\\\"_navManagerService.getComponentRef(1).instance._actionsService.getHeadActions()\\\">\\n                        <a *ngIf=\\\"_navManagerService.getComponentRef(1).instance._actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                           [ngClass]=\\\"[_navManagerService.getComponentRef(1).instance._actionsService.getActionAttr(action, 'icon')]\\\"\\n                           class=\\\"-round fa\\\"\\n                           [attr.data-action]=\\\"action\\\"></a>\\n                    </ng-template>\\n                </div>\\n            </div>\\n                    </div></div>\\n        <div class=\\\"collapse\\\"\\n         [class.show]=\\\"1 === _navManagerService.getIndex()\\\">\\n        <div class=\\\"card-body js_lazyLoadContainer_1\\\">\\n            <ng-template #js_lazyLoadContainer></ng-template>\\n        </div>\\n    </div>\\n    </div>                        </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking/detail/ts/templates/current-accounts.component.html\n// module id = ../../../../../src/Bck/BookingBundle/Resources/public/regular-booking/detail/ts/templates/current-accounts.component.html\n// module chunks = main","module.exports = \"<div class=\\\"row border-bottom white-bg\\\"><div class=\\\"col-lg-12\\\">\\n    <div class=\\\"js_entityDetail\\\"></div>\\n</div></div>\\n\\n<div class=\\\"row wrapper-content main-body-container\\\"><div class=\\\"col-lg-12\\\">\\n        <nav>\\n        <div class=\\\"nav nav-tabs\\\" role=\\\"tablist\\\">\\n                            <a class=\\\"nav-item nav-link\\\"\\n                   role=\\\"tab\\\"\\n                   (click)=\\\"_navManagerService.navToAction(0)\\\"\\n                   [class.active]=\\\"0 == _navManagerService.getIndex()\\\"\\n                   [attr.data-index]=\\\"0\\\"\\n                   [innerHTML]=\\\"getLang('Pax')\\\"\\n                   ></a>\\n                            <a class=\\\"nav-item nav-link\\\"\\n                   role=\\\"tab\\\"\\n                   (click)=\\\"_navManagerService.navToAction(1)\\\"\\n                   [class.active]=\\\"1 == _navManagerService.getIndex()\\\"\\n                   [attr.data-index]=\\\"1\\\"\\n                   [innerHTML]=\\\"getLang('Services')\\\"\\n                   ></a>\\n                            <a class=\\\"nav-item nav-link\\\"\\n                   role=\\\"tab\\\"\\n                   (click)=\\\"_navManagerService.navToAction(2)\\\"\\n                   [class.active]=\\\"2 == _navManagerService.getIndex()\\\"\\n                   [attr.data-index]=\\\"2\\\"\\n                   [innerHTML]=\\\"getLang('Current Accounts')\\\"\\n                   ></a>\\n                            <a class=\\\"nav-item nav-link\\\"\\n                   role=\\\"tab\\\"\\n                   (click)=\\\"_navManagerService.navToAction(3)\\\"\\n                   [class.active]=\\\"3 == _navManagerService.getIndex()\\\"\\n                   [attr.data-index]=\\\"3\\\"\\n                   [innerHTML]=\\\"getLang('Observations')\\\"\\n                   ></a>\\n                            <a class=\\\"nav-item nav-link\\\"\\n                   role=\\\"tab\\\"\\n                   (click)=\\\"_navManagerService.navToAction(4)\\\"\\n                   [class.active]=\\\"4 == _navManagerService.getIndex()\\\"\\n                   [attr.data-index]=\\\"4\\\"\\n                   [innerHTML]=\\\"getLang('Files')\\\"\\n                   ></a>\\n                    </div>\\n    </nav>\\n    <div class=\\\"tab-content\\\">\\n                    <div class=\\\"tab-pane p-3 fade js_lazyLoadContainer_0\\\"\\n                                  role=\\\"tabpanel\\\"\\n                 [class.show]=\\\"0 == _navManagerService.getIndex()\\\"\\n                 [class.active]=\\\"0 == _navManagerService.getIndex()\\\">\\n                <ng-template #js_lazyLoadContainer></ng-template>\\n            </div>\\n                    <div class=\\\"tab-pane p-3 fade js_lazyLoadContainer_1\\\"\\n                                  role=\\\"tabpanel\\\"\\n                 [class.show]=\\\"1 == _navManagerService.getIndex()\\\"\\n                 [class.active]=\\\"1 == _navManagerService.getIndex()\\\">\\n                <ng-template #js_lazyLoadContainer></ng-template>\\n            </div>\\n                    <div class=\\\"tab-pane p-3 fade js_lazyLoadContainer_2\\\"\\n                                  role=\\\"tabpanel\\\"\\n                 [class.show]=\\\"2 == _navManagerService.getIndex()\\\"\\n                 [class.active]=\\\"2 == _navManagerService.getIndex()\\\">\\n                <ng-template #js_lazyLoadContainer></ng-template>\\n            </div>\\n                    <div class=\\\"tab-pane p-3 fade js_lazyLoadContainer_3\\\"\\n                                  role=\\\"tabpanel\\\"\\n                 [class.show]=\\\"3 == _navManagerService.getIndex()\\\"\\n                 [class.active]=\\\"3 == _navManagerService.getIndex()\\\">\\n                <ng-template #js_lazyLoadContainer></ng-template>\\n            </div>\\n                    <div class=\\\"tab-pane p-3 fade js_lazyLoadContainer_4\\\"\\n                                  role=\\\"tabpanel\\\"\\n                 [class.show]=\\\"4 == _navManagerService.getIndex()\\\"\\n                 [class.active]=\\\"4 == _navManagerService.getIndex()\\\">\\n                <ng-template #js_lazyLoadContainer></ng-template>\\n            </div>\\n            </div>\\n</div></div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking/detail/ts/templates/main.component.html\n// module id = ../../../../../src/Bck/BookingBundle/Resources/public/regular-booking/detail/ts/templates/main.component.html\n// module chunks = main","import {Component, ElementRef, Inject, Optional, Injector, Renderer} from '@angular/core';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {FormPopupExtensionComponent, FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\n\n\n@Component({\n    selector: '#js_edit',\n    templateUrl: '../templates/edit.component.html'\n})\nexport class EditComponent extends FormPopupExtensionComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any\n    ) {\n        super();\n        super.initFormPopupExtensionComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking/index/ts/src/edit.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {EditComponent} from './edit.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, FieldTypesExtensionModule],\n    declarations: [\n        EditComponent\n    ],\n    exports: [EditComponent]\n})\nexport class EditExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking/index/ts/src/edit.ext-module.ts","module.exports = \"    \\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">        \\n            \\n            \\n                            \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().code\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_bookingObj_code\\\">Code</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_bookingObj_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().code\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                        \\n            \\n                            \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_bookingObj_userObj\\\">User/Operator</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                                                            <select [(ngModel)]=\\\"_formService.getObject().userObj\\\"\\n            formControlName = userObj\\n            class=\\\"form-control\\\"\\n            [class.error]=\\\"_formService.getErrors().userObj && (_formService.getErrors().userObj.length > 0)\\\"\\n            id=\\\"form_bookingObj_userObj\\\"\\n            name=\\\"form[bookingObj][userObj]\\\"\\n            >\\n        <option value=\\\"\\\"></option>\\n                    <option *ngFor=\\\"let choice of _dataService.getFieldChoices('userObj')\\\"\\n                    value=\\\"{{choice['id']}}\\\">{{choice['label']}}</option>\\n            </select>\\n                                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().userObj\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                        \\n            \\n            \\n                \\n                <div class=\\\"row form-group\\\">\\n                                <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_bookingObj_clientObj\\\">Client</label>\\n                        <div class=\\\"col-sm-10\\\"><div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-8\\\">\\n                                                        <input [(ngModel)]=\\\"_formService.getObject().clientObj\\\"\\n           formControlName = clientObj\\n           name=\\\"form[bookingObj][clientObj]\\\"\\n           required=\\\"required\\\"           type=\\\"hidden\\\">\\n    <js_autoComplete [field]=\\\"'clientObj'\\\"\\n                     [hasSelfReference]=\\\"_dataService.getFieldChoicesAttr('clientObj', 'hasSelfReference')\\\"\\n                                                                       ></js_autoComplete>\\n                    <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().clientObj\\\">{{error}}</label>\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\">\\n                                                        <div class=\\\"checkbox\\\">                                        <label for=\\\"form_bookingObj_clientIsPax\\\"><input type=\\\"checkbox\\\" id=\\\"form_bookingObj_clientIsPax\\\" name=\\\"form[bookingObj][clientIsPax]\\\" [(ngModel)]=\\\"_formService.getObject().clientIsPax\\\" formControlName=\\\"clientIsPax\\\" [class.error]=\\\"_formService.getErrors().clientIsPax &amp;&amp; _formService.getErrors().clientIsPax.length &gt; 0\\\" value=\\\"1\\\" /> Client is pax</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().clientIsPax\\\">{{error}}</label>\\n                        </div>\\n                    </div></div>\\n                </div>\\n                    \\n            \\n                            \\n\\n                                            <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().bookingPaxObj\\\">{{error}}</label>\\n                        \\n            \\n                    \\n            \\n                            \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().startDate\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_bookingObj_startDate\\\">Start Date</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_bookingObj_startDate\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().startDate\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().startDate\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                        \\n            \\n                            \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().endDate\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_bookingObj_endDate\\\">End Date</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_bookingObj_endDate\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().endDate\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().endDate\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                        \\n            \\n                            \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().totalCost\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_bookingObj_totalCost\\\">Total Cost</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_bookingObj_totalCost\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().totalCost\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().totalCost\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                        \\n            \\n                            \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().totalSell\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_bookingObj_totalSell\\\">Total Sell</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_bookingObj_totalSell\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().totalSell\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().totalSell\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                        \\n            \\n                            \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().totalMargin\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_bookingObj_totalMargin\\\">Margin (net)</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_bookingObj_totalMargin\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().totalMargin\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().totalMargin\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                        \\n            \\n                            \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().totalMarkup\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_bookingObj_totalMarkup\\\">Markup (net)</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_bookingObj_totalMarkup\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().totalMarkup\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().totalMarkup\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                        \\n            \\n                            \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().totalProfit\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_bookingObj_totalProfit\\\">Profit (net)</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_bookingObj_totalProfit\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().totalProfit\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().totalProfit\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                        \\n            \\n                            \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().invoiceStatus\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_bookingObj_invoiceStatus\\\">Invoiced</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_bookingObj_invoiceStatus\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().invoiceStatus\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().invoiceStatus\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                        \\n            \\n                            \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().confirmationStatus\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_bookingObj_confirmationStatus\\\">Confirmed</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_bookingObj_confirmationStatus\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().confirmationStatus\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().confirmationStatus\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                        \\n            \\n                            \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" [innerHTML]=\\\"getLang('Enabled')\\\"></label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <div class=\\\"checkbox\\\">                                        <label for=\\\"form_isEnabled\\\"><input type=\\\"checkbox\\\" id=\\\"form_isEnabled\\\" name=\\\"form[isEnabled]\\\" [(ngModel)]=\\\"_formService.getObject().isEnabled\\\" formControlName=\\\"isEnabled\\\" [class.error]=\\\"_formService.getErrors().isEnabled &amp;&amp; _formService.getErrors().isEnabled.length &gt; 0\\\" value=\\\"1\\\" checked=\\\"checked\\\" /> Is enabled</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isEnabled\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                            </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n        \\n                    <div class=\\\"row\\\">\\n            <div class=\\\"col-auto ml-auto\\\">\\n                                            <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"cancelAction($event)\\\"\\n                                        id=\\\"form_cancel\\\"\\n            name=\\\"form[cancel]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Cancel</button>\\n                                                <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"resetAction($event)\\\"\\n                                        id=\\\"form_reset\\\"\\n            name=\\\"form[reset]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-ban\\\"></i>&nbsp;Reset</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAction($event)\\\"\\n                                        id=\\\"form_save\\\"\\n            name=\\\"form[save]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-check\\\"></i>&nbsp;Save</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAndCloseAction($event)\\\"\\n                                        id=\\\"form_saveAndClose\\\"\\n            name=\\\"form[saveAndClose]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Save and Close</button>\\n                                </div>\\n        </div>\\n    </div>    \\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/BookingBundle/Resources/public/regular-booking/index/ts/templates/edit.component.html\n// module id = ../../../../../src/Bck/BookingBundle/Resources/public/regular-booking/index/ts/templates/edit.component.html\n// module chunks = main","import {Component, ElementRef, Inject, Optional, Injector, Renderer} from '@angular/core';\nimport {FormPopupExtensionComponent, FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\n\n\n@Component({\n    selector: '#js_placeFormPopup',\n    templateUrl: '../templates/edit.component.html'\n})\nexport class EditComponent extends FormPopupExtensionComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any\n    ) {\n        super();\n        super.initFormPopupExtensionComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/CommonBundle/Resources/public/place/index/ts/src/edit.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {EditComponent} from './edit.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        FieldTypesExtensionModule\n    ],\n    declarations: [\n        EditComponent\n    ],\n    exports: [EditComponent]\n})\nexport class EditExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/CommonBundle/Resources/public/place/index/ts/src/edit.ext-module.ts","module.exports = \"    \\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">    \\n            \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_appCountryObj\\\">Country</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                                                        <div class=\\\"html-select\\\"\\n         [htmlSelect]=\\\"'appCountryObj'\\\"\\n                               >\\n        <div class=\\\"input-group-control\\\"\\n             [class.error]=\\\"_formService.getErrors()['appCountryObj'] && (_formService.getErrors()['appCountryObj'].length > 0)\\\">\\n            <span class=\\\"js_label form-control\\\"></span>\\n            <a class=\\\"pull-right\\\"><i class=\\\"fa fa-angle-down\\\"></i></a>\\n        </div>\\n        <div class=\\\"choices js_choices\\\">\\n            <ul class=\\\"form-control-box\\\">        <ng-template ngFor let-choice [ngForOf]=\\\"_dataService.getFieldChoices('appCountryObj')\\\">\\n            <li [attr.data-value]=\\\"choice['id']\\\" [innerHtml]=\\\"choice['label']\\\"></li>\\n        </ng-template>\\n    </ul>\\n        </div>\\n    </div>\\n    <input [(ngModel)]=\\\"_formService.getObject().appCountryObj\\\"\\n           formControlName = appCountryObj\\n           name=\\\"form[appCountryObj]\\\"\\n           required=\\\"required\\\"           type=\\\"hidden\\\">\\n                                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().appCountryObj\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_appProvinceObj\\\">Province</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                                                        <div class=\\\"html-select\\\"\\n         [htmlSelect]=\\\"'appProvinceObj'\\\"\\n                               >\\n        <div class=\\\"input-group-control\\\"\\n             [class.error]=\\\"_formService.getErrors()['appProvinceObj'] && (_formService.getErrors()['appProvinceObj'].length > 0)\\\">\\n            <span class=\\\"js_label form-control\\\"></span>\\n            <a class=\\\"pull-right\\\"><i class=\\\"fa fa-angle-down\\\"></i></a>\\n        </div>\\n        <div class=\\\"choices js_choices\\\">\\n            <ul class=\\\"form-control-box\\\">        <ng-template ngFor let-choice [ngForOf]=\\\"_dataService.getFieldChoices('appProvinceObj')\\\">\\n            <li [attr.data-value]=\\\"choice['id']\\\" [innerHtml]=\\\"choice['label']\\\"></li>\\n        </ng-template>\\n    </ul>\\n        </div>\\n    </div>\\n    <input [(ngModel)]=\\\"_formService.getObject().appProvinceObj\\\"\\n           formControlName = appProvinceObj\\n           name=\\\"form[appProvinceObj]\\\"\\n           required=\\\"required\\\"           type=\\\"hidden\\\">\\n                                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().appProvinceObj\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_name_pt\\\">Name PT</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_name_pt\\\" name=\\\"form[name_pt]\\\" required=\\\"required\\\" maxlength=\\\"32\\\" [(ngModel)]=\\\"_formService.getObject().name_pt\\\" formControlName=\\\"name_pt\\\" [class.error]=\\\"_formService.getErrors().name_pt &amp;&amp; _formService.getErrors().name_pt.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().name_pt\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_name_es\\\">Name ES</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_name_es\\\" name=\\\"form[name_es]\\\" required=\\\"required\\\" maxlength=\\\"32\\\" [(ngModel)]=\\\"_formService.getObject().name_es\\\" formControlName=\\\"name_es\\\" [class.error]=\\\"_formService.getErrors().name_es &amp;&amp; _formService.getErrors().name_es.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().name_es\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_name_en\\\">Name EN</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_name_en\\\" name=\\\"form[name_en]\\\" required=\\\"required\\\" maxlength=\\\"32\\\" [(ngModel)]=\\\"_formService.getObject().name_en\\\" formControlName=\\\"name_en\\\" [class.error]=\\\"_formService.getErrors().name_en &amp;&amp; _formService.getErrors().name_en.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().name_en\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_iataCode\\\">IATA Code</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_iataCode\\\" name=\\\"form[iataCode]\\\" maxlength=\\\"3\\\" [(ngModel)]=\\\"_formService.getObject().iataCode\\\" formControlName=\\\"iataCode\\\" [class.error]=\\\"_formService.getErrors().iataCode &amp;&amp; _formService.getErrors().iataCode.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().iataCode\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" [innerHTML]=\\\"getLang('Enabled')\\\"></label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <div class=\\\"checkbox\\\">                                        <label for=\\\"form_isEnabled\\\"><input type=\\\"checkbox\\\" id=\\\"form_isEnabled\\\" name=\\\"form[isEnabled]\\\" [(ngModel)]=\\\"_formService.getObject().isEnabled\\\" formControlName=\\\"isEnabled\\\" [class.error]=\\\"_formService.getErrors().isEnabled &amp;&amp; _formService.getErrors().isEnabled.length &gt; 0\\\" value=\\\"1\\\" checked=\\\"checked\\\" /> Is enabled</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isEnabled\\\">{{error}}</label>\\n            </div>\\n        </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n        \\n                    <div class=\\\"row\\\">\\n            <div class=\\\"col-auto ml-auto\\\">\\n                                            <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"cancelAction($event)\\\"\\n                                        id=\\\"form_cancel\\\"\\n            name=\\\"form[cancel]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Cancel</button>\\n                                                <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"resetAction($event)\\\"\\n                                        id=\\\"form_reset\\\"\\n            name=\\\"form[reset]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-ban\\\"></i>&nbsp;Reset</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAction($event)\\\"\\n                                        id=\\\"form_save\\\"\\n            name=\\\"form[save]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-check\\\"></i>&nbsp;Save</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAndCloseAction($event)\\\"\\n                                        id=\\\"form_saveAndClose\\\"\\n            name=\\\"form[saveAndClose]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Save and Close</button>\\n                                </div>\\n        </div>\\n    </div>    \\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/CommonBundle/Resources/public/place/index/ts/templates/edit.component.html\n// module id = ../../../../../src/Bck/CommonBundle/Resources/public/place/index/ts/templates/edit.component.html\n// module chunks = main","import {Component, ElementRef, Inject, Injector, Optional, Renderer} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormPopupExtensionComponent, FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\n\n\n@Component({\n    selector: '.js_edit',\n    templateUrl: '../templates/edit.component.html'\n})\nexport class EditComponent extends FormPopupExtensionComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any,\n        @Inject('HelperService') protected _helperService: any\n    ) {\n        super();\n        super.initFormPopupExtensionComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService\n        );\n    }\n\n    /**\n     * onEntityChange\n     * @param value\n     */\n    protected onEntityChange(value: any): void {\n        let that = this;\n\n        this._dataService.runAction(\n            (this._helperService.getAppVar('route')\n                + 'bck/entities/client/change-entity/'\n                + value\n                + (this._formService.getObject()['id'] ? ('/' + this._formService.getObject()['id']) : '')\n            )\n        ).then(\n            data => {\n                if (data['object']) {\n                    that._dataService.setObject(data['object']);\n                }\n            },\n            errors => { console.log(errors); return; }\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/EntitiesBundle/Resources/public/client/index/ts/src/edit.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {EditComponent} from './edit.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        EditComponent\n    ],\n    exports: [EditComponent]\n})\nexport class EditExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/EntitiesBundle/Resources/public/client/index/ts/src/edit.ext-module.ts","module.exports = \"    \\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">    \\n            \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().code\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_code\\\">Code</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().code\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_selectEntityObj\\\">Entity</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input [(ngModel)]=\\\"_formService.getObject().selectEntityObj\\\"\\n           formControlName = selectEntityObj\\n           name=\\\"form[selectEntityObj]\\\"\\n                      type=\\\"hidden\\\">\\n    <js_autoComplete [field]=\\\"'selectEntityObj'\\\"\\n                     [hasSelfReference]=\\\"_dataService.getFieldChoicesAttr('selectEntityObj', 'hasSelfReference')\\\"\\n                                              (onChange)=\\\"onEntityChange($event)\\\"[placeholder]=\\\"&#039;Entity&#039;\\\"                         ></js_autoComplete>\\n                    <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().selectEntityObj\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().avatar\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_entityObj_avatar\\\">Avatar</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_entityObj_avatar\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().avatar\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().avatar\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_entityObj_title\\\">Title</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                                                    \\n        <select id=\\\"form_entityObj_title\\\" name=\\\"form[entityObj][title]\\\" [(ngModel)]=\\\"_formService.getObject().title\\\" formControlName=\\\"title\\\" [class.error]=\\\"_formService.getErrors().title &amp;&amp; _formService.getErrors().title.length &gt; 0\\\" class=\\\"form-control\\\"><option value=\\\"Mr.\\\">Mr.</option><option value=\\\"Ms.\\\">Ms.</option></select>\\n    <input [(ngModel)]=\\\"_formService.getObject().title\\\"\\n           formControlName = title\\n           required=\\\"required\\\"           type=\\\"hidden\\\">\\n\\n                            <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().title\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_entityObj_name\\\">Name</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_entityObj_name\\\" name=\\\"form[entityObj][name]\\\" required=\\\"required\\\" maxlength=\\\"64\\\" [(ngModel)]=\\\"_formService.getObject().name\\\" formControlName=\\\"name\\\" [class.error]=\\\"_formService.getErrors().name &amp;&amp; _formService.getErrors().name.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().name\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_entityObj_surname\\\">Surname</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_entityObj_surname\\\" name=\\\"form[entityObj][surname]\\\" required=\\\"required\\\" maxlength=\\\"64\\\" [(ngModel)]=\\\"_formService.getObject().surname\\\" formControlName=\\\"surname\\\" [class.error]=\\\"_formService.getErrors().surname &amp;&amp; _formService.getErrors().surname.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().surname\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_entityObj_legalName\\\">Legal Name</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_entityObj_legalName\\\" name=\\\"form[entityObj][legalName]\\\" maxlength=\\\"128\\\" [(ngModel)]=\\\"_formService.getObject().legalName\\\" formControlName=\\\"legalName\\\" [class.error]=\\\"_formService.getErrors().legalName &amp;&amp; _formService.getErrors().legalName.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().legalName\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_entityObj_birthDate\\\">Birth Date</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        \\n    <div class=\\\"input-group js_dataPicker\\\"\\n         [datePicker]=\\\"'birthDate'\\\"\\n         #dpk_birthDate=\\\"\\\" [control]=\\\"dpk_birthDate\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"yyyy-mm-dd\\\"\\n               [(ngModel)]=\\\"_formService.getObject().birthDate\\\"\\n               formControlName = birthDate\\n               name=\\\"form[entityObj][birthDate]\\\"\\n                              [class.error]=\\\"_formService.getErrors()['birthDate'] && (_formService.getErrors()['birthDate'].length > 0)\\\"\\n               ngbDatepicker #dpk_birthDate=\\\"ngbDatepicker\\\">\\n        <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn\\\" type=\\\"button\\\"><a class=\\\"fa fa-calendar\\\"></a></button>\\n        </div>\\n    </div>\\n    \\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().birthDate\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_entityObj_identification\\\">Identification / Passport</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_entityObj_identification\\\" name=\\\"form[entityObj][identification]\\\" required=\\\"required\\\" maxlength=\\\"16\\\" [(ngModel)]=\\\"_formService.getObject().identification\\\" formControlName=\\\"identification\\\" [class.error]=\\\"_formService.getErrors().identification &amp;&amp; _formService.getErrors().identification.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().identification\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_entityObj_taxNumber\\\">Tax Number</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_entityObj_taxNumber\\\" name=\\\"form[entityObj][taxNumber]\\\" maxlength=\\\"16\\\" [(ngModel)]=\\\"_formService.getObject().taxNumber\\\" formControlName=\\\"taxNumber\\\" [class.error]=\\\"_formService.getErrors().taxNumber &amp;&amp; _formService.getErrors().taxNumber.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().taxNumber\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" [innerHTML]=\\\"getLang('Enabled')\\\"></label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <div class=\\\"checkbox\\\">                                        <label for=\\\"form_isEnabled\\\"><input type=\\\"checkbox\\\" id=\\\"form_isEnabled\\\" name=\\\"form[isEnabled]\\\" [(ngModel)]=\\\"_formService.getObject().isEnabled\\\" formControlName=\\\"isEnabled\\\" [class.error]=\\\"_formService.getErrors().isEnabled &amp;&amp; _formService.getErrors().isEnabled.length &gt; 0\\\" value=\\\"1\\\" checked=\\\"checked\\\" /> Is enabled</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isEnabled\\\">{{error}}</label>\\n            </div>\\n        </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n        \\n                    <div class=\\\"row\\\">\\n            <div class=\\\"col-auto ml-auto\\\">\\n                                            <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"cancelAction($event)\\\"\\n                                        id=\\\"form_cancel\\\"\\n            name=\\\"form[cancel]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Cancel</button>\\n                                                <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"resetAction($event)\\\"\\n                                        id=\\\"form_reset\\\"\\n            name=\\\"form[reset]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-ban\\\"></i>&nbsp;Reset</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAction($event)\\\"\\n                                        id=\\\"form_save\\\"\\n            name=\\\"form[save]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-check\\\"></i>&nbsp;Save</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAndCloseAction($event)\\\"\\n                                        id=\\\"form_saveAndClose\\\"\\n            name=\\\"form[saveAndClose]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Save and Close</button>\\n                                </div>\\n        </div>\\n    </div>    \\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/EntitiesBundle/Resources/public/client/index/ts/templates/edit.component.html\n// module id = ../../../../../src/Bck/EntitiesBundle/Resources/public/client/index/ts/templates/edit.component.html\n// module chunks = main","import {Component, ElementRef, Inject, Injector, Optional, Renderer} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormPopupExtensionComponent, FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\n\n\n@Component({\n    selector: '#js_entityAddressEdit',\n    templateUrl: '../templates/entity-address-edit.component.html'\n})\nexport class EntityAddressEditComponent extends FormPopupExtensionComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any,\n    ) {\n        super();\n        super.initFormPopupExtensionComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/EntitiesBundle/Resources/public/entity/detail/ts/src/entity-address-edit.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {EntityAddressEditComponent} from './entity-address-edit.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule],\n    declarations: [\n        EntityAddressEditComponent\n    ],\n    exports: [EntityAddressEditComponent]\n})\nexport class EntityAddressEditExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/EntitiesBundle/Resources/public/entity/detail/ts/src/entity-address-edit.ext-module.ts","module.exports = \"    \\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">    \\n            \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().id\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_id\\\">Id</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_id\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().id\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().id\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_name\\\">Name / Description</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_name\\\" name=\\\"form[name]\\\" maxlength=\\\"128\\\" [(ngModel)]=\\\"_formService.getObject().name\\\" formControlName=\\\"name\\\" [class.error]=\\\"_formService.getErrors().name &amp;&amp; _formService.getErrors().name.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().name\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_street1\\\">Street 1/2</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_street1\\\" name=\\\"form[street1]\\\" required=\\\"required\\\" maxlength=\\\"256\\\" [(ngModel)]=\\\"_formService.getObject().street1\\\" formControlName=\\\"street1\\\" [class.error]=\\\"_formService.getErrors().street1 &amp;&amp; _formService.getErrors().street1.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().street1\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_street2\\\">Street 2/2</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_street2\\\" name=\\\"form[street2]\\\" maxlength=\\\"256\\\" [(ngModel)]=\\\"_formService.getObject().street2\\\" formControlName=\\\"street2\\\" [class.error]=\\\"_formService.getErrors().street2 &amp;&amp; _formService.getErrors().street2.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().street2\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_postCode\\\">Post Code</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_postCode\\\" name=\\\"form[postCode]\\\" required=\\\"required\\\" maxlength=\\\"12\\\" [(ngModel)]=\\\"_formService.getObject().postCode\\\" formControlName=\\\"postCode\\\" [class.error]=\\\"_formService.getErrors().postCode &amp;&amp; _formService.getErrors().postCode.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().postCode\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_city\\\">City</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_city\\\" name=\\\"form[city]\\\" required=\\\"required\\\" maxlength=\\\"64\\\" [(ngModel)]=\\\"_formService.getObject().city\\\" formControlName=\\\"city\\\" [class.error]=\\\"_formService.getErrors().city &amp;&amp; _formService.getErrors().city.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().city\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_region\\\">Region</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_region\\\" name=\\\"form[region]\\\" maxlength=\\\"64\\\" [(ngModel)]=\\\"_formService.getObject().region\\\" formControlName=\\\"region\\\" [class.error]=\\\"_formService.getErrors().region &amp;&amp; _formService.getErrors().region.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().region\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_country\\\">Country</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_country\\\" name=\\\"form[country]\\\" required=\\\"required\\\" maxlength=\\\"64\\\" [(ngModel)]=\\\"_formService.getObject().country\\\" formControlName=\\\"country\\\" [class.error]=\\\"_formService.getErrors().country &amp;&amp; _formService.getErrors().country.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().country\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" [innerHTML]=\\\"getLang('For Documents')\\\"></label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <div class=\\\"checkbox\\\">                                        <label for=\\\"form_forDocuments\\\"><input type=\\\"checkbox\\\" id=\\\"form_forDocuments\\\" name=\\\"form[forDocuments]\\\" [(ngModel)]=\\\"_formService.getObject().forDocuments\\\" formControlName=\\\"forDocuments\\\" [class.error]=\\\"_formService.getErrors().forDocuments &amp;&amp; _formService.getErrors().forDocuments.length &gt; 0\\\" value=\\\"1\\\" /> For documents</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().forDocuments\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" [innerHTML]=\\\"getLang('Enabled')\\\"></label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <div class=\\\"checkbox\\\">                                        <label for=\\\"form_isEnabled\\\"><input type=\\\"checkbox\\\" id=\\\"form_isEnabled\\\" name=\\\"form[isEnabled]\\\" [(ngModel)]=\\\"_formService.getObject().isEnabled\\\" formControlName=\\\"isEnabled\\\" [class.error]=\\\"_formService.getErrors().isEnabled &amp;&amp; _formService.getErrors().isEnabled.length &gt; 0\\\" value=\\\"1\\\" checked=\\\"checked\\\" /> Is enabled</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isEnabled\\\">{{error}}</label>\\n            </div>\\n        </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n        \\n                    <div class=\\\"row\\\">\\n            <div class=\\\"col-auto ml-auto\\\">\\n                                            <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"cancelAction($event)\\\"\\n                                        id=\\\"form_cancel\\\"\\n            name=\\\"form[cancel]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Cancel</button>\\n                                                <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"resetAction($event)\\\"\\n                                        id=\\\"form_reset\\\"\\n            name=\\\"form[reset]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-ban\\\"></i>&nbsp;Reset</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAction($event)\\\"\\n                                        id=\\\"form_save\\\"\\n            name=\\\"form[save]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-check\\\"></i>&nbsp;Save</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAndCloseAction($event)\\\"\\n                                        id=\\\"form_saveAndClose\\\"\\n            name=\\\"form[saveAndClose]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Save and Close</button>\\n                                </div>\\n        </div>\\n    </div>    \\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/EntitiesBundle/Resources/public/entity/detail/ts/templates/entity-address-edit.component.html\n// module id = ../../../../../src/Bck/EntitiesBundle/Resources/public/entity/detail/ts/templates/entity-address-edit.component.html\n// module chunks = main","import {Component, ElementRef, Inject, Injector, Optional, Renderer} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormPopupExtensionComponent, FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\n\n\n@Component({\n    selector: '.js_edit',\n    templateUrl: '../templates/edit.component.html'\n})\nexport class EditComponent extends FormPopupExtensionComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any,\n        @Inject('HelperService') protected _helperService: any\n    ) {\n        super();\n        super.initFormPopupExtensionComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService\n        );\n    }\n\n\n    /**\n     * onEntityChange\n     * @param value\n     */\n    protected onEntityChange(value: any): void {\n        let that = this;\n\n        this._dataService.runAction(\n            (this._helperService.getAppVar('route')\n                + 'bck/entities/client/change-entity/'\n                + value\n                + (this._formService.getObject()['id'] ? ('/' + this._formService.getObject()['id']) : '')\n            )\n        ).then(\n            data => {\n                if (data['object']) {\n                    that._dataService.setObject(data['object']);\n                }\n            },\n            errors => { console.log(errors); return; }\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/EntitiesBundle/Resources/public/supplier/index/ts/src/edit.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {EditComponent} from './edit.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule, FieldTypesExtensionModule],\n    declarations: [\n        EditComponent\n    ],\n    exports: [EditComponent]\n})\nexport class EditExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/EntitiesBundle/Resources/public/supplier/index/ts/src/edit.ext-module.ts","module.exports = \"    \\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">    \\n            \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().code\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_code\\\">Code</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_code\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().code\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().code\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_selectEntityObj\\\">Entity</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input [(ngModel)]=\\\"_formService.getObject().selectEntityObj\\\"\\n           formControlName = selectEntityObj\\n           name=\\\"form[selectEntityObj]\\\"\\n                      type=\\\"hidden\\\">\\n    <js_autoComplete [field]=\\\"'selectEntityObj'\\\"\\n                     [hasSelfReference]=\\\"_dataService.getFieldChoicesAttr('selectEntityObj', 'hasSelfReference')\\\"\\n                                              (onChange)=\\\"onEntityChange($event)\\\"[placeholder]=\\\"&#039;Entity&#039;\\\"                         ></js_autoComplete>\\n                    <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().selectEntityObj\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().avatar\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_entityObj_avatar\\\">Avatar</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_entityObj_avatar\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().avatar\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().avatar\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_entityObj_title\\\">Title</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                                                    \\n        <select id=\\\"form_entityObj_title\\\" name=\\\"form[entityObj][title]\\\" [(ngModel)]=\\\"_formService.getObject().title\\\" formControlName=\\\"title\\\" [class.error]=\\\"_formService.getErrors().title &amp;&amp; _formService.getErrors().title.length &gt; 0\\\" class=\\\"form-control\\\"><option value=\\\"Mr.\\\">Mr.</option><option value=\\\"Ms.\\\">Ms.</option></select>\\n    <input [(ngModel)]=\\\"_formService.getObject().title\\\"\\n           formControlName = title\\n           required=\\\"required\\\"           type=\\\"hidden\\\">\\n\\n                            <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().title\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_entityObj_name\\\">Name</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_entityObj_name\\\" name=\\\"form[entityObj][name]\\\" required=\\\"required\\\" maxlength=\\\"64\\\" [(ngModel)]=\\\"_formService.getObject().name\\\" formControlName=\\\"name\\\" [class.error]=\\\"_formService.getErrors().name &amp;&amp; _formService.getErrors().name.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().name\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_entityObj_surname\\\">Surname</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_entityObj_surname\\\" name=\\\"form[entityObj][surname]\\\" required=\\\"required\\\" maxlength=\\\"64\\\" [(ngModel)]=\\\"_formService.getObject().surname\\\" formControlName=\\\"surname\\\" [class.error]=\\\"_formService.getErrors().surname &amp;&amp; _formService.getErrors().surname.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().surname\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_entityObj_legalName\\\">Legal Name</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_entityObj_legalName\\\" name=\\\"form[entityObj][legalName]\\\" maxlength=\\\"128\\\" [(ngModel)]=\\\"_formService.getObject().legalName\\\" formControlName=\\\"legalName\\\" [class.error]=\\\"_formService.getErrors().legalName &amp;&amp; _formService.getErrors().legalName.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().legalName\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_entityObj_birthDate\\\">Birth Date</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        \\n    <div class=\\\"input-group js_dataPicker\\\"\\n         [datePicker]=\\\"'birthDate'\\\"\\n         #dpk_birthDate=\\\"\\\" [control]=\\\"dpk_birthDate\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               placeholder=\\\"yyyy-mm-dd\\\"\\n               [(ngModel)]=\\\"_formService.getObject().birthDate\\\"\\n               formControlName = birthDate\\n               name=\\\"form[entityObj][birthDate]\\\"\\n                              [class.error]=\\\"_formService.getErrors()['birthDate'] && (_formService.getErrors()['birthDate'].length > 0)\\\"\\n               ngbDatepicker #dpk_birthDate=\\\"ngbDatepicker\\\">\\n        <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn\\\" type=\\\"button\\\"><a class=\\\"fa fa-calendar\\\"></a></button>\\n        </div>\\n    </div>\\n    \\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().birthDate\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_entityObj_identification\\\">Identification / Passport</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_entityObj_identification\\\" name=\\\"form[entityObj][identification]\\\" required=\\\"required\\\" maxlength=\\\"16\\\" [(ngModel)]=\\\"_formService.getObject().identification\\\" formControlName=\\\"identification\\\" [class.error]=\\\"_formService.getErrors().identification &amp;&amp; _formService.getErrors().identification.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().identification\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_entityObj_taxNumber\\\">Tax Number</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_entityObj_taxNumber\\\" name=\\\"form[entityObj][taxNumber]\\\" maxlength=\\\"16\\\" [(ngModel)]=\\\"_formService.getObject().taxNumber\\\" formControlName=\\\"taxNumber\\\" [class.error]=\\\"_formService.getErrors().taxNumber &amp;&amp; _formService.getErrors().taxNumber.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().taxNumber\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" [innerHTML]=\\\"getLang('Enabled')\\\"></label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <div class=\\\"checkbox\\\">                                        <label for=\\\"form_isEnabled\\\"><input type=\\\"checkbox\\\" id=\\\"form_isEnabled\\\" name=\\\"form[isEnabled]\\\" [(ngModel)]=\\\"_formService.getObject().isEnabled\\\" formControlName=\\\"isEnabled\\\" [class.error]=\\\"_formService.getErrors().isEnabled &amp;&amp; _formService.getErrors().isEnabled.length &gt; 0\\\" value=\\\"1\\\" checked=\\\"checked\\\" /> Is enabled</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isEnabled\\\">{{error}}</label>\\n            </div>\\n        </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n        \\n                    <div class=\\\"row\\\">\\n            <div class=\\\"col-auto ml-auto\\\">\\n                                            <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"cancelAction($event)\\\"\\n                                        id=\\\"form_cancel\\\"\\n            name=\\\"form[cancel]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Cancel</button>\\n                                                <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"resetAction($event)\\\"\\n                                        id=\\\"form_reset\\\"\\n            name=\\\"form[reset]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-ban\\\"></i>&nbsp;Reset</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAction($event)\\\"\\n                                        id=\\\"form_save\\\"\\n            name=\\\"form[save]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-check\\\"></i>&nbsp;Save</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAndCloseAction($event)\\\"\\n                                        id=\\\"form_saveAndClose\\\"\\n            name=\\\"form[saveAndClose]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Save and Close</button>\\n                                </div>\\n        </div>\\n    </div>    \\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/EntitiesBundle/Resources/public/supplier/index/ts/templates/edit.component.html\n// module id = ../../../../../src/Bck/EntitiesBundle/Resources/public/supplier/index/ts/templates/edit.component.html\n// module chunks = main","import {Component, ElementRef, Inject, Optional, Injector, Renderer} from '@angular/core';\nimport {DataService} from '../../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../../AppBundle/Resources/public/form/ts/form.service';\nimport {FormPopupExtensionComponent, FormProvider} from '../../../../../../../../AppBundle/Resources/public/form/ts/form-popup.extension-component';\n\n\n@Component({\n    selector: '#js_edit',\n    templateUrl: '../templates/edit.component.html'\n})\nexport class EditComponent extends FormPopupExtensionComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any\n    ) {\n        super();\n        super.initFormPopupExtensionComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/SysadminBundle/Resources/public/country/index/ts/src/edit.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {FieldTypesExtensionModule} from '../../../../../../../../AppBundle/Resources/public/form/ts/field-types/field-types.extension-module';\nimport {EditComponent} from './edit.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, FieldTypesExtensionModule],\n    declarations: [\n        EditComponent\n    ],\n    exports: [EditComponent]\n})\nexport class EditExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/Bck/SysadminBundle/Resources/public/country/index/ts/src/edit.ext-module.ts","module.exports = \"    \\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n<div class=\\\"modal-header\\\">\\n    <div class=\\\"row align-items-center\\\">\\n        <h3 class=\\\"col-auto mr-auto modal-title\\\">Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h3>\\n        <div class=\\\"col-auto text-right actions\\\"><a\\n                class=\\\"-round fa fa-times\\\"\\n                (click)=\\\"closeAction($event)\\\"></a></div>\\n    </div>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">    \\n            \\n\\n                <div class=\\\"row form-group\\\" *ngIf=\\\"_formService.getObject().id\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_id\\\">Id</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_id\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().id\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().id\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_alpha2Code\\\">Alpha2 Code</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_alpha2Code\\\" name=\\\"form[alpha2Code]\\\" required=\\\"required\\\" maxlength=\\\"2\\\" [(ngModel)]=\\\"_formService.getObject().alpha2Code\\\" formControlName=\\\"alpha2Code\\\" [class.error]=\\\"_formService.getErrors().alpha2Code &amp;&amp; _formService.getErrors().alpha2Code.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().alpha2Code\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_alpha3Code\\\">Alpha3 Code</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_alpha3Code\\\" name=\\\"form[alpha3Code]\\\" required=\\\"required\\\" maxlength=\\\"3\\\" [(ngModel)]=\\\"_formService.getObject().alpha3Code\\\" formControlName=\\\"alpha3Code\\\" [class.error]=\\\"_formService.getErrors().alpha3Code &amp;&amp; _formService.getErrors().alpha3Code.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().alpha3Code\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_name_pt\\\">Name PT</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_name_pt\\\" name=\\\"form[name_pt]\\\" required=\\\"required\\\" maxlength=\\\"32\\\" [(ngModel)]=\\\"_formService.getObject().name_pt\\\" formControlName=\\\"name_pt\\\" [class.error]=\\\"_formService.getErrors().name_pt &amp;&amp; _formService.getErrors().name_pt.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().name_pt\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_name_es\\\">Name ES</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_name_es\\\" name=\\\"form[name_es]\\\" required=\\\"required\\\" maxlength=\\\"32\\\" [(ngModel)]=\\\"_formService.getObject().name_es\\\" formControlName=\\\"name_es\\\" [class.error]=\\\"_formService.getErrors().name_es &amp;&amp; _formService.getErrors().name_es.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().name_es\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_name_en\\\">Name EN</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_name_en\\\" name=\\\"form[name_en]\\\" required=\\\"required\\\" maxlength=\\\"32\\\" [(ngModel)]=\\\"_formService.getObject().name_en\\\" formControlName=\\\"name_en\\\" [class.error]=\\\"_formService.getErrors().name_en &amp;&amp; _formService.getErrors().name_en.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().name_en\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_appIconObj\\\">Icon</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                                                        <div class=\\\"html-select\\\"\\n         [htmlSelect]=\\\"'appIconObj'\\\"\\n                               >\\n        <div class=\\\"input-group-control\\\"\\n             [class.error]=\\\"_formService.getErrors()['appIconObj'] && (_formService.getErrors()['appIconObj'].length > 0)\\\">\\n            <span class=\\\"js_label form-control\\\"></span>\\n            <a class=\\\"pull-right\\\"><i class=\\\"fa fa-angle-down\\\"></i></a>\\n        </div>\\n        <div class=\\\"choices js_choices\\\">\\n            <ul class=\\\"form-control-box\\\">        <ng-template ngFor let-choice [ngForOf]=\\\"_dataService.getFieldChoices('appIconObj')\\\">\\n            <li [attr.data-value]=\\\"choice['id']\\\" [innerHtml]=\\\"choice['label']\\\"></li>\\n        </ng-template>\\n    </ul>\\n        </div>\\n    </div>\\n    <input [(ngModel)]=\\\"_formService.getObject().appIconObj\\\"\\n           formControlName = appIconObj\\n           name=\\\"form[appIconObj]\\\"\\n                      type=\\\"hidden\\\">\\n                                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().appIconObj\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n                <div class=\\\"row form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" [innerHTML]=\\\"getLang('Enabled')\\\"></label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <div class=\\\"checkbox\\\">                                        <label for=\\\"form_isEnabled\\\"><input type=\\\"checkbox\\\" id=\\\"form_isEnabled\\\" name=\\\"form[isEnabled]\\\" [(ngModel)]=\\\"_formService.getObject().isEnabled\\\" formControlName=\\\"isEnabled\\\" [class.error]=\\\"_formService.getErrors().isEnabled &amp;&amp; _formService.getErrors().isEnabled.length &gt; 0\\\" value=\\\"1\\\" checked=\\\"checked\\\" /> Is enabled</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isEnabled\\\">{{error}}</label>\\n            </div>\\n        </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer hide-on-empty\\\">\\n        \\n                    <div class=\\\"row\\\">\\n            <div class=\\\"col-auto ml-auto\\\">\\n                                            <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"cancelAction($event)\\\"\\n                                        id=\\\"form_cancel\\\"\\n            name=\\\"form[cancel]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Cancel</button>\\n                                                <button                                     class=\\\"btn btn-light\\\"\\n                                    (click)=\\\"resetAction($event)\\\"\\n                                        id=\\\"form_reset\\\"\\n            name=\\\"form[reset]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-ban\\\"></i>&nbsp;Reset</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAction($event)\\\"\\n                                        id=\\\"form_save\\\"\\n            name=\\\"form[save]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-check\\\"></i>&nbsp;Save</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAndCloseAction($event)\\\"\\n                                        id=\\\"form_saveAndClose\\\"\\n            name=\\\"form[saveAndClose]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Save and Close</button>\\n                                </div>\\n        </div>\\n    </div>    \\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"cEuu0f4SXmjfjYDFXIJO4B5Hkp8dRrRxqs-vEEkwqNE\\\" /></form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/Bck/SysadminBundle/Resources/public/country/index/ts/templates/edit.component.html\n// module id = ../../../../../src/Bck/SysadminBundle/Resources/public/country/index/ts/templates/edit.component.html\n// module chunks = main"],"sourceRoot":"webpack:///"}