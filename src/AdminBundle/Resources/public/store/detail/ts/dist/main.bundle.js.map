{"version":3,"sources":["/usr/share/nginx/html/weboffice/angular_cli_conf/environments/environment.ts","/usr/share/nginx/html/weboffice/src/AdminBundle/Resources/public/store/detail/ts/$_lazy_route_resource lazy","/usr/share/nginx/html/weboffice/src/AdminBundle/Resources/public/store/detail/ts/src/contacts.component.ts","/usr/share/nginx/html/weboffice/src/AdminBundle/Resources/public/store/detail/ts/src/contacts.ext-module.ts","/usr/share/nginx/html/weboffice/src/AdminBundle/Resources/public/store/detail/ts/src/main.component.ts","/usr/share/nginx/html/weboffice/src/AdminBundle/Resources/public/store/detail/ts/src/main.module.ts","/usr/share/nginx/html/weboffice/src/AdminBundle/Resources/public/store/detail/ts/src/main.ts","/usr/share/nginx/html/weboffice/src/AdminBundle/Resources/public/store/detail/ts/src/store-email-edit.component.ts","/usr/share/nginx/html/weboffice/src/AdminBundle/Resources/public/store/detail/ts/src/store-email-edit.ext-module.ts","/usr/share/nginx/html/weboffice/src/AdminBundle/Resources/public/store/detail/ts/src/store-link-edit.component.ts","/usr/share/nginx/html/weboffice/src/AdminBundle/Resources/public/store/detail/ts/src/store-link-edit.ext-module.ts","/usr/share/nginx/html/weboffice/src/AdminBundle/Resources/public/store/detail/ts/src/store-phone-edit.component.ts","/usr/share/nginx/html/weboffice/src/AdminBundle/Resources/public/store/detail/ts/src/store-phone-edit.ext-module.ts","/usr/share/nginx/html/weboffice/src/AdminBundle/Resources/public/store/detail/ts/templates/contacts.component.html","/usr/share/nginx/html/weboffice/src/AdminBundle/Resources/public/store/detail/ts/templates/main.component.html","/usr/share/nginx/html/weboffice/src/AdminBundle/Resources/public/store/detail/ts/templates/store-email-edit.component.html","/usr/share/nginx/html/weboffice/src/AdminBundle/Resources/public/store/detail/ts/templates/store-link-edit.component.html","/usr/share/nginx/html/weboffice/src/AdminBundle/Resources/public/store/detail/ts/templates/store-phone-edit.component.html","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/accordion/ts/src/accordion.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/app-basics/ts/src/main.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/app-basics/ts/src/main.ext-module.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/data-box/ts/src/data-box.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/data-box/ts/src/data-box.extension-component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/data-box/ts/src/data-box.extension-module.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/data-box/ts/templates/data-box.component.html","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/modal/ts/base-modal-popup.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/modal/ts/modal-dialog.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/modal/ts/modal-dialog.extension-module.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/modal/ts/modal-wrapper.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/modal/ts/modal-wrapper.extension-module.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/modal/ts/modal.service.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/tabs/ts/src/tabs.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/tabs/ts/src/tabs.ext-component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/actions/actions.service.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/base/base.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/base/base.extension-component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/box/box.extension-component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/data-service/data.service.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/dynamic-component-loader.service.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/expander/expander.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/expander/expander.module.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/flash-message.service.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/form/field-types/field-type-auto-complete.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/form/field-types/field-type-date-picker.directive.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/form/field-types/field-type-html-select.directive.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/form/field-types/field-type-multi-checkbox.directive.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/form/field-types/field-types.extension-module.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/form/field-types/password.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/form/form-popup.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/form/form-popup.extension-component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/form/form.extension-component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/form/form.service.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/helper.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/nav-manager/nav-manager.service.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/post.service.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/search/search-criteria.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/search/search-fields.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/search/search-order-by.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/search/search-pagination.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/search/search-pagination.module.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/search/search.component.ts","/usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/search/search.module.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/angular_cli_conf/environments/environment.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/AdminBundle/Resources/public/store/detail/ts/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/AdminBundle/Resources/public/store/detail/ts/$$_lazy_route_resource lazy\n// module id = ../../../../../src/AdminBundle/Resources/public/store/detail/ts/$$_lazy_route_resource lazy recursive\n// module chunks = main","import {Component, Optional, ElementRef, Inject, Renderer, QueryList, ViewContainerRef, ViewChildren} from '@angular/core';\nimport {AccordionComponent, IAccordion, LazyLoadData} from '../../../../../../../AppBundle/Resources/public/accordion/ts/src/accordion.component';\nimport {NavManagerService} from '../../../../../../../AppBundle/Resources/public/ts/nav-manager/nav-manager.service';\nimport {FormService} from '../../../../../../../AppBundle/Resources/public/ts/form/form.service';\nimport {DataBoxExtensionModule} from '../../../../../../../AppBundle/Resources/public/data-box/ts/src/data-box.extension-module';\nimport {DataService} from '../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {ActionsService} from '../../../../../../../AppBundle/Resources/public/ts/actions/actions.service';\n\n// StorePhone\nimport {StorePhoneEditExtModule} from './store-phone-edit.ext-module';\n// StoreEmail\nimport {StoreEmailEditExtModule} from './store-email-edit.ext-module';\n// StoreLink\nimport {StoreLinkEditExtModule} from './store-link-edit.ext-module';\n\n\n@Component({\n    selector: 'js_contacts',\n    templateUrl: '../templates/contacts.component.html'\n})\nexport class ContactsComponent extends AccordionComponent implements IAccordion\n{\n    // For NavManagerService\n    @ViewChildren('js_lazyLoadContainer', {read: ViewContainerRef}) lazyLoadViewContainerRefQL: QueryList<ViewContainerRef>;\n\n    protected _dependenciesData: any[];\n\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Optional() @Inject('Provider') provider: any,\n        @Inject('HelperService') helperService: any,\n        navManagerService: NavManagerService\n    ) {\n        super(\n            elementRef,\n            renderer,\n            provider || null,\n            helperService,\n            navManagerService\n        );\n        \n        this._dependenciesData = (this._helperService.getAppVar('dependency') || []);\n    }\n\n    /**\n     * Get navigation data (needed data to lazy load container)\n     * @param index (index to load)\n     * @returns NavData\n     */\n    public getNavData(index: number): LazyLoadData\n    {\n        let data = {\n            module: DataBoxExtensionModule,\n            component: 'DataBoxComponent'\n        };\n\n        switch (index) {\n            case 0:\n                data['dataProvider'] = this._dependenciesData['storePhone'];\n                break;\n            case 1:\n                data['dataProvider'] = this._dependenciesData['storeEmail'];\n                break;\n            case 2:\n                data['dataProvider'] = this._dependenciesData['storeLink'];\n                break;\n        }\n\n        return data;\n    }\n\n    /**\n     * Get nav providers (to lazy load components in container with dependency injection)\n     * @param index (index to load)\n     * @param data (data to resolve all providers)\n     * @returns {Array}\n     */\n    public getNavProviders(index: number, data = null): any\n    {\n        let providers: any[] = [\n            FormService,\n            {provide: 'DataService', useClass: DataService},\n            ActionsService,\n            {provide: 'DataServiceProvider', useValue: this._helperService.getDataServiceProvider(data)},\n            {provide: 'Provider', useValue: this._helperService.getDataBoxProvider(data)},\n            {provide: 'ActionsServiceProvider', useValue: this._helperService.getActionsServiceProvider(data)}\n        ];\n\n        switch (index) {\n            case 0:\n                providers.push({provide: 'Popups', useValue: {\n                    module: StorePhoneEditExtModule,\n                    component: 'StorePhoneEditComponent',\n                    providers: [{provide: 'Provider', useValue: this._helperService.getFormProvider(data)}]\n                }});\n                break;\n            case 1:\n                providers.push({provide: 'Popups', useValue: {\n                    module: StoreEmailEditExtModule,\n                    component: 'StoreEmailEditComponent',\n                    providers: [{provide: 'Provider', useValue: this._helperService.getFormProvider(data)}]\n                }});\n                break;\n            case 2:\n                providers.push({provide: 'Popups', useValue: {\n                    module: StoreLinkEditExtModule,\n                    component: 'StoreLinkEditComponent',\n                    providers: [{provide: 'Provider', useValue: this._helperService.getFormProvider(data)}]\n                }});\n                break;\n        }\n\n        return providers;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AdminBundle/Resources/public/store/detail/ts/src/contacts.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {SearchModule} from '../../../../../../../AppBundle/Resources/public/ts/search/search.module';\nimport {ContactsComponent} from './contacts.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, SearchModule],\n    declarations: [\n        ContactsComponent\n    ],\n    exports: [ContactsComponent]\n})\nexport class ContactsExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AdminBundle/Resources/public/store/detail/ts/src/contacts.ext-module.ts","import {Component, ElementRef, Inject, Renderer, QueryList, ViewContainerRef, ViewChildren} from '@angular/core';\nimport {ModalService} from '../../../../../../../AppBundle/Resources/public/modal/ts/modal.service';\nimport {NavManagerService} from '../../../../../../../AppBundle/Resources/public/ts/nav-manager/nav-manager.service';\nimport {TabsComponent, ITabs, LazyLoadData} from '../../../../../../../AppBundle/Resources/public/tabs/ts/src/tabs.component';\n\n// Contacts\nimport {ContactsExtModule} from \"./contacts.ext-module\";\n\n\n@Component({\n    selector: '#js_main',\n    templateUrl: '../templates/main.component.html'\n})\nexport class MainComponent extends TabsComponent implements ITabs\n{\n    protected _dependenciesData: any[];\n\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: any,\n        @Inject('HelperService') helperService: any,\n        navManagerService: NavManagerService,\n        protected _modalService: ModalService,\n        protected viewContainerRef: ViewContainerRef\n    ) {\n        super(\n            elementRef,\n            renderer,\n            provider,\n            helperService,\n            navManagerService\n        );\n\n        this._modalService.init(viewContainerRef);\n        this._dependenciesData = this._helperService.getAppVar('dependency');\n    }\n\n    /**\n     * Get navigation data (needed data to lazy load container)\n     * @param index (index to load)\n     * @returns NavData\n     */\n    public getNavData(index: number): LazyLoadData\n    {\n        switch (index) {\n            case 0:\n                return {\n                    module: ContactsExtModule,\n                    component: 'ContactsComponent'\n                };\n        }\n\n        return null;\n    }\n\n    /**\n     * Get nav providers (to lazy load components in container with dependency injection)\n     * @param index (index to load)\n     * @param data (data to resolve all providers)\n     * @returns {Array}\n     */\n    public getNavProviders(index: number, data = null): any\n    {\n        switch (index) {\n            case 0:\n                return [\n                    NavManagerService\n                ];\n        }\n\n        return null;\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngAfterViewInit()\n    {\n        super.ngAfterViewInit();\n\n        // Open the first tab\n        this._navManagerService.navTo(0);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AdminBundle/Resources/public/store/detail/ts/src/main.component.ts","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n// This module doesn't use \"ReactiveFormsModule\", but it needs to import this class\n// to provide \"formBuilder\" when inject dependencies in child modules (like form)\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {Helper} from '../../../../../../../AppBundle/Resources/public/ts/helper';\nimport {PostService} from '../../../../../../../AppBundle/Resources/public/ts/post.service';\nimport {ModalService} from '../../../../../../../AppBundle/Resources/public/modal/ts/modal.service';\nimport {FlashMessageService} from '../../../../../../../AppBundle/Resources/public/ts/flash-message.service';\nimport {DynamicComponentLoaderService} from '../../../../../../../AppBundle/Resources/public/ts/dynamic-component-loader.service';\nimport {NavManagerService} from '../../../../../../../AppBundle/Resources/public/ts/nav-manager/nav-manager.service';\nimport {MainExtModule as AppBasicsExtModule} from '../../../../../../../AppBundle/Resources/public/app-basics/ts/src/main.ext-module';\nimport {MainComponent as AppBasicsComponent} from '../../../../../../../AppBundle/Resources/public/app-basics/ts/src/main.component';\nimport {MainComponent} from './main.component';\n\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        FormsModule,\n        ReactiveFormsModule,\n        AppBasicsExtModule\n    ],\n    declarations: [\n        MainComponent\n    ],\n    providers: [\n        PostService,\n        ModalService,\n        FlashMessageService,\n        DynamicComponentLoaderService,\n        NavManagerService,\n        {provide: 'Provider', useValue: Helper.getBaseProvider(_app.conf)},\n        {provide: 'HelperService', useValue: Helper},\n    ],\n    bootstrap: [AppBasicsComponent, MainComponent]\n})\nexport class MainModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AdminBundle/Resources/public/store/detail/ts/src/main.module.ts","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic'; // The browser platform with a compiler\nimport {environment} from '../../../../../../../../angular_cli_conf/environments/environment'; // Get environment\nimport {MainModule} from './main.module';\n\n// Enable production environment\nif (environment.production) {\n    enableProdMode();\n}\n\n// Compile and launch the module\nplatformBrowserDynamic().bootstrapModule(MainModule)\n    .catch(err => console.log(err));\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AdminBundle/Resources/public/store/detail/ts/src/main.ts","import {Component, ElementRef, Inject, Optional, Injector, Renderer} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormPopupComponent, FormProvider} from '../../../../../../../AppBundle/Resources/public/ts/form/form-popup.component';\nimport {DataService} from '../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../AppBundle/Resources/public/ts/form/form.service';\n\n\n@Component({\n    selector: '#js_storeEmailEdit',\n    templateUrl: '../templates/store-email-edit.component.html'\n})\nexport class StoreEmailEditComponent extends FormPopupComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any\n    ) {\n        super(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AdminBundle/Resources/public/store/detail/ts/src/store-email-edit.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {StoreEmailEditComponent} from './store-email-edit.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule],\n    declarations: [\n        StoreEmailEditComponent\n    ],\n    exports: [StoreEmailEditComponent]\n})\nexport class StoreEmailEditExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AdminBundle/Resources/public/store/detail/ts/src/store-email-edit.ext-module.ts","import {Component, ElementRef, Inject, Optional, Injector, Renderer} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {FormPopupComponent, FormProvider} from '../../../../../../../AppBundle/Resources/public/ts/form/form-popup.component';\nimport {DataService} from '../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../AppBundle/Resources/public/ts/form/form.service';\n\n\n@Component({\n    selector: '#js_storeLinkEdit',\n    templateUrl: '../templates/store-link-edit.component.html'\n})\nexport class StoreLinkEditComponent extends FormPopupComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any\n    ) {\n        super(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AdminBundle/Resources/public/store/detail/ts/src/store-link-edit.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {FieldTypesExtensionModule} from '../../../../../../../AppBundle/Resources/public/ts/form/field-types/field-types.extension-module';\nimport {StoreLinkEditComponent} from './store-link-edit.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, FieldTypesExtensionModule, ReactiveFormsModule],\n    declarations: [\n        StoreLinkEditComponent\n    ],\n    exports: [StoreLinkEditComponent]\n})\nexport class StoreLinkEditExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AdminBundle/Resources/public/store/detail/ts/src/store-link-edit.ext-module.ts","import {Component, ElementRef, Inject, Optional, Injector, Renderer} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {Helper} from '../../../../../../../AppBundle/Resources/public/ts/helper';\nimport {FormPopupComponent, FormProvider} from '../../../../../../../AppBundle/Resources/public/ts/form/form-popup.component';\nimport {DataService} from '../../../../../../../AppBundle/Resources/public/ts/data-service/data.service';\nimport {FormService} from '../../../../../../../AppBundle/Resources/public/ts/form/form.service';\n\n\n@Component({\n    selector: '#js_storePhoneEdit',\n    templateUrl: '../templates/store-phone-edit.component.html'\n})\nexport class StorePhoneEditComponent extends FormPopupComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any\n    ) {\n        super(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AdminBundle/Resources/public/store/detail/ts/src/store-phone-edit.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {StorePhoneEditComponent} from './store-phone-edit.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule],\n    declarations: [\n        StorePhoneEditComponent\n    ],\n    exports: [StorePhoneEditComponent]\n})\nexport class StorePhoneEditExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AdminBundle/Resources/public/store/detail/ts/src/store-phone-edit.ext-module.ts","module.exports = \"        <div class=\\\"accordion\\\">\\n        <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\n                                                <div (click)=\\\"_navManagerService.navToAction(0)\\\"\\n     class=\\\"panel panel-default\\\">\\n    <div class=\\\"panel-heading\\\">\\n        <h4 class=\\\"panel-title\\\">\\n            <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#panel0\\\">Phones</a>\\n        </h4>\\n        <div *ngIf=\\\"_navManagerService.getComponentRef(0) && _navManagerService.getComponentRef(0).instance._actionsService\\\"\\n             class=\\\"actions no-user-select txt-align-r valign-table-component valign-table-component-middle\\\">\\n            <ng-template [ngIf]=\\\"_navManagerService.getComponentRef(0).instance._actionsService.getActionAttr('search', 'isEnabled')\\\">\\n                <js_search [injector]=\\\"_navManagerService.getComponentRef(0).instance._injector || null\\\" class=\\\"search\\\"></js_search>\\n            </ng-template>\\n            <div (click)=\\\"_navManagerService.getComponentRef(0).instance.triggerAction($event)\\\">\\n                <ng-template ngFor let-action [ngForOf]=\\\"_navManagerService.getComponentRef(0).instance._actionsService.getHeadActions()\\\">\\n                    <a *ngIf=\\\"_navManagerService.getComponentRef(0).instance._actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                       [ngClass]=\\\"[_navManagerService.getComponentRef(0).instance._actionsService.getActionAttr(action, 'icon')]\\\"\\n                       class=\\\"-round fa\\\"\\n                       [attr.data-action]=\\\"action\\\"></a>\\n                </ng-template>\\n            </div>\\n        </div>\\n    </div>\\n    <div id=\\\"panel0\\\" class=\\\"panel-collapse collapse\\\">\\n        <div class=\\\"panel-body js_lazyLoadContainer_0\\\">\\n            <ng-template #js_lazyLoadContainer></ng-template>\\n        </div>\\n    </div>\\n</div>                                    <div (click)=\\\"_navManagerService.navToAction(1)\\\"\\n     class=\\\"panel panel-default\\\">\\n    <div class=\\\"panel-heading\\\">\\n        <h4 class=\\\"panel-title\\\">\\n            <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#panel1\\\">Emails</a>\\n        </h4>\\n        <div *ngIf=\\\"_navManagerService.getComponentRef(1) && _navManagerService.getComponentRef(1).instance._actionsService\\\"\\n             class=\\\"actions no-user-select txt-align-r valign-table-component valign-table-component-middle\\\">\\n            <ng-template [ngIf]=\\\"_navManagerService.getComponentRef(1).instance._actionsService.getActionAttr('search', 'isEnabled')\\\">\\n                <js_search [injector]=\\\"_navManagerService.getComponentRef(1).instance._injector || null\\\" class=\\\"search\\\"></js_search>\\n            </ng-template>\\n            <div (click)=\\\"_navManagerService.getComponentRef(1).instance.triggerAction($event)\\\">\\n                <ng-template ngFor let-action [ngForOf]=\\\"_navManagerService.getComponentRef(1).instance._actionsService.getHeadActions()\\\">\\n                    <a *ngIf=\\\"_navManagerService.getComponentRef(1).instance._actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                       [ngClass]=\\\"[_navManagerService.getComponentRef(1).instance._actionsService.getActionAttr(action, 'icon')]\\\"\\n                       class=\\\"-round fa\\\"\\n                       [attr.data-action]=\\\"action\\\"></a>\\n                </ng-template>\\n            </div>\\n        </div>\\n    </div>\\n    <div id=\\\"panel1\\\" class=\\\"panel-collapse collapse\\\">\\n        <div class=\\\"panel-body js_lazyLoadContainer_1\\\">\\n            <ng-template #js_lazyLoadContainer></ng-template>\\n        </div>\\n    </div>\\n</div>                                    <div (click)=\\\"_navManagerService.navToAction(2)\\\"\\n     class=\\\"panel panel-default\\\">\\n    <div class=\\\"panel-heading\\\">\\n        <h4 class=\\\"panel-title\\\">\\n            <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#panel2\\\">Links</a>\\n        </h4>\\n        <div *ngIf=\\\"_navManagerService.getComponentRef(2) && _navManagerService.getComponentRef(2).instance._actionsService\\\"\\n             class=\\\"actions no-user-select txt-align-r valign-table-component valign-table-component-middle\\\">\\n            <ng-template [ngIf]=\\\"_navManagerService.getComponentRef(2).instance._actionsService.getActionAttr('search', 'isEnabled')\\\">\\n                <js_search [injector]=\\\"_navManagerService.getComponentRef(2).instance._injector || null\\\" class=\\\"search\\\"></js_search>\\n            </ng-template>\\n            <div (click)=\\\"_navManagerService.getComponentRef(2).instance.triggerAction($event)\\\">\\n                <ng-template ngFor let-action [ngForOf]=\\\"_navManagerService.getComponentRef(2).instance._actionsService.getHeadActions()\\\">\\n                    <a *ngIf=\\\"_navManagerService.getComponentRef(2).instance._actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                       [ngClass]=\\\"[_navManagerService.getComponentRef(2).instance._actionsService.getActionAttr(action, 'icon')]\\\"\\n                       class=\\\"-round fa\\\"\\n                       [attr.data-action]=\\\"action\\\"></a>\\n                </ng-template>\\n            </div>\\n        </div>\\n    </div>\\n    <div id=\\\"panel2\\\" class=\\\"panel-collapse collapse\\\">\\n        <div class=\\\"panel-body js_lazyLoadContainer_2\\\">\\n            <ng-template #js_lazyLoadContainer></ng-template>\\n        </div>\\n    </div>\\n</div>                                    </div>\\n    </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/AdminBundle/Resources/public/store/detail/ts/templates/contacts.component.html\n// module id = ../../../../../src/AdminBundle/Resources/public/store/detail/ts/templates/contacts.component.html\n// module chunks = main","module.exports = \"    <div class=\\\"row m-b-md animated fadeInRight\\\"><div class=\\\"col-lg-12 m-b-xs\\\"><div class=\\\"tabs-container\\\">\\n        <ul class=\\\"nav nav-tabs\\\">\\n                            <li (click)=\\\"_navManagerService.navToAction(0)\\\"\\n                    [class.active]=\\\"0 == _navManagerService.getIndex()\\\"><a\\n                            [attr.data-index]=\\\"0\\\" data-toggle=\\\"tab\\\" href=\\\"#tab0\\\">Contacts</a></li>\\n                    </ul>\\n        <div class=\\\"tab-content\\\">\\n                            <div id=\\\"tab0\\\"\\n                     class=\\\"tab-pane\\\"\\n                     [class.active]=\\\"0 == _navManagerService.getIndex()\\\">\\n                    <div class=\\\"panel-body js_lazyLoadContainer_0\\\">\\n                        <ng-template #js_lazyLoadContainer></ng-template>\\n                    </div>\\n                </div>\\n                    </div>\\n    </div></div></div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/AdminBundle/Resources/public/store/detail/ts/templates/main.component.html\n// module id = ../../../../../src/AdminBundle/Resources/public/store/detail/ts/templates/main.component.html\n// module chunks = main","module.exports = \"<div class=\\\"modal-body\\\">\\n    <div class=\\\"form-wrapper gray-bg\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12\\\">\\n                <div class=\\\"ibox float-e-margins\\\">\\n                    <div class=\\\"ibox-title\\\">\\n                        <h5>Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h5>\\n                        <div class=\\\"txt-align-r actions\\\">\\n                            <a class=\\\"-round fa fa-times\\\"\\n                               (click)=\\\"closeAction($event)\\\"></a>\\n                        </div>\\n                    </div>\\n                        \\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n                    <div class=\\\"ibox-content\\\">    \\n            \\n\\n            <div class=\\\"form-group\\\" *ngIf=\\\"_formService.getObject().id\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_id\\\">Id</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_id\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().id\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().id\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n            <div class=\\\"form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_name\\\">Name / Description</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_name\\\" name=\\\"form[name]\\\" maxlength=\\\"128\\\" [(ngModel)]=\\\"_formService.getObject().name\\\" formControlName=\\\"name\\\" [class.error]=\\\"_formService.getErrors().name &amp;&amp; _formService.getErrors().name.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().name\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n            <div class=\\\"form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_email\\\">Email</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_email\\\" name=\\\"form[email]\\\" required=\\\"required\\\" maxlength=\\\"64\\\" [(ngModel)]=\\\"_formService.getObject().email\\\" formControlName=\\\"email\\\" [class.error]=\\\"_formService.getErrors().email &amp;&amp; _formService.getErrors().email.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().email\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n            <div class=\\\"form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\">Default Email</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <div class=\\\"checkbox\\\">                                        <label><input type=\\\"checkbox\\\" id=\\\"form_isDefault\\\" name=\\\"form[isDefault]\\\" [(ngModel)]=\\\"_formService.getObject().isDefault\\\" formControlName=\\\"isDefault\\\" [class.error]=\\\"_formService.getErrors().isDefault &amp;&amp; _formService.getErrors().isDefault.length &gt; 0\\\" value=\\\"1\\\" /> Is default</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isDefault\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n            <div class=\\\"form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\">For Documents</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <div class=\\\"checkbox\\\">                                        <label><input type=\\\"checkbox\\\" id=\\\"form_forDocuments\\\" name=\\\"form[forDocuments]\\\" [(ngModel)]=\\\"_formService.getObject().forDocuments\\\" formControlName=\\\"forDocuments\\\" [class.error]=\\\"_formService.getErrors().forDocuments &amp;&amp; _formService.getErrors().forDocuments.length &gt; 0\\\" value=\\\"1\\\" /> For documents</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().forDocuments\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n            <div class=\\\"form-group\\\" *ngIf=\\\"_formService.getObject().insertTime\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_insertTime\\\">Insert Time</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_insertTime\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().insertTime\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().insertTime\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n            <div class=\\\"form-group\\\" *ngIf=\\\"_formService.getObject().insertUser\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_insertUser\\\">Insert User</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_insertUser\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().insertUser\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().insertUser\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n            <div class=\\\"form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\">Enabled</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <div class=\\\"checkbox\\\">                                        <label><input type=\\\"checkbox\\\" id=\\\"form_isEnabled\\\" name=\\\"form[isEnabled]\\\" [(ngModel)]=\\\"_formService.getObject().isEnabled\\\" formControlName=\\\"isEnabled\\\" [class.error]=\\\"_formService.getErrors().isEnabled &amp;&amp; _formService.getErrors().isEnabled.length &gt; 0\\\" value=\\\"1\\\" checked=\\\"checked\\\" /> Is enabled</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isEnabled\\\">{{error}}</label>\\n            </div>\\n        </div>\\n        </div>\\n                    <div class=\\\"ibox-footer hide-on-empty\\\">    \\n                    <div class=\\\"form-group\\\">\\n            <div class=\\\"col-sm-10 col-sm-offset-2\\\">\\n                                            <button                                     class=\\\"btn\\\"\\n                                    (click)=\\\"cancelAction($event)\\\"\\n                                        id=\\\"form_cancel\\\"\\n            name=\\\"form[cancel]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Cancel</button>\\n                                                <button                                     class=\\\"btn\\\"\\n                                    (click)=\\\"resetAction($event)\\\"\\n                                        id=\\\"form_reset\\\"\\n            name=\\\"form[reset]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-ban\\\"></i>&nbsp;Reset</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAction($event)\\\"\\n                                        id=\\\"form_save\\\"\\n            name=\\\"form[save]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-check\\\"></i>&nbsp;Save</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAndCloseAction($event)\\\"\\n                                        id=\\\"form_saveAndClose\\\"\\n            name=\\\"form[saveAndClose]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Save and Close</button>\\n                                </div>\\n        </div>\\n    </div>                        \\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"M8-tON1Vm7zaCf91I5KVuSjoLzkFt9Gsl7a9uNrScso\\\" /></form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/AdminBundle/Resources/public/store/detail/ts/templates/store-email-edit.component.html\n// module id = ../../../../../src/AdminBundle/Resources/public/store/detail/ts/templates/store-email-edit.component.html\n// module chunks = main","module.exports = \"<div class=\\\"modal-body\\\">\\n    <div class=\\\"form-wrapper gray-bg\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12\\\">\\n                <div class=\\\"ibox float-e-margins\\\">\\n                    <div class=\\\"ibox-title\\\">\\n                        <h5>Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h5>\\n                        <div class=\\\"txt-align-r actions\\\">\\n                            <a class=\\\"-round fa fa-times\\\"\\n                               (click)=\\\"closeAction($event)\\\"></a>\\n                        </div>\\n                    </div>\\n                        \\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n                    <div class=\\\"ibox-content\\\">    \\n            \\n\\n            <div class=\\\"form-group\\\" *ngIf=\\\"_formService.getObject().id\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_id\\\">Id</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_id\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().id\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().id\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n            <div class=\\\"form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_appIconObj\\\">Icon</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <div [htmlSelect]=\\\"'appIconObj'\\\"\\n         class=\\\"html-select\\\"\\n                               >\\n        <div class=\\\"form-control\\\"\\n             [class.error]=\\\"_formService.getErrors()['appIconObj'] && (_formService.getErrors()['appIconObj'].length > 0)\\\">\\n            <span class=\\\"control\\\">\\n                <span class=\\\"js_label\\\"></span><a class=\\\"pull-right\\\"><i class=\\\"fa fa-angle-down\\\"></i></a>\\n            </span>\\n        </div>\\n        <div class=\\\"choices js_choices\\\">\\n            <ul class=\\\"form-control-box\\\">\\n                                    <li data-value=\\\"13\\\"><i class=\\\"fa fa-facebook-square\\\"></i> (Facebook)</li>\\n                                    <li data-value=\\\"14\\\"><i class=\\\"fa fa-linkedin-square\\\"></i> (Linkedin)</li>\\n                                    <li data-value=\\\"15\\\"><i class=\\\"fa fa-twitter-square\\\"></i> (Twitter)</li>\\n                                    <li data-value=\\\"16\\\"><i class=\\\"fa fa-instagram\\\"></i> (Instagram)</li>\\n                                    <li data-value=\\\"39\\\"><i class=\\\"fa fa-link\\\"></i> (Link)</li>\\n                            </ul>\\n        </div>\\n    </div>\\n    <input [(ngModel)]=\\\"_formService.getObject().appIconObj\\\"\\n           formControlName = appIconObj\\n           name=\\\"form[appIconObj]\\\"\\n                      type=\\\"hidden\\\">\\n                    <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().appIconObj\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n            <div class=\\\"form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_name\\\">Name / Description</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_name\\\" name=\\\"form[name]\\\" maxlength=\\\"128\\\" [(ngModel)]=\\\"_formService.getObject().name\\\" formControlName=\\\"name\\\" [class.error]=\\\"_formService.getErrors().name &amp;&amp; _formService.getErrors().name.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().name\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n            <div class=\\\"form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_link\\\">Link</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_link\\\" name=\\\"form[link]\\\" required=\\\"required\\\" maxlength=\\\"64\\\" [(ngModel)]=\\\"_formService.getObject().link\\\" formControlName=\\\"link\\\" [class.error]=\\\"_formService.getErrors().link &amp;&amp; _formService.getErrors().link.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().link\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n            <div class=\\\"form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\">For Documents</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <div class=\\\"checkbox\\\">                                        <label><input type=\\\"checkbox\\\" id=\\\"form_forDocuments\\\" name=\\\"form[forDocuments]\\\" [(ngModel)]=\\\"_formService.getObject().forDocuments\\\" formControlName=\\\"forDocuments\\\" [class.error]=\\\"_formService.getErrors().forDocuments &amp;&amp; _formService.getErrors().forDocuments.length &gt; 0\\\" value=\\\"1\\\" /> For documents</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().forDocuments\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n            <div class=\\\"form-group\\\" *ngIf=\\\"_formService.getObject().insertTime\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_insertTime\\\">Insert Time</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_insertTime\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().insertTime\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().insertTime\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n            <div class=\\\"form-group\\\" *ngIf=\\\"_formService.getObject().insertUser\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_insertUser\\\">Insert User</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_insertUser\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().insertUser\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().insertUser\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n            <div class=\\\"form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\">Enabled</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <div class=\\\"checkbox\\\">                                        <label><input type=\\\"checkbox\\\" id=\\\"form_isEnabled\\\" name=\\\"form[isEnabled]\\\" [(ngModel)]=\\\"_formService.getObject().isEnabled\\\" formControlName=\\\"isEnabled\\\" [class.error]=\\\"_formService.getErrors().isEnabled &amp;&amp; _formService.getErrors().isEnabled.length &gt; 0\\\" value=\\\"1\\\" checked=\\\"checked\\\" /> Is enabled</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isEnabled\\\">{{error}}</label>\\n            </div>\\n        </div>\\n        </div>\\n                    <div class=\\\"ibox-footer hide-on-empty\\\">    \\n                    <div class=\\\"form-group\\\">\\n            <div class=\\\"col-sm-10 col-sm-offset-2\\\">\\n                                            <button                                     class=\\\"btn\\\"\\n                                    (click)=\\\"cancelAction($event)\\\"\\n                                        id=\\\"form_cancel\\\"\\n            name=\\\"form[cancel]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Cancel</button>\\n                                                <button                                     class=\\\"btn\\\"\\n                                    (click)=\\\"resetAction($event)\\\"\\n                                        id=\\\"form_reset\\\"\\n            name=\\\"form[reset]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-ban\\\"></i>&nbsp;Reset</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAction($event)\\\"\\n                                        id=\\\"form_save\\\"\\n            name=\\\"form[save]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-check\\\"></i>&nbsp;Save</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAndCloseAction($event)\\\"\\n                                        id=\\\"form_saveAndClose\\\"\\n            name=\\\"form[saveAndClose]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Save and Close</button>\\n                                </div>\\n        </div>\\n    </div>                        \\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"M8-tON1Vm7zaCf91I5KVuSjoLzkFt9Gsl7a9uNrScso\\\" /></form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/AdminBundle/Resources/public/store/detail/ts/templates/store-link-edit.component.html\n// module id = ../../../../../src/AdminBundle/Resources/public/store/detail/ts/templates/store-link-edit.component.html\n// module chunks = main","module.exports = \"<div class=\\\"modal-body\\\">\\n    <div class=\\\"form-wrapper gray-bg\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12\\\">\\n                <div class=\\\"ibox float-e-margins\\\">\\n                    <div class=\\\"ibox-title\\\">\\n                        <h5>Form&nbsp;{{getProviderAttr('label')}}<small>&nbsp;({{(_formService && _formService.getObject() && _formService.getObject().id) ? 'edit' : 'add'}})</small></h5>\\n                        <div class=\\\"txt-align-r actions\\\">\\n                            <a class=\\\"-round fa fa-times\\\"\\n                               (click)=\\\"closeAction($event)\\\"></a>\\n                        </div>\\n                    </div>\\n                        \\n    <form name=\\\"form\\\" method=\\\"post\\\" (ngSubmit)=\\\"saveAction($event)\\\" [formGroup]=\\\"_formService.getForm()\\\" class=\\\"form-horizontal\\\">\\n                    <div class=\\\"ibox-content\\\">    \\n            \\n\\n            <div class=\\\"form-group\\\" *ngIf=\\\"_formService.getObject().id\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_id\\\">Id</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_id\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().id\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().id\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n            <div class=\\\"form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\" for=\\\"form_name\\\">Name / Description</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_name\\\" name=\\\"form[name]\\\" maxlength=\\\"128\\\" [(ngModel)]=\\\"_formService.getObject().name\\\" formControlName=\\\"name\\\" [class.error]=\\\"_formService.getErrors().name &amp;&amp; _formService.getErrors().name.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().name\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n            <div class=\\\"form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_phone\\\">Phone</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <input type=\\\"text\\\" id=\\\"form_phone\\\" name=\\\"form[phone]\\\" required=\\\"required\\\" maxlength=\\\"16\\\" [(ngModel)]=\\\"_formService.getObject().phone\\\" formControlName=\\\"phone\\\" [class.error]=\\\"_formService.getErrors().phone &amp;&amp; _formService.getErrors().phone.length &gt; 0\\\" class=\\\"form-control\\\" />\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().phone\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n            <div class=\\\"form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\">For Documents</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <div class=\\\"checkbox\\\">                                        <label><input type=\\\"checkbox\\\" id=\\\"form_forDocuments\\\" name=\\\"form[forDocuments]\\\" [(ngModel)]=\\\"_formService.getObject().forDocuments\\\" formControlName=\\\"forDocuments\\\" [class.error]=\\\"_formService.getErrors().forDocuments &amp;&amp; _formService.getErrors().forDocuments.length &gt; 0\\\" value=\\\"1\\\" /> For documents</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().forDocuments\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n            <div class=\\\"form-group\\\" *ngIf=\\\"_formService.getObject().insertTime\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_insertTime\\\">Insert Time</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_insertTime\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().insertTime\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().insertTime\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n            <div class=\\\"form-group\\\" *ngIf=\\\"_formService.getObject().insertUser\\\">\\n\\n                        <label class=\\\"col-sm-2 control-label required\\\" for=\\\"form_insertUser\\\">Insert User</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                        <p id=\\\"form_insertUser\\\"\\n               class=\\\"form-control-static\\\"\\n               [innerHTML]=\\\"_formService.getViewObject().insertUser\\\"></p>\\n                        <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().insertUser\\\">{{error}}</label>\\n            </div>\\n        </div>\\n                \\n\\n            <div class=\\\"form-group\\\" >\\n\\n                        <label class=\\\"col-sm-2 control-label\\\">Enabled</label>\\n    \\n            <div class=\\\"col-sm-10\\\">\\n                                            <div class=\\\"checkbox\\\">                                        <label><input type=\\\"checkbox\\\" id=\\\"form_isEnabled\\\" name=\\\"form[isEnabled]\\\" [(ngModel)]=\\\"_formService.getObject().isEnabled\\\" formControlName=\\\"isEnabled\\\" [class.error]=\\\"_formService.getErrors().isEnabled &amp;&amp; _formService.getErrors().isEnabled.length &gt; 0\\\" value=\\\"1\\\" checked=\\\"checked\\\" /> Is enabled</label>\\n    </div>\\n                <label class=\\\"error\\\" *ngFor=\\\"let error of _formService.getErrors().isEnabled\\\">{{error}}</label>\\n            </div>\\n        </div>\\n        </div>\\n                    <div class=\\\"ibox-footer hide-on-empty\\\">    \\n                    <div class=\\\"form-group\\\">\\n            <div class=\\\"col-sm-10 col-sm-offset-2\\\">\\n                                            <button                                     class=\\\"btn\\\"\\n                                    (click)=\\\"cancelAction($event)\\\"\\n                                        id=\\\"form_cancel\\\"\\n            name=\\\"form[cancel]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Cancel</button>\\n                                                <button                                     class=\\\"btn\\\"\\n                                    (click)=\\\"resetAction($event)\\\"\\n                                        id=\\\"form_reset\\\"\\n            name=\\\"form[reset]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-ban\\\"></i>&nbsp;Reset</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAction($event)\\\"\\n                                        id=\\\"form_save\\\"\\n            name=\\\"form[save]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-check\\\"></i>&nbsp;Save</button>\\n                                                <button                                     class=\\\"btn btn-primary\\\"\\n                                    (click)=\\\"saveAndCloseAction($event)\\\"\\n                                        id=\\\"form_saveAndClose\\\"\\n            name=\\\"form[saveAndClose]\\\"\\n            type=\\\"button\\\"><i class=\\\"fa fa-times\\\"></i>&nbsp;Save and Close</button>\\n                                </div>\\n        </div>\\n    </div>                        \\n    <input type=\\\"hidden\\\" id=\\\"form__token\\\" name=\\\"form[_token]\\\" value=\\\"M8-tON1Vm7zaCf91I5KVuSjoLzkFt9Gsl7a9uNrScso\\\" /></form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/AdminBundle/Resources/public/store/detail/ts/templates/store-phone-edit.component.html\n// module id = ../../../../../src/AdminBundle/Resources/public/store/detail/ts/templates/store-phone-edit.component.html\n// module chunks = main","import {Component, ElementRef, Inject, Renderer, QueryList, ViewContainerRef, ViewChildren, Optional} from '@angular/core';\nimport {BaseComponent, BaseProvider} from '../../../../../../AppBundle/Resources/public/ts/base/base.component';\nimport {NavManagerService, INavManager as IAccordion, LazyLoadData} from '../../../ts/nav-manager/nav-manager.service';\n\n// Reexports\nexport {IAccordion, LazyLoadData, BaseProvider};\n\n\n@Component({\n    selector: 'js_accordion',\n    template: '' // Define template in child component\n})\nexport abstract class AccordionComponent extends BaseComponent {\n    // For NavManagerService\n    @ViewChildren('js_lazyLoadContainer', {read: ViewContainerRef}) lazyLoadViewContainerRefQL: QueryList<ViewContainerRef>;\n\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Optional() @Inject('Provider') provider: BaseProvider,\n        @Inject('HelperService') protected _helperService: any,\n        protected _navManagerService: NavManagerService\n    ) {\n        super(\n            elementRef,\n            renderer,\n            provider || {}\n        );\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngAfterViewInit()\n    {\n        // Initializes the children navigation manager service\n        this._navManagerService.init(this, this.lazyLoadViewContainerRefQL);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/accordion/ts/src/accordion.component.ts","import {Component, Inject} from '@angular/core';\nimport {FlashMessageService} from '../../../ts/flash-message.service';\n\n// AppI (template for modules)\nexport interface AppBasicsProvider {}\n\n\n@Component({\n    selector: '.js_appBasics',\n    template: ''\n})\nexport class MainComponent\n{\n    constructor(\n        private _flashMessageService: FlashMessageService\n    ) {}\n\n    /**\n     * Throw flash messages\n     * @returns any\n     */\n    private throwFlashMessages(): MainComponent {\n        if (_app.flashMessages != null) {\n            for (let flashMessage of _app.flashMessages) {\n                this._flashMessageService.message(\n                    flashMessage.body,\n                    flashMessage.head,\n                    flashMessage.type\n                );\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Life cycle callback\n     */\n    ngOnInit() {\n        this.throwFlashMessages();\n        delete _app.flashMessages; // It's no longer necessary\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/app-basics/ts/src/main.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MainComponent} from './main.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [MainComponent],\n    exports: [MainComponent]\n})\nexport class MainExtModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/app-basics/ts/src/main.ext-module.ts","import {Component, Inject, Injector, ReflectiveInjector, ViewContainerRef, Renderer} from '@angular/core';\nimport {DataBoxExtensionComponent, DataBoxProvider, Popup, Popups, PopupTypes} from './data-box.extension-component';\nimport {ModalService} from '../../../modal/ts/modal.service';\nimport {DataService, OrderTypes} from '../../../ts/data-service/data.service';\nimport {ActionsService} from \"../../../ts/actions/actions.service\";\n\n// Reexports\nexport {DataBoxProvider, Popup, Popups, PopupTypes};\n\n\n// Component\n@Component({\n    selector: '.js_dataBox',\n    templateUrl: '../templates/data-box.component.html'\n})\nexport class DataBoxComponent extends DataBoxExtensionComponent\n{\n    constructor(\n        viewContainerRef: ViewContainerRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: DataBoxProvider,\n        @Inject('DataService') dataService: any,\n        actionsService: ActionsService,\n        modalService: ModalService,\n        @Inject('Popups') popups: Popups | Popup,\n        injector: Injector\n    ) {\n        // Call parent\n        super();\n        super.initDataBoxExtensionComponent(\n            viewContainerRef,\n            renderer,\n            provider,\n            dataService,\n            actionsService,\n            modalService,\n            popups,\n            injector\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/data-box/ts/src/data-box.component.ts","import {Component, Inject, Injector, ReflectiveInjector, ViewContainerRef, Renderer} from '@angular/core';\nimport {DataBoxProvider as DataBoxProvider} from './data-box-provider';\nimport {ModalService, Popup} from '../../../modal/ts/modal.service';\nimport {DataService, OrderTypes} from '../../../ts/data-service/data.service';\nimport {BoxExtensionComponent} from '../../../ts/box/box.extension-component';\nimport {ActionsService} from \"../../../ts/actions/actions.service\";\n\n// Reexports\nexport {Popup, DataBoxProvider};\n\n\n// Popup Types\nexport var PopupTypes = {\n    edit: 'edit',\n    add: 'add'\n};\n// Popups interface (array of popups)\nexport interface Popups {\n    [type: string]: Popup\n}\n\n\n// Component\n@Component({\n    selector: '.js_dataBox',\n    template: ''\n})\nexport abstract class DataBoxExtensionComponent extends BoxExtensionComponent {\n    // Constructor vars\n    protected _viewContainerRef: ViewContainerRef;\n    protected _dataService: any;\n    protected _actionsService: ActionsService;\n    protected _modalService: ModalService;\n    protected _popups: Popups | Popup;\n    protected _injector: Injector;\n\n    protected checkAll: boolean = false; // Control check all action\n\n    constructor() { super(); }\n\n    /**\n     * Initialization of component (replace the original constructor to avoid angular injection inheritance bug)\n     * @param viewContainerRef\n     * @param renderer\n     * @param provider\n     * @param dataService\n     * @param actionsService\n     * @param modalService\n     * @param popups\n     * @param injector\n     */\n    public initDataBoxExtensionComponent(\n        viewContainerRef: ViewContainerRef,\n        renderer: Renderer,\n        provider: DataBoxProvider,\n        dataService: any, // Any is used, otherwise you get an error \"[Class] is not defined\"\n        actionsService: ActionsService,\n        modalService: ModalService,\n        // You can provide a popup by action:\n        // provide('Popups', {useValue: {\n        //     add: Popup,\n        //     edit: Popup\n        // }})\n        // Or a general popup for all actions:\n        // provide('Popups', {useValue: Popup})\n        popups: Popups | Popup, // Can be a list of popups by action, or only a popup\n        // used to provide the correct injector to the popups\n        injector: Injector\n    ) {\n        // Parent init (construct)\n        super.initBoxExtensionComponent(\n            viewContainerRef.element,\n            renderer,\n            provider\n        );\n\n        // Constructor vars\n        this._viewContainerRef = viewContainerRef;\n        this._dataService = dataService;\n        this._actionsService = actionsService;\n        this._modalService = modalService;\n        this._popups = popups;\n        this._injector = injector;\n\n        this._modalService.init(this._viewContainerRef);\n    }\n\n    /**\n     * Get column alignment.\n     * @param field\n     * @returns {any}\n     */\n    protected getColAlign(field: string): string\n    {\n        switch (this._dataService.getFields('metadata')[field].type) {\n            case 'number':\n            case 'percentage':\n            case 'monetary':\n            case 'date':\n            case 'datetime':\n                return 'txt-align-r';\n            case 'boolean':\n            case 'icon':\n            case 'img':\n            case 'status':\n                return 'txt-align-c';\n            default:\n                return 'txt-align-l';\n        }\n    }\n\n    /**\n     * Trigger action\n     * @param $event\n     * @param action (can be provided by $event or directly in the call)\n     * @param data (can be provided by $event or directly in the call)\n     */\n    protected triggerAction($event: any, action: string = null, data: any = null): void\n    {\n        if ($event) { $event.preventDefault(); }\n\n        // Action to call\n        action = (action || $event.target.getAttribute(\"data-action\"));\n\n        if (action) {\n            // Data to send as parameter to action\n            if (data == null) {\n                data = ($event.target.getAttribute(\"data-value\"));\n            }\n\n            // Call function\n            let callback = (action + 'Action');\n            if ($.isFunction(this[callback])) {\n                if ((data != null) && (typeof data != 'undefined')) { // Can be 0 or ''\n                    this[callback]($event, data);\n                } else {\n                    this[callback]($event);\n                }\n            }\n        }\n    }\n\n    /**\n     * Edit action\n     * @param $event\n     * @param data\n     */\n    public editAction($event: any, data: any): void\n    {\n        if ($event) { $event.preventDefault(); }\n\n        // Check ACL\n        if (!this._actionsService.getActionAttr('edit', 'isEnabled')) {\n            return;\n        }\n\n        let that = this;\n        this._dataService.selectObject(data).then(function(data) {\n            that.openPopup(PopupTypes.edit);\n        });\n    }\n\n    /**\n     * Add action\n     * @param $event\n     */\n    public addAction($event:any = null): void\n    {\n        if ($event) { $event.preventDefault(); }\n\n        this._dataService.newObject();\n        this.openPopup(PopupTypes.add);\n    }\n\n    /**\n     * Copy action. Create a new object from another object\n     * @param $event\n     * @param data\n     */\n    public copyAction($event:any = null, data: any): void\n    {\n        if ($event) { $event.preventDefault(); }\n\n        let that = this;\n        this._dataService.newObject(data).then(\n            data => {\n                that.openPopup(PopupTypes.edit);\n            },\n            errors => { console.log(errors); }\n        );\n    }\n\n    /**\n     * Cancel action.\n     * @param $event\n     * @param data\n     */\n    public cancelAction($event: any, data: any): void\n    {\n        if ($event) { $event.preventDefault(); }\n\n        let that = this;\n\n        // Dialog message\n        this._modalService.dialog('Are you sure to cancel/enable?').then(\n            hasConfirm => {\n                if (hasConfirm) {\n                    that._dataService.cancel(data).then(\n                        data => {\n                            that.postCancelObject();\n                            return;\n                        },\n                        errors => { return; }\n                    );\n                } else {\n                    return;\n                }\n            },\n            errors => {\n                console.log(errors);\n            }\n        );\n    }\n\n    /**\n     * Delete action.\n     * @param $event\n     * @param data\n     */\n    public deleteAction($event: any, data: any): void\n    {\n        if ($event) { $event.preventDefault(); }\n\n        let that = this;\n\n        // Dialog message\n        this._modalService.dialog('Are you sure to remove?').then(\n            hasConfirm => {\n                if (hasConfirm) {\n                    that._dataService.delete(data).then(\n                        data => {\n                            that.postDeleteObject();\n                            return;\n                        },\n                        errors => { return; }\n                    );\n                } else {\n                    return;\n                }\n            },\n            errors => {\n                console.log(errors);\n            }\n        );\n    }\n\n    /**\n     * Order up action.\n     * @param $event\n     * @param data\n     */\n    public orderUpAction($event: any, data: any): void\n    {\n        if ($event) { $event.preventDefault(); }\n        this._dataService.order(data, OrderTypes.up);\n    }\n\n    /**\n     * Order down action.\n     * @param $event\n     * @param data\n     */\n    public orderDownAction($event: any, data: any): void\n    {\n        if ($event) { $event.preventDefault(); }\n        this._dataService.order(data, OrderTypes.down);\n    }\n\n    /**\n     * Delete all checked elements action.\n     * @param $event\n     */\n    public deleteAllAction($event: any): void\n    {\n        if (!$event) { return; }\n        $event.preventDefault();\n\n        let $form = $($event.currentTarget).parents('.ibox').find('.ibox-content form');\n        let data = $form.serializeArray();\n\n        if(data.length) {\n            // Dialog message\n            this._modalService.dialog().then(\n                hasConfirm => {\n                    if (hasConfirm) {\n                        this._dataService.deleteArray(data);\n                    } else {\n                        return;\n                    }\n                },\n                errors => {\n                    console.log(errors);\n                }\n            );\n        }\n    }\n\n    /**\n     * Submit choices\n     * @param route (route to submit choices)\n     * @param allowEmptySubmit (allow submit when data is empty,\n     * some cases it is necessary to inform that the user does not select any choice)\n     * @returns {Promise}\n     */\n    public submitChoices(route: string, allowEmptySubmit: boolean = false): Promise<any>\n    {\n        let $form = $(this._elementRef.nativeElement).find('.ibox-content form'),\n            data = $form.serializeArray(),\n            that = this;\n\n        return new Promise(function(resolve, reject) {\n            return that._dataService.submitIndexesId(route, data, allowEmptySubmit).then(\n                data => { return resolve(data); },\n                errors => { return reject(errors); }\n            );\n        });\n    }\n\n    /**\n     * Detail action.\n     * @param $event\n     * @param data\n     */\n    public detailAction($event: any, data: any): void\n    {\n        if ($event) { $event.preventDefault(); }\n        this._dataService.detail(data);\n    }\n\n    /**\n     * Check all action.\n     * @param $event\n     */\n    protected checkAllAction($event: any = null): void\n    {\n        if ($event) { $event.preventDefault(); }\n        this.checkAll = !this.checkAll;\n    }\n\n    /**\n     * Refresh all objects list.\n     * @param $event\n     */\n    public refreshAction($event: any = null): void\n    {\n        if ($event) { $event.preventDefault(); }\n        this._dataService.refresh();\n    }\n\n    /**\n     * Open popup\n     * @param popupType\n     * @returns {DataBoxExtensionComponent}\n     */\n    protected openPopup(popupType = PopupTypes.edit): DataBoxExtensionComponent\n    {\n        // Set edit as default popup type if is not a valid entry\n        popupType = (PopupTypes[popupType] || PopupTypes.edit);\n        let popup: Popup = this._popups[popupType] || this._popups;\n\n        // Open popup\n        this._modalService.popup(popup, this._injector).then(\n            data => { return; },\n            errors => { console.log(errors); return; }\n        );\n\n        return this;\n    }\n\n\n    ////////\n    // Events/Callbacks\n    ////////////////////////////////\n\n    /**\n     * Post (after) cancel object event. Use this function to handle event.\n     * @return any\n     */\n    protected postCancelObject()\n    {\n        return this;\n    }\n\n    /**\n     * Post (after) delete object event. Use this function to handle event.\n     * @return any\n     */\n    protected postDeleteObject()\n    {\n        return this;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/data-box/ts/src/data-box.extension-component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n// This module doesn't use \"ReactiveFormsModule\", but it needs to import this class\n// to provide \"formBuilder\" when inject dependencies in child modules (like form)\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {SearchModule} from '../../../ts/search/search.module';\nimport {ExpanderModule} from '../../../ts/expander/expander.module';\nimport {SearchPaginationModule} from '../../../ts/search/search-pagination.module';\nimport {DataBoxComponent} from './data-box.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        SearchModule,\n        SearchPaginationModule,\n        ExpanderModule\n    ],\n    declarations: [\n        DataBoxComponent\n    ],\n    exports: [DataBoxComponent]\n})\nexport class DataBoxExtensionModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/data-box/ts/src/data-box.extension-module.ts","module.exports = \"\\n<div class=\\\"ibox\\\">\\n            <div class=\\\"ibox-title\\\" *ngIf=\\\"!getProviderExtraDataAttr('hasMergeHeader')\\\">\\n            <h5>\\n                <ng-template [ngIf]=\\\"getProviderAttr('controls')['expander']\\\"><js_expander\\n                    [isExpanded]=\\\"_isExpanded || null\\\"\\n                    [label]=\\\"getProviderAttr('label')\\\"\\n                    (onChange)=\\\"expanderAction($event)\\\"></js_expander></ng-template>\\n                <ng-template [ngIf]=\\\"!getProviderAttr('controls')['expander']\\\">\\n                    <span [innerHTML]=\\\"getProviderAttr('label')\\\"></span>\\n                </ng-template>\\n            </h5>\\n            <div *ngIf=\\\"_isExpanded\\\"\\n                 class=\\\"txt-align-r hide-on-empty\\\">    <div class=\\\"actions no-user-select\\\">\\n        <ng-template [ngIf]=\\\"_actionsService.getActionAttr('search', 'isEnabled')\\\"><js_search class=\\\"search\\\"></js_search></ng-template>\\n        <div (click)=\\\"triggerAction($event)\\\">\\n            <ng-template ngFor let-action [ngForOf]=\\\"_actionsService.getHeadActions()\\\">\\n                <a *ngIf=\\\"_actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                   [ngClass]=\\\"[_actionsService.getActionAttr(action, 'icon')]\\\"\\n                   class=\\\"-round fa\\\"\\n                   [attr.data-action]=\\\"action\\\"></a>\\n            </ng-template>\\n        </div>\\n    </div>\\n</div>\\n        </div>\\n    \\n    <div [hidden]=\\\"!(_isExpanded)\\\" class=\\\"ibox-content hide-on-empty\\\">    <ng-template [ngIf]=\\\"(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">\\n        <div class=\\\"table-responsive\\\">\\n        <form>\\n            <table class=\\\"data-table table table-striped table-bordered table-hover dataTables-example\\\">\\n                <thead>\\n                <tr>\\n                    <th *ngFor=\\\"let searchField of _dataService.getSearch('fields')\\\">{{ _dataService.getFields('metadata')[searchField].label }}</th>\\n                    <th>&nbsp;</th>\\n                </tr>\\n                </thead>\\n                <tbody>\\n                <ng-template ngFor let-obj [ngForOf]=\\\"_dataService.getProviderAttr('objects')\\\" let-objIndex=\\\"index\\\"><tr\\n                          (dblclick)=\\\"editAction($event, objIndex)\\\"\\n                          [class.disabled]=\\\"obj.hasOwnProperty('isEnabled') && (obj.isEnabled.search('fa-ban') > 0)\\\">\\n                    <td *ngFor=\\\"let searchField of _dataService.getSearch('fields')\\\"\\n                        [ngClass]=\\\"getColAlign(searchField)\\\"\\n                        [innerHTML]=\\\"obj[searchField]\\\"></td>\\n                    <td>\\n                        <span *ngIf=\\\"obj['_isNew']\\\" class=\\\"badge badge-info\\\">New</span>\\n                        <span *ngIf=\\\"obj['_isEdited']\\\" class=\\\"badge badge-info\\\">Edited</span>\\n                        <input *ngIf=\\\"_actionsService.getActionAttr('radioChoice', 'isEnabled')\\\"\\n                               class=\\\"pull-right action\\\"\\n                               type=\\\"radio\\\"\\n                               name=\\\"index[]\\\"\\n                               value=\\\"{{objIndex}}\\\"/>\\n                        <input *ngIf=\\\"_actionsService.getActionAttr('checkAll', 'isEnabled')\\\"\\n                               class=\\\"pull-right action js_checkAll\\\"\\n                               type=\\\"checkbox\\\"\\n                               name=\\\"index[]\\\"\\n                               value=\\\"{{objIndex}}\\\"\\n                               [ngModel]=\\\"checkAll\\\"/>\\n                        <div class=\\\"pull-right actions no-user-select\\\" (click)=\\\"triggerAction($event)\\\">\\n                            <ng-template ngFor let-action [ngForOf]=\\\"_actionsService.getDetailActions()\\\">\\n                                <a *ngIf=\\\"_actionsService.getActionAttr(action, 'isEnabled')\\\"\\n                                   [ngClass]=\\\"[_actionsService.getActionAttr(action, 'icon')]\\\"\\n                                   class=\\\"fa\\\"\\n                                   [attr.data-action]=\\\"action\\\"\\n                                   [attr.data-value]=\\\"objIndex\\\"></a>\\n                            </ng-template>\\n                        </div>\\n                    </td>\\n                </tr></ng-template>\\n                </tbody>\\n            </table>\\n        </form>\\n    </div>\\n    </ng-template><p\\n        class=\\\"text-center\\\"\\n        *ngIf=\\\"!(_dataService.getProviderAttr('objects') && _dataService.getProviderAttr('objects')[0])\\\">No results.</p>\\n</div>\\n        <div class=\\\"ibox-footer\\\"\\n         *ngIf=\\\"_dataService.countObjects() > 0\\\"><js_searchPagination></js_searchPagination></div>\\n\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/data-box/ts/templates/data-box.component.html\n// module id = ../../../../../src/AppBundle/Resources/public/data-box/ts/templates/data-box.component.html\n// module chunks = main","import {ViewChild, ElementRef, EventEmitter, Renderer} from '@angular/core';\nimport {BaseExtensionComponent, BaseProvider} from '../../ts/base/base.extension-component';\n\n/**\n * This interface should be extended by all components that use popup but not extends \"BaseModalPopup\" class\n */\nexport interface IModalPopup {\n    onDismissEmitter: EventEmitter<any>;\n\n    /**\n     * Close popup.\n     * @param $event\n     * @param data (data to return on resolve component)\n     */\n    closeAction($event: any, data?: any): void;\n}\n\n/**\n * BaseModalPopupExt\n * Base class for custom popups.\n * All popups should extend this class.\n */\nexport abstract class BaseModalPopupExt extends BaseExtensionComponent implements IModalPopup\n{\n    onDismissEmitter: EventEmitter<any> = new EventEmitter();\n\n    constructor() { super(); }\n\n    /**\n     * Initialization of component (replace the original constructor to avoid angular injection inheritance bug)\n     * @param elementRef\n     * @param renderer\n     * @param provider\n     */\n    initBaseModalPopupExt(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        // This provider can becomes any provider defined by your child\n        // (don't need the \"inject\" because it's a static class, so will be provider by children components)\n        provider: BaseProvider\n    ) {\n        // Call parent construct\n        super.initBaseExtensionComponent(\n            elementRef,\n            renderer,\n            provider\n        );\n    }\n\n    /**\n     * Close action.\n     * @param $event\n     * @param data (data to return on resolve component)\n     */\n    public closeAction($event: any = null, data: any = null): void\n    {\n        if ($event) { $event.preventDefault(); }\n        this.onDismissEmitter.emit(data);\n    }\n}\n\n/**\n * BaseModalPopup\n * Base class for custom popups.\n * All popups should extend this class.\n */\nexport abstract class BaseModalPopup extends BaseModalPopupExt\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        // This provider can becomes any provider defined by your child\n        // (don't need the \"inject\" because it's a static class, so will be provider by children components)\n        provider: BaseProvider\n    ) {\n        // Call parent construct\n        super();\n        super.initBaseModalPopupExt(\n            elementRef,\n            renderer,\n            provider\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/modal/ts/base-modal-popup.ts","import {Component, ElementRef, Renderer} from '@angular/core';\nimport {BaseModalPopup} from './base-modal-popup';\n\n@Component({\n    selector: '.js_modalDialog',\n    template:\n    `<div class=\"modal-header\">\n        <h3 class=\"modal-title\">{{title}}</h3>\n    </div>\n    <div class=\"modal-body\">{{body}}</div>\n    <div class=\"modal-footer\">\n        <button *ngIf=\"isDialog\" class=\"btn btn-default\" (click)=\"closeAction($event, false)\">Cancel</button>\n        <button class=\"btn btn-primary\" (click)=\"closeAction($event, true)\">Ok</button>\n    </div>\n    `\n})\nexport class ModalDialogComponent extends BaseModalPopup\n{\n    protected title: string = 'Warning';\n    protected body: string = 'Are you sure';\n    protected isDialog: boolean = true;\n\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer\n    ) {\n        super(\n            elementRef,\n            renderer,\n            null\n        );\n    }\n\n    /**\n     * Set title\n     * @param title\n     * @returns {ModalDialogComponent}\n     */\n    public setTitle(title: string): ModalDialogComponent\n    {\n        this.title = title;\n        return this;\n    }\n\n    /**\n     * Set body\n     * @param body\n     * @returns {ModalDialogComponent}\n     */\n    public setBody(body: string): ModalDialogComponent\n    {\n        this.body = body;\n        return this;\n    }\n\n    /**\n     * Set isDialog\n     * @param isDialog\n     * @returns {ModalDialogComponent}\n     */\n    public setIsDialog(isDialog: boolean): ModalDialogComponent\n    {\n        this.isDialog = isDialog;\n        return this;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/modal/ts/modal-dialog.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {ModalDialogComponent} from './modal-dialog.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [ModalDialogComponent],\n    exports: [ModalDialogComponent]\n})\nexport class ModalDialogExtensionModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/modal/ts/modal-dialog.extension-module.ts","import {Component, ViewChild, ViewContainerRef, ElementRef, Host} from '@angular/core';\n\n\n// Modal sizes\nexport var ModalSizes = {\n    sm: 'sm',\n    lg: 'lg'\n};\n\n\n/**\n * Modal wrapper\n * Modal uses the bootstrap classes\n */\n@Component({\n    selector: 'js_modal',\n    template: `\n    <div class=\"modal-backdrop\"></div>\n    <div class=\"modal animated\">\n        <div class=\"modal-dialog modal-{{_size}}\">\n            <div class=\"modal-content\">\n                <ng-template #js_modalContainer></ng-template>\n            </div>\n        </div>\n    </div>\n    `,\n    host: {\n        '(document:click)': 'onDocumentClick($event)',\n    }\n})\nexport class ModalWrapperComponent {\n    // ViewContainerRef to load child\n    @ViewChild('js_modalContainer', {read: ViewContainerRef}) viewContainerRef: ViewContainerRef;\n\n    protected _size: string; // Modal size (sm, lg)\n\n    constructor(\n        protected _elementRef: ElementRef\n    ) {}\n\n    /**\n     * Get modal container ref\n     * @returns {ViewContainerRef}\n     */\n    public setSize(size: string): ModalWrapperComponent\n    {\n        this._size = this.normalizeModalSize(size);\n        return this;\n    }\n\n    /**\n     * Get modal container ref\n     * @returns {ViewContainerRef}\n     */\n    public getModalContainerRef(): ViewContainerRef\n    {\n        return this.viewContainerRef;\n    }\n\n    /**\n     * Show modal\n     */\n    public show(): void\n    {\n        // Fade in animation\n        $(this._elementRef.nativeElement).find('.modal').addClass('fadeInDown');\n    }\n\n    /**\n     * Normalize modal size to a valid option\n     * @param size\n     * @returns {string}\n     */\n    protected normalizeModalSize(size: string) {\n        return (ModalSizes[size] || ModalSizes.lg);\n    }\n\n    /**\n     * On document click event\n     */\n    protected onDocumentClick(): void\n    {\n        // @TODO implement \"Esc\" key and click over backdrop, get from viewcontainerref, index 0\n        //console.log(\"click\");\n        return;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/modal/ts/modal-wrapper.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ModalWrapperComponent} from './modal-wrapper.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [ModalWrapperComponent],\n    exports: [ModalWrapperComponent]\n})\nexport class ModalWrapperExtensionModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/modal/ts/modal-wrapper.extension-module.ts","import {Injectable, ViewContainerRef, ReflectiveInjector} from '@angular/core';\nimport {DynamicComponentLoaderService} from '../../ts/dynamic-component-loader.service';\nimport {ModalDialogExtensionModule} from './modal-dialog.extension-module';\nimport {IModalPopup, BaseModalPopupExt, BaseModalPopup} from './base-modal-popup';\nimport {ModalWrapperComponent, ModalSizes} from './modal-wrapper.component';\n\n// Re-exports\nexport {IModalPopup, BaseModalPopupExt, BaseModalPopup, ModalSizes};\n\n\n// Popup interface\nexport interface Popup {\n    module: any\n    component: string,\n    providers?: any[],\n    // Used only by ModalService to avoid create new instances of classes (services, etc.)\n    // and new injectors for the same component. Once created it is saved to use in the next few\n    injector?: any,\n    size?: string\n}\n\n\n// Alert types\nexport var AlertTypes = {\n    success: 'success',\n    info: 'info',\n    warning: 'warning',\n    error: 'error'\n};\n\n\n// Modal wrapper module\nimport {ModalWrapperExtensionModule} from './modal-wrapper.extension-module';\n\n\n/**\n * Service\n * Modal uses the Bootstrap classes\n */\n@Injectable()\nexport class ModalService {\n    protected _modalComponentFactory: any; // Modal wrapper for component\n    protected _mainViewContainerRef: ViewContainerRef; // Main ViewContainerRef for modal\n    protected _modalCounter: number = 0; // Count existent modals to controls the body scrollbar\n    protected _$body: any; // Body element to controls scrollbar\n    protected _hasInit: boolean = false; // Controls initialization\n\n    constructor(\n        protected _dynamicComponentLoaderService: DynamicComponentLoaderService\n    ) {}\n\n    /**\n     * Initialization\n     * Init modal always in the main component (so we can ensure that the mainViewContainerRef is always active,\n     * others component can be hidden or destroyed)\n     * @param viewContainerRef\n     * @returns {ModalService}\n     */\n    public init(viewContainerRef: ViewContainerRef): ModalService\n    {\n        // Initializes only once\n        if (this._hasInit) { return this; }\n\n        let that = this;\n\n        // Get factory for modal wrapper\n        this._dynamicComponentLoaderService.getComponentFactory(ModalWrapperExtensionModule, 'ModalWrapperComponent').then(\n            componentFactory => {\n                that._modalComponentFactory = componentFactory;\n            });\n\n        // Set main viewContainerRef\n        this._mainViewContainerRef = viewContainerRef;\n\n        // Set body element\n        this._$body = $('body');\n\n        this._hasInit = true;\n        return this;\n    }\n\n    /**\n     * Popup. Render component inside the popup.\n     * @param popup\n     * @param injector\n     * @returns {Promise<T>}\n     *\n     * Handling with return:\n     * ModalService.popup([parameters]).then(\n     *     data => {\n     *         data.componentRef.instance....\n     *         data.dismissPromise.then(\n     *             dismissData => {\n     *                 ...\n     *             },\n     *             errors => { console.log(errors); }\n     *         );\n     *     },\n     *     errors => { console.log(errors); }\n     * );\n     */\n    public popup(popup: Popup, injector = null): Promise<any>\n    {\n        let that = this,\n            modalComponentRef = this._mainViewContainerRef.createComponent(\n                this._modalComponentFactory,\n                this._mainViewContainerRef.length,\n                null,\n                []\n            ),\n            modalComponentInstance = <ModalWrapperComponent>modalComponentRef.instance;\n\n        /* IMPORTANT: Use this code if you need to put the component in body (to avoided positioned parent troubling)\n        let $modal = $(modalComponentInstance._elementRef.nativeElement);\n        $modal.appendTo('body');*/\n\n        // Set modal size\n        modalComponentInstance.setSize(popup.size);\n\n        // Update counter\n        if (this._modalCounter === 0) {\n            // Remove body scrollbar\n            $(this._$body).addClass('no-overflow');\n        }\n        this._modalCounter++;\n\n        // Define injector\n        if (injector && !popup.injector) {\n            let unresolvedProviders = (popup.providers || []),\n                resolvedProviders = ReflectiveInjector.resolve(unresolvedProviders);\n            popup.injector = ReflectiveInjector.fromResolvedProviders(resolvedProviders, injector);\n        }\n\n        // Create popup\n        return new Promise(function(resolve, reject) {\n            that._dynamicComponentLoaderService.load(\n                popup.module,\n                popup.component,\n                modalComponentInstance.getModalContainerRef(),\n                (popup.injector || null)\n            ).then(\n                componentRef => {\n                    let dismissPromise = new Promise(function(resolve, reject) {\n                        // Dismiss emitter\n                        let onDismissSubscription = componentRef.instance.onDismissEmitter.subscribe(\n                            data => {\n                                onDismissSubscription.unsubscribe();\n\n                                // Remove component\n                                that._mainViewContainerRef.remove(that._mainViewContainerRef.length - 1);\n                                // It's used the \"remove\" method of \"ViewContainerRef\" instead\n                                // modalComponentRef.destroy();\n\n                                // Update counter\n                                that._modalCounter--;\n                                if (that._modalCounter === 0) {\n                                    // Restore body scrollbar\n                                    $(that._$body).removeClass('no-overflow');\n                                }\n\n                                return resolve(data);\n                            }\n                        );\n                    });\n\n                    // Show modal\n                    modalComponentInstance.show();\n\n                    return resolve({\n                        componentRef: componentRef,\n                        dismissPromise: dismissPromise\n                    });\n                },\n                errors => {\n                    console.log(errors);\n                    return reject(null);\n                }\n            );\n        });\n    }\n\n    /**\n     * Dialog\n     * @param body\n     * @param title\n     * @param size\n     * @returns {Promise<T>}\n     */\n    public dialog(\n        body: string = 'Are you sure?',\n        title: string = 'Warning',\n        size = ModalSizes.sm\n    ): Promise<any> {\n        return this.modalDialog(body, title, true, size);\n    }\n\n    /**\n     * Alert\n     * @param body\n     * @param title\n     * @param size\n     * @returns {Promise<T>}\n     */\n    public alert(\n        body: string = 'Are you sure?',\n        title: string = 'Warning',\n        size = ModalSizes.sm\n    ): Promise<any> {\n        return this.modalDialog(body, title, false, size);\n    }\n\n    /**\n     * Modal Dialog (default component)\n     * @param body\n     * @param title\n     * @param isDialog\n     * @param size\n     * @returns {Promise<T>}\n     *\n     * Handling with return:\n     * ModalService.modalDialog([parameters]).then(\n     *     hasConfirm => {\n     *         // Popup response\n     *     },\n     *     errors => {\n     *         console.log(errors);\n     *     }\n     * );\n     */\n    protected modalDialog(\n        body: string = 'Are you sure?',\n        title: string = 'Warning',\n        isDialog: boolean = true,\n        size = ModalSizes.sm\n    ): Promise<any> {\n        let that = this;\n\n        return new Promise(function(resolve, reject) {\n            let popup: Popup = {\n                module: ModalDialogExtensionModule,\n                component: 'ModalDialogComponent',\n                size: size\n            };\n\n            that.popup(popup).then(\n                data => {\n                    // Set modal properties\n                    data.componentRef.instance.setTitle(title).setBody(body).setIsDialog(isDialog);\n                    data.dismissPromise.then(\n                        dismissData => { return resolve(dismissData); },\n                        errors => { console.log(errors); return reject(false); }\n                    );\n                },\n                errors => { console.log(errors); return reject(false); }\n            );\n        });\n    }\n\n    /**\n     * Normalize alert type to a valid option\n     * @param type\n     * @returns {string}\n     */\n    protected normalizeAlertType(type: string) {\n        return (AlertTypes[type] || AlertTypes.info);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/modal/ts/modal.service.ts","import {Component, Optional, ElementRef, Inject, Renderer, QueryList, ViewContainerRef, ViewChildren} from '@angular/core';\nimport {TabsExtComponent} from './tabs.ext-component';\nimport {NavManagerService, INavManager as ITabs, LazyLoadData} from '../../../ts/nav-manager/nav-manager.service';\n\n// Reexports\nexport {ITabs, LazyLoadData};\n\n\n@Component({\n    selector: '.js_tabs',\n    template: '' // Define template in child component\n})\nexport abstract class TabsComponent extends TabsExtComponent {\n    // For NavManagerService\n    @ViewChildren('js_lazyLoadContainer', {read: ViewContainerRef}) lazyLoadViewContainerRefQL: QueryList<ViewContainerRef>;\n    \n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Optional() @Inject('Provider') provider: any,\n        @Inject('HelperService') helperService: any,\n        navManagerService: NavManagerService\n    ) {\n        super();\n        super.initTabsExtComponent(\n            elementRef,\n            renderer,\n            provider || null,\n            helperService,\n            navManagerService\n        );\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngAfterViewInit()\n    {\n        // Initializes the children navigation manager service\n        this._navManagerService.init(this, this.lazyLoadViewContainerRefQL);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/tabs/ts/src/tabs.component.ts","import {Component, Optional, ElementRef, Inject, Renderer, QueryList, ViewContainerRef, ViewChildren} from '@angular/core';\nimport {BaseExtensionComponent} from '../../../ts/base/base.extension-component';\nimport {INavManager as ITabs, LazyLoadData} from '../../../ts/nav-manager/nav-manager.service';\n\n// Reexports\nexport {ITabs, LazyLoadData};\n\n\n@Component({\n    selector: '.js_tabs',\n    template: ''\n})\nexport abstract class TabsExtComponent extends BaseExtensionComponent {\n    // Constructor vars\n    protected _helperService: any;\n    protected _navManagerService: any;\n\n    // For NavManagerService\n    @ViewChildren('js_lazyLoadContainer', {read: ViewContainerRef}) lazyLoadViewContainerRefQL: QueryList<ViewContainerRef>;\n\n\n    constructor() { super(); }\n\n    initTabsExtComponent(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        provider: any,\n        helperService: any,\n        navManagerService: any\n    ) {\n        super.initBaseExtensionComponent(\n            elementRef,\n            renderer,\n            provider || null\n        );\n\n        // Constructor vars\n        this._helperService = helperService;\n        this._navManagerService = navManagerService;\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngAfterViewInit()\n    {\n        // Initializes the children navigation manager service\n        this._navManagerService.init(this, this.lazyLoadViewContainerRefQL);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/tabs/ts/src/tabs.ext-component.ts","import {Injectable, Inject} from '@angular/core';\nimport {ActionsServiceProvider} from './actions-service-provider';\n\n// Re-exports\nexport {ActionsServiceProvider};\n\n\n@Injectable()\nexport class ActionsService {\n    // Default actions values (you can use set and get methods to change defaults)\n    // (this protected properties doesn't are prefixed by '_' for rapid and simple access by this[action])\n    protected edit = {\n        icon: 'fa-pencil',\n        isEnabled: false\n    };\n    protected add = {\n        icon: 'fa-plus',\n        isEnabled: false\n    };\n    protected copy = {\n        icon: 'fa-copy',\n        isEnabled: false\n    };\n    protected thumbnail = {\n        icon: 'fa-picture-o',\n        isEnabled: false\n    };\n    protected avatar = {\n        icon: 'fa-user',\n        isEnabled: false\n    };\n    protected detail = {\n        icon: 'fa-eye',\n        isEnabled: false\n    };\n    protected cancel = {\n        icon: 'fa-ban',\n        isEnabled: false\n    };\n    protected delete = {\n        icon: 'fa-trash-o',\n        isEnabled: false\n    };\n    protected search = {\n        icon: 'fa-search',\n        isEnabled: false\n    };\n    protected refresh = {\n        icon: 'fa-refresh',\n        isEnabled: true\n    };\n    protected collapse = {\n        isEnabled: false\n    };\n    protected deleteAll = {\n        icon: 'fa-trash-o',\n        isEnabled: false\n    };\n    protected radioChoice = {\n        icon: null,\n        isEnabled: false\n    };\n    protected checkAll = {\n        icon: 'fa-check-square-o',\n        isEnabled: false\n    };\n    protected orderUp = {\n        icon: 'fa-angle-double-up',\n        isEnabled: false\n    };\n    protected orderDown = {\n        icon: 'fa-angle-double-down',\n        isEnabled: false\n    };\n    \n    protected _headActions: string[] = ['refresh', 'deleteAll', 'add', 'checkAll']; // Default actions for massive objects\n    protected _detailActions: string[] = ['orderUp', 'orderDown', 'detail', 'thumbnail', 'avatar', 'cancel', 'delete', 'copy', 'edit']; // Default actions for single object\n\n    constructor(\n        @Inject('ActionsServiceProvider') private _provider: ActionsServiceProvider\n    ) {\n        if(this._provider) {\n            for (let action in this._provider) {\n                switch (action) {\n                    case 'order':\n                        this['orderUp']['isEnabled'] = this._provider[action];\n                        this['orderDown']['isEnabled'] = this._provider[action];\n                        break;\n                    default:\n                        if (this[action]) {\n                            this[action]['isEnabled'] = this._provider[action];\n                        }\n                }\n            }\n        }\n    }\n\n    /**\n     * Get action attribute\n     * @param action\n     * @param attribute\n     * @returns {any}\n     */\n    public getActionAttr(action: string, attribute: string)\n    {\n        if(this[action] && (attribute in this[action])) {\n            return this[action][attribute];\n        }\n        return null;\n    }\n\n    /**\n     * Get head actions (actions for objects head)\n     * @returns {any}\n     */\n    public getHeadActions()\n    {\n        return this._headActions;\n    }\n\n    /**\n     * Get detail actions (actions for objects detail)\n     * @returns {any}\n     */\n    public getDetailActions()\n    {\n        return this._detailActions;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/actions/actions.service.ts","import {Component, ElementRef, Renderer, Optional} from '@angular/core';\nimport {BaseProvider} from './base-provider';\n\n// Re-exports\nexport {BaseProvider}\n\n\n/**\n * Used only as base component to be extended for others components\n */\n// Component\n@Component({\n    selector: '.js_base',\n    template: ''\n})\nexport abstract class BaseComponent {\n    constructor(\n        protected _elementRef: ElementRef,\n        protected _renderer: Renderer,\n        // This provider can becomes any provider defined by your child\n        // (don't need the \"inject\" because it's a static class, so will be provider by children components)\n        @Optional() protected _provider: BaseProvider = {}\n    ) {\n        // Set defaults\n        if (!this._provider) {\n            this._provider = {};\n        }\n\n        // Set main class\n        let mainClass = this.getProviderExtraDataAttr('class');\n        if (mainClass) {\n            this._renderer.setElementClass(\n                this._elementRef.nativeElement,\n                mainClass,\n                true\n            );\n        }\n    }\n\n    /**\n     * Get provider attribute\n     * @param attribute\n     * @returns {any|null}\n     */\n    protected getProviderAttr(attribute: string): any\n    {\n        return this._provider[attribute] || null;\n    }\n\n    /**\n     * Get provider extra data attribute\n     * @param attribute\n     * @returns {any|null}\n     */\n    public getProviderExtraDataAttr(attribute: string): any\n    {\n        return (\n            (this._provider['extraData'] && this._provider['extraData'][attribute])\n                ? this._provider['extraData'][attribute]\n                : null\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/base/base.component.ts","import {Component, ElementRef, Renderer} from '@angular/core';\nimport {BaseProvider} from './base-provider';\n\n// Re-exports\nexport {BaseProvider}\n\n\n/**\n * Used only as base component to be extended for others components\n */\n@Component({\n    selector: '.js_base',\n    template: ''\n})\nexport abstract class BaseExtensionComponent {\n    // Constructor vars\n    public _elementRef: ElementRef; // Public because the children that implement \"IForm\"\n    protected _renderer: Renderer;\n    protected _provider: BaseProvider;\n\n    /**\n     * Initialization of component (replace the original constructor to avoid angular injection inheritance bug)\n     * @param elementRef\n     * @param renderer\n     * @param provider\n     */\n    public initBaseExtensionComponent(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        // This provider can becomes any provider defined by your child\n        // (don't need the \"inject\" because it's a static class, so will be provider by children components)\n        provider: BaseProvider\n    ) {\n        // Constructor vars\n        this._elementRef = elementRef;\n        this._renderer = renderer;\n        this._provider = provider;\n\n        // Set defaults\n        if (!this._provider) {\n            this._provider = {};\n        }\n\n        // Set main class\n        let mainClass = this.getProviderExtraDataAttr('class');\n        if (mainClass) {\n            this._renderer.setElementClass(\n                this._elementRef.nativeElement,\n                mainClass,\n                true\n            );\n        }\n    }\n\n    /**\n     * Get provider attribute\n     * @param attribute\n     * @returns {any|null}\n     */\n    protected getProviderAttr(attribute: string): any\n    {\n        return this._provider[attribute] || null;\n    }\n\n    /**\n     * Get provider extra data attribute\n     * @param attribute\n     * @returns {any|null}\n     */\n    public getProviderExtraDataAttr(attribute: string): any\n    {\n        return (\n            (this._provider['extraData'] && this._provider['extraData'][attribute])\n                ? this._provider['extraData'][attribute]\n                : null\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/base/base.extension-component.ts","import {Component, ElementRef, Renderer} from '@angular/core';\nimport {BaseExtensionComponent} from '../base/base.extension-component';\nimport {BoxProvider} from './box-provider';\n\n// Re-exports\nexport {BoxProvider};\n\n\n/**\n * Box (simple base box)\n */\n@Component({\n    selector: '.js_box',\n    template: ''\n})\nexport abstract class BoxExtensionComponent extends BaseExtensionComponent {\n    // Controls the toggle of the show/hide content.\n    // It starts \"true\" otherwise the content may not be rendered correctly.\n    protected _isExpanded: boolean = true;\n\n    /**\n     * Initialization of component (replace the original constructor to avoid angular injection inheritance bug)\n     * @param elementRef\n     * @param renderer\n     * @param provider\n     */\n    public initBoxExtensionComponent(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        provider: BoxProvider\n    ) {\n        super.initBaseExtensionComponent(\n            elementRef,\n            renderer,\n            provider\n        );\n    }\n\n    /**\n     * Expander action. Used by expanded directive output.\n     * @param isExpanded (value returned by the expander directive on change)\n     */\n    protected expanderAction(isExpanded: boolean): void\n    {\n        this._isExpanded = isExpanded;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/box/box.extension-component.ts","import {Injectable, Inject, EventEmitter} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {PostService} from '../post.service';\nimport {DataServiceProvider, Search} from './data-service-provider';\n\n// Re-exports\n// This classes are in different file because import loops\n// (HelperServices uses DataServiceProvider and DataService uses HelperService)\nexport {DataServiceProvider, Search};\n\n// OrderTypes\nexport var OrderTypes = {\n    up: 'up',\n    down: 'down'\n};\n\n\n@Injectable()\nexport class DataService {\n    // Current object (used by form)\n    protected _objectIndex: number = null; // Index of object in provider.objects (or in _objectsProvider if defined)\n    protected _object: any = null; // Raw object\n    protected _normalizedObject: any = null; // Object normalized to template\n\n    // Objects provider is the context to work/handle with object instead of provider.objects\n    // (used in TreeViewDataService, in this case the context is always provider.objects)\n    protected _objectsProvider: any = null;\n\n    protected _objectsIds: number[] = []; // Array of \"ids\" of objects in provider.objects.value to avoid duplications\n    protected _newObjectsIds: number[] = []; // Array of \"ids\" with new objects added by the user\n\n    protected _onObjectChangeEmitter: EventEmitter<any>; // When the selected object change\n    protected _onObjectsRefreshEmitter: EventEmitter<any>; // When list of objects change\n    protected _onObjectsChangeEmitter: EventEmitter<any>; // When objects change, from add, refresh, delete, etc (useful when you need to update parent)\n\n    protected _candidateSearch: Search; // Candidate to new search with modified parameters\n\n\n    constructor(\n        protected _postService: PostService,\n        @Inject('HelperService') protected _helperService: any,\n        @Inject('DataServiceProvider') protected _provider: DataServiceProvider,\n        private _sanitizer: DomSanitizer\n    ) {\n        if (this._provider['pin']) {\n            this.pinProvider();\n        }\n\n        this._onObjectChangeEmitter = new EventEmitter();\n        this._onObjectsRefreshEmitter = new EventEmitter();\n        this._onObjectsChangeEmitter = new EventEmitter();\n\n        this.setObjects(this._provider.objects || []);\n\n        // Initialize the search\n        this.initSearch();\n    }\n\n    /**\n     * Pin provider, turning provider on an exclusive copy for this service.\n     * It's useful when you have multiple DataServices in the same injector, so you can have multiple\n     * problems if you share the same DataServiceProvider between them.\n     * @returns {DataService}\n     */\n    protected pinProvider(): DataService\n    {\n        this._provider = this._helperService.cloneObject(this._provider, true);\n        return this;\n    }\n\n    /**\n     * Count objects (used in pagination)\n     * @returns {number}\n     */\n    public countObjects(): number\n    {\n        return this._helperService.varCount(this._provider.objects || []);\n    }\n\n    /**\n     * Get object\n     * @returns any\n     */\n    public getObject(): any\n    {\n        return this._object;\n    }\n\n    /**\n     * Get object index\n     * @returns any\n     */\n    public getObjectIndex(): any\n    {\n        return this._objectIndex;\n    }\n\n    /**\n     * Get selected object (object normalized to view)\n     * @returns {any}\n     */\n    public getNormalizedObject(): any\n    {\n        return this._normalizedObject;\n    }\n\n    /**\n     * Get new objects\n     * @returns {any}\n     */\n    public getNewObjects(): any\n    {\n        return this._newObjectsIds;\n    }\n\n    /**\n     * Get selected object emitter to tell all subscribers about changes\n     * @returns {EventEmitter<any>}\n     */\n    public getOnObjectChangeEmitter() {\n        return this._onObjectChangeEmitter;\n    }\n\n    /**\n     * Get on objects refresh emitter to tell all subscribers about changes\n     * @returns {EventEmitter<any>}\n     */\n    public getOnObjectsRefreshEmitter() {\n        return this._onObjectsRefreshEmitter;\n    }\n\n    /**\n     * Get on objects change emitter to tell all subscribers about changes (add, refresh, delete, etc)\n     * @returns {EventEmitter<any>}\n     */\n    public getOnObjectsChangeEmitter() {\n        return this._onObjectsChangeEmitter;\n    }\n\n    /**\n     * Get route\n     * @param route\n     * @returns {null}\n     */\n    public getRoute(route: string)\n    {\n        if (route in this._provider.route) {\n            return this._provider.route[route]['url'];\n        }\n        return null;\n    }\n\n    /**\n     * Set route\n     * @param index\n     * @param url\n     * @param name\n     * @returns {DataService}\n     */\n    public setRoute(index: string, url: string, name: string = null): DataService\n    {\n        // Set new route if not exists\n        if (!(index in this._provider.route)) {\n            this._provider.route[index] = {name: null, route: null};\n        }\n\n        // Set values\n        if (name) { this._provider.route[index]['name'] = name; }\n        if (url) { this._provider.route[index]['url'] = url; }\n\n        return this;\n    }\n\n    /**\n     * Refresh selected object\n     * @returns {DataService}\n     */\n    public refreshObject(): DataService\n    {\n        let id = (this._object ? this._object['id'] : null);\n\n        if (id) {\n            let that = this,\n                route = (this._provider.route['get']['url'] + '/' + id);\n\n            this.post(route, this.getRequestData(null, false, false)).then(\n                data => {\n                    // Local data (do not override, merge data)\n                    if (data['localData']) {\n                        that._provider.localData = that._helperService.mergeObjects(\n                            that._provider.localData,\n                            data['localData']\n                        );\n                    }\n\n                    let obj = (data.object || null);\n                    // Refresh object\n                    if (obj) {\n                        that.setObject(data.object, that._objectIndex);\n                    }\n                },\n                errors => { console.log(errors); }\n            );\n        }\n\n        return this;\n    }\n\n    /**\n     * Select object\n     * @param index\n     * @returns {Promise}\n     */\n    public selectObject(index: any): Promise<any>\n    {\n        let that = this;\n\n        return new Promise(function(resolve, reject) {\n            // Set only if object is different\n            if(index != that._objectIndex) {\n                let objectsProvider = (that._objectsProvider || that._provider.objects);\n\n                that._postService.post(\n                    that._provider.route['get']['url'] + '/' + objectsProvider[index]['id'],\n                    that.getRequestData(null, false, false)\n                ).then(\n                    data => {\n                        // Local data (do not override, merge data)\n                        if (data['localData']) {\n                            that._provider.localData = that._helperService.mergeObjects(\n                                that._provider.localData,\n                                data['localData']\n                            );\n                        }\n\n                        // Object\n                        that._objectIndex = index; // The index of original object that was selected\n                        that.setLocalObject(data.object);\n\n                        // Now object has all of fields with the values, is not limited to the search selected field,\n                        // so we need normalize the object, because now it can has new values.\n                        that.setNormalizedObject();\n\n                        return resolve(true);\n                    },\n                    errors => { reject(false); });\n            } else {\n                return resolve(true);\n            }\n        });\n    }\n\n    /**\n     * Set object (when the object is changed out of the objects array from _provider,\n     * can be an external order)\n     * @param object\n     * @param index\n     * @returns any\n     */\n    public setObject(object: any, index: any = null): any\n    {\n        if (object) {\n            // Normalize object to template\n            this._normalizedObject = this._helperService.cloneObject(object, true);\n            this.normalizeObjectsToTemplate([this._normalizedObject]);\n\n            // Objects stored in session does not be considered really objects.\n            if (object['id'] && !object['_isSessionStorage']) {\n                let objectsProvider = (this._objectsProvider || this._provider.objects);\n\n                // Refresh objects array\n                if ((index != null) && objectsProvider[index]) {\n                    // Update existent object\n                    this._objectIndex = index;\n                    this._normalizedObject['_isEdited'] = true; // Flag to use in template\n                    objectsProvider[index] = this._normalizedObject;\n                    // Emmit changes (object has been edited in objects list)\n                    this._onObjectsChangeEmitter.emit(null);\n                } else {\n                    // Add new object at first of array (to best user experience)\n                    this._objectIndex = 0; // Update index to the new index\n                    this._normalizedObject['_isNew'] = true; // Flag to use in template\n                    this.pushToObjects([this._normalizedObject], true);\n                    this._newObjectsIds.push(object['id']); // New object added\n                }\n            }\n\n            this.setLocalObject(object);\n        }\n\n        return this;\n    }\n\n    /**\n     * Set normalized object (can be called out of the service).\n     * Used by \"auto-complete\".\n     * @param object\n     * @returns any\n     */\n    public setNormalizedObject(object: any = null): any\n    {\n        let objectsProvider = (this._objectsProvider || this._provider.objects);\n        object = (object || this._object);\n\n        if (object) {\n            // Normalize object to template\n            this._normalizedObject = this._helperService.cloneObject(object, true);\n            this.normalizeObjectsToTemplate([this._normalizedObject]);\n\n            // Update normalized object in objects provider\n            if ((this._objectIndex != null) && objectsProvider[this._objectIndex]) {\n                objectsProvider[this._objectIndex] = this._normalizedObject;\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Set local object (when the object is changed based in the objects array from _provider,\n     * always is an internal order)\n     * @param object\n     * @returns {DataService}\n     */\n    protected setLocalObject(object: any): DataService\n    {\n        this._object = object;\n        this._onObjectChangeEmitter.emit(this._object);\n        return this;\n    }\n\n    /**\n     * Search initialization\n     * @returns {DataService}\n     */\n    protected initSearch(): DataService\n    {\n        this._candidateSearch = this._helperService.cloneObject(this._provider['search'], true);\n        return this;\n    }\n\n    /**\n     * Set search\n     * @param value\n     * @param attribute\n     * @returns {DataService}\n     */\n    public setSearch(value: any, attribute: string = null): DataService\n    {\n        if (attribute && (attribute in this._provider.search)) {\n            this._provider.search[attribute] = value;\n        } else if (attribute) {\n            return this; // Unknown attribute\n        } else {\n            this._provider.search = value;\n        }\n\n        // Reinitialize the search\n        this.initSearch();\n        \n        return this;\n    }\n\n    /**\n     * Get search\n     * @param attribute\n     * @returns any\n     */\n    public getSearch(attribute: string = null): any\n    {\n        if (attribute && (attribute in this._provider.search)) {\n            return this._provider.search[attribute];\n        } else if (attribute) {\n            return null; // Unknown attribute\n        }\n        return this._provider.search;\n    }\n\n    /**\n     * Get fields\n     * @param attribute\n     * @returns any\n     */\n    public getFields(attribute: string = null): any\n    {\n        if (attribute && (attribute in this._provider.fields)) {\n            return this._provider.fields[attribute];\n        } else if (attribute) {\n            return null; // Unknown attribute\n        }\n        return this._provider.fields;\n    }\n\n    /**\n     * Set objects\n     * @param objects\n     * @param isMerge (if true merge objects, otherwise replace them)\n     * @returns any\n     */\n    public setObjects(objects: any, isMerge: boolean = false): any\n    {\n        objects = (objects || []);\n\n        this.normalizeObjectsToTemplate(objects);\n\n        // Merge objects\n        if (isMerge) {\n            this.pushToObjects(objects);\n        } else { // Replace objects\n            this.resetObjects();\n            this.pushToObjects(objects);\n        }\n\n        // Emmit changes\n        this._onObjectsRefreshEmitter.emit(objects);\n\n        return this;\n    }\n\n    /**\n     * Reset objects\n     * @returns {DataService}\n     */\n    protected resetObjects() {\n        this._provider.objects = [];\n        this._objectsIds = [];\n        this._newObjectsIds = [];\n        this._objectIndex = null; // Reset object index\n        return this;\n    }\n\n    /**\n     * Push to objects\n     * @param objects\n     * @param isFirst (determines if objects should be at first)\n     * @returns any\n     */\n    protected pushToObjects(objects: any, isFirst: boolean = false): any\n    {\n        let //hasChanges = false, // To control the changes emitter\n            objectsProvider = (this._objectsProvider || this._provider.objects);\n\n        for (let obj of objects) {\n            if (!this._helperService.inArray(parseInt(obj['id']), this._objectsIds)) {\n                if (isFirst) {\n                    objectsProvider.unshift(obj);\n                } else {\n                    objectsProvider.push(obj);\n                }\n                this._objectsIds.push(parseInt(obj['id']));\n                //hasChanges = true;\n            }\n        }\n\n        // Emmit changes (object has been added)\n        this._onObjectsChangeEmitter.emit(null);\n\n        return this;\n    }\n\n    /**\n     * Pull from objects\n     * @param index\n     * @returns any\n     */\n    protected pullFromObjects(index: any): any\n    {\n        let objectsProvider = (this._objectsProvider || this._provider.objects),\n            objId = parseInt(objectsProvider[index]['id']);\n\n        objectsProvider.splice(index, 1);\n\n        if ((index = this._helperService.arraySearch(objId, this._objectsIds)) != null) {\n            this._objectsIds.splice(index, 1);\n        }\n        if ((index = this._helperService.arraySearch(objId, this._newObjectsIds)) != null) {\n            this._newObjectsIds.splice(index, 1);\n        }\n\n        // Emmit changes (object has been deleted)\n        this._onObjectsChangeEmitter.emit(null);\n\n        return this;\n    }\n\n    /**\n     * Get field choice\n     * @param field\n     * @param key (key of field choice)\n     * @returns {*|null}\n     */\n    public getFieldChoice(field: string, key = null)\n    {\n        // Return a specific field choice by key\n        if (key in this._provider.fieldsChoices[field]['value']) {\n            return this._provider.fieldsChoices[field]['value'][key];\n        }\n        return null\n    }\n\n    /**\n     * Get field choices attribute\n     * @param field\n     * @param attribute\n     * @returns {any}\n     */\n    public getFieldChoicesAttr(field: string, attribute: string)\n    {\n        // Return a specific attribute of field choices\n        if (this._provider.fieldsChoices[field] && (attribute in this._provider.fieldsChoices[field])) {\n            return this._provider.fieldsChoices[field][attribute];\n        }\n        return null\n    }\n\n    /**\n     * Get field choices\n     * @param field\n     * @returns {*|null}\n     */\n    public getFieldChoices(field: string)\n    {\n        return this._provider.fieldsChoices[field]['value'] || null;\n    }\n\n    /**\n     * Set fields choices.\n     * @param fieldsChoices\n     * @returns {DataService}\n     */\n    public setFieldsChoices(fieldsChoices): DataService\n    {\n        this._provider.fieldsChoices = fieldsChoices;\n        return this;\n    }\n\n    /**\n     * Merge provider attribute\n     * @param attribute\n     * @param value\n     * @returns {DataService}\n     */\n    public mergeProviderAttr(attribute: string, value: any): DataService\n    {\n        if (attribute in this._provider) {\n            this._provider[attribute] =\n                this._helperService.mergeObjects(this._provider[attribute], value);\n        }\n        return this;\n    }\n\n    /**\n     * Set provider attribute\n     * @param attribute\n     * @param value\n     * @returns {DataService}\n     */\n    public setProviderAttr(attribute: string, value: any): DataService\n    {\n        if (attribute in this._provider) {\n            this._provider[attribute] = value;\n        }\n        return this;\n    }\n\n    /**\n     * Get provider attribute\n     * @param attribute\n     * @returns {any|null}\n     */\n    public getProviderAttr(attribute: string): any\n    {\n        return this._provider[attribute] || null;\n    }\n\n    /**\n     * Get provider extra data attribute\n     * @param attribute\n     * @returns {any|null}\n     */\n    public getProviderExtraDataAttr(attribute: string): any\n    {\n        return (\n            (this._provider['extraData'] && this._provider['extraData'][attribute])\n                ? this._provider['extraData'][attribute]\n                : null\n        );\n    }\n\n    /**\n     * Get candidate search\n     * @returns any\n     */\n    public getCandidateSearch(): any\n    {\n        return (this._candidateSearch || null);\n    }\n\n    /**\n     * Get candidate search attribute\n     * @param attribute\n     * @returns any\n     */\n    public getCandidateSearchAttr(attribute: string): any\n    {\n        return this._candidateSearch[attribute] || null;\n    }\n\n    /**\n     * Reset extra fields\n     * @returns {DataService}\n     */\n    protected resetExtraFields(): DataService\n    {\n        if (this.getProviderExtraDataAttr('fields')) {\n            for (let field in this.getProviderExtraDataAttr('fields')) {\n                this._provider.extraData.fields[field] = null;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Normalize objects to show in template\n     * Detect fields that needs to be rendered to view/template\n     * @param objects\n     * @param fields\n     * @returns any\n     */\n    protected normalizeObjectsToTemplate(objects: any = null, fields: any[] = null): any\n    {\n        objects = (objects || this._provider.objects);\n        fields = (fields || this._provider.fields['view']);\n\n        if(objects && fields) {\n            for (let field of fields) {\n                let fieldMetadata = this._provider.fields['metadata'][field];\n                if (fieldMetadata['skipNormalizer']) { continue; }\n\n                switch (fieldMetadata['type']) {\n                    case 'boolean':\n                    case 'code':\n                    case 'percentage':\n                    case 'monetary':\n                    case 'icon':\n                    case 'link':\n                    case 'img':\n                    case 'avatar':\n                    case 'status':\n                        for (let obj of objects) {\n                            if (typeof obj[field] != 'undefined') { // Can be undefined, if the search doest have the field selected\n                                obj[field] = this.renderField(field, obj);\n                            }\n                        }\n                        break;\n                }\n\n                // For \"enum\" type (key is the label, pattern of Symfony ChoiceType)\n                if (this._provider.fieldsChoices\n                    && this._provider.fieldsChoices[field]\n                    && this._provider.fieldsChoices[field]['value']\n                ) {\n                    let enumObj = this._provider.fieldsChoices[field]['value'];\n                    for (let obj of objects) {\n                        for (let enumKey in enumObj) {\n                            if (enumObj[enumKey] == obj[field]) {\n                                obj[field] = enumKey;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Render field\n     * @param field\n     * @param object\n     * @returns {string}\n     */\n    public renderField(field: string, object: any): any\n    {\n        // Get field metadata\n        let fieldMetadata = (this._provider.fields['metadata'][field] || null),\n            value = object[field];\n\n        // Render field to the view/template\n        if(fieldMetadata) {\n            switch (fieldMetadata['type']) {\n                case 'boolean':\n                    if (this._helperService.castToBoolean(value)) {\n                        return ('<i class=\"fa fa-check\"></i>');\n                    } else {\n                        return ('<i class=\"fa fa-ban\"></i>');\n                    }\n                case 'code':\n                    if (object['storeObj']\n                        && this._helperService.getAppVar('stores')\n                        && this._helperService.getAppVar('stores')[object['storeObj']]\n                    ) {\n                        return this._sanitizer.bypassSecurityTrustHtml( // Used to allow the style attr\n                            '<span class=\"store\" style=\"background-color: '\n                            + this._helperService.getAppVar('stores')[object['storeObj']]['color']\n                            + '\">' + value + '</span>'\n                        );\n                    }\n                    return (value);\n                case 'percentage':\n                    return (value + '%');\n                case 'monetary':\n                    return (value + '€');\n                case 'icon':\n                    return ('<i class=\"fa ' + value + '\"></i>');\n                case 'link':\n                    return ('<a href=\"' + value + '\" target=\"_blank\">' + value + '</a>');\n                case 'img':\n                case 'avatar':\n                    let extraClass = ((fieldMetadata['type'] == 'avatar') ? 'img-circle' : 'thumbnail');\n                    return (value\n                        ? ('<img alt=\"'+fieldMetadata['label']+'\" class=\"'+extraClass+'\" src=\"'\n                            + (this._helperService.getUploadWebPath(value) || value)\n                            + '\">')\n                        : null);\n                case 'status':\n                    let statusMap = {'NO': 'danger', 'PARTIAL': 'warning', 'YES': 'primary'};\n                    return ('<span class=\"status -' + (statusMap[value] || 'danger') + '\"></span>');\n            }\n        }\n\n        return value;\n    }\n\n    /**\n     * New object (call this function to create a new object)\n     * @param index (to create object based on another)\n     * @param object (to create object based on a pre existent object)\n     * @returns {Promise}\n     */\n    public newObject(index: any = null, object: any = null): Promise<any> {\n        let that = this;\n\n        return new Promise(function(resolve, reject) {\n            if (object) {\n                // Objects has pre existent data (for example can be from backend session storage)\n                that.setNewObject(object);\n                return resolve(true);\n            }\n\n            let newObj = {};\n            // Create by copy\n            if (index != null) {\n                let objectsProvider = (that._objectsProvider || that._provider.objects);\n\n                return that._postService.post(\n                    that._provider.route['get']['url'] + '/' + objectsProvider[index]['id'],\n                    that.getRequestData()\n                ).then(\n                    data => {\n                        for (let field of that._provider.fields['form']) {\n                            newObj[field] = ((that._provider.fields['metadata'][field]['acl'] === 'read')\n                                    ? (that._provider.fields['metadata'][field]['default'] || null)\n                                    : (data.object[field] || null)\n                            );\n                            // \"fieldInView\" (for auto-complete, html-select, etc.)\n                            if (that._provider.fields['metadata'][field]['fieldInView'] && newObj[field]) {\n                                let fieldInView = that._provider.fields['metadata'][field]['fieldInView'];\n                                newObj[fieldInView] = data.object[fieldInView];\n                            }\n                        }\n                        that.setNewObject(newObj);\n                        return resolve(true);\n                    },\n                    errors => { console.log(errors); return reject(false); }\n                );\n            } else {\n                // Create by server action\n                if (that._provider.route['new']) {\n                    return that._postService.post(\n                        that._provider.route['new']['url'],\n                        that.getRequestData()\n                    ).then(\n                        data => {\n                            // Local data (do not override, merge data)\n                            if (data['localData']) {\n                                that._provider.localData = that._helperService.mergeObjects(\n                                    that._provider.localData,\n                                    data['localData']\n                                );\n                            }\n\n                            // Object\n                            that.setNewObject(data.object);\n                            return resolve(true);\n                        },\n                        errors => { console.log(errors); return reject(false); }\n                    );\n                }\n                // Create empty object\n                else {\n                    for (let field of that._provider.fields['form']) {\n                        newObj[field] = (that._provider.fields['metadata'][field]['default'] || null);\n                    }\n                    that.setNewObject(newObj);\n                    return resolve(true);\n                }\n            }\n        });\n    }\n\n    /**\n     * Set new object\n     * @param object\n     * @returns {DataService}\n     */\n    protected setNewObject(object: any) {\n        // Normalize object to template\n        this._normalizedObject = this._helperService.cloneObject(object, true);\n        this.normalizeObjectsToTemplate([this._normalizedObject]);\n\n        // Set object\n        this._objectIndex = null;\n        this.setLocalObject(object);\n\n        this.resetExtraFields();\n\n        return this;\n    }\n\n    /**\n     * Save object.\n     * @param data\n     * @param id\n     * @param route (specific route to save)\n     * @returns {Promise}\n     */\n    public save(data: any, id = null, route = null): Promise<any>\n    {\n        let that = this;\n\n        return new Promise(function(resolve, reject) {\n            // Set route (if id is provided, use 'edit', else try 'add')\n            if (!route) {\n                let routeName = (id ? 'edit' : (that._provider.route['add'] ? 'add' : 'edit'));\n                route = (that._provider.route[routeName] ? that._provider.route[routeName]['url'] : null);\n                if (!route) {\n                    console.log('Error: No route was defined!');\n                    return reject({});\n                }\n            }\n            if (id) { route += ('/' + id); }\n\n            that.post(route, that.getRequestData(data)).then(\n                data => {\n                    // Refresh all objects\n                    if (data.objects) {\n                        that.setObjects(data.objects);\n                    }\n\n                    // Refresh fields choices\n                    if (data.fieldsChoices) {\n                        that.setFieldsChoices(data.fieldsChoices);\n                    }\n\n                    // Local data (do not override, merge data)\n                    if (data['localData']) {\n                        that._provider.localData = that._helperService.mergeObjects(\n                            that._provider.localData,\n                            data['localData']\n                        );\n                    }\n\n                    let obj = (data.object || null);\n                    // Refresh object\n                    if (obj) {\n                        that.setObject(data.object, that._objectIndex);\n                    }\n\n                    return resolve(obj);\n                },\n                errors => {\n                    // Local data (do not override, merge data). Exception in errors list used in some cases.\n                    if (errors['localData']) {\n                        that._provider.localData = that._helperService.mergeObjects(\n                            that._provider.localData,\n                            errors['localData']\n                        );\n                        delete errors['localData']; // It's no more necessary\n                    }\n\n                    // Refresh object\n                    if (errors['object']) {\n                        that.setObject(errors['object'], that._objectIndex);\n                        delete errors['object']; // It's no more necessary\n                    }\n\n                    return reject(errors);\n                }\n            );\n        });\n    }\n\n    /**\n     * Search objects\n     * @returns {DataService}\n     */\n    public search(): DataService\n    {\n        // Only search if parameters have changed\n        if (this._helperService.isEqualObject(this._provider['search'], this._candidateSearch)) {\n            return this;\n        }\n\n        // Update search\n        this._provider['search'] = this._helperService.cloneObject(this._candidateSearch, true);\n        // Refresh objects\n        return this.refresh();\n    }\n\n    /**\n     * Refresh list of objects\n     * @returns {DataService}\n     */\n    public refresh(): DataService\n    {\n        let that = this;\n\n        // Reset pagination for new search\n        this.resetPagination();\n\n        this.post(\n            this._provider.route['get']['url'],\n            this.getRequestData(null, false)\n        ).then(\n            data => {\n                // Update list of objects\n                that.setObjects(data.objects || null);\n                that.setFieldsChoices(data.fieldsChoices || null);\n            },\n            errors => { console.log(errors); }\n        );\n\n        return this;\n    }\n\n    /**\n     * Get more objects (pagination)\n     * @returns {DataService}\n     */\n    public getMoreObjects(): DataService\n    {\n        let that = this;\n\n        this.post(\n            this._provider.route['get']['url'],\n            this.getRequestData()\n        ).then(\n            data => {\n                // Update list of objects\n                that.setObjects(data.objects || [], true);\n            },\n            errors => { console.log(errors); }\n        );\n\n        return this;\n    }\n\n    /**\n     * Get choices of entity based on search configuration (for select, auto-complete, etc.)\n     * @returns {DataService}\n     */\n    public choices(): DataService\n    {\n        let that = this,\n            noReset = true;\n\n        // Only search if parameters have changed (only criteria is changed)\n        if (!this._helperService.isEqualObject(this._provider['search']['criteria'], this._candidateSearch['criteria'])) {\n            // Update search\n            this._provider['search']['criteria'] = this._helperService.cloneObject(this._candidateSearch['criteria'], true);\n            // Reset pagination for new search\n            this.resetPagination();\n            // To reset objects\n            noReset = false;\n        }\n\n        // No field is necessary, is returned the choices pattern (minimizes data sent)\n        this._provider['search']['fields'] = [];\n\n        this.post(\n            this._provider.route['choices']['url'],\n            this.getRequestData(null, noReset)\n        ).then(\n            data => {\n                // Update list of objects\n                that.setObjects(data.objects || [], noReset);\n            },\n            errors => { console.log(errors); }\n        );\n\n        return this;\n    }\n\n    /**\n     * Order object (change priority value).\n     * @param index\n     * @param type\n     * @returns any\n     */\n    public order(index: any, type: string): any\n    {\n        let that = this,\n            objectsProvider = (this._objectsProvider || this._provider.objects);\n\n        if (OrderTypes[type] // Validate order type\n            // If priority is already in the max value (0), then 'up' doesn't make sense.\n            && ((objectsProvider[index]['priority'] > 0) || (OrderTypes[type] == 'down'))\n        ) {\n            this.post(\n                (this._provider.route['order']['url'] + '/' + objectsProvider[index]['id'] + '/' + OrderTypes[type]),\n                that.getRequestData()\n            ).then(\n                data => {\n                    // Refresh all objects\n                    if (data.objects) {\n                        that.setObjects(data.objects);\n                    }\n\n                    // Refresh fields choices\n                    if (data.fieldsChoices) {\n                        that.setFieldsChoices(data.fieldsChoices);\n                    }\n\n                    let obj = (data.object || null);\n                    // Refresh object\n                    if (obj) {\n                        that.setObject(obj, index);\n\n                        // If objects are not returned, then order objects by \"search\" \"orderBy\" provider\n                        if (!data.objects) {\n                            // Get fields from search\n                            let orderFields = that._provider.search.orderBy.map(function($item) {\n                                return $item['field'];\n                            });\n                            that._helperService.orderObjects(that._provider.objects, orderFields);\n                        }\n                    }\n                },\n                errors => {\n                    console.log(errors);\n                }\n            );\n        }\n\n        return this;\n    }\n\n    /**\n     * Cancel object.\n     * @param index\n     * @returns {Promise}\n     */\n    public cancel(index: any): Promise<any>\n    {\n        let that = this,\n            objectsProvider = (this._objectsProvider || this._provider.objects);\n\n        return new Promise(function(resolve, reject) {\n            that.post(\n                that._provider.route['cancel']['url'] + '/' + objectsProvider[index]['id'],\n                that.getRequestData()\n            ).then(\n                data => {\n                    // Refresh all objects\n                    if (data.objects) {\n                        that.setObjects(data.objects);\n                    }\n\n                    // Refresh fields choices\n                    if (data.fieldsChoices) {\n                        that.setFieldsChoices(data.fieldsChoices);\n                    }\n\n                    let obj = (data.object || null);\n                    // Refresh object\n                    if (obj) {\n                        that.setObject(obj, index);\n                    }\n\n                    return resolve(true);\n                },\n                errors => { return reject(false); }\n            );\n        });\n    }\n\n    /**\n     * Delete object.\n     * @param index\n     * @returns {Promise}\n     */\n    public delete(index: any): Promise<any>\n    {\n        let that = this,\n            objectsProvider = (this._objectsProvider || this._provider.objects);\n\n        return new Promise(function(resolve, reject) {\n            that.post(\n                that._provider.route['delete']['url'] + '/' + objectsProvider[index]['id'],\n                that.getRequestData()\n            ).then(\n                data => {\n                    // Refresh all objects\n                    if (data.objects) {\n                        that.setObjects(data.objects);\n                    } else {\n                        // Refresh objects array removing the removed object\n                        that.pullFromObjects(index);\n                    }\n\n                    // Refresh fields choices\n                    if (data.fieldsChoices) {\n                        that.setFieldsChoices(data.fieldsChoices);\n                    }\n\n                    // Reset object index\n                    that._objectIndex = null;\n\n                    return resolve(true);\n                },\n                errors => { return reject(false); }\n            );\n        });\n    }\n\n    /**\n     * Delete objects from array by index.\n     * @param indexes\n     * @returns {DataService}\n     */\n    public deleteArray(indexes: any): DataService\n    {\n        let that = this;\n        let objects = this._provider.objects;\n        let idArr = [];\n\n        if (objects && indexes && (indexes.length > 0)) {\n            for (let index of indexes) {\n                index = index.value;\n                if (objects[index]) {\n                    idArr.push(objects[index]['id']);\n                }\n            }\n        }\n\n        this.post(\n            this._provider.route['delete']['url'],\n            this.getRequestData({id: idArr})\n        ).then(\n            data => {\n                // Refresh fields choices\n                if (data.fieldsChoices) {\n                    that.setFieldsChoices(data.fieldsChoices);\n                }\n\n                // Refresh objects array\n                // Correction for index (each time you remove an index, all indices needs to be corrected)\n                let indexCorrection = 0;\n                for (let index of indexes) {\n                    index = index.value;\n                    if (objects[index]) {\n                        that.pullFromObjects(index - indexCorrection);\n                        indexCorrection++;\n                    }\n                }\n            },\n            errors => { console.log(errors); }\n        );\n\n        return this;\n    }\n\n    /**\n     * Detail object.\n     * @param index\n     */\n    public detail(index: any = null): void\n    {\n        return this.redirect('detail', index);\n    }\n\n    /**\n     * Redirect page.\n     * @param route\n     * @param index\n     */\n    public redirect(route: string, index: any = null): void\n    {\n        index = ((index == null) ? this._objectIndex : index);\n        let objectsProvider = (this._objectsProvider || this._provider.objects);\n\n        location.href = (this._provider.route[route]['url'] + '/' + objectsProvider[index]['id']);\n        return;\n    }\n\n    /**\n     * Run/Execute action. Execute action directly.\n     * @param route\n     * @param data\n     * @param updateData\n     * @returns {Promise}\n     */\n    public runAction(route: string, data: any = null, updateData: boolean = false): Promise<any> {\n        let that = this;\n\n        return new Promise(function(resolve, reject) {\n            return that.post(route, that.getRequestData(data, false, false)).then(\n                data => {\n                    if (updateData) {\n                        // Local data (do not override, merge data)\n                        if (data['localData']) {\n                            that._provider.localData = that._helperService.mergeObjects(\n                                that._provider.localData,\n                                data['localData']\n                            );\n                        }\n\n                        // Refresh object\n                        if (data['object']) {\n                            that.setObject(data.object, that._objectIndex);\n                        }\n                    }\n\n                    return resolve(data);\n                },\n                errors => { return reject(errors); }\n            );\n        });\n    }\n\n    /**\n     * Submit indexes id\n     * @param route\n     * @param indexes\n     * @param allowEmptySubmit (allow submit when data is empty,\n     * some cases it is necessary to inform that the user does not select any choice)\n     * @returns {Promise}\n     */\n    public submitIndexesId(route: string, indexes: any, allowEmptySubmit: boolean = false): Promise<any>\n    {\n        let that = this;\n        let objects = this._provider.objects;\n        let idArr = [];\n\n        return new Promise(function(resolve, reject) {\n            if (objects && indexes && (indexes.length > 0)) {\n                for (let index of indexes) {\n                    if (objects[index.value]) {\n                        idArr.push(objects[index.value]['id']);\n                    }\n                }\n            }\n\n            if  ((idArr.length > 0) || allowEmptySubmit) {\n                // Submit to provided route\n                return that.runAction(route, {id: idArr}).then(\n                    data => { return resolve(data); },\n                    errors => { return reject(errors); }\n                );\n            } else {\n                // No indexes to submit\n                return resolve(null);\n            }\n        });\n    }\n\n    /**\n     * Post to server.\n     * @param url\n     * @param data\n     * @returns {Promise}\n     */\n    public post(url: string, data: any = null): Promise<any>\n    {\n        let that = this;\n\n        return new Promise(function(resolve, reject) {\n            return that._postService.post(\n                url,\n                data\n            ).then(\n                data => {\n                    // Update search\n                    if (data['search'] && (typeof data['search']['hasMore'] != 'undefined')) {\n                        // Equals search in provider and candidate search to avoid return false\n                        // in comparisons doing unnecessary searches.\n                        that._candidateSearch.hasMore = that._provider.search.hasMore\n                            = that._helperService.castToBoolean(data['search']['hasMore']);\n                        that._candidateSearch.offset = that._provider.search.offset\n                            = (data['search']['offset'] || 0);\n                    }\n\n                    return resolve(data);\n                },\n                errors => { return reject(errors); }\n            );\n        });\n    }\n\n    /**\n     * Get data to request\n     * @param data\n     * @param updatePagination (determines if pagination should be updated before return request data)\n     * @param hasSearch (determines if search is sent)\n     * @returns {any}\n     */\n    public getRequestData(data: any = null, updatePagination: boolean = true, hasSearch: boolean = true): any\n    {\n        // Update pagination\n        if (updatePagination) {\n            this.updatePagination();\n        }\n\n        if (!data || (typeof data == 'object')) {\n            return {\n                csrfToken: this._helperService.getAppVar('csrfToken'),\n                search: (hasSearch ? this._provider['search'] : null),\n                data: data\n            }\n        }\n\n        // If data is provided it's assume that is a serialized form\n        return (data + '&search=' + JSON.stringify(this._provider['search']));\n    }\n\n    /**\n     * Reset pagination offset\n     * @returns {DataService}\n     */\n    protected resetPagination(): DataService\n    {\n        this._provider.search.offset = 0;\n        return this;\n    }\n\n    /**\n     * Reset pagination offset\n     * @returns {DataService}\n     */\n    protected updatePagination(): DataService\n    {\n        this._provider.search.offset = (this._provider.objects.length - this._newObjectsIds.length);\n        return this;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/data-service/data.service.ts","import {Injectable, Compiler, ReflectiveInjector, ViewContainerRef, Injector} from '@angular/core';\n\n// Service\n@Injectable()\nexport class DynamicComponentLoaderService {\n    constructor(\n        protected _compiler: Compiler\n    ) {}\n\n    /**\n     * Load component into ViewContainerRef\n     * @param module\n     * @param component (component name)\n     * @param viewContainerRef\n     * @param injector (result of:\n     *     injector = ReflectiveInjector.fromResolvedProviders(\n     *         ReflectiveInjector.resolve([\n     *             MyService,\n     *             {provide: 'MyProvider', useValue: null}\n     *         ]),\n     *         this._injector\n     *     );\n     * )\n     * @returns {Promise<T>}\n     */\n    public load(module: any, component: string, viewContainerRef: ViewContainerRef, injector: Injector = null): Promise<any>\n    {\n        let that = this;\n\n        return new Promise(function(resolve, reject) {\n            that.getComponentFactory(module, component).then(\n                componentFactory => {\n                    let componentRef = viewContainerRef.createComponent(componentFactory, 0, injector, []);\n                    return resolve(componentRef);\n                });\n        });\n    }\n\n    /**\n     * Get component factory\n     * @param module\n     * @param component (component name)\n     * @returns {Promise<T>}\n     */\n    public getComponentFactory(module: any, component: string): Promise<any>\n    {\n        let that = this;\n\n        return new Promise(function(resolve, reject) {\n            that._compiler.compileModuleAndAllComponentsAsync(module).then(\n                moduleFactory => {\n                    let componentFactory = moduleFactory.componentFactories.find(\n                        tmpComponentFactory => tmpComponentFactory.componentType['name'] === component\n                    );\n                    return resolve(componentFactory);\n                });\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/dynamic-component-loader.service.ts","import {Component, Input, Output, EventEmitter} from '@angular/core';\n\n// Component\n@Component({\n    selector: 'js_expander',\n    template: `\n    <a [ngClass]=\"['no-user-select', 'expander', customClass]\"\n       (click)=\"toggleAction($event)\">\n        <i *ngIf=\"hasIcon\" [ngClass]=\"['fa', (isExpanded ? 'fa-angle-down' : 'fa-angle-right')]\"></i>\n        <span [innerHTML]=\"label\"></span></a>\n    `\n})\nexport class ExpanderComponent\n{\n    @Input() isExpanded: boolean = false;\n    @Input() label: string;\n    @Input() hasIcon: boolean = true;\n    @Input() customClass: string = ''; // customClass instead of class because is a reserved word\n    @Output() onChange = new EventEmitter();\n\n    /**\n     * Toggle expanded\n     * @param $event\n     */\n    protected toggleAction($event): void\n    {\n        $event.preventDefault();\n        this.isExpanded = !this.isExpanded;\n        this.onChange.emit(this.isExpanded);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/expander/expander.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ExpanderComponent} from './expander.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [ExpanderComponent],\n    exports: [ExpanderComponent]\n})\nexport class ExpanderModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/expander/expander.module.ts","var toastr = require('toastr');\nimport {Injectable} from '@angular/core';\n\n// FlashMessageTypes\nexport var FlashMessageTypes = {\n    success: 'success',\n    info: 'info',\n    warning: 'warning',\n    error: 'error'\n};\n\n// Service\n@Injectable()\nexport class FlashMessageService {\n    constructor() {\n        toastr.options = {\n            \"closeButton\": true,\n            \"debug\": false,\n            \"progressBar\": true,\n            \"preventDuplicates\": false,\n            \"positionClass\": \"toast-top-left\", // Right side is not the best place because this is the work area\n            \"onclick\": null,\n            \"showDuration\": \"300\",\n            \"hideDuration\": \"1000\",\n            \"timeOut\": \"5000\",\n            \"extendedTimeOut\": \"1000\",\n            \"showEasing\": \"swing\",\n            \"hideEasing\": \"linear\",\n            \"showMethod\": \"slideDown\",\n            \"hideMethod\": \"fadeOut\"\n        }\n    }\n\n    /**\n     * Message\n     * @param body\n     * @param head\n     * @param type\n     */\n    public message(body: string, head = '', type = FlashMessageTypes.info): void {\n        // Set info as default type if is not a valid entry\n        type = (FlashMessageTypes[type] || FlashMessageTypes.info);\n        toastr[type](body, head);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/flash-message.service.ts","import {Component, Inject, Injector, ReflectiveInjector, Input, Output, Host, EventEmitter} from '@angular/core';\nimport {DataService} from '../../data-service/data.service';\nimport {ModalService} from '../../../modal/ts/modal.service';\nimport {PostService} from '../../post.service';\nimport {FormService} from '../../../../../../AppBundle/Resources/public/ts/form/form.service';\nimport {PopupTypes, Popups, Popup} from '../../../data-box/ts/src/data-box.component';\n\n/**\n * Multiple AutoComplete instances can be released together,\n * so we need to be able to define multiple AutoComplete Providers in the same context.\n * Each entry of AutoCompleteProviders is one specific provider for one specific AutoComplete instance.\n */\nexport interface AutoCompleteProviders {\n     [field: string]: {\n         urlConf: string, // To get dependency conf\n         urlChoicesParams?: string, // Parameters to add to choices url\n         field?: string, // Field to use to filter in search (default is \"name\")\n         control?: string, // Control to use ('save', 'edit', 'none')\n         popups?: Popups | Popup, // Popups to add or edit objects from dependency (necessary when control = edit)\n         // Used only by FieldTypeAutoCompleteComponent to avoid create new instances of classes (services, etc.),\n         // get again the conf from the server, and create new injectors for the same component.\n         // Once created it is saved to use in the next few\n         childInjector?: any,\n     }\n }\n\n\n@Component({\n    selector: 'js_autoComplete',\n    template: `\n    <div class=\"auto-complete\">\n        <div class=\"input-group\">\n            <span class=\"control\">\n                <input class=\"form-control\"\n                       (click)=\"onInputClick($event)\"\n                       (input)=\"onEnterKey($event)\"\n                       [ngModel]=\"_label\"\n                       [class.error]=\"_formService.getErrors()[field] && (_formService.getErrors()[field].length > 0)\"\n                       type=\"text\"\n                       [placeholder]=\"placeholder\">\n                <a (click)=\"onControlClick($event)\"><i class=\"fa fa-angle-down\"></i></a>\n            </span>\n            <span class=\"input-group-btn\" *ngIf=\"_controlMode\">\n                <button (click)=\"triggerAction($event)\"\n                        class=\"btn btn-primary\"\n                        type=\"button\"><i class=\"fa\"\n                                         [class.fa-check]=\"_controlMode == 'save'\"\n                                         [class.fa-plus]=\"_controlMode == 'add'\"\n                                         [class.fa-pencil]=\"_controlMode == 'edit'\"></i></button>\n            </span>\n        </div>\n        <div class=\"choices\">\n            <ul [hidden]=\"_isHidden\"\n                (click)=\"onChoiceClick($event)\">\n                <ng-template [ngIf]=\"selfReference\"><ng-template ngFor let-choice [ngForOf]=\"_choices\" let-choiceIndex=\"index\">\n                    <li *ngIf=\"choice['id'] != _object['id']\"\n                        [attr.data-index]=\"choiceIndex\">{{choice['label']}}</li>\n                </ng-template></ng-template>\n                <ng-template [ngIf]=\"!selfReference\">\n                    <li *ngFor=\"let choice of _choices; let choiceIndex = index\"\n                        [attr.data-index]=\"choiceIndex\">{{choice['label']}}</li>\n                </ng-template>\n                <li *ngIf=\"_childCandidateSearch && _childCandidateSearch.hasMore\"\n                    (click)=\"getMoreObjects($event)\"\n                    class=\"-pagination\"\n                    title=\"Load more results...\"><span>...</span></li>\n            </ul>\n        </div>\n    </div>\n    `,\n    host: {\n        '(document:click)': 'onDocumentClick($event)',\n    }\n})\nexport class FieldTypeAutoCompleteComponent {\n    @Input() field: string; // Field to handle object and to get the respective data from AutoCompleteProviders\n    @Input() selfReference: boolean;\n    @Input() placeholder: string = ''; // Set empty as default, because value can be undefined\n\n    @Output() onChange = new EventEmitter(); // When choice change or the data of current choice is edited\n\n    private _onObjectChangeSubscription: any; // When the object change in main formService\n    private _onChildObjectsChangeSubscription: any; // When the objects list change in choices dataService (pagination)\n    private _onChildObjectChangeSubscription: any; // When the object change in popup dataService (edit)\n\n    protected _provider: any;\n    protected _object: any; // From object\n    protected _controlMode: string;\n    protected _isHidden: boolean = true;\n    protected _lastSelectedChoice: {id: number, label: string} = {id: null, label: ''};\n    protected _label: string;\n    protected _fieldInView: string; // Field that represents the object in template/view, to use as label of selected choice\n    protected _choices: any[] = [];\n    protected _search: {term: string, lastTerm: string} = {term: '', lastTerm: null};\n    protected _searchField: string = 'name';\n\n    // Dependency data\n    protected _childInjector: Injector;\n    protected _childDataServicePopup: DataService; // Handle with add and edit object in popup\n    protected _childDataServiceChoices: DataService; // Handle with choices\n    protected _childCandidateSearch: any = null;\n\n    constructor(\n        protected _postService: PostService,\n        protected _modalService: ModalService,\n        @Inject('DataService') protected _dataService: any,\n        protected _formService: FormService,\n        protected _injector: Injector,\n        @Inject('AutoCompleteProviders') protected _autoCompleteProviders: any,\n        @Inject('HelperService') protected _helperService: any\n    ) {\n        // Object change event subscription\n        this._onObjectChangeSubscription = this._formService.getOnObjectChangeEmitter()\n            .subscribe(object => this.reset());\n    }\n\n    /**\n     * Reset object\n     * @returns {FieldTypeAutoCompleteComponent}\n     */\n    reset(): FieldTypeAutoCompleteComponent\n    {\n        // Clear choices (can be from old object)\n        if (this._childDataServiceChoices) {\n            this._childDataServiceChoices.setObjects([]);\n            this.resetChoices();\n        }\n\n        this._object = this._formService.getObject();\n\n        let value = this._object[this.field],\n            normalizedValue = '';\n\n        if (value) {\n            normalizedValue = ((this._fieldInView\n                && this._dataService.getNormalizedObject()\n                && this._dataService.getNormalizedObject()[this._fieldInView])\n                    ? this._dataService.getNormalizedObject()[this._fieldInView]\n                    : value\n            );\n        }\n\n        this._lastSelectedChoice = {id: value, label: normalizedValue};\n        this.setLabel();\n\n        this.setControlMode();\n\n        return this;\n    }\n\n    /**\n     * Reset choices\n     * @returns {FieldTypeAutoCompleteComponent}\n     */\n    resetChoices(): FieldTypeAutoCompleteComponent\n    {\n        this._choices = (this._childDataServiceChoices.getProviderAttr('objects') || []);\n        this._isHidden = !this.hasChoices();\n\n        return this;\n    }\n\n    /**\n     * Host event\n     * @param $event\n     */\n    protected onDocumentClick($event): void\n    {\n        this._isHidden = true;\n    }\n\n    /**\n     * onInputClick event (when enter in input).\n     * @param $event\n     */\n    protected onInputClick($event): void\n    {\n        $event.preventDefault();\n        $event.stopPropagation();\n\n        this._object[this.field] = null;\n        this._isHidden = !this.hasChoices();\n        this.setLabel();\n        this.setControlMode();\n    }\n\n    /**\n     * On enter key (pagination)\n     * @param $event\n     */\n    protected onEnterKey($event) {\n        this._search.term = $event.target.value;\n\n        if ((this._search.term != this._search.lastTerm)\n            && (this._search.term.length % 3 === 0) // Only submit with multiples of three\n        ) {\n            this._childCandidateSearch['criteria'] = [{\n                'field': this._searchField,\n                'expr': 'lrlike',\n                'value': this._search.term\n            }];\n            this._childDataServiceChoices.choices();\n            this._search.lastTerm = this._search.term;\n        }\n    }\n\n    /**\n     * onControlClick (arrow of select control)\n     * @param $event\n     */\n    protected onControlClick($event): void\n    {\n        $event.preventDefault();\n        $event.stopPropagation();\n\n        if (this.hasChoices()) {\n            this._isHidden = !this._isHidden;\n        } else {\n            this._childDataServiceChoices.choices();\n        }\n    }\n\n    /**\n     * onChoiceClick event\n     * @param $event\n     */\n    protected onChoiceClick($event): void\n    {\n        $event.preventDefault();\n\n        let $target = $($event.target),\n            choiceIndex = $target.data('index');\n\n        if (typeof choiceIndex != 'undefined') { // Can be 0\n            let choice = this._choices[choiceIndex];\n\n            if (choice && (this._object[this.field] != choice['id'])) {\n                this._object[this.field] = choice['id'];\n                this._lastSelectedChoice = {id: choice.id, label: choice.label};\n                this.setLabel();\n                this.setControlMode();\n                this.onChange.emit(choice['id']);\n            }\n        }\n    }\n\n    /**\n     * Get more objects (pagination)\n     * @param $event\n     */\n    protected getMoreObjects($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n\n        this._childDataServiceChoices.choices();\n    }\n\n    /**\n     * Trigger action\n     * @param $event\n     */\n    protected triggerAction($event: any = null): void\n    {\n        if ($event) { $event.preventDefault(); }\n\n        switch (this._controlMode) {\n            case 'save':\n                this._formService.saveAndNewAction(); // Save and add a new object\n                break;\n            case 'edit':\n            case 'add':\n                this.openPopup(this._controlMode);\n                break;\n        }\n    }\n\n    /**\n     * Open popup\n     * @param popupType\n     * @returns {FieldTypeAutoCompleteComponent}\n     */\n    protected openPopup(popupType = PopupTypes.edit): FieldTypeAutoCompleteComponent\n    {\n        let that = this;\n\n        // Inject object to edit in child DataService\n        if (this._object[this.field]) {\n            // Simulate object\n            let object = {id: this._object[this.field]};\n            // Set object to null to avoid emit the event \"_onChildObjectChangeSubscription\"\n            this._childDataServicePopup.setObject({}, null);\n            this._childDataServicePopup.setObjects([object]);\n            this._childDataServicePopup.selectObject(0).then(\n                data => {\n                    that.loadPopup(popupType);\n                    return this;\n                },\n                errors => { console.log(errors); return this; }\n            );\n        } else {\n            // Create a new object in child DataService\n            this._childDataServicePopup.newObject().then(\n                data => { that.loadPopup(popupType); return this; },\n                errors => { console.log(errors); return this; }\n            );\n        }\n\n        return this;\n    }\n\n    /**\n     * Load popup\n     * @param popupType\n     * @returns {FieldTypeAutoCompleteComponent}\n     */\n    protected loadPopup(popupType = PopupTypes.edit): FieldTypeAutoCompleteComponent\n    {\n        popupType = (PopupTypes[popupType] || PopupTypes.edit);\n        let popup: Popup = (this._provider.popups[popupType] || this._provider.popups);\n\n        this._modalService.popup(popup, this._childInjector).then(\n            data => { return; },\n            errors => { console.log(errors); return; }\n        );\n\n        return this;\n    }\n\n    /**\n     * Set control mode\n     * @returns {FieldTypeAutoCompleteComponent}\n     */\n    protected setControlMode(): FieldTypeAutoCompleteComponent\n    {\n        switch (this._provider.control) {\n            case 'edit':\n                if (this._object[this.field]) {\n                    this._controlMode = 'edit';\n                } else {\n                    this._controlMode = 'add';\n                }\n                break;\n            case 'save':\n                this._controlMode = this._provider.control;\n                break;\n            default:\n                this._controlMode = null;\n        }\n\n        return this;\n    }\n\n    /**\n     * Set input label\n     * @returns {FieldTypeAutoCompleteComponent}\n     */\n    public setLabel(): FieldTypeAutoCompleteComponent\n    {\n        if (this._object[this.field] == this._lastSelectedChoice['id']) {\n            this._label = this._lastSelectedChoice['label'];\n        } else {\n            this._label = this._search.term;\n        }\n\n        return this;\n    }\n\n    /**\n     * check if has choices\n     * @returns {any|boolean}\n     */\n    protected hasChoices(): boolean {\n        return (this._choices && (this._choices.length > 0));\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnInit()\n    {\n        // Initialize values\n        this._provider = (this._autoCompleteProviders[this.field] || null);\n        if (this._provider.field) {\n            this._searchField = this._provider.field;\n        }\n        this._fieldInView = (this._dataService.getProviderAttr('fields')['metadata'][this.field]['fieldInView'] || null);\n        this.reset();\n\n        // Dependency conf previously saved in provider\n        if (this._provider.childInjector) {\n            this._childInjector = this._provider.childInjector;\n            this.init();\n            return;\n        }\n\n        // Dependency conf for first time\n        let that = this;\n        that._postService.post(\n            this._provider.urlConf,\n            null\n        ).then(\n            data => {\n                // Notice that both DataService share the same DataServiceProvider! It needs to be fixed.\n                let dataServiceProvider = that._helperService.getDataServiceProvider(data);\n                dataServiceProvider['pin'] = true;\n\n                // Set child injector\n                let resolvedProviders = ReflectiveInjector.resolve([\n                    {provide: 'DataServiceChoices', useClass: DataService},\n                    {provide: 'DataService', useClass: DataService},\n                    {provide: 'DataServiceProvider', useValue: dataServiceProvider},\n                    {provide: 'Provider', useValue: that._helperService.getDataBoxProvider(data)}\n                ]);\n                that._childInjector = ReflectiveInjector.fromResolvedProviders(resolvedProviders, that._injector);\n                // Save childInjector (check out the context in the provider definition)\n                that._provider.childInjector = that._childInjector;\n\n                that.init();\n\n                // Add parameter to action route\n                if (that._provider.urlChoicesParams) {\n                    that._childDataServiceChoices.setRoute(\n                        'choices',\n                        (that._childDataServiceChoices.getRoute('choices') + '/' + that._provider.urlChoicesParams)\n                    );\n                }\n            },\n            errors => { console.log(errors); return; }\n        );\n    }\n\n    /**\n     * Initialize variables and dependencies.\n     * @returns {FieldTypeAutoCompleteComponent}\n     */\n    protected init(): FieldTypeAutoCompleteComponent\n    {\n        let that = this;\n\n        this._childDataServicePopup = this._childInjector.get('DataService');\n        this._onChildObjectChangeSubscription = this._childDataServicePopup.getOnObjectsChangeEmitter()\n            .subscribe(data => {\n                // Only emit event if there are a valid object\n                if (that._childDataServicePopup.getObject() && that._childDataServicePopup.getObject()['id']) {\n                    that.onChange.emit(that._object[that.field]);\n                }\n            });\n\n        this._childDataServiceChoices = this._childInjector.get('DataServiceChoices');\n        this._onChildObjectsChangeSubscription = this._childDataServiceChoices.getOnObjectsRefreshEmitter()\n            .subscribe(object => this.resetChoices());\n\n        this._childCandidateSearch = this._childDataServiceChoices.getCandidateSearch(); // To filter objects\n        // Reset criteria to avoid inject default criteria sent from controller to template\n        this._childCandidateSearch['criteria'] = [];\n        // @TODO simplify fields to avoid inject default fields sent from controller to template, use only needed fields\n\n        return this;\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnDestroy()\n    {\n        // Sometimes the component can be already destroyed, so test if exists first\n        if (this._onObjectChangeSubscription) {\n            this._onObjectChangeSubscription.unsubscribe();\n        }\n        if (this._onChildObjectChangeSubscription) {\n            this._onChildObjectChangeSubscription.unsubscribe();\n        }\n        if (this._onChildObjectsChangeSubscription) {\n            this._onChildObjectsChangeSubscription.unsubscribe();\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/form/field-types/field-type-auto-complete.component.ts","import {Directive, Input, Inject, ElementRef, Host} from '@angular/core';\nimport {FormService} from '../../../../../../AppBundle/Resources/public/ts/form/form.service';\n\n\n// Interface for rule\ninterface Rule {\n    expr: string, // <min, max, range>\n    value: string, // Field to link the rule or index to get data ranges\n    allowSkip?: boolean // Can be controlled by \"_skipRulesControl\"\n}\n\n\n@Directive({\n    selector: '[datePicker]',\n    host: {\n        '(document:click)': 'onDocumentClick($event)',\n    }\n})\nexport class FieldTypeDatePickerDirective {\n    @Input('datePicker') field: string; // Field in object\n    @Input('control') control: any; // DataPicker control\n\n    private _onObjectChangeSubscription: any; // When the object change in formService\n    protected _fieldMetadata: any;\n    // Control/Field in form that determines if rules should be ignored (it can be a form checkbox)\n    protected _skipRulesControl: any;\n    // Determines if the skip rules control value is inverted (using negation \"!\")\n    protected _skipRulesControlInverseValue: boolean = false;\n\n    constructor(\n        protected _elementRef: ElementRef,\n        protected _formService: FormService,\n        @Inject('DataService') protected _dataService: any\n    ) {\n        // Object change event subscription\n        this._onObjectChangeSubscription = this._formService.getOnObjectChangeEmitter()\n            .subscribe(object => this.reset());\n    }\n\n    /**\n     * Reset\n     */\n    protected reset()\n    {\n        this.setControlConf();\n    }\n\n    /**\n     * Host event\n     * @param $event\n     */\n    protected onDocumentClick($event): void\n    {\n        // It can't be used, because prevent all events (checkbox, etc.)\n        //$event.preventDefault();\n\n        // The click is inside of this data picker\n        if (this._elementRef.nativeElement.contains($event.target)) {\n            let isDropDown = ($($event.target).parents('.dropdown-menu').length > 0);\n\n            // Let run the default behavior\n            if (isDropDown) { return; }\n\n            this.setControlConf(); // Set/Refresh conf (data picker will be opened or closed)\n            this.control.toggle(); // Toggle data picker drop-down\n        } else {\n            // The click is outside of this data picker (close it)\n            this.control.close();\n        }\n    }\n\n    /**\n     * Set/Refresh control configuration\n     */\n    protected setControlConf() {\n        // Apply rules\n        if (this._fieldMetadata['typeDetail'] && this._fieldMetadata['typeDetail']['rules']) {\n            let skipRules = ((this._skipRulesControl\n                && (this._skipRulesControl in (this._formService.getObject() || {})))\n                    ? (this._skipRulesControlInverseValue\n                        ? !this._formService.getObject()[this._skipRulesControl]\n                        : this._formService.getObject()[this._skipRulesControl]\n                    )\n                    : false\n            );\n\n            for (let rule of this._fieldMetadata['typeDetail']['rules']) {\n                switch (rule['expr']) {\n                    case 'range':\n                        if (skipRules && rule['allowSkip']) {\n                            // Skip rule\n                            this.control['markDisabled'] = null;\n                            break;\n                        }\n\n                        // Limit available dates to ranges\n                        let dateRanges = (this._dataService.getProviderAttr('localData')[rule['value']] || []);\n                        // Function to check if date is valid (is in range)\n                        this.control['markDisabled'] = (date: any) => {\n                            let dateToCheck = new Date(date.year, date.month - 1, date.day);\n                            for (let dateRange of dateRanges) {\n                                // ' 00:00:00' is necessary to get the expected behavior\n                                let dateFrom = new Date(dateRange['startDate'] + ' 00:00:00'),\n                                    dateTo = new Date(dateRange['endDate'] + ' 00:00:00');\n                                if ((dateToCheck.getTime() >= dateFrom.getTime())\n                                    && (dateToCheck.getTime() <= dateTo.getTime())\n                                ) {\n                                    return false;\n                                }\n                            }\n                            return true;\n                        };\n                        break;\n                    case 'min':\n                    case 'max':\n                        if (skipRules && rule['allowSkip']) {\n                            // Skip rule\n                            this.control[rule['expr'] + 'Date'] = null;\n                            break;\n                        }\n\n                        this.control[rule['expr'] + 'Date'] = this._formService.getObject()[rule['value']];\n                        break;\n                }\n            }\n        }\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnInit()\n    {\n        this._fieldMetadata = this._dataService.getProviderAttr('fields')['metadata'][this.field];\n\n        this._skipRulesControl = ((this._fieldMetadata['typeDetail']\n            && this._fieldMetadata['typeDetail']['skipRulesControl'])\n                ? this._fieldMetadata['typeDetail']['skipRulesControl']\n                : null\n        );\n\n        // Check how skip rules value should be used\n        if (this._skipRulesControl && (this._skipRulesControl.substring(0, 1) == '!')) {\n            // Value should be inverse, using negation (!)\n            this._skipRulesControlInverseValue = true;\n            this._skipRulesControl = this._skipRulesControl.substring(1); // Remove operator from control name\n        }\n\n        this.reset();\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnDestroy()\n    {\n        this._onObjectChangeSubscription.unsubscribe();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/form/field-types/field-type-date-picker.directive.ts","import {Directive, ElementRef, HostListener, Input, Output, Host, Inject, EventEmitter} from '@angular/core';\nimport {FormService} from '../form.service';\n\n/**\n * Handles with html select box\n */\n@Directive({\n    selector: '[htmlSelect]',\n    host: {\n        '(document:click)': 'onDocumentClick($event)',\n    }\n})\nexport class FieldTypeHtmlSelectDirective {\n    private _onObjectChangeSubscription: any; // When the object change in formService\n\n    protected _$choices: any;\n    protected _$label: any;\n    protected _fieldInView: string; // Field that represents the object in template/view, to use as label of selected choice\n\n    constructor(\n        protected _elementRef: ElementRef,\n        protected _formService: FormService,\n        @Inject('DataService') protected _dataService: any\n    ) {\n        // Object change event subscription\n        this._onObjectChangeSubscription = this._formService.getOnObjectChangeEmitter()\n            .subscribe(object => this.reset());\n    }\n\n    @Input('htmlSelect') field: string;\n\n    @Output() onChange = new EventEmitter();\n\n    @HostListener('click', ['$event']) onMouseClick($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n\n        this._$choices.toggle();\n\n        let $target = $($event.target),\n            value = $target.data('value');\n\n        if (value) {\n            this._formService.getObject()[this.field] = value;\n            this._$label.html($target.html());\n            this.onChange.emit(value);\n        }\n    }\n\n    /**\n     * Reset\n     * @returns {FieldTypeHtmlSelectDirective}\n     */\n    reset(): FieldTypeHtmlSelectDirective\n    {\n        let value = (this._formService.getObject()[this.field]),\n            normalizedValue = '';\n\n        if (value) {\n            normalizedValue = ((this._fieldInView\n                && this._dataService.getNormalizedObject()\n                && this._dataService.getNormalizedObject()[this._fieldInView])\n                    ? this._dataService.getNormalizedObject()[this._fieldInView]\n                    : value\n            );\n        }\n\n        this._$label.html(normalizedValue);\n\n        return this;\n    }\n\n    /**\n     * Host event\n     * @param $event\n     */\n    protected onDocumentClick($event): void\n    {\n        this._$choices.hide();\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnInit()\n    {\n        this._$choices = $(this._elementRef.nativeElement).find('.js_choices');\n        this._$label = $(this._elementRef.nativeElement).find('.js_label');\n\n        this._$choices.hide();\n\n        this._fieldInView = (this._dataService.getProviderAttr('fields')['metadata'][this.field]['fieldInView'] || null);\n\n        this.reset();\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnDestroy()\n    {\n        this._onObjectChangeSubscription.unsubscribe();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/form/field-types/field-type-html-select.directive.ts","import {Directive, ElementRef, HostListener, Input} from '@angular/core';\nimport {FormService} from '../form.service';\n\n/**\n * Handles with multiple checkbox select control\n */\n@Directive({\n    selector: '[multiCheckbox]'\n})\nexport class FieldTypeMultiCheckboxDirective {\n\n    protected _onObjectChangeSubscription: any; // To get notify about changes on object over the FormService\n    protected _controlObj: any;// Control (object field value) object where the select values are kept\n\n    constructor(\n        protected _elementRef: ElementRef,\n        protected _formService: FormService\n    ) {\n        // Object change event subscription\n        this._onObjectChangeSubscription = this._formService.getOnObjectChangeEmitter()\n            .subscribe(object => this.reset(object));\n    }\n\n    @Input('multiCheckbox') field: string;\n\n    @HostListener('click', ['$event']) onMouseClick($event) {\n        let value = $event.target.value;\n\n        if (value) {\n            if (value) {\n                if (value in this._controlObj) {\n                    delete this._controlObj[value]; // Remove\n                } else {\n                    this._controlObj[value] = value; // Add\n                }\n            }\n        }\n    }\n\n    /**\n     * Reset object\n     * @param object\n     * @returns {FieldTypeMultiCheckboxDirective}\n     */\n    reset(object: any = null): FieldTypeMultiCheckboxDirective\n    {\n        this._controlObj = this._formService.getObject()[this.field];\n\n        // Init the controlObj (when creates a new object)\n        if (!this._controlObj) {\n            this._controlObj = {};\n        }\n\n        // Set \"selected\" property\n        let $elements: any = $(this._elementRef.nativeElement).find('input');\n        if ($elements.length > 0) {\n            for (let el of $elements) {\n                let $el = $(el);\n                $el.prop('checked', ($el.val() in this._controlObj));\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnInit()\n    {\n        this.reset();\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnDestroy()\n    {\n        this._onObjectChangeSubscription.unsubscribe();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/form/field-types/field-type-multi-checkbox.directive.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {FieldTypeAutoCompleteComponent} from './field-type-auto-complete.component';\nimport {FieldTypePasswordComponent} from './password.component';\nimport {FieldTypeMultiCheckboxDirective} from './field-type-multi-checkbox.directive';\nimport {FieldTypeHtmlSelectDirective} from './field-type-html-select.directive';\nimport {FieldTypeDatePickerDirective} from './field-type-date-picker.directive';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule],\n    declarations: [\n        FieldTypeAutoCompleteComponent,\n        FieldTypePasswordComponent,\n        FieldTypeMultiCheckboxDirective,\n        FieldTypeHtmlSelectDirective,\n        FieldTypeDatePickerDirective\n    ],\n    exports: [\n        FieldTypeAutoCompleteComponent,\n        FieldTypePasswordComponent,\n        FieldTypeMultiCheckboxDirective,\n        FieldTypeHtmlSelectDirective,\n        FieldTypeDatePickerDirective\n    ]\n})\nexport class FieldTypesExtensionModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/form/field-types/field-types.extension-module.ts","import {Component, Input} from '@angular/core';\nimport {FormService} from '../../../../../../AppBundle/Resources/public/ts/form/form.service';\n\n// Component\n@Component({\n    selector: 'js_password',\n    template: `\n    <input (blur)=\"resetAction($event)\"\n           class=\"form-control\"\n           [class.error]=\"_formService.getErrors()[field] && (_formService.getErrors()[field].length > 0)\"\n           type=\"password\"\n           placeholder=\"Password\"\n           [(ngModel)]=\"_fields.password\">\n    <input (keyup)=\"validateAction($event)\"\n           class=\"form-control m-t\"\n           [class.error]=\"_formService.getErrors()[field] && (_formService.getErrors()[field].length > 0)\"\n           type=\"password\"\n           placeholder=\"Confirm password\"\n           [(ngModel)]=\"_fields.confirm\">\n    `\n})\nexport class FieldTypePasswordComponent {\n    @Input() field: string;\n\n    protected _fields = {password: null, confirm: null}\n\n    constructor(\n        protected _formService: FormService\n    ) {}\n\n    /**\n     * Validate fields\n     * @param $event\n     */\n    protected validateAction($event: any = null): void\n    {\n        let isValid = (this._fields.password == this._fields.confirm);\n        this._formService.getObject()[this.field] = (isValid ? this._fields.password : null);\n        this._formService.getErrors()[this.field] = (isValid ? null : [\"Password confirmation does not match\"]);\n    }\n\n    /**\n     * Reset\n     * @param $event\n     */\n    protected resetAction($event: any = null): void\n    {\n        if (this._fields.password != this._fields.confirm) {\n            this._fields.confirm = null;\n            this.validateAction(null);\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/form/field-types/password.component.ts","import {Component, ElementRef, Inject, Optional, Injector, ViewChild, EventEmitter, Renderer} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {FormService} from './form.service';\nimport {DataService} from \"../data-service/data.service\";\nimport {FormPopupExtensionComponent, FormProvider} from './form-popup.extension-component';\n\n// Re-exports\nexport {FormProvider};\n\n\n@Component({\n    selector: '.js_formPopup',\n    template: '' // Define template in child component\n})\nexport class FormPopupComponent extends FormPopupExtensionComponent\n{\n    constructor(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        @Inject('Provider') provider: FormProvider,\n        formService: FormService,\n        @Inject('DataService') dataService: any\n    ) {\n        super();\n        super.initFormPopupExtensionComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/form/form-popup.component.ts","import {Component, ElementRef, Inject, Optional, Injector, ViewChild, EventEmitter, Renderer} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {IModalPopup} from '../../modal/ts/modal.service';\nimport {FormService} from './form.service';\nimport {DataService} from \"../data-service/data.service\";\nimport {FormExtensionComponent, FormProvider} from './form.extension-component';\n\n// Re-exports\nexport {FormProvider};\n\n\n@Component({\n    selector: '.js_formPopup',\n    template: ''\n})\nexport abstract class FormPopupExtensionComponent extends FormExtensionComponent implements IModalPopup\n{\n    // Modal parameters\n    onDismissEmitter: EventEmitter<any> = new EventEmitter();\n\n    constructor() { super(); }\n\n    /**\n     * Initialization of component (replace the original constructor to avoid angular injection inheritance bug)\n     * @param elementRef\n     * @param renderer\n     * @param provider\n     * @param formService\n     * @param dataService\n     */\n    public initFormPopupExtensionComponent(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        provider: FormProvider,\n        formService: any,\n        dataService: any\n    ) {\n        super.initFormExtensionComponent(\n            elementRef,\n            renderer,\n            provider,\n            formService,\n            dataService\n        );\n    }\n\n    /**\n     * Save object. Handle submit form.\n     * This override add a closePopup behavior.\n     * This method should be called from child component.\n     * @returns {Promise}\n     */\n    public save(): Promise<any>\n    {\n        let that = this;\n\n        return new Promise(function(resolve, reject) {\n            that._formService.save().then(\n                data => { return resolve(data); },\n                errors => { return reject(errors); }\n            );\n        });\n    }\n\n    /**\n     * Save action.\n     * This method should be called from view/template.\n     * @param $event\n     */\n    public saveAction($event: any = null): void\n    {\n        if ($event) { $event.preventDefault(); }\n        this.save().then(\n            data => { return; },\n            errors => { return; }\n        );\n    }\n\n    /**\n     * Save and enter to detail action.\n     * This method should be called from view/template.\n     * @param $event\n     */\n    public saveAndEnterAction($event: any = null): void\n    {\n        this._formService.saveAndEnterAction($event);\n    }\n\n    /**\n     * Save and add a new entry.\n     * This method should be called from view/template.\n     * @param $event\n     */\n    public saveAndNewAction($event: any = null): void\n    {\n        this._formService.saveAndNewAction($event);\n    }\n\n    /**\n     * Save and close popup action.\n     * This method should be called from view/template.\n     * @param $event\n     */\n    public saveAndCloseAction($event: any = null): void\n    {\n        if ($event) { $event.preventDefault(); }\n        this.save().then(\n            data => { this.closeAction(); return; },\n            errors => { return; }\n        );\n    }\n\n    /**\n     * Reset action.\n     * This method should be called from view/template.\n     * @param $event\n     */\n    public resetAction($event: any = null): void\n    {\n        this._formService.resetAction($event);\n    }\n\n    /**\n     * Cancel action.\n     * This method should be called from view/template.\n     * @param $event\n     */\n    public cancelAction($event: any = null): void\n    {\n        this.closeAction($event);\n    }\n\n    /**\n     * Close action.\n     * @param $event\n     */\n    public closeAction($event: any = null): void\n    {\n        if ($event) { $event.preventDefault(); }\n\n        // Current form object has changes from user?\n        this._formService.reset().then(\n            data => {\n                this.onDismissEmitter.emit(data);\n                return;\n            },\n            errors => { return; }\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/form/form-popup.extension-component.ts","import {Component, ElementRef, Inject, Optional, Injector, Renderer} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {FormService, IForm} from './form.service';\nimport {FormProvider} from './form-provider';\nimport {BaseExtensionComponent} from '../base/base.extension-component';\nimport {DataService} from \"../data-service/data.service\";\n\n// Re-exports\nexport {FormProvider};\n\n\n// Component\n@Component({\n    selector: '.js_form',\n    template: ''\n})\nexport abstract class FormExtensionComponent extends BaseExtensionComponent implements IForm\n{\n    // Constructor vars\n    protected _formService: any;\n    protected _dataService: any;\n\n    constructor() { super(); }\n\n    /**\n     * Initialization of component (replace the original constructor to avoid angular injection inheritance bug)\n     * @param elementRef\n     * @param renderer\n     * @param provider\n     * @param formService\n     * @param dataService\n     */\n    public initFormExtensionComponent(\n        elementRef: ElementRef,\n        renderer: Renderer,\n        provider: FormProvider,\n        formService: any,\n        dataService: any\n    ) {\n        // Parent init (construct)\n        super.initBaseExtensionComponent(\n            elementRef,\n            renderer,\n            provider\n        );\n\n        // Constructor vars\n        this._formService = formService;\n        this._dataService = dataService;\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngAfterViewInit()\n    {\n        this._formService.init(this);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/form/form.extension-component.ts","import {Injectable, ElementRef, Inject, Injector, Renderer, EventEmitter, Optional} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {DataService} from '../data-service/data.service';\nimport {ModalService} from '../../modal/ts/modal.service';\nimport {Helper} from '../helper';\nimport {FormServiceProvider} from './form-service-provider';\n\n// Re-exports\n// This classes are in different file because import loops\n// (HelperServices uses FormServiceProvider and FormService uses HelperService)\nexport {FormServiceProvider};\n\n/**\n * Interface to be implemented by parent component\n */\nexport interface IForm {\n    /**\n     * ElementRef to handle with DOM\n     */\n    _elementRef: ElementRef; // For component that not extends the popup\n}\n\n\n@Injectable()\nexport class FormService\n{\n    // Local variables\n    protected _component: any; // Parent component that uses and implement this service\n    protected _originalObject: any = {}; // Original object to compare changes and reset object in DataService\n    protected _originalNormalizedObject: any = {}; // Original normalized (for form) object to compare changes and reset object in form\n    protected _object: any = {}; // Object used by form\n    protected _onObjectChangeSubscription: any; // To get notify about changes on object over the service\n    protected _$form = null; // DOM form\n    protected _form: FormGroup; // Angular Form\n    protected _errors: any = {}; // Form errors validation\n    // Used to force form to submit,\n    // generally when you need that user confirm the date, but the data has no changes.\n    protected _forceSubmit: boolean;\n    // Controls if the form is on \"save\" mode (waiting to finish the save process). It's useful to control the\n    // save action (avoid multiples clicks on button) and to recognize the object change after saved by DataService.\n    protected _isOnSave: boolean;\n    // Confirm object override by user to prevent data loss (when the object is changed from DataService).\n    // It is useful when you have multiples forms to handle the same object, and the object is changed from any form\n    // (like wizard using the same object and the same DataServiceInstance),\n    // in this described case maybe you do not want this property enabled\n    protected _preventObjectOverride: boolean;\n\n    // Subscribed for FieldTypes\n    private _onObjectChangeEmitter: EventEmitter<any>; // When the object change\n\n    constructor(\n        protected _modalService: ModalService,\n        formBuilder: FormBuilder,\n        @Inject('DataService') protected _dataService: any,\n        @Inject('HelperService') protected _helperService: any,\n        @Optional() @Inject('FormServiceProvider') protected _provider: FormServiceProvider\n    ) {\n        // Set default values for provider\n        if (!this._provider) {\n            this._provider = {};\n        }\n\n        this._onObjectChangeEmitter = new EventEmitter();\n\n        // Object change event subscription\n        this._onObjectChangeSubscription = this._dataService.getOnObjectChangeEmitter()\n            .subscribe(object => this.onObjectChangeSubscription(object));\n\n        this._forceSubmit = false;\n        this._isOnSave = false;\n        this._preventObjectOverride = true;\n\n        // Set object, if it has not been setted before open the form\n        if (!this._dataService.getObject()) {\n            // If object is not setted, create a new\n            let that = this;\n            this.newObject().then(\n                data => {\n                    that.setObject(this._dataService.getObject());\n                    that.buildForm(formBuilder);\n                },\n                errors => { return; }\n            );\n        } else {\n            this.setObject(this._dataService.getObject());\n            this.buildForm(formBuilder);\n        }\n    }\n\n    /**\n     * Build form\n     * @param formBuilder\n     * @returns {FormService}\n     */\n    protected buildForm(formBuilder: FormBuilder) {\n        let formControls = {},\n            fields = (this._provider.fields || this._dataService.getFields('form') || []).concat(\n                this._helperService.objectKeys(this._dataService.getProviderExtraDataAttr('fields'))\n            );\n\n        // Set form controls\n        for (let field of fields) {\n            formControls[field] = [this._object[field] || null];\n        }\n        this._form = formBuilder.group(formControls);\n\n        return this;\n    }\n\n    /**\n     * Initialization of service.\n     * This method should be called in \"ngOnInit\" method of parent component,\n     * so the template has been rendered.\n     * @param component (parent component)\n     * @returns {FormService}\n     */\n    public init(component: any): FormService\n    {\n        // Local variables\n        this._component = component;\n        this._$form = $(component._elementRef.nativeElement).find('form');\n        this._preventObjectOverride = this._component.getProviderAttr('preventObjectOverride');\n\n        return this;\n    }\n\n    /**\n     * Get form object emitter to tell all subscribers about changes\n     * @returns {EventEmitter<any>}\n     */\n    public getOnObjectChangeEmitter() {\n        return this._onObjectChangeEmitter;\n    }\n\n    /**\n     * On object change subscription. Handle with object changes in DataService.\n     * @param object\n     */\n    public onObjectChangeSubscription(object: any): void\n    {\n        if ((object != this._originalObject) // Set object only if is different\n            && !this._isOnSave // If form is on save object will be setted by the save method when there are some correct procedures\n        ) {\n            // Form does not need to confirm object override\n            if (!this._preventObjectOverride) {\n                this.setObject(object);\n                return;\n            }\n\n            // Confirm object override by user to prevent data loss\n            this.confirmAndSetObject(object).then(\n                data => { return; },\n                errors => { return; }\n            );\n        }\n    }\n\n    /**\n     * Set _preventObjectOverride\n     * @param value\n     * @returns {FormService}\n     */\n    public setPreventObjectOverride(value) {\n        this._preventObjectOverride = value;\n        return this;\n    }\n\n    /**\n     * Confirm and set object. Check for object changes and confirm with the user to discard them, then set\n     * the object according with the ser response.\n     * @param object\n     * @returns {Promise}\n     */\n    public confirmAndSetObject(object: any): Promise<any>\n    {\n        let that = this;\n\n        return new Promise(function(resolve, reject) {\n            // Current form object has changes from user?\n            if(that.hasChanges()) {\n                // Dialog message\n                return that._modalService.dialog().then(\n                    hasConfirm => {\n                        if (hasConfirm) {\n                            that.setObject(object);\n                            return resolve(true);\n                        } else {\n                            // Keep the object in DataService\n                            that._dataService.setObject(that._originalObject);\n                            return reject(false);\n                        }\n                    },\n                    errors => { console.log(errors); return reject(false); }\n                );\n            } else {\n                that.setObject(object);\n                return resolve(true);\n            }\n        });\n    }\n\n    /**\n     * Set object\n     * @param object\n     * @returns {FormService}\n     */\n    public setObject(object: any): FormService\n    {\n        // Set only if is a different object\n        if (object != this._originalObject) {\n            // Keep the original object from dataService\n            this._originalObject = object;\n            this._isOnSave = false; // Waiting mode for save process ends here, after update the original object.\n\n            // Normalize object to form\n            this._originalNormalizedObject = Helper.cloneObject(this._originalObject, true);\n            this.normalizeObject(this._originalNormalizedObject);\n\n            // Update form object\n            this._object = Helper.cloneObject(this._originalNormalizedObject, true);\n\n            // Reset errors\n            this._errors = {};\n\n            // This object is saved in session and needs to be confirmed by user before save them in database\n            this._forceSubmit = (object['_isSessionStorage'] ? true : false);\n\n            this._onObjectChangeEmitter.emit(this._object); // Object as changed to the original, notify subscribers\n        }\n        return this;\n    }\n\n    /**\n     * Normalize objects to form\n     * Detect fields that needs to be normalized\n     * @param object\n     * @param fields\n     * @returns {FormService}\n     */\n    protected normalizeObject(object, fields: any = null): FormService\n    {\n        fields = (fields || this._dataService.getProviderAttr('fields')['form']);\n\n        if(object && fields) {\n            let fieldsMetadata = this._dataService.getProviderAttr('fields')['metadata'];\n\n            for (let field of fields) {\n                let fieldMetadata = fieldsMetadata[field];\n\n                switch (fieldMetadata['type']) {\n                    case 'date':\n                        object[field] = this.normalizeValue(object[field], fieldMetadata['type']);\n                        break;\n                }\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Normalize value to form\n     * @param value\n     * @param type\n     * @returns any\n     */\n    protected normalizeValue(value, type): any\n    {\n        switch (type) {\n            case 'date':\n                if (value && (typeof value == 'string')) {\n                    let dateArr = value.split(\"-\");\n                    return {\n                        year: parseInt(dateArr[0]),\n                        month: parseInt(dateArr[1]),\n                        day: parseInt(dateArr[2])\n                    };\n                }\n                return value;\n        }\n    }\n\n    /**\n     * Get object\n     * @returns any\n     */\n    public getObject(): any\n    {\n        return this._object;\n    }\n\n    /**\n     * Get originalObject\n     * @returns any\n     */\n    public getOriginalObject(): any\n    {\n        return this._originalNormalizedObject;\n    }\n\n    /**\n     * Check if the object has changes from user\n     * @returns {boolean|Boolean}\n     */\n    public hasChanges(): boolean|Boolean\n    {\n        return (!this._helperService.isEqualObject(this._object, this._originalNormalizedObject));\n    }\n\n    /**\n     * Get form\n     * @returns any\n     */\n    public getForm(): any\n    {\n        return this._form;\n    }\n\n    /**\n     * Set errors\n     * @param errors\n     * @returns {FormService}\n     */\n    public setErrors(errors: any): FormService\n    {\n        this._errors = (errors || {});\n        return this;\n    }\n\n    /**\n     * Get errors\n     * @returns any\n     */\n    public getErrors(): any\n    {\n        return this._errors;\n    }\n\n    /**\n     * Set form field value\n     * @param field\n     * @param value\n     */\n    public setFormFieldValue(field: string, value: any): void\n    {\n        if (value && (field in this._object)) {\n            this._object[field] = value;\n        }\n    }\n\n    /**\n     * Get view object (normalized object in DataService)\n     * @returns {any|{}}\n     */\n    public getViewObject(): any\n    {\n        return (this._dataService.getNormalizedObject() || {});\n    }\n\n    /**\n     * Save form. Handle submit form.\n     * This method should be called from child component.\n     * @param route (optional route to overrides default route)\n     * @param hasValidation\n     * @returns {Promise}\n     */\n    public save(route: string = null, hasValidation: boolean = true): Promise<any>\n    {\n        let that = this;\n\n        return new Promise(function(resolve, reject) {\n            if (that._isOnSave) {\n                // Form is already in save process\n                return reject(false);\n            }\n\n            // Put form in \"save\" mode\n            that._isOnSave = true;\n\n            // Current form object has changes from user?\n            // Note: Objects in session storage enables the \"_forceSubmit\" by default\n            if(that._forceSubmit || !that._object['id'] || that.hasChanges()) {\n\n                // Validate form\n                if (hasValidation) {\n                    that._errors = {};\n\n                    for (let control in that._form.controls) {\n                        if (!that._form.controls[control].valid) {\n                            that._errors[control] = ['Required'];\n                        }\n                    }\n\n                    if (that._helperService.objectLength(that._errors) > 0) {\n                        that._isOnSave = false;\n                        return reject(false);\n                    }\n                }\n\n                // Set the valid token\n                that._helperService.setFormToken(that._$form);\n                // Get form data\n                let data = that._$form.serialize();\n                let id = that._object['id'] ? that._object['id'] : null;\n\n                // Save form\n                that._dataService.save(data, id, route).then(\n                    object => {\n                        // Force submit is reset, each activation is valid  only once\n                        that._forceSubmit = false;\n                        // Update form after save with saved object\n                        that.setObject(object);\n                        return resolve(true);\n                    },\n                    errors => {\n                        if (errors) { that._errors = errors; }\n                        that._isOnSave = false;\n                        return reject(errors);\n                    }\n                );\n            } else {\n                that._isOnSave = false;\n                return resolve(true);\n            }\n        });\n    }\n\n    /**\n     * Save action.\n     * This method should be called from view/template.\n     * @param $event\n     */\n    public saveAction($event: any = null): void\n    {\n        if ($event) { $event.preventDefault(); }\n        this.save().then(\n            data => { return; },\n            errors => { return; }\n        );\n    }\n\n    /**\n     * Save and enter to detail action.\n     * This method should be called from view/template.\n     * @param $event\n     */\n    public saveAndEnterAction($event: any = null): void\n    {\n        if ($event) { $event.preventDefault(); }\n\n        let that = this;\n\n        this.save().then(\n            data => {\n                that.newAction();\n                return;\n            },\n            errors => { return; }\n        );\n    }\n\n    /**\n     * Add a new entry (newObject is used in name because new is a reserved word).\n     * @returns {Promise}\n     */\n    public newObject(): Promise<any>\n    {\n        let that = this;\n\n        return new Promise(function(resolve, reject) {\n            that._dataService.newObject().then(\n                data => { return resolve(data); },\n                errors => { return reject(errors); }\n            );\n        });\n    }\n\n    /**\n     * Add a new entry action.\n     * This method should be called when the form is initialized.\n     * @param $event\n     */\n    public newAction($event: any = null): void\n    {\n        if ($event) { $event.preventDefault(); }\n        this.newObject().then(\n            data => { return; },\n            errors => { return; }\n        );\n    }\n\n    /**\n     * Save and add a new entry.\n     * This method should be called from view/template.\n     * @param $event\n     */\n    public saveAndNewAction($event: any = null): void\n    {\n        if ($event) { $event.preventDefault(); }\n\n        let that = this;\n\n        this.save().then(\n            data => { that.newAction(); return; },\n            errors => { return; }\n        );\n    }\n\n    /**\n     * Reset object.\n     * This method should be called from child component.\n     * @param hasConfirm (launch confirm to user if object has unsaved changes)\n     * @returns {Promise}\n     */\n    public reset(hasConfirm: boolean = true): Promise<any>\n    {\n        let that = this;\n\n        return new Promise(function(resolve, reject) {\n            if (that.hasChanges()) {\n                if (hasConfirm) {\n                    return that.confirmAndSetObject(that._originalNormalizedObject).then(\n                        data => { return resolve(true); },\n                        errors => { return reject(false); }\n                    );\n                } else {\n                    that.setObject(that._originalNormalizedObject);\n                    return resolve(true);\n                }\n            } else {\n                return resolve(true);\n            }\n        });\n    }\n\n    /**\n     * Reset action.\n     * This method should be called from view/template.\n     * @param $event\n     */\n    public resetAction($event: any = null): void\n    {\n        if ($event) { $event.preventDefault(); }\n        this.reset().then(\n            data => { return; },\n            errors => { return; }\n        );\n    }\n\n    /**\n     * Set forceSubmit\n     * @param forceSubmit\n     * @returns {FormService}\n     */\n    public setForceSubmit(forceSubmit = true) {\n        this._forceSubmit = forceSubmit;\n        return this;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/form/form.service.ts","import {DataServiceProvider} from './data-service/data-service-provider';\nimport {TreeViewProvider} from '../tree-view/ts/src/tree-view-provider';\nimport {DataBoxProvider} from '../data-box/ts/src/data-box-provider';\nimport {ImageProvider} from '../image/ts/src/image-provider';\nimport {BaseProvider} from './base/base-provider';\nimport {BoxProvider} from './box/box-provider';\nimport {FormProvider} from './form/form-provider';\nimport {WizardPopupProvider} from '../wizard/ts/src/wizard-popup-provider';\nimport {EntityDetailProvider} from '../entity-detail/ts/src/entity-detail-provider';\nimport {ActionsServiceProvider} from './actions/actions-service-provider';\n\n/**\n * Helper with common functions\n */\nexport class Helper {\n    // Object to use in angular modules at runtime to define global variables.\n    private static globalVar = {};\n\n    /**\n     * Get decimal configuration\n     * @returns {{unit: {value: number, iterator: number}, total: {value: number, iterator: number}}}\n     */\n    public static getDecimalConf(): any\n    {\n        // Configure number of decimals to use and to round\n        let decimalConf = {unit: {value: 4, iterator: 0}, total: {value: 2, iterator: 0}};\n\n        decimalConf.unit.iterator = Math.pow(10, decimalConf.unit.value);\n        decimalConf.total.iterator = Math.pow(10, decimalConf.total.value);\n\n        return decimalConf;\n    }\n\n    /**\n     * Get object length\n     * @param object\n     * @returns {number}\n     */\n    public static objectLength(object: any): number\n    {\n        return Object.keys(object || {}).length;\n    }\n\n    /**\n     * Get object keys\n     * @param object\n     * @returns {string[]|Array}\n     */\n    public static objectKeys(object: any): any\n    {\n        return Object.keys(object || {}) || [];\n    }\n\n    /**\n     * Convert a list of object to an array\n     * @param objects\n     * @returns {string[]|Array}\n     */\n    public static objectsToArray(objects: any): any\n    {\n        let objectsArray = [];\n        for (let key in (objects || {})) {\n            objectsArray.push({key: key, value: objects[key]});\n        }\n        return objectsArray;\n    }\n\n    /**\n     * Compare if object1 is equal to object2\n     * @param object1\n     * @param object2\n     * @returns {boolean}\n     */\n    public static isEqualObject(object1: any, object2: any): boolean\n    {\n        return (JSON.stringify(object1) === JSON.stringify(object2));\n    }\n\n    /**\n     * Var Count (count only is a reserved word)\n     * @param variable\n     * @returns {number}\n     */\n    public static varCount(variable: any): number\n    {\n        return Object.keys(variable || {}).length;\n    }\n\n    /**\n     * Cast to boolean\n     * @param value\n     * @returns {boolean}\n     */\n    public static castToBoolean(value): boolean\n    {\n        return Helper.inArray(value, ['true', 1, true, '1'])\n    }\n\n    /**\n     * Clone object\n     * @param object\n     * @param recursive\n     * @returns {any}\n     */\n    public static cloneObject(object: any, recursive = false): any\n    {\n        return $.extend(recursive, {}, object);\n    }\n\n    /**\n     * Merge objects into a new object\n     * @param object1\n     * @param object2\n     * @param recursive\n     * @returns {any}\n     */\n    public static mergeObjects(object1: any, object2: any, recursive = false): any\n    {\n        return $.extend(recursive, object1, object2);\n    }\n\n    /**\n     * Check if value exists in array\n     * @param value\n     * @param array\n     */\n    public static inArray(value: any, array: any): boolean\n    {\n        return (($.inArray(value, array) >= 0) ? true : false);\n    }\n\n    /**\n     * Search value in array\n     * @param value\n     * @param array\n     */\n    public static arraySearch(value: any, array: any): number\n    {\n        let index = $.inArray(value, array);\n        return ((index >= 0) ? index : null);\n    }\n\n    /**\n     * Order objects by key\n     * @param objects\n     * @param keys\n     * @returns {any}\n     */\n    public static orderObjects(objects: any, keys: string[]): any\n    {\n        let prevKey = null;\n\n        if (objects && keys) {\n            for (let key of keys) {\n                objects.sort(function (obj1, obj2) {\n                    if (!prevKey || (obj1[prevKey] == obj2[prevKey])) {\n                        // If key is equal, then sort by id \"DESC\"\n                        let orderKey = ((obj1[key] == obj2[key]) ? 'id' : key);\n                        return ((obj1[orderKey] > obj2[orderKey]) ? 1 : 0);\n                    }\n                    return 0;\n                });\n                prevKey = key;\n            }\n        }\n\n        return objects;\n    }\n\n    /**\n     * Set app var\n     * @param index\n     * @param value\n     * @returns {Helper}\n     */\n    public static setAppVar(index: string, value: any): Helper\n    {\n        return Helper.setVar(_app, index, value);\n    }\n\n    /**\n     * Get app var\n     * @param index\n     * @param defaultValue\n     * @returns {any}\n     */\n    public static getAppVar(index: string, defaultValue = null): string\n    {\n        return Helper.getVar(_app, index, defaultValue);\n    }\n\n    /**\n     * Delete app var\n     * @param index\n     * @param defaultValue\n     * @returns {Helper}\n     */\n    public static deleteAppVar(index: string): Helper\n    {\n        return Helper.deleteVar(_app, index);\n    }\n\n    /**\n     * Get data service provider\n     * @param data\n     * @returns any\n     */\n    public static getDataServiceProvider(data: any): DataServiceProvider\n    {\n        return {\n            fields: data.fields || null,\n            fieldsChoices: data.fieldsChoices || null,\n            search: data.search || null,\n            object: data.object || null,\n            objects: data.objects || null,\n            route: data.route || null,\n            extraData: ((data.extraData && data.extraData.service) ? data.extraData.service : null),\n            localData: (data.localData || null),\n        };\n    }\n\n    /**\n     * Get tree-view data service provider\n     * @param data\n     * @returns any\n     */\n    public static getTreeViewDataServiceProvider(data: any): any\n    {\n        return Helper.mergeObjects(\n            Helper.getDataServiceProvider(data),\n            {\n                localParentField: (data.treeView.localParentField)\n            }\n        );\n    }\n\n    /**\n     * Get tree-view provider\n     * @param data\n     * @returns any\n     */\n    public static getTreeViewProvider(data: any): any\n    {\n        if (data.treeView) {\n            return Helper.mergeObjects(\n                Helper.getDataBoxProvider(data),\n                {\n                    iconDefault: (data.treeView.iconDefault || null),\n                    iconField: (data.treeView.iconField || null),\n                    iconFieldMap: (data.treeView.iconFieldMap || {}),\n                    parentTargetField: (data.treeView.parentTargetField || 'id')\n                }\n            );\n        }\n\n        return Helper.getDataBoxProvider(data);\n    }\n\n    /**\n     * Get image provider\n     * @param data\n     * @param localData supplied by module/component\n     * @returns any\n     */\n    public static getImageProvider(data: any, localData: any): ImageProvider\n    {\n        return Helper.mergeObjects(\n            Helper.getDataBoxProvider(data),\n            {\n                imageCropPopupModule: localData['imageCropPopupModule']\n            }\n        );\n    }\n\n    /**\n     * Get data-box provider\n     * @param data\n     * @returns any\n     */\n    public static getDataBoxProvider(data: any): DataBoxProvider\n    {\n        return Helper.getBoxProvider(data);\n    }\n\n    /**\n     * Get box provider\n     * @param data\n     * @returns any\n     */\n    public static getBoxProvider(data: any): BoxProvider\n    {\n        return Helper.mergeObjects(\n            Helper.getBaseProvider(data),\n            {\n                label: data.label || '',\n                controls: {\n                    expander: (data.controls && data.controls.expander),\n                    resizable: (data.controls && data.controls.resizable),\n                }\n            }\n        );\n    }\n\n    /**\n     * Get box provider\n     * @param data\n     * @returns any\n     */\n    public static getEntityDetailProvider(data: any): EntityDetailProvider\n    {\n        return Helper.mergeObjects(\n            Helper.getBaseProvider(data),\n            {\n                popup: null // Create this value in component\n            }\n        );\n    }\n\n    /**\n     * Get base provider\n     * @param data\n     * @returns any\n     */\n    public static getBaseProvider(data: any): BaseProvider\n    {\n        return {\n            extraData: ((data.extraData && data.extraData.template) ? data.extraData.template : null)\n        };\n    }\n\n    /**\n     * Get data box form provider\n     * @param data\n     * @returns any\n     */\n    public static getFormProvider(data: any): FormProvider\n    {\n        return {\n            label: data.label || '',\n            preventObjectOverride: true\n        };\n    }\n\n    /**\n     * Get data box form provider\n     * @param data\n     * @returns any\n     */\n    public static getWizardPopupProvider(data: any): WizardPopupProvider\n    {\n        return {\n            label: data.label || ''\n        };\n    }\n\n    /**\n     * Get actions provider\n     * @param data\n     * @returns {any}\n     */\n    public static getActionsServiceProvider(data: any): ActionsServiceProvider\n    {\n        return (data.actions);\n    }\n\n    /**\n     * Set global var\n     * @param index\n     * @param value\n     * @returns {Helper}\n     */\n    public static setGlobalVar(index: string, value: any): Helper\n    {\n        return Helper.setVar(Helper.globalVar, index, value);\n    }\n\n    /**\n     * Get global var\n     * @param index\n     * @param defaultValue\n     * @returns {any}\n     */\n    public static getGlobalVar(index: string, defaultValue = null): string\n    {\n        return Helper.getVar(Helper.globalVar, index, defaultValue);\n    }\n\n    /**\n     * Delete global var\n     * @param index\n     * @param defaultValue\n     * @returns {Helper}\n     */\n    public static deleteGlobalVar(index: string): Helper\n    {\n        return Helper.deleteVar(Helper.globalVar, index);\n    }\n\n    /**\n     * Get upload web path\n     * @param path\n     * @returns string\n     */\n    public static getUploadWebPath(path: string): string\n    {\n        if (path && path.indexOf(\"/upload/\")) {\n            return (path.substring(path.indexOf(\"/upload/\"), path.length));\n        }\n        return path;\n    }\n\n    /**\n     * Upper case first\n     * @param string\n     * @returns {string}\n     */\n    public static uCFirst(string: string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n\n    /**\n     * Get var\n     * @param object\n     * @param index\n     * @param defaultValue\n     * @returns {any}\n     */\n    public static getVar(object: any, index: string, defaultValue = null): any\n    {\n        if (index in object) {\n            return object[index];\n        }\n        return defaultValue;\n    }\n\n    /**\n     * Set var\n     * @param object\n     * @param index\n     * @param value\n     * @returns {Helper}\n     */\n    public static setVar(object: any, index: string, value: any): Helper\n    {\n        object[index] = value;\n        return Helper;\n    }\n\n    /**\n     * Delete var\n     * @param object\n     * @param index\n     * @returns {Helper}\n     */\n    public static deleteVar(object: any, index: string): Helper\n    {\n        if (index in object) {\n            delete object[index];\n        }\n        return Helper;\n    }\n\n    /**\n     * Set Form Token\n     * @param $form\n     * @returns {Helper}\n     */\n    public static setFormToken($form: any): Helper\n    {\n        let $tokenField = $form.find('#form__token');\n        if ($tokenField) {\n            $tokenField.val(_app.csrfToken);\n        }\n        return Helper;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/helper.ts","import {Injectable, Inject, Injector, ReflectiveInjector, ViewContainerRef, QueryList} from '@angular/core';\nimport {DynamicComponentLoaderService} from '../dynamic-component-loader.service';\nimport {PostService} from '../post.service';\n\n\n/**\n * Interface to be implemented by parent component\n */\nexport interface INavManager {\n    /**\n     * Submit navigation (when leave one container to navigate in other one)\n     * @param index (index to validate)\n     * @returns {Promise<boolean>}\n     */\n    submitNav?(index: number): Promise<boolean>;\n\n    /**\n     * Get navigation data (needed data to lazy load container)\n     * @param index (index to load)\n     * @returns NavData\n     */\n    getNavData?(index: number): LazyLoadData;\n\n    /**\n     * Get nav providers (to lazy load components in container with dependency injection)\n     * @param index (index to load)\n     * @param data (data to resolve all providers)\n     * @returns {Array}\n     */\n    getNavProviders?(index: number, data?: any): any;\n\n    /**\n     * Post (after) load callback\n     * @param index\n     * @param componentRef\n     * @param injector\n     */\n    postLoad?(index: number, componentRef: any, injector: Injector): void;\n}\n\n\n/**\n * Interface for lazy load data\n */\nexport interface LazyLoadData {\n    module: any,\n    component: string,\n    dataProvider?: any, // All necessary data to resolve providers\n    urlProvider?: string // Url to get all necessary data to resolve providers (usually the ConfAction or DataAction)\n}\n\n\n/**\n * Navigation manager.\n * Use this class to manage the navigation between multiple containers.\n * Containers can be static or lazy load.\n * This class is defined as service because the components that use it already extends another class.\n * The component that use this service should implements the \"INavManager\" interface.\n * The init of this service should be called in \"ngAfterViewInit\" method when you have lazy load containers,\n * so the template has been rendered.\n * NOTE: Prefix \"ll\" means \"Lazy load\"\n */\n@Injectable()\nexport class NavManagerService\n{\n    // Local variables\n    protected _component: any; // Parent component that uses and implement this service\n    protected _llViewContainerRefArr: ViewContainerRef[] = [];\n    protected _llComponentRefArr: any = {}; // Array of ComponentRef with loaded containers\n    protected _currentIndex: number = 0; // Index of current container\n\n    constructor(\n        @Inject('HelperService') protected _helperService: any,\n        protected _injector: Injector,\n        protected _dynamicComponentLoaderService: DynamicComponentLoaderService,\n        protected _postService: PostService\n    ) {}\n\n    /**\n     * Initialization of service.\n     * This method should be called in \"ngAfterViewInit\" method of parent component when you have lazy load containers,\n     * so the template has been rendered.\n     * @param component (parent component)\n     * @param lazyLoadViewContainerRefQL\n     * @returns {NavManagerService}\n     */\n    public init(component: any, lazyLoadViewContainerRefQL: QueryList<ViewContainerRef> = null): NavManagerService\n    {\n        // Local variables\n        this._component = component;\n\n        if (lazyLoadViewContainerRefQL) {\n            // Get array of ViewContainerRef for lazy loader containers\n            this._llViewContainerRefArr = lazyLoadViewContainerRefQL.toArray();\n        }\n\n        return this;\n    }\n\n    /**\n     * Reset of service.\n     * This method should be called in \"ngOnDestroy\" method of parent component, so variables can be reset (free data)\n     * and the service be able to be reused.\n     */\n    public reset(): NavManagerService\n    {\n        // Local variables\n        // Needs to be reset (free data),\n        // because the service is reused and not created a new when parent component is instantiated\n        this._component = null;\n        this._llViewContainerRefArr = [];\n        this._llComponentRefArr = {};\n        this._currentIndex = 0;\n\n        return this;\n    }\n\n    /**\n     * Get current index\n     * @returns {any}\n     */\n    public getIndex(): number\n    {\n        return this._currentIndex;\n    }\n\n    /**\n     * Get componentRef of current index (if index is not provided)\n     * @param index (index of container)\n     * @returns {any}\n     */\n    public getComponentRef(index: number = null): any\n    {\n        if (index == null) {\n            index = this._currentIndex;\n        }\n        return (this._llComponentRefArr[index] || null);\n    }\n\n    /**\n     * Unset componentRef of current index (if index is not provided)\n     * @param index (index of container)\n     * @returns NavManagerService\n     */\n    public unsetComponentRef(index: number = null): NavManagerService\n    {\n        index = (index || this._currentIndex);\n\n        if (this._llComponentRefArr[index]) {\n            this._llComponentRefArr[index].destroy();\n            this._llComponentRefArr[index] = null;\n        }\n\n        return this;\n    }\n\n    /**\n     * Navigate to container.\n     * This method should be called from child component.\n     * @param index (index of container)\n     * @param hasSubmit (determines if submit should be called)\n     * @returns {Promise<boolean>}\n     */\n    public navTo(index: number, hasSubmit: boolean = true): Promise<boolean>\n    {\n        let that = this;\n            \n        return new Promise(function(resolve, reject) {\n            // Send current container to validation before load the other one\n            if (that._component['submitNav'] && hasSubmit) {\n                return that._component.submitNav(that._currentIndex).then(\n                    data => {\n                        return that.loadNav(index).then(\n                            data => { return resolve(true); },\n                            errors => { console.log(errors); return reject(false); }\n                        );\n                    },\n                    errors => { return reject(false); }\n                );\n            }\n\n            return that.loadNav(index).then(\n                data => { return resolve(true); },\n                errors => { console.log(errors); return reject(false); }\n            );\n        });\n    }\n\n    /**\n     * Navigate to container action.\n     * This method should be called from view/template.\n     * @param index (index of container)\n     * @param hasSubmit (determines if submit should be called)\n     */\n    public navToAction(index: number, hasSubmit: boolean = true): void\n    {\n        this.navTo(index, hasSubmit).then(\n            data => { return; },\n            errors => { return; }\n        );\n    }\n\n    /**\n     * Load navigation container\n     * @param index\n     * @returns {Promise<boolean>}\n     */\n    private loadNav(index): Promise<boolean>\n    {\n        let that = this;\n\n        return new Promise(function(resolve, reject) {\n            if (that._llComponentRefArr[index] // Container has been loaded\n                || !that._component['getNavData'] // Component doesn't have the necessary implementation to lazy load\n            ) {\n                that._currentIndex = index;\n                return resolve(true);\n            }\n\n            // Get lazy load view\n            let llViewIndex = null,\n                llClass = ('js_lazyLoadContainer_' + index); // Lazy load class\n\n            // Check if is a lazy load container (by its index in class)\n            for (let index in that._llViewContainerRefArr) {\n                if ($(that._llViewContainerRefArr[index].element.nativeElement).parent().hasClass(llClass)) {\n                    llViewIndex = index;\n                    break;\n                }\n            }\n            if (llViewIndex === null) { // No lazy load view\n                that._currentIndex = index;\n                return resolve(true);\n            }\n\n            // Get child data\n            let lazyLoadData: LazyLoadData = that._component.getNavData(index);\n\n            // Load child data from url\n            if (!lazyLoadData.dataProvider && lazyLoadData.urlProvider) {\n                return that._postService.post(lazyLoadData.urlProvider, null).then(\n                    data => {\n                        lazyLoadData.dataProvider = data;\n\n                        // Load container\n                        return that.loadContainer(\n                            index,\n                            llViewIndex,\n                            lazyLoadData\n                        ).then(\n                            data => { return resolve(true); },\n                            errors => { console.log(errors); return reject(false); }\n                        );\n                    },\n                    errors => { console.log(errors); return reject(false); }\n                );\n            }\n\n            // Load container\n            return that.loadContainer(\n                index,\n                llViewIndex,\n                lazyLoadData\n            ).then(\n                data => { return resolve(true); },\n                errors => { console.log(errors); return reject(false); }\n            );\n        });\n    }\n\n    /**\n     * Load container\n     * @param index\n     * @param lazyLoadViewIndex (lazy load view index)\n     * @param lazyLoadData\n     * @returns {Promise<boolean>}\n     */\n    private loadContainer(index, lazyLoadViewIndex, lazyLoadData: LazyLoadData): Promise<boolean>\n    {\n        let providers = (this._component['getNavProviders']\n                ? this._component.getNavProviders(index, lazyLoadData.dataProvider)\n                : null\n        );\n\n        let viewContainerRef: ViewContainerRef = this._llViewContainerRefArr[lazyLoadViewIndex];\n\n        let injector = null;\n        if (providers) {\n            injector = ReflectiveInjector.fromResolvedProviders(\n                ReflectiveInjector.resolve(providers),\n                // Use in firs instance the injector of the component (is more refined)\n                (this._component['_injector'] || this._injector)\n            );\n        }\n\n        let that = this;\n\n        return this._dynamicComponentLoaderService.load(\n            lazyLoadData.module,\n            lazyLoadData.component,\n            viewContainerRef,\n            injector\n        ).then(\n            componentRef => {\n                that._llComponentRefArr[index] = componentRef;\n                that._currentIndex = index;\n\n                // Call component postLoad callback if exists\n                if (that._component['postLoad']) {\n                    that._component.postLoad(index, componentRef, injector);\n                }\n\n                return true;\n            },\n            errors => { console.log(errors); return null; }\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/nav-manager/nav-manager.service.ts","import {Injectable} from '@angular/core';\nimport {FlashMessageService, FlashMessageTypes} from './flash-message.service';\n//import {Http, Headers} from 'angular2/http';\n//import 'rxjs/add/operator/map';\n\n// Interface PostResponse (template for post response)\nexport interface PostResponse {\n    status?: number,\n    data?: any,\n    errors?: any,\n    flashMessages?: any\n}\n\n// Service\n@Injectable()\nexport class PostService {\n    constructor(\n        private _flashMessageService: FlashMessageService\n    ) {}\n\n    /**\n     * Post. Send data to server\n     * @param url\n     * @param data\n     * @returns {Promise}\n     */\n    public post(url: string, data: any): Promise<any>\n    {\n        let that = this;\n\n        return new Promise(function(resolve, reject) {\n            return $.post(\n                url,\n                data,\n                postResponse => {\n                    // Unknown response, generally html responses (debug, exceptions, etc.)\n                    if (!postResponse || (typeof postResponse !== 'object')) {\n                        that.handleFlashMessages({});\n                        return reject({});\n                    }\n\n                    // Regular response\n                    that.handleFlashMessages(postResponse);\n                    let isSuccess = (postResponse.status == 1);\n                    delete postResponse.status; // Is no more necessary\n\n                    // Success\n                    if (isSuccess) { return resolve(postResponse['data'] || null); }\n\n                    // Error\n                    let errors = (postResponse['errors'] || {});\n                    // Add data exception into errors\n                    if (postResponse['data']) {\n                        if (postResponse['data']['localData']) {\n                            errors['localData'] = postResponse['data']['localData'];\n                        }\n                        if (postResponse['data']['object']) {\n                            errors['object'] = postResponse['data']['object'];\n                        }\n                    }\n                    return reject(errors);\n                }\n            ).fail(errors => {\n                that.handleFlashMessages({});\n                return reject({});\n            });\n        });\n\n        /*let headers = new Headers();\n         headers.append('Content-Type', 'application/json');\n\n         this._http.post(\n         url,\n         data,\n         { headers: headers }\n         )\n         .map(response => response.json())\n         .subscribe(\n         response => console.log(response)\n         );*/\n    }\n\n    /**\n     * Handle handleFlashMessages from server\n     * @param postResponse\n     * @returns {PostResponse}\n     */\n    private handleFlashMessages(postResponse: PostResponse): any\n    {\n        // Request failed, no response has been returned.\n        if (!('status' in postResponse)) {\n            this._flashMessageService.message(\n                'Something went wrong, no response has been returned.',\n                'Unknown error',\n                FlashMessageTypes.error\n            );\n        }\n\n        // Flash Messages\n        if (postResponse.flashMessages) {\n            for (let flashMessage of postResponse.flashMessages) {\n                this._flashMessageService.message(\n                    flashMessage.body,\n                    flashMessage.head,\n                    flashMessage.type\n                );\n            }\n            delete postResponse.flashMessages; // It's no more necessary\n        }\n\n        return postResponse;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/post.service.ts","import {Component, Inject, ElementRef, Input, Optional} from '@angular/core';\nimport {DataService} from '../data-service/data.service';\n\n\n/**\n * Class provider for search criteria expressions and default values\n */\nexport class SearchCriteriaMap {\n    // Expressions mapping.\n    protected _exprMap = [\n        { key: 'lrlike', label: '?' },\n        { key: 'eq', label: '=' },\n        { key: 'neq', label: '<>' },\n        { key: 'gte', label: '>=' },\n        { key: 'lte', label: '<=' }\n    ];\n\n    // Default value mapping for field type.\n    protected _defaultValueMap = {\n        'date': ((new Date()).toISOString().slice(0,10)), // Current date (yyyy-mm-dd)\n        'boolean': 1\n    };\n\n    // Default expression mapping for field type.\n    protected _defaultExprMap = {\n        'text': 'lrlike',\n        'code': 'lrlike',\n        'date': 'gte',\n        'boolean': 'eq'\n    };\n\n    /**\n     * Get expressions mapping\n     * @returns {any}\n     */\n    public getExprMap(): any\n    {\n        return this._exprMap;\n    }\n\n    /**\n     * Get default expression\n     * @param type\n     * @returns {any}\n     */\n    public getDefaultExpr(type: string = null): string\n    {\n        return ((type && this._defaultExprMap[type]) ? this._defaultExprMap[type] : 'eq');\n    }\n\n    /**\n     * Get default value\n     * @param type\n     * @returns {any}\n     */\n    public getDefaultValue(type: string = null): string\n    {\n        return ((type && this._defaultValueMap[type]) ? this._defaultValueMap[type] : '');\n    }\n}\n\n// Component\n@Component({\n    selector: 'js_searchCriteria',\n    template: `\n    <js_expander [label]=\"'Filter'\" [hasIcon]=\"false\" [customClass]=\"'action'\" (onChange)=\"toggleIsExpanded($event, 'fields')\"></js_expander>\n    <div [hidden]=\"!_isExpanded\" class=\"col-xs-12 col-sm-12 white-dropdown search-criteria\">\n        <ng-template ngFor let-criteria [ngForOf]=\"_criteriaArr\" let-i=\"index\">\n            <div class=\"col-sm-6 controller\">\n                <div class=\"select\">\n                    <select [(ngModel)]=\"criteria['field']\"\n                            (change)=\"onFieldChange($event, criteria)\"\n                            class=\"form-control\">\n                        <ng-template ngFor let-field [ngForOf]=\"_fields\">\n                            <option *ngIf=\"!_helperService.inArray(_fieldsMetadata[field]['type'], _deniedTypes) && !_fieldsMetadata[field]['isObject']\"\n                                    value=\"{{field}}\">{{_fieldsMetadata[field]['label']}}</option>\n                        </ng-template>\n                    </select>\n                    <!-- ng switch should be here -->\n                    <ng-template [ngIf]=\"(_fieldsMetadata[criteria['field']]) && (_fieldsMetadata[criteria['field']]['type'] == 'boolean')\">\n                        <select [(ngModel)]=\"criteria['value']\"\n                                class=\"form-control\">\n                            <option *ngFor=\"let value of [{key: 1, label: 'Yes'}, {key: 0, label: 'No'}]\"\n                                    value=\"{{value['key']}}\">{{value['label']}}</option>\n                        </select>\n                    </ng-template>\n                    <ng-template [ngIf]=\"(!_fieldsMetadata[criteria['field']]) || (_fieldsMetadata[criteria['field']]['type'] != 'boolean')\">\n                        <select [(ngModel)]=\"criteria['expr']\"\n                                class=\"form-control\">\n                            <option *ngFor=\"let expr of _searchCriteriaMap.getExprMap()\"\n                                    value=\"{{expr['key']}}\">{{expr['label']}}</option>\n                        </select>\n                        <input [(ngModel)]=\"criteria['value']\"\n                               class=\"form-control\" type=\"text\">\n                    </ng-template>\n                </div>\n                <div class=\"actions\">\n                    <a *ngIf=\"_criteriaArr.length > 1\" class=\"fa fa-trash-o\" (click)=\"del($event, i)\"></a>\n                    <a *ngIf=\"(i+1) == _criteriaArr.length\" class=\"fa fa-plus\" (click)=\"add($event)\"></a>\n                </div>\n            </div>\n        </ng-template>\n    </div>\n    `,\n    host: {\n        '(document:click)': 'onDocumentClick($event)',\n    }\n})\nexport class SearchCriteriaComponent {\n    // Injector to get dependencies. Used when injector comes from child component (like accordion)\n    @Input() injector: any = null;\n\n    // Denied types. Doesn't make sense to search for this filed types.\n    protected _deniedTypes: string[] = ['file', 'icon', 'img', 'password', 'avatar'];\n    protected _criteriaArr: any;\n    protected _fields: any;\n    protected _fieldsMetadata: any;\n    protected _isExpanded: boolean = false;\n    protected _searchCriteriaMap: SearchCriteriaMap;\n\n    constructor(\n        protected _elementRef: ElementRef,\n        @Inject('HelperService') private _helperService: any,\n        @Optional() @Inject('DataService') protected _dataService: any\n    ) {\n        this._searchCriteriaMap = new SearchCriteriaMap();\n    }\n\n    /**\n     * Set default values\n     * @param criteria\n     * @param field (field to override criteria['field'], because select change event was not update it yet)\n     */\n    protected setDefaults(criteria: any, field: string = null): void\n    {\n        field = (field || criteria['field']);\n        if (field in this._fieldsMetadata) {\n            criteria['expr'] = this._searchCriteriaMap.getDefaultExpr(this._fieldsMetadata[field]['type']);\n            criteria['value'] = this._searchCriteriaMap.getDefaultValue(this._fieldsMetadata[field]['type']);\n        }\n    }\n\n    /**\n     * Add criteria\n     * @param $event\n     */\n    protected add($event = null): void\n    {\n        if ($event) {\n            $event.preventDefault();\n            $event.stopPropagation();\n        }\n\n        let criteria = {\n            field: (this._fields[0] ? this._fields[0] : null),\n            expr: null,\n            value: null\n        };\n\n        this.setDefaults(criteria, null);\n\n        this._criteriaArr.push(criteria);\n    }\n\n    /**\n     * Delete criteria\n     * @param $event\n     * @param index\n     */\n    protected del($event, index: number): void\n    {\n        $event.preventDefault();\n        $event.stopPropagation();\n        this._criteriaArr.splice(index, 1);\n    }\n\n    /**\n     * Toggle isExpanded\n     * @param $event (value returned by expander directive)\n     */\n    protected toggleIsExpanded($event): void\n    {\n        this._isExpanded = !this._isExpanded;\n    }\n\n    /**\n     * On field change\n     * @param $event\n     * @param criteria\n     */\n    protected onFieldChange($event, criteria: any): void\n    {\n        // Field to override criteria['field'], because select change event was not update it yet\n        let field = $event.target.value || null;\n        this.setDefaults(criteria, field);\n    }\n\n    /**\n     * Host event\n     * @param $event\n     */\n    protected onDocumentClick($event): void\n    {\n        if (!this._elementRef.nativeElement.contains($event.target)) {\n            this._isExpanded = false;\n        }\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnInit()\n    {\n        // If injector is provided, override dependencies\n        if (this.injector) {\n            this._dataService = this.injector.get('DataService');\n        }\n\n        this._criteriaArr = this._dataService.getCandidateSearchAttr('criteria');\n        this._fields = (this._dataService.getFields('view') || []);\n        this._fieldsMetadata = (this._dataService.getFields('metadata') || {});\n\n        if (this._criteriaArr.length < 1) {\n            this.add();\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/search/search-criteria.component.ts","import {Component, Inject, ElementRef, Input, Optional} from '@angular/core';\nimport {DataService} from '../data-service/data.service';\n\n// Component\n@Component({\n    selector: 'js_searchFields',\n    template: `\n    <js_expander [label]=\"'Fields'\" [hasIcon]=\"false\" [customClass]=\"'action'\" (onChange)=\"toggleIsExpanded($event, 'fields')\"></js_expander>\n    <div [hidden]=\"!_isExpanded\" class=\"col-xs-12 col-sm-12 white-dropdown search-fields\">\n        <select multiple size=\"6\" [(ngModel)]=\"_search['fields']\" class=\"form-control\">\n            <ng-template ngFor let-field [ngForOf]=\"_fields\">\n                <option *ngIf=\"!_helperService.inArray(_fieldsMetadata[field]['type'], _deniedTypes)\"\n                        value=\"{{field}}\">{{_fieldsMetadata[field]['label']}}</option>\n            </ng-template>\n        </select>\n    </div>\n    `,\n    host: {\n        '(document:click)': 'onDocumentClick($event)',\n    }\n})\nexport class SearchFieldsComponent {\n    // Injector to get dependencies. Used when injector comes from child component (like accordion)\n    @Input() injector: any = null;\n\n    // Denied types. Doesn't make sense to show this filed types.\n    protected _deniedTypes: string[] = ['password'];\n    protected _search: any;\n    protected _fields: any;\n    protected _fieldsMetadata: any;\n    protected _isExpanded: boolean = false;\n\n    constructor(\n        protected _elementRef: ElementRef,\n        @Inject('HelperService') private _helperService: any,\n        @Optional() @Inject('DataService') protected _dataService: any\n    ) {}\n\n    /**\n     * Toggle isExpanded\n     * @param $event (value returned by expander directive)\n     */\n    protected toggleIsExpanded($event): void\n    {\n        this._isExpanded = !this._isExpanded;\n    }\n\n    /**\n     * Host event\n     * @param $event\n     */\n    protected onDocumentClick($event): void\n    {\n        if (!this._elementRef.nativeElement.contains($event.target)) {\n            this._isExpanded = false;\n        }\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnInit()\n    {\n        // If injector is provided, override dependencies\n        if (this.injector) {\n            this._dataService = this.injector.get('DataService');\n        }\n\n        this._search = this._dataService.getCandidateSearch();\n        this._fields = (this._dataService.getFields('view') || []);\n        this._fieldsMetadata = (this._dataService.getFields('metadata') || {});\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/search/search-fields.component.ts","import {Component, Inject, ElementRef, Input, Optional} from '@angular/core';\nimport {DataService} from '../data-service/data.service';\n\n// Component\n@Component({\n    selector: 'js_searchOrderBy',\n    template: `\n    <js_expander [label]=\"'Order'\" [hasIcon]=\"false\" [customClass]=\"'action'\" (onChange)=\"toggleIsExpanded($event, 'fields')\"></js_expander>\n    <div [hidden]=\"!_isExpanded\" class=\"col-xs-12 col-sm-12 white-dropdown search-order-by\">\n        <ng-template ngFor let-orderBy [ngForOf]=\"_orderByArray\" let-i=\"index\">\n            <div class=\"col-sm-6 controller\">\n                <div class=\"select\">\n                    <select [(ngModel)]=\"orderBy['field']\" class=\"form-control\">\n                        <ng-template ngFor let-field [ngForOf]=\"_fields\">\n                            <option *ngIf=\"!_helperService.inArray(_fieldsMetadata[field]['type'], _deniedTypes) && !_fieldsMetadata[field]['isObject']\"\n                                    value=\"{{field}}\">{{_fieldsMetadata[field]['label']}}</option>\n                        </ng-template>\n                    </select>\n                    <select [(ngModel)]=\"orderBy['value']\" class=\"form-control\">\n                        <option *ngFor=\"let value of [{key: 'ASC', label: 'Asc'}, {key: 'DESC', label: 'Desc'}]\"\n                                value=\"{{value['key']}}\">{{value['label']}}</option>\n                    </select>\n                </div>\n                <div class=\"actions\">\n                    <a *ngIf=\"_orderByArray.length > 1\" class=\"fa fa-trash-o\" (click)=\"del($event, i)\"></a>\n                    <a *ngIf=\"(i+1) == _orderByArray.length\" class=\"fa fa-plus\" (click)=\"add($event)\"></a>\n                </div>\n            </div>\n        </ng-template>\n    </div>\n    `,\n    host: {\n        '(document:click)': 'onDocumentClick($event)',\n    }\n})\nexport class SearchOrderByComponent {\n    // Injector to get dependencies. Used when injector comes from child component (like accordion)\n    @Input() injector: any = null;\n\n    // Denied types. Doesn't make sense to order by this filed types.\n    protected _deniedTypes: string[] = ['file', 'icon', 'img', 'password', 'avatar'];\n    protected _orderByArray: any;\n    protected _fields: any;\n    protected _fieldsMetadata: any;\n    protected _isExpanded: boolean = false;\n\n    constructor(\n        protected _elementRef: ElementRef,\n        @Inject('HelperService') private _helperService: any,\n        @Optional() @Inject('DataService') protected _dataService: any\n    ) {}\n\n    /**\n     * Add order by\n     * @param $event\n     */\n    protected add($event = null): void\n    {\n        if ($event) {\n            $event.preventDefault();\n            $event.stopPropagation();\n        }\n\n        this._orderByArray.push({\n            field: (this._fields[0] ? this._fields[0]['key'] : null),\n            value: 'ASC',\n        });\n    }\n\n    /**\n     * Delete order by\n     * @param $event\n     * @param index\n     */\n    protected del($event, index: number): void\n    {\n        $event.preventDefault();\n        $event.stopPropagation();\n        this._orderByArray.splice(index, 1);\n    }\n\n    /**\n     * Toggle isExpanded\n     * @param $event (value returned by expander directive)\n     */\n    protected toggleIsExpanded($event): void\n    {\n        this._isExpanded = !this._isExpanded;\n    }\n\n    /**\n     * Host event\n     * @param $event\n     */\n    protected onDocumentClick($event): void\n    {\n        if (!this._elementRef.nativeElement.contains($event.target)) {\n            this._isExpanded = false;\n        }\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnInit()\n    {\n        // If injector is provided, override dependencies\n        if (this.injector) {\n            this._dataService = this.injector.get('DataService');\n        }\n\n        this._orderByArray = this._dataService.getCandidateSearchAttr('orderBy');\n        this._fields = (this._dataService.getFields('view') || []);\n        this._fieldsMetadata = (this._dataService.getFields('metadata') || {});\n\n        if (this._orderByArray.length < 1) {\n            this.add();\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/search/search-order-by.component.ts","import {Component, Input, Inject} from '@angular/core';\nimport {DataService} from '../data-service/data.service';\n\n// Component\n@Component({\n    selector: 'js_searchPagination',\n    template: `\n    <div *ngIf=\"_dataService.countObjects() > 0\"\n         class=\"search-pagination no-user-select\">\n        <span>{{_dataService.countObjects()}} Results</span>\n        <a class=\"search-has-more -note\"\n           *ngIf=\"_dataService.getProviderAttr('search')['hasMore']\"\n           (click)=\"getMoreObjects($event)\"\n           href=\"#\"\n           title=\"Load more results...\">...</a>\n    </div>\n    `\n})\nexport class SearchPaginationComponent {\n\n    constructor(\n        @Inject('DataService') protected _dataService: any,\n        @Inject('HelperService') protected _helperService: any\n    ) {}\n\n    /**\n     * Get more objects (pagination)\n     * @param $event\n     */\n    protected getMoreObjects($event): void\n    {\n        $event.preventDefault();\n        this._dataService.getMoreObjects();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/search/search-pagination.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SearchPaginationComponent} from './search-pagination.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [\n        SearchPaginationComponent\n    ],\n    exports: [SearchPaginationComponent]\n})\nexport class SearchPaginationModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/search/search-pagination.module.ts","import {Component, Inject, Injector, Input, Optional} from '@angular/core';\nimport {DataService} from '../data-service/data.service';\nimport {ActionsService} from '../actions/actions.service';\n\n// Component\n@Component({\n    selector: 'js_search',\n    template: `\n    <js_searchCriteria [injector]=\"injector\"></js_searchCriteria>\n    <js_searchOrderBy [injector]=\"injector\"></js_searchOrderBy>\n    <js_searchFields [injector]=\"injector\"></js_searchFields>\n    <a class=\"action -round fa\"\n       [ngClass]=\"[_actionsService.getActionAttr('search', 'icon')]\"\n       (click)=\"searchAction($event)\"></a>\n    `\n})\nexport class SearchComponent {\n    // Injector to get dependencies. Used when injector comes from child component (like accordion)\n    @Input() injector: any = null;\n\n    constructor(\n        @Optional() @Inject('DataService') protected _dataService: any,\n        @Optional() protected _actionsService: ActionsService\n    ) {}\n\n    /**\n     * Search objects.\n     * @param $event\n     */\n    public searchAction($event: any): void\n    {\n        $event.preventDefault();\n        this._dataService.search();\n    }\n\n    /**\n     * Lifecycle callback\n     */\n    ngOnInit()\n    {\n        // If injector is provided, override dependencies\n        if (this.injector) {\n            this._dataService = this.injector.get('DataService');\n            this._actionsService = this.injector.get(ActionsService);\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/search/search.component.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {ExpanderModule} from '../expander/expander.module';\nimport {SearchFieldsComponent} from './search-fields.component';\nimport {SearchOrderByComponent} from './search-order-by.component';\nimport {SearchCriteriaComponent} from './search-criteria.component';\nimport {SearchComponent} from './search.component';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ExpanderModule],\n    declarations: [\n        SearchComponent,\n        SearchCriteriaComponent,\n        SearchOrderByComponent,\n        SearchFieldsComponent\n    ],\n    exports: [SearchComponent]\n})\nexport class SearchModule {}\n\n\n// WEBPACK FOOTER //\n// /usr/share/nginx/html/weboffice/src/AppBundle/Resources/public/ts/search/search.module.ts"],"sourceRoot":"webpack:///"}