<?php

namespace BookingBundle\Entity;

use AppBundle\Service\HelperService;

/**
 * TravelBookingServiceRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TravelBookingServiceRepository extends BaseBookingServiceRepository {
    /**
     * Get entity metadata
     * @return mixed
     */
    static function getMetadata()
    {
        // Process metadata only once
        if (self::$metadata) {
            return self::$metadata;
        }

        $parentMetadata = parent::getMetadata();

        $localMetadata = self::processMetadata(array(
            'travelBookingObj' => array('label' => 'Travel Booking', 'type' => 'object', 'acl' => 'read', 'typeDetail' => array(
                'table' => 'travelBooking', 'bundle' => 'booking', 'type' => 'none')),
            'placeObj' => array('label' => 'From', 'type' => 'object', 'acl' => 'edit',
                'typeDetail' => array(
                    'table' => 'place', 'bundle' => 'booking', 'type' => 'none', 'fieldInView' => 'place_name'),
                'isRequired' => false,
                'form' => array('type' => 'auto-complete')
            ),
            'place_name' => array('table' => 'place', 'field' => 'name', 'label' => 'From (Name)', 'type' => 'text',
                'acl' => 'read', 'dependency' => 'placeObj', 'form' => array('type' => 'none')),
            'place_iata' => array('table' => 'place', 'field' => 'iataCode', 'label' => 'From', 'type' => 'text',
                'acl' => 'read', 'dependency' => 'placeObj', 'form' => array('type' => 'none')),
            'placeToObj' => array('label' => 'To', 'type' => 'object', 'acl' => 'edit',
                'typeDetail' => array(
                    'table' => 'place', 'tableAlias' => 'place_to', 'bundle' => 'booking', 'type' => 'none',
                    'fieldInView' => 'placeTo_name'),
                'isRequired' => false,
                'form' => array('type' => 'auto-complete')
            ),
            'placeTo_name' => array('table' => 'place_to', 'field' => 'name', 'label' => 'To (Name)', 'type' => 'text',
                'acl' => 'read', 'dependency' => 'placeToObj', 'form' => array('type' => 'none')),
            'placeTo_iata' => array('table' => 'place_to', 'field' => 'iataCode', 'label' => 'To', 'type' => 'text',
                'acl' => 'read', 'dependency' => 'placeToObj', 'form' => array('type' => 'none'))
        ));

        return self::$metadata = HelperService::pushIntoArray($parentMetadata, $localMetadata, 'id');
    }

    /**
     * Set places to booking (from booking service objects)
     * @param $bookingObj
     * @return mixed
     */
    public function setBookingPlaces($bookingObj)
    {
        // Entities names
        $BookingEntity = HelperService::getClassName($bookingObj);
        $bookingEntity = lcfirst($BookingEntity);

        $baseCriteria = array(
            array(
                'field' => 'isEnabled',
                'expr' => 'eq',
                'value' => true
            ),
            array(
                'field' => ($bookingEntity . 'Obj'),
                'expr' => 'eq',
                'value' => $bookingObj
            )
        );

        // Place (from). First place in services.
        $placeOptions = array(
            'criteria' => array_merge(
                $baseCriteria,
                array(
                    array(
                        'field' => 'placeObj',
                        'expr' => 'isNotNull',
                        'value' => null
                    )
                )
            ),
            'orderBy' => array(
                array('field' => 'startDate', 'value' => 'ASC'),
                //array('field' => 'priority', 'value' => 'ASC')
            ),
            'limit' => 1
        );
        $obj = $this->queryBuilder($placeOptions, true, 'getOneOrNullResult');
        $bookingObj->setPlaceObj($obj ? $obj->getPlaceObj() : null);

        // PlaceTo (to). Last place in services.
        $placeToOptions = array(
            'criteria' => array_merge(
                $baseCriteria,
                array(
                    array(
                        'field' => 'placeToObj',
                        'expr' => 'isNotNull',
                        'value' => null
                    )
                )
            ),
            'orderBy' => array(
                array('field' => 'endDate', 'value' => 'DESC'),
                //array('field' => 'priority', 'value' => 'DESC')
            ),
            'limit' => 1
        );
        $obj = $this->queryBuilder($placeToOptions, true, 'getOneOrNullResult');
        $bookingObj->setPlaceToObj($obj ? $obj->getPlaceToObj() : null);

        return $bookingObj;
    }
}