<?php

namespace ServicesBundle\Entity;

use AppBundle\Entity\BaseEntityRepository;

/**
 * ServiceRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ServiceRepository extends BaseEntityRepository {
    static protected $metadata = null;

    /**
     * Get field metadata
     * @param $field
     * @param $attribute
     * @param $metadata (uses this metadata instead of local metadata)
     * @param $context ('view'|'form'|'none')
     * @return null
     */
    static public function getFieldMetadata($field, $attribute, $metadata = null, $context = 'none')
    {
        if (!$metadata) {
            $metadata = self::getMetadata();
        }
        return self::getLocalFieldMetadata($field, $attribute, $metadata, $context);
    }

    /**
     * Get local metadata (it needs to be implemented by children to get static variable with local metadata from parent)
     * @return mixed
     */
    protected function getLocalMetadata()
    {
        return $this->getMetadata();
    }

    /**
     * Get entity metadata
     * @return mixed
     */
    static function getMetadata()
    {
        // Process metadata only once
        if (self::$metadata) {
            return self::$metadata;
        }
        return self::$metadata = self::processMetadata(array(
            'id' => array('label' => 'Id', 'type' => 'number', 'acl' => 'read'),
            'thumbnail' => array('label' => 'Thumbnail', 'type' => 'img', 'acl' => 'read'),
            'appIconObj' => array('label' => 'Icon', 'type' => 'object', 'acl' => 'edit', 'typeDetail' => array(
                'table' => 'app_icon', 'fieldInView' => 'icon', 'bundle' => 'sysadmin', 'type' => 'none',
                'choices' => array('query' => 'getChoicesForService')), 'isRequired' => false,
                'form' => array('type' => 'html-select')
            ),
            'icon' => array('table' => 'app_icon', 'field' => 'icon', 'label' => 'Icon', 'type' => 'icon',
                'acl' => 'read', 'dependency' => 'appIconObj', 'form' => array('type' => 'none')),
            'name' => array('label' => 'Name', 'type' => 'text', 'acl' => 'edit'),
            'type' => array('label' => 'Type', 'type' => 'enum', 'acl' => 'edit', 'isRequired' => false,
                'typeDetail' => array(
                    'type' => 'text', 'choices' => array(
                        'value' => array(
                            'Regular' => '', 'Travel' => 'TRAVEL'
                        )
                    )),
                'form' => array('type' => 'select')
            ),
            'description' => array('label' => 'Description', 'type' => 'text', 'acl' => 'edit'),
            'vatCodeObj' => array('label' => 'VAT Code', 'type' => 'object', 'acl' => 'edit', 'typeDetail' => array(
                'table' => 'vatCode', 'bundle' => 'accounting', 'type' => 'none'),
                'form' => array('type' => 'select')),
            'vatCode_name' => array('table' => 'vatCode', 'field' => 'name', 'label' => 'VAT Code', 'type' => 'text',
                'acl' => 'read', 'dependency' => 'vatCodeObj', 'form' => array('type' => 'none')),
            'isEnabledAvailability' => array('label' => 'Enable Availability', 'type' => 'boolean', 'acl' => 'edit'),
            'isEnabledAllot' => array('label' => 'Enable Allot / Allot', 'type' => 'boolean', 'acl' => 'edit'),
            'isEnabledPrice' => array('label' => 'Enable Price', 'type' => 'boolean', 'acl' => 'edit'),
            'insertTime' => array('label' => 'Insert Time', 'type' => 'datetime', 'acl' => 'read'),
            'insertUser' => array('label' => 'Insert User', 'type' => 'text', 'acl' => 'read'),
            'isEnabled' => array('label' => 'Enabled', 'type' => 'boolean', 'acl' => 'edit', 'default' => true)
        ));
    }
}