{% set dependencyData = (((_localData['data']['dependencies'] is defined) and (_localData['data']['dependencies'][0] is defined)) ? _localData['data']['dependencies'][0] : null) %}
{% if dependencyData %}

    {% extends 'AccountingBundle:BaseDocument:pdf/base.html.twig' %}

    {# block javascripts %}
        var $container = null, // Variable container to fix height (header or footer)
        $heightFix = null, // Element to set the height fix for container
        multipleValueFix = 0; // Body container height value of repetitive element

        {% if (block == 'header') %}
            $container = document.getElementsByClassName('js_pdfHeader')[0];
            $heightFix = document.getElementsByClassName('js_pdfHeaderHeightFix')[0];
        {% elseif (block == 'footer') %}
            $container = document.getElementsByClassName('js_pdfFooter')[0];
            $heightFix = document.getElementsByClassName('js_pdfFooterHeightFix')[0];
            multipleValueFix = 19;
        {% endif %}

        if ($container) {
            var containerHeight = $container.offsetHeight,
            multipleValue = 37,
            heightFixValue = (multipleValueFix - ((containerHeight - multipleValueFix) % multipleValue)),
            heightFixValuePx = (heightFixValue + "px");

            $heightFix.style.height = heightFixValuePx;
            $heightFix.style.minHeight = heightFixValuePx;
            $heightFix.style.maxHeight = heightFixValuePx;

            /*console.log($container);
            console.log($heightFix);
            console.log(containerHeight);
            console.log(multipleValue);
            console.log($container.scrollHeight);
            console.log(heightFixValue);*/
        }
    {% endblock #}

    {% block baseDocument_pdf_body %}
        <div class="row"><div class="col-print-12">
                <h3 class="m-0">{{dependencyData['label']}}</h3>
                <table class="table table-bordered">
                    <tr class="bg-light">
                        {% for field in ['description', 'quantity', 'totalUnit', 'vatCode_name', 'total'] %}
                            <th>{{dependencyData['fields']['metadata'][field]['label']}}</th>
                        {% endfor %}
                    </tr>
                    {% for obj in dependencyData['objects'] %}
                        <tr>
                            <td class="txt-align-l">
                                <div>
                                    <span class="mr-1">{{obj['service_name']}}</span>
                                    {% if obj['booking_code'] %}
                                        <span>({{obj['booking_code']}})</span>
                                    {% endif %}
                                </div>
                                <small><span>{{obj['description']}}</span></small>
                            </td>
                            {% for field in ['quantity', 'totalUnit', 'vatCode_name', 'total'] %}
                                <td class="{{ get_col_align(dependencyData['fields']['metadata'][field]['type']) }}">{{obj[field]}}</td>
                            {% endfor %}
                        </tr>
                    {% endfor %}
                </table>
            </div></div>
    {% endblock %}

{% endif %}