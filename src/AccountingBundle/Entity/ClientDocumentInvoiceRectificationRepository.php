<?php

namespace AccountingBundle\Entity;

use AppBundle\Service\HelperService;

/**
 * ClientDocumentInvoiceRectificationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ClientDocumentInvoiceRectificationRepository extends BaseDocumentInvoiceRectificationRepository
{
    static protected $metadata = null;

    /**
     * Defines parent method
     * @return string
     */
    protected function getContext()
    {
        return 'client';
    }

    /**
     * Get field metadata
     * @param $field
     * @param $attribute
     * @param $metadata (uses this metadata instead of local metadata)
     * @param $context ('view'|'form'|'none')
     * @return null
     */
    static public function getFieldMetadata($field, $attribute, $metadata = null, $context = 'none')
    {
        if (!$metadata) {
            $metadata = self::getMetadata();
        }
        return self::getLocalFieldMetadata($field, $attribute, $metadata, $context);
    }

    /**
     * Get entity metadata
     * @return mixed
     */
    static function getMetadata()
    {
        // Process metadata only once
        if (self::$metadata) {
            return self::$metadata;
        }

        $parentMetadata = parent::getMetadata();

        $localMetadata = self::$metadata = self::processMetadata(array(
            'id' => array('label' => 'Id', 'type' => 'none', 'acl' => 'read'),
            'clientDocumentInvoiceDetailObj' => array('label' => '', 'type' => 'object',
                'acl' => 'read', 'typeDetail' => array(
                    'table' => 'clientDocumentInvoiceDetail', 'field' => 'id', 'bundle' => 'accounting', 'type' => 'none',
                    'metadata' => array('method' => 'merge', 'pushAfterField' => 'serviceObj')
                ),
                'form' => array('type' => 'embed', 'typeClass' => 'ClientDocumentInvoiceDetailNoService')
            ),
            'originalClientDocumentInvoiceDetailObj' => array('label' => '', 'type' => 'object', 'acl' => 'read',
                'typeDetail' => array(
                    'table' => 'clientDocumentInvoiceDetail', 'tableAlias' => 'originalClientDocumentInvoiceDetail',
                    'bundle' => 'accounting', 'type' => 'none'
                )
            ),
            // Foreign fields
            'originalClientDocumentObj' => array('table' => 'originalClientDocumentInvoiceDetail', 'field' => 'clientDocumentObj',
                'label' => 'Document', 'type' => 'object', 'acl' => 'read',
                'typeDetail' => array(
                    'table' => 'clientDocument', 'tableAlias' => 'originalClientDocument', 'bundle' => 'accounting', 'type' => 'none'),
                'dependency' => 'originalClientDocumentInvoiceDetailObj'
            ),
            'originalClientDocument_code' => array('label' => 'Original Doc.', 'table' => '',
                'field' => 'CONCAT(originalClientDocument.codePrefix, originalClientDocument.codeNumber)',
                'dependency' => 'originalClientDocumentObj', 'type' => 'code', 'acl' => 'read',
                'normalizer' => array('method' => 'getCode')
            ),
            'originalClientDocument_date' => array('table' => 'originalClientDocument', 'field' => 'date', 'label' => 'Date',
                'type' => 'date', 'acl' => 'read', 'dependency' => 'originalClientDocumentObj',
                'form' => array('type' => 'none')
            ),
            'originalClientDocument_dueDate' => array('table' => 'originalClientDocument', 'field' => 'dueDate', 'label' => 'Due Date',
                'type' => 'date', 'acl' => 'read', 'dependency' => 'originalClientDocumentObj',
                'form' => array('type' => 'none')
            ),
            'originalClientDocumentTypeObj' => array('table' => 'originalClientDocument', 'field' => 'clientDocumentTypeObj',
                'label' => 'Document Type', 'type' => 'object', 'acl' => 'read',
                'typeDetail' => array('table' => 'clientDocumentType', 'tableAlias' => 'originalClientDocumentType',
                    'bundle' => 'accounting', 'type' => 'none'),
                'dependency' => 'originalClientDocumentObj'
            ),
            'originalClientDocumentType_name' => array('table' => 'originalClientDocumentType', 'field' => 'name',
                'label' => 'Doc. Name',
                'type' => 'text', 'acl' => 'read', 'dependency' => 'originalClientDocumentTypeObj'
            ),
            // Override fields when merge with DocumentInvoiceDetail
            // (service can't be edit, is inherited from original document)
            'serviceObj' => array('table' => 'clientDocumentInvoiceDetail', 'label' => 'Service',
                'type' => 'object', 'acl' => 'read', 'dependency' => 'clientDocumentInvoiceDetailObj',
                'typeDetail' => array(
                    'table' => 'service', 'bundle' => 'services', 'type' => 'none'
                )
            ),
            'insertTime' => array('label' => 'Insert Time', 'type' => 'datetime', 'acl' => 'read', 'form' => array('type' => 'none')),
            'insertUser' => array('label' => 'Insert User', 'type' => 'text', 'acl' => 'read', 'form' => array('type' => 'none')),
            'isEnabled' => array('label' => 'Enabled', 'type' => 'none', 'acl' => 'edit', 'default' => true)
        ));

        return self::$metadata = HelperService::pushIntoArray($localMetadata, $parentMetadata);
    }
}